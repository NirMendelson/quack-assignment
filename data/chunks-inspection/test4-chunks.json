[
  {
    "type": "sentence",
    "content": "---\nreviewers:\n- janetkuo\ntitle: Deployments\napi_metadata:\n- apiVersion: \"apps/v1\"\n  kind: \"Deployment\"\nfeature:\n  title: Automated rollouts and rollbacks\n  description: >\n    Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time.",
    "originalSentence": "---\nreviewers:\n- janetkuo\ntitle: Deployments\napi_metadata:\n- apiVersion: \"apps/v1\"\n  kind: \"Deployment\"\nfeature:\n  title: Automated rollouts and rollbacks\n  description: >\n    Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time.",
    "position": 0,
    "id": "sentence_0"
  },
  {
    "type": "sentence",
    "content": "If something goes wrong, Kubernetes will rollback the change for you.",
    "originalSentence": "If something goes wrong, Kubernetes will rollback the change for you.",
    "position": 1,
    "id": "sentence_1"
  },
  {
    "type": "sentence",
    "content": "Take advantage of a growing ecosystem of deployment solutions.",
    "originalSentence": "Take advantage of a growing ecosystem of deployment solutions.",
    "position": 2,
    "id": "sentence_2"
  },
  {
    "type": "sentence",
    "content": "description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
    "originalSentence": "description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
    "position": 3,
    "id": "sentence_3"
  },
  {
    "type": "sentence",
    "content": "content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<!",
    "originalSentence": "content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<!",
    "position": 4,
    "id": "sentence_4"
  },
  {
    "type": "sentence",
    "content": "-- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
    "originalSentence": "-- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
    "position": 5,
    "id": "sentence_5"
  },
  {
    "type": "sentence",
    "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
    "originalSentence": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
    "position": 6,
    "id": "sentence_6"
  },
  {
    "type": "sentence",
    "content": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
    "originalSentence": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
    "position": 7,
    "id": "sentence_7"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nDo not manage ReplicaSets owned by a Deployment.",
    "originalSentence": "{{< note >}}\nDo not manage ReplicaSets owned by a Deployment.",
    "position": 8,
    "id": "sentence_8"
  },
  {
    "type": "sentence",
    "content": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
    "originalSentence": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
    "position": 9,
    "id": "sentence_9"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n<!",
    "originalSentence": "{{< /note >}}\n\n<!",
    "position": 10,
    "id": "sentence_10"
  },
  {
    "type": "sentence",
    "content": "-- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
    "originalSentence": "-- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
    "position": 11,
    "id": "sentence_11"
  },
  {
    "type": "sentence",
    "content": "The ReplicaSet creates Pods in the background.",
    "originalSentence": "The ReplicaSet creates Pods in the background.",
    "position": 12,
    "id": "sentence_12"
  },
  {
    "type": "sentence",
    "content": "Check the status of the rollout to see if it succeeds or not.",
    "originalSentence": "Check the status of the rollout to see if it succeeds or not.",
    "position": 13,
    "id": "sentence_13"
  },
  {
    "type": "sentence",
    "content": "* [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
    "originalSentence": "* [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
    "position": 14,
    "id": "sentence_14"
  },
  {
    "type": "sentence",
    "content": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
    "originalSentence": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
    "position": 15,
    "id": "sentence_15"
  },
  {
    "type": "sentence",
    "content": "Each new ReplicaSet updates the revision of the Deployment.",
    "originalSentence": "Each new ReplicaSet updates the revision of the Deployment.",
    "position": 16,
    "id": "sentence_16"
  },
  {
    "type": "sentence",
    "content": "* [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
    "originalSentence": "* [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
    "position": 17,
    "id": "sentence_17"
  },
  {
    "type": "sentence",
    "content": "Each rollback updates the revision of the Deployment.",
    "originalSentence": "Each rollback updates the revision of the Deployment.",
    "position": 18,
    "id": "sentence_18"
  },
  {
    "type": "sentence",
    "content": "* [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
    "originalSentence": "* [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
    "position": 19,
    "id": "sentence_19"
  },
  {
    "type": "sentence",
    "content": "* [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
    "originalSentence": "* [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
    "position": 20,
    "id": "sentence_20"
  },
  {
    "type": "sentence",
    "content": "* [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
    "originalSentence": "* [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
    "position": 21,
    "id": "sentence_21"
  },
  {
    "type": "sentence",
    "content": "* [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
    "originalSentence": "* [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
    "position": 22,
    "id": "sentence_22"
  },
  {
    "type": "sentence",
    "content": "## Creating a Deployment\n\nThe following is an example of a Deployment.",
    "originalSentence": "## Creating a Deployment\n\nThe following is an example of a Deployment.",
    "position": 23,
    "id": "sentence_23"
  },
  {
    "type": "sentence",
    "content": "It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment.",
    "originalSentence": "It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment.",
    "position": 24,
    "id": "sentence_24"
  },
  {
    "type": "sentence",
    "content": "yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `.",
    "originalSentence": "yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `.",
    "position": 25,
    "id": "sentence_25"
  },
  {
    "type": "sentence",
    "content": "name` field.",
    "originalSentence": "name` field.",
    "position": 26,
    "id": "sentence_26"
  },
  {
    "type": "sentence",
    "content": "This name will become the basis for the ReplicaSets\n  and Pods which are created later.",
    "originalSentence": "This name will become the basis for the ReplicaSets\n  and Pods which are created later.",
    "position": 27,
    "id": "sentence_27"
  },
  {
    "type": "sentence",
    "content": "See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details.",
    "originalSentence": "See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details.",
    "position": 28,
    "id": "sentence_28"
  },
  {
    "type": "sentence",
    "content": "* The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
    "originalSentence": "* The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
    "position": 29,
    "id": "sentence_29"
  },
  {
    "type": "sentence",
    "content": "replicas` field.",
    "originalSentence": "replicas` field.",
    "position": 30,
    "id": "sentence_30"
  },
  {
    "type": "sentence",
    "content": "selector` field defines how the created ReplicaSet finds which Pods to manage.",
    "originalSentence": "selector` field defines how the created ReplicaSet finds which Pods to manage.",
    "position": 31,
    "id": "sentence_31"
  },
  {
    "type": "sentence",
    "content": "In this case, you select a label that is defined in the Pod template (`app: nginx`).",
    "originalSentence": "In this case, you select a label that is defined in the Pod template (`app: nginx`).",
    "position": 32,
    "id": "sentence_32"
  },
  {
    "type": "sentence",
    "content": "However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule.",
    "originalSentence": "However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule.",
    "position": 33,
    "id": "sentence_33"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\n  The `.",
    "originalSentence": "{{< note >}}\n  The `.",
    "position": 34,
    "id": "sentence_34"
  },
  {
    "type": "sentence",
    "content": "matchLabels` field is a map of {key,value} pairs.",
    "originalSentence": "matchLabels` field is a map of {key,value} pairs.",
    "position": 35,
    "id": "sentence_35"
  },
  {
    "type": "sentence",
    "content": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
    "originalSentence": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
    "position": 36,
    "id": "sentence_36"
  },
  {
    "type": "sentence",
    "content": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
    "originalSentence": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
    "position": 37,
    "id": "sentence_37"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n* The `.",
    "originalSentence": "{{< /note >}}\n\n* The `.",
    "position": 38,
    "id": "sentence_38"
  },
  {
    "type": "sentence",
    "content": "template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `.",
    "originalSentence": "template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `.",
    "position": 39,
    "id": "sentence_39"
  },
  {
    "type": "sentence",
    "content": "labels` field.",
    "originalSentence": "labels` field.",
    "position": 40,
    "id": "sentence_40"
  },
  {
    "type": "sentence",
    "content": "* The Pod template's specification, or `.",
    "originalSentence": "* The Pod template's specification, or `.",
    "position": 41,
    "id": "sentence_41"
  },
  {
    "type": "sentence",
    "content": "spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14.",
    "originalSentence": "spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14.",
    "position": 42,
    "id": "sentence_42"
  },
  {
    "type": "sentence",
    "content": "* Create one container and name it `nginx` using the `.",
    "originalSentence": "* Create one container and name it `nginx` using the `.",
    "position": 43,
    "id": "sentence_43"
  },
  {
    "type": "sentence",
    "content": "containers[0].",
    "originalSentence": "containers[0].",
    "position": 44,
    "id": "sentence_44"
  },
  {
    "type": "sentence",
    "content": "name` field.",
    "originalSentence": "name` field.",
    "position": 45,
    "id": "sentence_45"
  },
  {
    "type": "sentence",
    "content": "Before you begin, make sure your Kubernetes cluster is up and running.",
    "originalSentence": "Before you begin, make sure your Kubernetes cluster is up and running.",
    "position": 46,
    "id": "sentence_46"
  },
  {
    "type": "sentence",
    "content": "Follow the steps given below to create the above Deployment:\n\n1.",
    "originalSentence": "Follow the steps given below to create the above Deployment:\n\n1.",
    "position": 47,
    "id": "sentence_47"
  },
  {
    "type": "sentence",
    "content": "Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2.",
    "originalSentence": "Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2.",
    "position": 48,
    "id": "sentence_48"
  },
  {
    "type": "sentence",
    "content": "Run `kubectl get deployments` to check if the Deployment was created.",
    "originalSentence": "Run `kubectl get deployments` to check if the Deployment was created.",
    "position": 49,
    "id": "sentence_49"
  },
  {
    "type": "sentence",
    "content": "If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace.",
    "originalSentence": "If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace.",
    "position": 50,
    "id": "sentence_50"
  },
  {
    "type": "sentence",
    "content": "* `READY` displays how many replicas of the application are available to your users.",
    "originalSentence": "* `READY` displays how many replicas of the application are available to your users.",
    "position": 51,
    "id": "sentence_51"
  },
  {
    "type": "sentence",
    "content": "It follows the pattern ready/desired.",
    "originalSentence": "It follows the pattern ready/desired.",
    "position": 52,
    "id": "sentence_52"
  },
  {
    "type": "sentence",
    "content": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
    "originalSentence": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
    "position": 53,
    "id": "sentence_53"
  },
  {
    "type": "sentence",
    "content": "* `AVAILABLE` displays how many replicas of the application are available to your users.",
    "originalSentence": "* `AVAILABLE` displays how many replicas of the application are available to your users.",
    "position": 54,
    "id": "sentence_54"
  },
  {
    "type": "sentence",
    "content": "* `AGE` displays the amount of time that the application has been running.",
    "originalSentence": "* `AGE` displays the amount of time that the application has been running.",
    "position": 55,
    "id": "sentence_55"
  },
  {
    "type": "sentence",
    "content": "Notice how the number of desired replicas is 3 according to `.",
    "originalSentence": "Notice how the number of desired replicas is 3 according to `.",
    "position": 56,
    "id": "sentence_56"
  },
  {
    "type": "sentence",
    "content": "replicas` field.",
    "originalSentence": "replicas` field.",
    "position": 57,
    "id": "sentence_57"
  },
  {
    "type": "sentence",
    "content": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
    "originalSentence": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
    "position": 58,
    "id": "sentence_58"
  },
  {
    "type": "sentence",
    "content": "The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "originalSentence": "The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 59,
    "id": "sentence_59"
  },
  {
    "type": "sentence",
    "content": "deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4.",
    "originalSentence": "deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4.",
    "position": 60,
    "id": "sentence_60"
  },
  {
    "type": "sentence",
    "content": "Run the `kubectl get deployments` again a few seconds later.",
    "originalSentence": "Run the `kubectl get deployments` again a few seconds later.",
    "position": 61,
    "id": "sentence_61"
  },
  {
    "type": "sentence",
    "content": "The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.",
    "originalSentence": "The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.",
    "position": 62,
    "id": "sentence_62"
  },
  {
    "type": "sentence",
    "content": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
    "originalSentence": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
    "position": 63,
    "id": "sentence_63"
  },
  {
    "type": "sentence",
    "content": "The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace.",
    "originalSentence": "The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace.",
    "position": 64,
    "id": "sentence_64"
  },
  {
    "type": "sentence",
    "content": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
    "originalSentence": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
    "position": 65,
    "id": "sentence_65"
  },
  {
    "type": "sentence",
    "content": "This is the _desired state_.",
    "originalSentence": "This is the _desired state_.",
    "position": 66,
    "id": "sentence_66"
  },
  {
    "type": "sentence",
    "content": "* `CURRENT` displays how many replicas are currently running.",
    "originalSentence": "* `CURRENT` displays how many replicas are currently running.",
    "position": 67,
    "id": "sentence_67"
  },
  {
    "type": "sentence",
    "content": "* `READY` displays how many replicas of the application are available to your users.",
    "originalSentence": "* `READY` displays how many replicas of the application are available to your users.",
    "position": 68,
    "id": "sentence_68"
  },
  {
    "type": "sentence",
    "content": "* `AGE` displays the amount of time that the application has been running.",
    "originalSentence": "* `AGE` displays the amount of time that the application has been running.",
    "position": 69,
    "id": "sentence_69"
  },
  {
    "type": "sentence",
    "content": "Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`.",
    "originalSentence": "Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`.",
    "position": 70,
    "id": "sentence_70"
  },
  {
    "type": "sentence",
    "content": "This name will become the basis for the Pods\n   which are created.",
    "originalSentence": "This name will become the basis for the Pods\n   which are created.",
    "position": 71,
    "id": "sentence_71"
  },
  {
    "type": "sentence",
    "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
    "originalSentence": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
    "position": 72,
    "id": "sentence_72"
  },
  {
    "type": "sentence",
    "content": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
    "originalSentence": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
    "position": 73,
    "id": "sentence_73"
  },
  {
    "type": "sentence",
    "content": "The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods.",
    "originalSentence": "The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods.",
    "position": 74,
    "id": "sentence_74"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`).",
    "originalSentence": "{{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`).",
    "position": 75,
    "id": "sentence_75"
  },
  {
    "type": "sentence",
    "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
    "originalSentence": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
    "position": 76,
    "id": "sentence_76"
  },
  {
    "type": "sentence",
    "content": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
    "originalSentence": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
    "position": 77,
    "id": "sentence_77"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label.",
    "originalSentence": "{{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label.",
    "position": 78,
    "id": "sentence_78"
  },
  {
    "type": "sentence",
    "content": "{{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
    "originalSentence": "{{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
    "position": 79,
    "id": "sentence_79"
  },
  {
    "type": "sentence",
    "content": "This label ensures that child ReplicaSets of a Deployment do not overlap.",
    "originalSentence": "This label ensures that child ReplicaSets of a Deployment do not overlap.",
    "position": 80,
    "id": "sentence_80"
  },
  {
    "type": "sentence",
    "content": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
    "originalSentence": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
    "position": 81,
    "id": "sentence_81"
  },
  {
    "type": "sentence",
    "content": "## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
    "originalSentence": "## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
    "position": 82,
    "id": "sentence_82"
  },
  {
    "type": "sentence",
    "content": "template`)\nis changed, for example if the labels or container images of the template are updated.",
    "originalSentence": "template`)\nis changed, for example if the labels or container images of the template are updated.",
    "position": 83,
    "id": "sentence_83"
  },
  {
    "type": "sentence",
    "content": "Other updates, such as scaling the Deployment, do not trigger a rollout.",
    "originalSentence": "Other updates, such as scaling the Deployment, do not trigger a rollout.",
    "position": 84,
    "id": "sentence_84"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1.",
    "originalSentence": "{{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1.",
    "position": 85,
    "id": "sentence_85"
  },
  {
    "type": "sentence",
    "content": "Let's update the nginx Pods to use the `nginx:1.16.",
    "originalSentence": "Let's update the nginx Pods to use the `nginx:1.16.",
    "position": 86,
    "id": "sentence_86"
  },
  {
    "type": "sentence",
    "content": "1` image instead of the `nginx:1.14.",
    "originalSentence": "1` image instead of the `nginx:1.14.",
    "position": 87,
    "id": "sentence_87"
  },
  {
    "type": "sentence",
    "content": "```shell\n   kubectl set image deployment.",
    "originalSentence": "```shell\n   kubectl set image deployment.",
    "position": 88,
    "id": "sentence_88"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "apps/nginx-deployment nginx=nginx:1.16.",
    "position": 89,
    "id": "sentence_89"
  },
  {
    "type": "sentence",
    "content": "1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 90,
    "id": "sentence_90"
  },
  {
    "type": "sentence",
    "content": "1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16.",
    "originalSentence": "1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16.",
    "position": 91,
    "id": "sentence_91"
  },
  {
    "type": "sentence",
    "content": "1` indicates the new image and its tag.",
    "originalSentence": "1` indicates the new image and its tag.",
    "position": 92,
    "id": "sentence_92"
  },
  {
    "type": "sentence",
    "content": "The output is similar to:\n\n   ```\n   deployment.",
    "originalSentence": "The output is similar to:\n\n   ```\n   deployment.",
    "position": 93,
    "id": "sentence_93"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `.",
    "originalSentence": "apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `.",
    "position": 94,
    "id": "sentence_94"
  },
  {
    "type": "sentence",
    "content": "containers[0].",
    "originalSentence": "containers[0].",
    "position": 95,
    "id": "sentence_95"
  },
  {
    "type": "sentence",
    "content": "image` from `nginx:1.14.",
    "originalSentence": "image` from `nginx:1.14.",
    "position": 96,
    "id": "sentence_96"
  },
  {
    "type": "sentence",
    "content": "2` to `nginx:1.16.",
    "originalSentence": "2` to `nginx:1.16.",
    "position": 97,
    "id": "sentence_97"
  },
  {
    "type": "sentence",
    "content": "1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment.",
    "originalSentence": "1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment.",
    "position": 98,
    "id": "sentence_98"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment edited\n   ```\n\n2.",
    "originalSentence": "apps/nginx-deployment edited\n   ```\n\n2.",
    "position": 99,
    "id": "sentence_99"
  },
  {
    "type": "sentence",
    "content": "To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "originalSentence": "To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 100,
    "id": "sentence_100"
  },
  {
    "type": "sentence",
    "content": "```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
    "originalSentence": "```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
    "position": 101,
    "id": "sentence_101"
  },
  {
    "type": "sentence",
    "content": "The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
    "originalSentence": "The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
    "position": 102,
    "id": "sentence_102"
  },
  {
    "type": "sentence",
    "content": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
    "originalSentence": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
    "position": 103,
    "id": "sentence_103"
  },
  {
    "type": "sentence",
    "content": "Deployment ensures that only a certain number of Pods are down while they are being updated.",
    "originalSentence": "Deployment ensures that only a certain number of Pods are down while they are being updated.",
    "position": 104,
    "id": "sentence_104"
  },
  {
    "type": "sentence",
    "content": "By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
    "originalSentence": "By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
    "position": 105,
    "id": "sentence_105"
  },
  {
    "type": "sentence",
    "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
    "originalSentence": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
    "position": 106,
    "id": "sentence_106"
  },
  {
    "type": "sentence",
    "content": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
    "originalSentence": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
    "position": 107,
    "id": "sentence_107"
  },
  {
    "type": "sentence",
    "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one.",
    "originalSentence": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one.",
    "position": 108,
    "id": "sentence_108"
  },
  {
    "type": "sentence",
    "content": "It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
    "originalSentence": "It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
    "position": 109,
    "id": "sentence_109"
  },
  {
    "type": "sentence",
    "content": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
    "originalSentence": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
    "position": 110,
    "id": "sentence_110"
  },
  {
    "type": "sentence",
    "content": "In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
    "originalSentence": "In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
    "position": 111,
    "id": "sentence_111"
  },
  {
    "type": "sentence",
    "content": "* Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.",
    "originalSentence": "* Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.",
    "position": 112,
    "id": "sentence_112"
  },
  {
    "type": "sentence",
    "content": "kubernetes.",
    "originalSentence": "kubernetes.",
    "position": 113,
    "id": "sentence_113"
  },
  {
    "type": "sentence",
    "content": "io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.",
    "originalSentence": "io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.",
    "position": 114,
    "id": "sentence_114"
  },
  {
    "type": "sentence",
    "content": "1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly.",
    "originalSentence": "1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly.",
    "position": 115,
    "id": "sentence_115"
  },
  {
    "type": "sentence",
    "content": "When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
    "originalSentence": "When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
    "position": 116,
    "id": "sentence_116"
  },
  {
    "type": "sentence",
    "content": "Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
    "originalSentence": "Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
    "position": 117,
    "id": "sentence_117"
  },
  {
    "type": "sentence",
    "content": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
    "originalSentence": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
    "position": 118,
    "id": "sentence_118"
  },
  {
    "type": "sentence",
    "content": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
    "originalSentence": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
    "position": 119,
    "id": "sentence_119"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`.",
    "originalSentence": "{{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`.",
    "position": 120,
    "id": "sentence_120"
  },
  {
    "type": "sentence",
    "content": "As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.",
    "originalSentence": "As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.",
    "position": 121,
    "id": "sentence_121"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods.",
    "originalSentence": "{{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods.",
    "position": 122,
    "id": "sentence_122"
  },
  {
    "type": "sentence",
    "content": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.",
    "originalSentence": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.",
    "position": 123,
    "id": "sentence_123"
  },
  {
    "type": "sentence",
    "content": "selector` but whose template does not match `.",
    "originalSentence": "selector` but whose template does not match `.",
    "position": 124,
    "id": "sentence_124"
  },
  {
    "type": "sentence",
    "content": "template` are scaled down.",
    "originalSentence": "template` are scaled down.",
    "position": 125,
    "id": "sentence_125"
  },
  {
    "type": "sentence",
    "content": "Eventually, the new\nReplicaSet is scaled to `.",
    "originalSentence": "Eventually, the new\nReplicaSet is scaled to `.",
    "position": 126,
    "id": "sentence_126"
  },
  {
    "type": "sentence",
    "content": "replicas` and all old ReplicaSets is scaled to 0.",
    "originalSentence": "replicas` and all old ReplicaSets is scaled to 0.",
    "position": 127,
    "id": "sentence_127"
  },
  {
    "type": "sentence",
    "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down.",
    "originalSentence": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down.",
    "position": 128,
    "id": "sentence_128"
  },
  {
    "type": "sentence",
    "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
    "originalSentence": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
    "position": 129,
    "id": "sentence_129"
  },
  {
    "type": "sentence",
    "content": "2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.",
    "originalSentence": "2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.",
    "position": 130,
    "id": "sentence_130"
  },
  {
    "type": "sentence",
    "content": "1`, when only 3\nreplicas of `nginx:1.14.",
    "originalSentence": "1`, when only 3\nreplicas of `nginx:1.14.",
    "position": 131,
    "id": "sentence_131"
  },
  {
    "type": "sentence",
    "content": "2` had been created.",
    "originalSentence": "2` had been created.",
    "position": 132,
    "id": "sentence_132"
  },
  {
    "type": "sentence",
    "content": "In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.",
    "originalSentence": "In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.",
    "position": 133,
    "id": "sentence_133"
  },
  {
    "type": "sentence",
    "content": "2` Pods that it had created, and starts creating\n`nginx:1.16.",
    "originalSentence": "2` Pods that it had created, and starts creating\n`nginx:1.16.",
    "position": 134,
    "id": "sentence_134"
  },
  {
    "type": "sentence",
    "content": "It does not wait for the 5 replicas of `nginx:1.14.",
    "originalSentence": "It does not wait for the 5 replicas of `nginx:1.14.",
    "position": 135,
    "id": "sentence_135"
  },
  {
    "type": "sentence",
    "content": "2` to be created\nbefore changing course.",
    "originalSentence": "2` to be created\nbefore changing course.",
    "position": 136,
    "id": "sentence_136"
  },
  {
    "type": "sentence",
    "content": "### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
    "originalSentence": "### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
    "position": 137,
    "id": "sentence_137"
  },
  {
    "type": "sentence",
    "content": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications.",
    "originalSentence": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications.",
    "position": 138,
    "id": "sentence_138"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
    "originalSentence": "{{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
    "position": 139,
    "id": "sentence_139"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned.",
    "originalSentence": "{{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned.",
    "position": 140,
    "id": "sentence_140"
  },
  {
    "type": "sentence",
    "content": "This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet.",
    "originalSentence": "This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet.",
    "position": 141,
    "id": "sentence_141"
  },
  {
    "type": "sentence",
    "content": "* Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
    "originalSentence": "* Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
    "position": 142,
    "id": "sentence_142"
  },
  {
    "type": "sentence",
    "content": "* Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels.",
    "originalSentence": "* Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels.",
    "position": 143,
    "id": "sentence_143"
  },
  {
    "type": "sentence",
    "content": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
    "originalSentence": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
    "position": 144,
    "id": "sentence_144"
  },
  {
    "type": "sentence",
    "content": "## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
    "originalSentence": "## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
    "position": 145,
    "id": "sentence_145"
  },
  {
    "type": "sentence",
    "content": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit).",
    "originalSentence": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit).",
    "position": 146,
    "id": "sentence_146"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered.",
    "originalSentence": "{{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered.",
    "position": 147,
    "id": "sentence_147"
  },
  {
    "type": "sentence",
    "content": "This means that the\nnew revision is created if and only if the Deployment's Pod template (`.",
    "originalSentence": "This means that the\nnew revision is created if and only if the Deployment's Pod template (`.",
    "position": 148,
    "id": "sentence_148"
  },
  {
    "type": "sentence",
    "content": "template`) is changed,\nfor example if you update the labels or container images of the template.",
    "originalSentence": "template`) is changed,\nfor example if you update the labels or container images of the template.",
    "position": 149,
    "id": "sentence_149"
  },
  {
    "type": "sentence",
    "content": "Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
    "originalSentence": "Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
    "position": 150,
    "id": "sentence_150"
  },
  {
    "type": "sentence",
    "content": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.",
    "originalSentence": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.",
    "position": 151,
    "id": "sentence_151"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
    "originalSentence": "{{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
    "position": 152,
    "id": "sentence_152"
  },
  {
    "type": "sentence",
    "content": "1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 153,
    "id": "sentence_153"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck.",
    "originalSentence": "apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck.",
    "position": 154,
    "id": "sentence_154"
  },
  {
    "type": "sentence",
    "content": "You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
    "originalSentence": "You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
    "position": 155,
    "id": "sentence_155"
  },
  {
    "type": "sentence",
    "content": "```\n\n* Press Ctrl-C to stop the above rollout status watch.",
    "originalSentence": "```\n\n* Press Ctrl-C to stop the above rollout status watch.",
    "position": 156,
    "id": "sentence_156"
  },
  {
    "type": "sentence",
    "content": "For more information on stuck rollouts,\n[read more here](#deployment-status).",
    "originalSentence": "For more information on stuck rollouts,\n[read more here](#deployment-status).",
    "position": 157,
    "id": "sentence_157"
  },
  {
    "type": "sentence",
    "content": "* You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1.",
    "originalSentence": "* You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1.",
    "position": 158,
    "id": "sentence_158"
  },
  {
    "type": "sentence",
    "content": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
    "originalSentence": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
    "position": 159,
    "id": "sentence_159"
  },
  {
    "type": "sentence",
    "content": "```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet.",
    "originalSentence": "```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet.",
    "position": 160,
    "id": "sentence_160"
  },
  {
    "type": "sentence",
    "content": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
    "originalSentence": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
    "position": 161,
    "id": "sentence_161"
  },
  {
    "type": "sentence",
    "content": "Kubernetes by default sets the value to 25%.",
    "originalSentence": "Kubernetes by default sets the value to 25%.",
    "position": 162,
    "id": "sentence_162"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable.",
    "originalSentence": "{{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable.",
    "position": 163,
    "id": "sentence_163"
  },
  {
    "type": "sentence",
    "content": "### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1.",
    "originalSentence": "### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1.",
    "position": 164,
    "id": "sentence_164"
  },
  {
    "type": "sentence",
    "content": "First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 165,
    "id": "sentence_165"
  },
  {
    "type": "sentence",
    "content": "1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
    "originalSentence": "1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
    "position": 166,
    "id": "sentence_166"
  },
  {
    "type": "sentence",
    "content": "io/change-cause` to its revisions upon creation.",
    "originalSentence": "io/change-cause` to its revisions upon creation.",
    "position": 167,
    "id": "sentence_167"
  },
  {
    "type": "sentence",
    "content": "You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
    "originalSentence": "You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
    "position": 168,
    "id": "sentence_168"
  },
  {
    "type": "sentence",
    "content": "io/change-cause=\"image updated to 1.16.",
    "originalSentence": "io/change-cause=\"image updated to 1.16.",
    "position": 169,
    "id": "sentence_169"
  },
  {
    "type": "sentence",
    "content": "1\"`\n   * Manually editing the manifest of the resource.",
    "originalSentence": "1\"`\n   * Manually editing the manifest of the resource.",
    "position": 170,
    "id": "sentence_170"
  },
  {
    "type": "sentence",
    "content": "To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.",
    "originalSentence": "To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.",
    "position": 171,
    "id": "sentence_171"
  },
  {
    "type": "sentence",
    "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 172,
    "id": "sentence_172"
  },
  {
    "type": "sentence",
    "content": "1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.",
    "originalSentence": "1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.",
    "position": 173,
    "id": "sentence_173"
  },
  {
    "type": "sentence",
    "content": "1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.",
    "originalSentence": "1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.",
    "position": 174,
    "id": "sentence_174"
  },
  {
    "type": "sentence",
    "content": "```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
    "originalSentence": "```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
    "position": 175,
    "id": "sentence_175"
  },
  {
    "type": "sentence",
    "content": "Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "originalSentence": "Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "position": 176,
    "id": "sentence_176"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "originalSentence": "apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "position": 177,
    "id": "sentence_177"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
    "originalSentence": "apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
    "position": 178,
    "id": "sentence_178"
  },
  {
    "type": "sentence",
    "content": "The Deployment is now rolled back to a previous stable revision.",
    "originalSentence": "The Deployment is now rolled back to a previous stable revision.",
    "position": 179,
    "id": "sentence_179"
  },
  {
    "type": "sentence",
    "content": "As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller.",
    "originalSentence": "As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller.",
    "position": 180,
    "id": "sentence_180"
  },
  {
    "type": "sentence",
    "content": "Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3.",
    "originalSentence": "Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3.",
    "position": 181,
    "id": "sentence_181"
  },
  {
    "type": "sentence",
    "content": "Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.",
    "originalSentence": "Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.",
    "position": 182,
    "id": "sentence_182"
  },
  {
    "type": "sentence",
    "content": "kubernetes.",
    "originalSentence": "kubernetes.",
    "position": 183,
    "id": "sentence_183"
  },
  {
    "type": "sentence",
    "content": "io/revision=4\n                           kubernetes.",
    "originalSentence": "io/revision=4\n                           kubernetes.",
    "position": 184,
    "id": "sentence_184"
  },
  {
    "type": "sentence",
    "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 185,
    "id": "sentence_185"
  },
  {
    "type": "sentence",
    "content": "1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.",
    "originalSentence": "1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.",
    "position": 186,
    "id": "sentence_186"
  },
  {
    "type": "sentence",
    "content": "1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment.",
    "originalSentence": "1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment.",
    "position": 187,
    "id": "sentence_187"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods.",
    "originalSentence": "apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods.",
    "position": 188,
    "id": "sentence_188"
  },
  {
    "type": "sentence",
    "content": "```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment.",
    "originalSentence": "```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment.",
    "position": 189,
    "id": "sentence_189"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time.",
    "originalSentence": "apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time.",
    "position": 190,
    "id": "sentence_190"
  },
  {
    "type": "sentence",
    "content": "When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk.",
    "originalSentence": "When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk.",
    "position": 191,
    "id": "sentence_191"
  },
  {
    "type": "sentence",
    "content": "This is called *proportional scaling*.",
    "originalSentence": "This is called *proportional scaling*.",
    "position": 192,
    "id": "sentence_192"
  },
  {
    "type": "sentence",
    "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
    "originalSentence": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
    "position": 193,
    "id": "sentence_193"
  },
  {
    "type": "sentence",
    "content": "* Ensure that the 10 replicas in your Deployment are running.",
    "originalSentence": "* Ensure that the 10 replicas in your Deployment are running.",
    "position": 194,
    "id": "sentence_194"
  },
  {
    "type": "sentence",
    "content": "```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster.",
    "originalSentence": "```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster.",
    "position": 195,
    "id": "sentence_195"
  },
  {
    "type": "sentence",
    "content": "```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 196,
    "id": "sentence_196"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above.",
    "originalSentence": "apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above.",
    "position": 197,
    "id": "sentence_197"
  },
  {
    "type": "sentence",
    "content": "Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along.",
    "originalSentence": "Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along.",
    "position": 198,
    "id": "sentence_198"
  },
  {
    "type": "sentence",
    "content": "The autoscaler increments the Deployment replicas\nto 15.",
    "originalSentence": "The autoscaler increments the Deployment replicas\nto 15.",
    "position": 199,
    "id": "sentence_199"
  },
  {
    "type": "sentence",
    "content": "The Deployment controller needs to decide where to add these new 5 replicas.",
    "originalSentence": "The Deployment controller needs to decide where to add these new 5 replicas.",
    "position": 200,
    "id": "sentence_200"
  },
  {
    "type": "sentence",
    "content": "If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet.",
    "originalSentence": "If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet.",
    "position": 201,
    "id": "sentence_201"
  },
  {
    "type": "sentence",
    "content": "With proportional scaling, you\nspread the additional replicas across all ReplicaSets.",
    "originalSentence": "With proportional scaling, you\nspread the additional replicas across all ReplicaSets.",
    "position": 202,
    "id": "sentence_202"
  },
  {
    "type": "sentence",
    "content": "Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas.",
    "originalSentence": "Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas.",
    "position": 203,
    "id": "sentence_203"
  },
  {
    "type": "sentence",
    "content": "Any leftovers are added to the\nReplicaSet with the most replicas.",
    "originalSentence": "Any leftovers are added to the\nReplicaSet with the most replicas.",
    "position": 204,
    "id": "sentence_204"
  },
  {
    "type": "sentence",
    "content": "ReplicaSets with zero replicas are not scaled up.",
    "originalSentence": "ReplicaSets with zero replicas are not scaled up.",
    "position": 205,
    "id": "sentence_205"
  },
  {
    "type": "sentence",
    "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet.",
    "originalSentence": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet.",
    "position": 206,
    "id": "sentence_206"
  },
  {
    "type": "sentence",
    "content": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy.",
    "originalSentence": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy.",
    "position": 207,
    "id": "sentence_207"
  },
  {
    "type": "sentence",
    "content": "To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet.",
    "originalSentence": "To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet.",
    "position": 208,
    "id": "sentence_208"
  },
  {
    "type": "sentence",
    "content": "```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates.",
    "originalSentence": "```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates.",
    "position": 209,
    "id": "sentence_209"
  },
  {
    "type": "sentence",
    "content": "When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment.",
    "originalSentence": "When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment.",
    "position": 210,
    "id": "sentence_210"
  },
  {
    "type": "sentence",
    "content": "This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
    "originalSentence": "This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
    "position": 211,
    "id": "sentence_211"
  },
  {
    "type": "sentence",
    "content": "* For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "* For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 212,
    "id": "sentence_212"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 213,
    "id": "sentence_213"
  },
  {
    "type": "sentence",
    "content": "1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 214,
    "id": "sentence_214"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 215,
    "id": "sentence_215"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused.",
    "originalSentence": "apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused.",
    "position": 216,
    "id": "sentence_216"
  },
  {
    "type": "sentence",
    "content": "* Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "* Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 217,
    "id": "sentence_217"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
    "originalSentence": "apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
    "position": 218,
    "id": "sentence_218"
  },
  {
    "type": "sentence",
    "content": "```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it.",
    "originalSentence": "```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it.",
    "position": 219,
    "id": "sentence_219"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle.",
    "originalSentence": "{{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle.",
    "position": 220,
    "id": "sentence_220"
  },
  {
    "type": "sentence",
    "content": "It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
    "originalSentence": "It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
    "position": 221,
    "id": "sentence_221"
  },
  {
    "type": "sentence",
    "content": "### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet.",
    "originalSentence": "### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet.",
    "position": 222,
    "id": "sentence_222"
  },
  {
    "type": "sentence",
    "content": "* The Deployment is scaling up its newest ReplicaSet.",
    "originalSentence": "* The Deployment is scaling up its newest ReplicaSet.",
    "position": 223,
    "id": "sentence_223"
  },
  {
    "type": "sentence",
    "content": "* The Deployment is scaling down its older ReplicaSet(s).",
    "originalSentence": "* The Deployment is scaling down its older ReplicaSet(s).",
    "position": 224,
    "id": "sentence_224"
  },
  {
    "type": "sentence",
    "content": "* New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
    "originalSentence": "* New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
    "position": 225,
    "id": "sentence_225"
  },
  {
    "type": "sentence",
    "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.",
    "originalSentence": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.",
    "position": 226,
    "id": "sentence_226"
  },
  {
    "type": "sentence",
    "content": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`.",
    "originalSentence": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`.",
    "position": 227,
    "id": "sentence_227"
  },
  {
    "type": "sentence",
    "content": "### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed.",
    "originalSentence": "### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed.",
    "position": 228,
    "id": "sentence_228"
  },
  {
    "type": "sentence",
    "content": "* All of the replicas associated with the Deployment are available.",
    "originalSentence": "* All of the replicas associated with the Deployment are available.",
    "position": 229,
    "id": "sentence_229"
  },
  {
    "type": "sentence",
    "content": "* No old replicas for the Deployment are running.",
    "originalSentence": "* No old replicas for the Deployment are running.",
    "position": 230,
    "id": "sentence_230"
  },
  {
    "type": "sentence",
    "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.",
    "originalSentence": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.",
    "position": 231,
    "id": "sentence_231"
  },
  {
    "type": "sentence",
    "content": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated.",
    "originalSentence": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated.",
    "position": 232,
    "id": "sentence_232"
  },
  {
    "type": "sentence",
    "content": "The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition).",
    "originalSentence": "The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition).",
    "position": 233,
    "id": "sentence_233"
  },
  {
    "type": "sentence",
    "content": "You can check if a Deployment has completed by using `kubectl rollout status`.",
    "originalSentence": "You can check if a Deployment has completed by using `kubectl rollout status`.",
    "position": 234,
    "id": "sentence_234"
  },
  {
    "type": "sentence",
    "content": "If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code.",
    "originalSentence": "If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code.",
    "position": 235,
    "id": "sentence_235"
  },
  {
    "type": "sentence",
    "content": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available...",
    "originalSentence": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available...",
    "position": 236,
    "id": "sentence_236"
  },
  {
    "type": "sentence",
    "content": "deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $?",
    "originalSentence": "deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $?",
    "position": 237,
    "id": "sentence_237"
  },
  {
    "type": "sentence",
    "content": "```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
    "originalSentence": "```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
    "position": 238,
    "id": "sentence_238"
  },
  {
    "type": "sentence",
    "content": "This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.",
    "originalSentence": "This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.",
    "position": 239,
    "id": "sentence_239"
  },
  {
    "type": "sentence",
    "content": "progressDeadlineSeconds`](#progress-deadline-seconds)).",
    "originalSentence": "progressDeadlineSeconds`](#progress-deadline-seconds)).",
    "position": 240,
    "id": "sentence_240"
  },
  {
    "type": "sentence",
    "content": "progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled.",
    "originalSentence": "progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled.",
    "position": 241,
    "id": "sentence_241"
  },
  {
    "type": "sentence",
    "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment.",
    "originalSentence": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment.",
    "position": 242,
    "id": "sentence_242"
  },
  {
    "type": "sentence",
    "content": "apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.",
    "originalSentence": "apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.",
    "position": 243,
    "id": "sentence_243"
  },
  {
    "type": "sentence",
    "content": "conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
    "originalSentence": "conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
    "position": 244,
    "id": "sentence_244"
  },
  {
    "type": "sentence",
    "content": "Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
    "originalSentence": "Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
    "position": 245,
    "id": "sentence_245"
  },
  {
    "type": "sentence",
    "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
    "originalSentence": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
    "position": 246,
    "id": "sentence_246"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`.",
    "originalSentence": "{{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`.",
    "position": 247,
    "id": "sentence_247"
  },
  {
    "type": "sentence",
    "content": "Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.",
    "originalSentence": "Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.",
    "position": 248,
    "id": "sentence_248"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
    "originalSentence": "{{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
    "position": 249,
    "id": "sentence_249"
  },
  {
    "type": "sentence",
    "content": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.",
    "originalSentence": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.",
    "position": 250,
    "id": "sentence_250"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient.",
    "originalSentence": "{{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient.",
    "position": 251,
    "id": "sentence_251"
  },
  {
    "type": "sentence",
    "content": "For example, let's suppose you have\ninsufficient quota.",
    "originalSentence": "For example, let's suppose you have\ninsufficient quota.",
    "position": 252,
    "id": "sentence_252"
  },
  {
    "type": "sentence",
    "content": "If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<...",
    "originalSentence": "If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<...",
    "position": 253,
    "id": "sentence_253"
  },
  {
    "type": "sentence",
    "content": ">\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...",
    "originalSentence": ">\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...",
    "position": 254,
    "id": "sentence_254"
  },
  {
    "type": "sentence",
    "content": ">\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.",
    "originalSentence": ">\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.",
    "position": 255,
    "id": "sentence_255"
  },
  {
    "type": "sentence",
    "content": "reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.",
    "originalSentence": "reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.",
    "position": 256,
    "id": "sentence_256"
  },
  {
    "type": "sentence",
    "content": "reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace.",
    "originalSentence": "reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace.",
    "position": 257,
    "id": "sentence_257"
  },
  {
    "type": "sentence",
    "content": "If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
    "originalSentence": "If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
    "position": 258,
    "id": "sentence_258"
  },
  {
    "type": "sentence",
    "content": "```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
    "originalSentence": "```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
    "position": 259,
    "id": "sentence_259"
  },
  {
    "type": "sentence",
    "content": "Minimum availability is dictated\nby the parameters specified in the deployment strategy.",
    "originalSentence": "Minimum availability is dictated\nby the parameters specified in the deployment strategy.",
    "position": 260,
    "id": "sentence_260"
  },
  {
    "type": "sentence",
    "content": "`type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete).",
    "originalSentence": "`type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete).",
    "position": 261,
    "id": "sentence_261"
  },
  {
    "type": "sentence",
    "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
    "originalSentence": "You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
    "position": 262,
    "id": "sentence_262"
  },
  {
    "type": "sentence",
    "content": "`kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline.",
    "originalSentence": "`kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline.",
    "position": 263,
    "id": "sentence_263"
  },
  {
    "type": "sentence",
    "content": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "originalSentence": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 264,
    "id": "sentence_264"
  },
  {
    "type": "sentence",
    "content": "error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $?",
    "originalSentence": "error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $?",
    "position": 265,
    "id": "sentence_265"
  },
  {
    "type": "sentence",
    "content": "```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment.",
    "originalSentence": "```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment.",
    "position": 266,
    "id": "sentence_266"
  },
  {
    "type": "sentence",
    "content": "You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
    "originalSentence": "You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
    "position": 267,
    "id": "sentence_267"
  },
  {
    "type": "sentence",
    "content": "## Clean up Policy\n\nYou can set `.",
    "originalSentence": "## Clean up Policy\n\nYou can set `.",
    "position": 268,
    "id": "sentence_268"
  },
  {
    "type": "sentence",
    "content": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain.",
    "originalSentence": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain.",
    "position": 269,
    "id": "sentence_269"
  },
  {
    "type": "sentence",
    "content": "The rest will be garbage-collected in the background.",
    "originalSentence": "The rest will be garbage-collected in the background.",
    "position": 270,
    "id": "sentence_270"
  },
  {
    "type": "sentence",
    "content": "By default,\nit is 10.",
    "originalSentence": "By default,\nit is 10.",
    "position": 271,
    "id": "sentence_271"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.",
    "originalSentence": "{{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.",
    "position": 272,
    "id": "sentence_272"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
    "originalSentence": "{{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
    "position": 273,
    "id": "sentence_273"
  },
  {
    "type": "sentence",
    "content": "If you set `.",
    "originalSentence": "If you set `.",
    "position": 274,
    "id": "sentence_274"
  },
  {
    "type": "sentence",
    "content": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one.",
    "originalSentence": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one.",
    "position": 275,
    "id": "sentence_275"
  },
  {
    "type": "sentence",
    "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure.",
    "originalSentence": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure.",
    "position": 276,
    "id": "sentence_276"
  },
  {
    "type": "sentence",
    "content": "For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.",
    "originalSentence": "For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.",
    "position": 277,
    "id": "sentence_277"
  },
  {
    "type": "sentence",
    "content": "revisionHistoryLimit` because the Deployment never reaches a complete state.",
    "originalSentence": "revisionHistoryLimit` because the Deployment never reaches a complete state.",
    "position": 278,
    "id": "sentence_278"
  },
  {
    "type": "sentence",
    "content": "## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
    "originalSentence": "## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
    "position": 279,
    "id": "sentence_279"
  },
  {
    "type": "sentence",
    "content": "## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `.",
    "originalSentence": "## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `.",
    "position": 280,
    "id": "sentence_280"
  },
  {
    "type": "sentence",
    "content": "apiVersion`, `.",
    "originalSentence": "apiVersion`, `.",
    "position": 281,
    "id": "sentence_281"
  },
  {
    "type": "sentence",
    "content": "kind`, and `.",
    "originalSentence": "kind`, and `.",
    "position": 282,
    "id": "sentence_282"
  },
  {
    "type": "sentence",
    "content": "metadata` fields.",
    "originalSentence": "metadata` fields.",
    "position": 283,
    "id": "sentence_283"
  },
  {
    "type": "sentence",
    "content": "For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
    "originalSentence": "For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
    "position": 284,
    "id": "sentence_284"
  },
  {
    "type": "sentence",
    "content": "When the control plane creates new Pods for a Deployment, the `.",
    "originalSentence": "When the control plane creates new Pods for a Deployment, the `.",
    "position": 285,
    "id": "sentence_285"
  },
  {
    "type": "sentence",
    "content": "name` of the\nDeployment is part of the basis for naming those Pods.",
    "originalSentence": "name` of the\nDeployment is part of the basis for naming those Pods.",
    "position": 286,
    "id": "sentence_286"
  },
  {
    "type": "sentence",
    "content": "The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames.",
    "originalSentence": "The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames.",
    "position": 287,
    "id": "sentence_287"
  },
  {
    "type": "sentence",
    "content": "For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
    "originalSentence": "For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
    "position": 288,
    "id": "sentence_288"
  },
  {
    "type": "sentence",
    "content": "A Deployment also needs a [`.",
    "originalSentence": "A Deployment also needs a [`.",
    "position": 289,
    "id": "sentence_289"
  },
  {
    "type": "sentence",
    "content": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `.",
    "originalSentence": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `.",
    "position": 290,
    "id": "sentence_290"
  },
  {
    "type": "sentence",
    "content": "template` and `.",
    "originalSentence": "template` and `.",
    "position": 291,
    "id": "sentence_291"
  },
  {
    "type": "sentence",
    "content": "selector` are the only required fields of the `.",
    "originalSentence": "selector` are the only required fields of the `.",
    "position": 292,
    "id": "sentence_292"
  },
  {
    "type": "sentence",
    "content": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
    "originalSentence": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
    "position": 293,
    "id": "sentence_293"
  },
  {
    "type": "sentence",
    "content": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
    "originalSentence": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
    "position": 294,
    "id": "sentence_294"
  },
  {
    "type": "sentence",
    "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy.",
    "originalSentence": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy.",
    "position": 295,
    "id": "sentence_295"
  },
  {
    "type": "sentence",
    "content": "For labels, make sure not to overlap with other controllers.",
    "originalSentence": "For labels, make sure not to overlap with other controllers.",
    "position": 296,
    "id": "sentence_296"
  },
  {
    "type": "sentence",
    "content": "See [selector](#selector).",
    "originalSentence": "See [selector](#selector).",
    "position": 297,
    "id": "sentence_297"
  },
  {
    "type": "sentence",
    "content": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
    "originalSentence": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
    "position": 298,
    "id": "sentence_298"
  },
  {
    "type": "sentence",
    "content": "### Replicas\n\n`.",
    "originalSentence": "### Replicas\n\n`.",
    "position": 299,
    "id": "sentence_299"
  },
  {
    "type": "sentence",
    "content": "replicas` is an optional field that specifies the number of desired Pods.",
    "originalSentence": "replicas` is an optional field that specifies the number of desired Pods.",
    "position": 300,
    "id": "sentence_300"
  },
  {
    "type": "sentence",
    "content": "It defaults to 1.",
    "originalSentence": "It defaults to 1.",
    "position": 301,
    "id": "sentence_301"
  },
  {
    "type": "sentence",
    "content": "Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.",
    "originalSentence": "Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.",
    "position": 302,
    "id": "sentence_302"
  },
  {
    "type": "sentence",
    "content": "yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did.",
    "originalSentence": "yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did.",
    "position": 303,
    "id": "sentence_303"
  },
  {
    "type": "sentence",
    "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
    "originalSentence": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
    "position": 304,
    "id": "sentence_304"
  },
  {
    "type": "sentence",
    "content": "Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.",
    "originalSentence": "Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.",
    "position": 305,
    "id": "sentence_305"
  },
  {
    "type": "sentence",
    "content": "replicas` field automatically.",
    "originalSentence": "replicas` field automatically.",
    "position": 306,
    "id": "sentence_306"
  },
  {
    "type": "sentence",
    "content": "### Selector\n\n`.",
    "originalSentence": "### Selector\n\n`.",
    "position": 307,
    "id": "sentence_307"
  },
  {
    "type": "sentence",
    "content": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment.",
    "originalSentence": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment.",
    "position": 308,
    "id": "sentence_308"
  },
  {
    "type": "sentence",
    "content": "selector` must match `.",
    "originalSentence": "selector` must match `.",
    "position": 309,
    "id": "sentence_309"
  },
  {
    "type": "sentence",
    "content": "labels`, or it will be rejected by the API.",
    "originalSentence": "labels`, or it will be rejected by the API.",
    "position": 310,
    "id": "sentence_310"
  },
  {
    "type": "sentence",
    "content": "In API version `apps/v1`, `.",
    "originalSentence": "In API version `apps/v1`, `.",
    "position": 311,
    "id": "sentence_311"
  },
  {
    "type": "sentence",
    "content": "selector` and `.",
    "originalSentence": "selector` and `.",
    "position": 312,
    "id": "sentence_312"
  },
  {
    "type": "sentence",
    "content": "labels` do not default to `.",
    "originalSentence": "labels` do not default to `.",
    "position": 313,
    "id": "sentence_313"
  },
  {
    "type": "sentence",
    "content": "labels` if not set.",
    "originalSentence": "labels` if not set.",
    "position": 314,
    "id": "sentence_314"
  },
  {
    "type": "sentence",
    "content": "So they must be set explicitly.",
    "originalSentence": "So they must be set explicitly.",
    "position": 315,
    "id": "sentence_315"
  },
  {
    "type": "sentence",
    "content": "Also note that `.",
    "originalSentence": "Also note that `.",
    "position": 316,
    "id": "sentence_316"
  },
  {
    "type": "sentence",
    "content": "selector` is immutable after creation of the Deployment in `apps/v1`.",
    "originalSentence": "selector` is immutable after creation of the Deployment in `apps/v1`.",
    "position": 317,
    "id": "sentence_317"
  },
  {
    "type": "sentence",
    "content": "A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.",
    "originalSentence": "A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.",
    "position": 318,
    "id": "sentence_318"
  },
  {
    "type": "sentence",
    "content": "template` or if the total number of such Pods exceeds `.",
    "originalSentence": "template` or if the total number of such Pods exceeds `.",
    "position": 319,
    "id": "sentence_319"
  },
  {
    "type": "sentence",
    "content": "It brings up new\nPods with `.",
    "originalSentence": "It brings up new\nPods with `.",
    "position": 320,
    "id": "sentence_320"
  },
  {
    "type": "sentence",
    "content": "template` if the number of Pods is less than the desired number.",
    "originalSentence": "template` if the number of Pods is less than the desired number.",
    "position": 321,
    "id": "sentence_321"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController.",
    "originalSentence": "{{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController.",
    "position": 322,
    "id": "sentence_322"
  },
  {
    "type": "sentence",
    "content": "If you\ndo so, the first Deployment thinks that it created these other Pods.",
    "originalSentence": "If you\ndo so, the first Deployment thinks that it created these other Pods.",
    "position": 323,
    "id": "sentence_323"
  },
  {
    "type": "sentence",
    "content": "Kubernetes does not stop you from doing this.",
    "originalSentence": "Kubernetes does not stop you from doing this.",
    "position": 324,
    "id": "sentence_324"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
    "originalSentence": "{{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
    "position": 325,
    "id": "sentence_325"
  },
  {
    "type": "sentence",
    "content": "### Strategy\n\n`.",
    "originalSentence": "### Strategy\n\n`.",
    "position": 326,
    "id": "sentence_326"
  },
  {
    "type": "sentence",
    "content": "strategy` specifies the strategy used to replace old Pods by new ones.",
    "originalSentence": "strategy` specifies the strategy used to replace old Pods by new ones.",
    "position": 327,
    "id": "sentence_327"
  },
  {
    "type": "sentence",
    "content": "type` can be \"Recreate\" or \"RollingUpdate\".",
    "originalSentence": "type` can be \"Recreate\" or \"RollingUpdate\".",
    "position": 328,
    "id": "sentence_328"
  },
  {
    "type": "sentence",
    "content": "\"RollingUpdate\" is\nthe default value.",
    "originalSentence": "\"RollingUpdate\" is\nthe default value.",
    "position": 329,
    "id": "sentence_329"
  },
  {
    "type": "sentence",
    "content": "#### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `.",
    "originalSentence": "#### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `.",
    "position": 330,
    "id": "sentence_330"
  },
  {
    "type": "sentence",
    "content": "type==Recreate`.",
    "originalSentence": "type==Recreate`.",
    "position": 331,
    "id": "sentence_331"
  },
  {
    "type": "sentence",
    "content": "{{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades.",
    "originalSentence": "{{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades.",
    "position": 332,
    "id": "sentence_332"
  },
  {
    "type": "sentence",
    "content": "If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately.",
    "originalSentence": "If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately.",
    "position": 333,
    "id": "sentence_333"
  },
  {
    "type": "sentence",
    "content": "Successful removal is awaited before any Pod of the new\nrevision is created.",
    "originalSentence": "Successful removal is awaited before any Pod of the new\nrevision is created.",
    "position": 334,
    "id": "sentence_334"
  },
  {
    "type": "sentence",
    "content": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state).",
    "originalSentence": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state).",
    "position": 335,
    "id": "sentence_335"
  },
  {
    "type": "sentence",
    "content": "If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
    "originalSentence": "If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
    "position": 336,
    "id": "sentence_336"
  },
  {
    "type": "sentence",
    "content": "{{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
    "originalSentence": "{{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
    "position": 337,
    "id": "sentence_337"
  },
  {
    "type": "sentence",
    "content": "type==RollingUpdate`.",
    "originalSentence": "type==RollingUpdate`.",
    "position": 338,
    "id": "sentence_338"
  },
  {
    "type": "sentence",
    "content": "You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
    "originalSentence": "You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
    "position": 339,
    "id": "sentence_339"
  },
  {
    "type": "sentence",
    "content": "##### Max Unavailable\n\n`.",
    "originalSentence": "##### Max Unavailable\n\n`.",
    "position": 340,
    "id": "sentence_340"
  },
  {
    "type": "sentence",
    "content": "rollingUpdate.",
    "originalSentence": "rollingUpdate.",
    "position": 341,
    "id": "sentence_341"
  },
  {
    "type": "sentence",
    "content": "maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process.",
    "originalSentence": "maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process.",
    "position": 342,
    "id": "sentence_342"
  },
  {
    "type": "sentence",
    "content": "The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%).",
    "originalSentence": "The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%).",
    "position": 343,
    "id": "sentence_343"
  },
  {
    "type": "sentence",
    "content": "The absolute number is calculated from percentage by\nrounding down.",
    "originalSentence": "The absolute number is calculated from percentage by\nrounding down.",
    "position": 344,
    "id": "sentence_344"
  },
  {
    "type": "sentence",
    "content": "The value cannot be 0 if `.",
    "originalSentence": "The value cannot be 0 if `.",
    "position": 345,
    "id": "sentence_345"
  },
  {
    "type": "sentence",
    "content": "rollingUpdate.",
    "originalSentence": "rollingUpdate.",
    "position": 346,
    "id": "sentence_346"
  },
  {
    "type": "sentence",
    "content": "maxSurge` is 0.",
    "originalSentence": "maxSurge` is 0.",
    "position": 347,
    "id": "sentence_347"
  },
  {
    "type": "sentence",
    "content": "The default value is 25%.",
    "originalSentence": "The default value is 25%.",
    "position": 348,
    "id": "sentence_348"
  },
  {
    "type": "sentence",
    "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts.",
    "originalSentence": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts.",
    "position": 349,
    "id": "sentence_349"
  },
  {
    "type": "sentence",
    "content": "Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
    "originalSentence": "Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
    "position": 350,
    "id": "sentence_350"
  },
  {
    "type": "sentence",
    "content": "##### Max Surge\n\n`.",
    "originalSentence": "##### Max Surge\n\n`.",
    "position": 351,
    "id": "sentence_351"
  },
  {
    "type": "sentence",
    "content": "rollingUpdate.",
    "originalSentence": "rollingUpdate.",
    "position": 352,
    "id": "sentence_352"
  },
  {
    "type": "sentence",
    "content": "maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods.",
    "originalSentence": "maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods.",
    "position": 353,
    "id": "sentence_353"
  },
  {
    "type": "sentence",
    "content": "The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%).",
    "originalSentence": "The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%).",
    "position": 354,
    "id": "sentence_354"
  },
  {
    "type": "sentence",
    "content": "The value cannot be 0 if `maxUnavailable` is 0.",
    "originalSentence": "The value cannot be 0 if `maxUnavailable` is 0.",
    "position": 355,
    "id": "sentence_355"
  },
  {
    "type": "sentence",
    "content": "The absolute number\nis calculated from the percentage by rounding up.",
    "originalSentence": "The absolute number\nis calculated from the percentage by rounding up.",
    "position": 356,
    "id": "sentence_356"
  },
  {
    "type": "sentence",
    "content": "The default value is 25%.",
    "originalSentence": "The default value is 25%.",
    "position": 357,
    "id": "sentence_357"
  },
  {
    "type": "sentence",
    "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods.",
    "originalSentence": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods.",
    "position": 358,
    "id": "sentence_358"
  },
  {
    "type": "sentence",
    "content": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods.",
    "originalSentence": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods.",
    "position": 359,
    "id": "sentence_359"
  },
  {
    "type": "sentence",
    "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "originalSentence": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "position": 360,
    "id": "sentence_360"
  },
  {
    "type": "sentence",
    "content": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "originalSentence": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "position": 361,
    "id": "sentence_361"
  },
  {
    "type": "sentence",
    "content": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "originalSentence": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "position": 362,
    "id": "sentence_362"
  },
  {
    "type": "sentence",
    "content": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`.",
    "originalSentence": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`.",
    "position": 363,
    "id": "sentence_363"
  },
  {
    "type": "sentence",
    "content": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
    "originalSentence": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
    "position": 364,
    "id": "sentence_364"
  },
  {
    "type": "sentence",
    "content": "and `reason: ProgressDeadlineExceeded` in the status of the resource.",
    "originalSentence": "and `reason: ProgressDeadlineExceeded` in the status of the resource.",
    "position": 365,
    "id": "sentence_365"
  },
  {
    "type": "sentence",
    "content": "The Deployment controller will keep\nretrying the Deployment.",
    "originalSentence": "The Deployment controller will keep\nretrying the Deployment.",
    "position": 366,
    "id": "sentence_366"
  },
  {
    "type": "sentence",
    "content": "This defaults to 600.",
    "originalSentence": "This defaults to 600.",
    "position": 367,
    "id": "sentence_367"
  },
  {
    "type": "sentence",
    "content": "In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition.",
    "originalSentence": "In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition.",
    "position": 368,
    "id": "sentence_368"
  },
  {
    "type": "sentence",
    "content": "If specified, this field needs to be greater than `.",
    "originalSentence": "If specified, this field needs to be greater than `.",
    "position": 369,
    "id": "sentence_369"
  },
  {
    "type": "sentence",
    "content": "minReadySeconds`.",
    "originalSentence": "minReadySeconds`.",
    "position": 370,
    "id": "sentence_370"
  },
  {
    "type": "sentence",
    "content": "### Min Ready Seconds\n\n`.",
    "originalSentence": "### Min Ready Seconds\n\n`.",
    "position": 371,
    "id": "sentence_371"
  },
  {
    "type": "sentence",
    "content": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.",
    "originalSentence": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.",
    "position": 372,
    "id": "sentence_372"
  },
  {
    "type": "sentence",
    "content": "This defaults to 0 (the Pod will be considered available as soon as it is ready).",
    "originalSentence": "This defaults to 0 (the Pod will be considered available as soon as it is ready).",
    "position": 373,
    "id": "sentence_373"
  },
  {
    "type": "sentence",
    "content": "To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
    "originalSentence": "To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
    "position": 374,
    "id": "sentence_374"
  },
  {
    "type": "sentence",
    "content": "### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period.",
    "originalSentence": "### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period.",
    "position": 375,
    "id": "sentence_375"
  },
  {
    "type": "sentence",
    "content": "As a result, the total number of all pods can temporarily exceed\n`.",
    "originalSentence": "As a result, the total number of all pods can temporarily exceed\n`.",
    "position": 376,
    "id": "sentence_376"
  },
  {
    "type": "sentence",
    "content": "Terminating pods can be tracked using the `.",
    "originalSentence": "Terminating pods can be tracked using the `.",
    "position": 377,
    "id": "sentence_377"
  },
  {
    "type": "sentence",
    "content": "terminatingReplicas` field of the Deployment.",
    "originalSentence": "terminatingReplicas` field of the Deployment.",
    "position": 378,
    "id": "sentence_378"
  },
  {
    "type": "sentence",
    "content": "### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls.",
    "originalSentence": "### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls.",
    "position": 379,
    "id": "sentence_379"
  },
  {
    "type": "sentence",
    "content": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback.",
    "originalSentence": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback.",
    "position": 380,
    "id": "sentence_380"
  },
  {
    "type": "sentence",
    "content": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
    "originalSentence": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
    "position": 381,
    "id": "sentence_381"
  },
  {
    "type": "sentence",
    "content": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
    "originalSentence": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
    "position": 382,
    "id": "sentence_382"
  },
  {
    "type": "sentence",
    "content": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
    "originalSentence": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
    "position": 383,
    "id": "sentence_383"
  },
  {
    "type": "sentence",
    "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
    "originalSentence": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
    "position": 384,
    "id": "sentence_384"
  },
  {
    "type": "sentence",
    "content": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
    "originalSentence": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
    "position": 385,
    "id": "sentence_385"
  },
  {
    "type": "sentence",
    "content": "### Paused\n\n`.",
    "originalSentence": "### Paused\n\n`.",
    "position": 386,
    "id": "sentence_386"
  },
  {
    "type": "sentence",
    "content": "paused` is an optional boolean field for pausing and resuming a Deployment.",
    "originalSentence": "paused` is an optional boolean field for pausing and resuming a Deployment.",
    "position": 387,
    "id": "sentence_387"
  },
  {
    "type": "sentence",
    "content": "The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused.",
    "originalSentence": "The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused.",
    "position": 388,
    "id": "sentence_388"
  },
  {
    "type": "sentence",
    "content": "A Deployment is not paused by default when\nit is created.",
    "originalSentence": "A Deployment is not paused by default when\nit is created.",
    "position": 389,
    "id": "sentence_389"
  },
  {
    "type": "sentence",
    "content": "## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods).",
    "originalSentence": "## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods).",
    "position": 390,
    "id": "sentence_390"
  },
  {
    "type": "sentence",
    "content": "* [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
    "originalSentence": "* [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
    "position": 391,
    "id": "sentence_391"
  },
  {
    "type": "sentence",
    "content": "* Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
    "originalSentence": "* Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
    "position": 392,
    "id": "sentence_392"
  },
  {
    "type": "sentence",
    "content": "* Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions.",
    "originalSentence": "* Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions.",
    "position": 393,
    "id": "sentence_393"
  },
  {
    "type": "sentence",
    "content": "* Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "originalSentence": "* Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "position": 394,
    "id": "sentence_394"
  },
  {
    "type": "window",
    "content": "---\nreviewers:\n- janetkuo\ntitle: Deployments\napi_metadata:\n- apiVersion: \"apps/v1\"\n  kind: \"Deployment\"\nfeature:\n  title: Automated rollouts and rollbacks\n  description: >\n    Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.",
    "originalSentence": "---\nreviewers:\n- janetkuo\ntitle: Deployments\napi_metadata:\n- apiVersion: \"apps/v1\"\n  kind: \"Deployment\"\nfeature:\n  title: Automated rollouts and rollbacks\n  description: >\n    Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.",
    "position": 395,
    "id": "window_395"
  },
  {
    "type": "window",
    "content": "If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions. description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
    "originalSentence": "If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions. description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
    "position": 396,
    "id": "window_396"
  },
  {
    "type": "window",
    "content": "Take advantage of a growing ecosystem of deployment solutions. description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<!",
    "originalSentence": "Take advantage of a growing ecosystem of deployment solutions. description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<!",
    "position": 397,
    "id": "window_397"
  },
  {
    "type": "window",
    "content": "description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<! -- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
    "originalSentence": "description: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<! -- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
    "position": 398,
    "id": "window_398"
  },
  {
    "type": "window",
    "content": "content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<! -- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
    "originalSentence": "content_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---\n\n<! -- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
    "position": 399,
    "id": "window_399"
  },
  {
    "type": "window",
    "content": "-- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
    "originalSentence": "-- overview -->\n\nA _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
    "position": 400,
    "id": "window_400"
  },
  {
    "type": "window",
    "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}}\nDo not manage ReplicaSets owned by a Deployment.",
    "originalSentence": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}}\nDo not manage ReplicaSets owned by a Deployment.",
    "position": 401,
    "id": "window_401"
  },
  {
    "type": "window",
    "content": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
    "originalSentence": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
    "position": 402,
    "id": "window_402"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}\n\n<!",
    "originalSentence": "{{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}\n\n<!",
    "position": 403,
    "id": "window_403"
  },
  {
    "type": "window",
    "content": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}\n\n<! -- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
    "originalSentence": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}\n\n<! -- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
    "position": 404,
    "id": "window_404"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n<! -- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background.",
    "originalSentence": "{{< /note >}}\n\n<! -- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background.",
    "position": 405,
    "id": "window_405"
  },
  {
    "type": "window",
    "content": "-- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.",
    "originalSentence": "-- body -->\n\n## Use Case\n\nThe following are typical use cases for Deployments:\n\n* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.",
    "position": 406,
    "id": "window_406"
  },
  {
    "type": "window",
    "content": "The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not. * [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
    "originalSentence": "The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not. * [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
    "position": 407,
    "id": "window_407"
  },
  {
    "type": "window",
    "content": "Check the status of the rollout to see if it succeeds or not. * [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
    "originalSentence": "Check the status of the rollout to see if it succeeds or not. * [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
    "position": 408,
    "id": "window_408"
  },
  {
    "type": "window",
    "content": "* [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.",
    "originalSentence": "* [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.",
    "position": 409,
    "id": "window_409"
  },
  {
    "type": "window",
    "content": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment. * [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
    "originalSentence": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment. * [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
    "position": 410,
    "id": "window_410"
  },
  {
    "type": "window",
    "content": "Each new ReplicaSet updates the revision of the Deployment. * [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.",
    "originalSentence": "Each new ReplicaSet updates the revision of the Deployment. * [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.",
    "position": 411,
    "id": "window_411"
  },
  {
    "type": "window",
    "content": "* [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment. * [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
    "originalSentence": "* [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment. * [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
    "position": 412,
    "id": "window_412"
  },
  {
    "type": "window",
    "content": "Each rollback updates the revision of the Deployment. * [Scale up the Deployment to facilitate more load](#scaling-a-deployment). * [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
    "originalSentence": "Each rollback updates the revision of the Deployment. * [Scale up the Deployment to facilitate more load](#scaling-a-deployment). * [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
    "position": 413,
    "id": "window_413"
  },
  {
    "type": "window",
    "content": "* [Scale up the Deployment to facilitate more load](#scaling-a-deployment). * [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. * [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
    "originalSentence": "* [Scale up the Deployment to facilitate more load](#scaling-a-deployment). * [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. * [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
    "position": 414,
    "id": "window_414"
  },
  {
    "type": "window",
    "content": "* [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. * [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. * [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
    "originalSentence": "* [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. * [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. * [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
    "position": 415,
    "id": "window_415"
  },
  {
    "type": "window",
    "content": "* [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. * [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore. ## Creating a Deployment\n\nThe following is an example of a Deployment.",
    "originalSentence": "* [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. * [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore. ## Creating a Deployment\n\nThe following is an example of a Deployment.",
    "position": 416,
    "id": "window_416"
  },
  {
    "type": "window",
    "content": "* [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore. ## Creating a Deployment\n\nThe following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment.",
    "originalSentence": "* [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore. ## Creating a Deployment\n\nThe following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment.",
    "position": 417,
    "id": "window_417"
  },
  {
    "type": "window",
    "content": "## Creating a Deployment\n\nThe following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment. yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `.",
    "originalSentence": "## Creating a Deployment\n\nThe following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment. yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `.",
    "position": 418,
    "id": "window_418"
  },
  {
    "type": "window",
    "content": "It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment. yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `. metadata.",
    "originalSentence": "It creates a ReplicaSet to bring up three `nginx` Pods:\n\n{{% code_sample file=\"controllers/nginx-deployment. yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `. metadata.",
    "position": 419,
    "id": "window_419"
  },
  {
    "type": "window",
    "content": "yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `. metadata. name` field.",
    "originalSentence": "yaml\" %}}\n\nIn this example:\n\n* A Deployment named `nginx-deployment` is created, indicated by the\n  `. metadata. name` field.",
    "position": 420,
    "id": "window_420"
  },
  {
    "type": "window",
    "content": "metadata. name` field. This name will become the basis for the ReplicaSets\n  and Pods which are created later.",
    "originalSentence": "metadata. name` field. This name will become the basis for the ReplicaSets\n  and Pods which are created later.",
    "position": 421,
    "id": "window_421"
  },
  {
    "type": "window",
    "content": "name` field. This name will become the basis for the ReplicaSets\n  and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details.",
    "originalSentence": "name` field. This name will become the basis for the ReplicaSets\n  and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details.",
    "position": 422,
    "id": "window_422"
  },
  {
    "type": "window",
    "content": "This name will become the basis for the ReplicaSets\n  and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details. * The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
    "originalSentence": "This name will become the basis for the ReplicaSets\n  and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details. * The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
    "position": 423,
    "id": "window_423"
  },
  {
    "type": "window",
    "content": "See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details. * The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. spec.",
    "originalSentence": "See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details. * The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. spec.",
    "position": 424,
    "id": "window_424"
  },
  {
    "type": "window",
    "content": "* The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. spec. replicas` field.",
    "originalSentence": "* The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. spec. replicas` field.",
    "position": 425,
    "id": "window_425"
  },
  {
    "type": "window",
    "content": "* The `. spec. selector` field defines how the created ReplicaSet finds which Pods to manage.",
    "originalSentence": "* The `. spec. selector` field defines how the created ReplicaSet finds which Pods to manage.",
    "position": 426,
    "id": "window_426"
  },
  {
    "type": "window",
    "content": "spec. selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`).",
    "originalSentence": "spec. selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`).",
    "position": 427,
    "id": "window_427"
  },
  {
    "type": "window",
    "content": "selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule.",
    "originalSentence": "selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule.",
    "position": 428,
    "id": "window_428"
  },
  {
    "type": "window",
    "content": "In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule. {{< note >}}\n  The `.",
    "originalSentence": "In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule. {{< note >}}\n  The `.",
    "position": 429,
    "id": "window_429"
  },
  {
    "type": "window",
    "content": "However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule. {{< note >}}\n  The `. spec.",
    "originalSentence": "However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule. {{< note >}}\n  The `. spec.",
    "position": 430,
    "id": "window_430"
  },
  {
    "type": "window",
    "content": "spec. selector. matchLabels` field is a map of {key,value} pairs.",
    "originalSentence": "spec. selector. matchLabels` field is a map of {key,value} pairs.",
    "position": 431,
    "id": "window_431"
  },
  {
    "type": "window",
    "content": "selector. matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
    "originalSentence": "selector. matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
    "position": 432,
    "id": "window_432"
  },
  {
    "type": "window",
    "content": "matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
    "originalSentence": "matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
    "position": 433,
    "id": "window_433"
  },
  {
    "type": "window",
    "content": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}}\n\n* The `.",
    "originalSentence": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}}\n\n* The `.",
    "position": 434,
    "id": "window_434"
  },
  {
    "type": "window",
    "content": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}}\n\n* The `. spec.",
    "originalSentence": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}}\n\n* The `. spec.",
    "position": 435,
    "id": "window_435"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n* The `. spec. template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `.",
    "originalSentence": "{{< /note >}}\n\n* The `. spec. template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `.",
    "position": 436,
    "id": "window_436"
  },
  {
    "type": "window",
    "content": "spec. template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `. metadata.",
    "originalSentence": "spec. template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `. metadata.",
    "position": 437,
    "id": "window_437"
  },
  {
    "type": "window",
    "content": "template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `. metadata. labels` field.",
    "originalSentence": "template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `. metadata. labels` field.",
    "position": 438,
    "id": "window_438"
  },
  {
    "type": "window",
    "content": "metadata. labels` field. * The Pod template's specification, or `.",
    "originalSentence": "metadata. labels` field. * The Pod template's specification, or `.",
    "position": 439,
    "id": "window_439"
  },
  {
    "type": "window",
    "content": "labels` field. * The Pod template's specification, or `. spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14.",
    "originalSentence": "labels` field. * The Pod template's specification, or `. spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14.",
    "position": 440,
    "id": "window_440"
  },
  {
    "type": "window",
    "content": "* The Pod template's specification, or `. spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14. 2.",
    "originalSentence": "* The Pod template's specification, or `. spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14. 2.",
    "position": 441,
    "id": "window_441"
  },
  {
    "type": "window",
    "content": "spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14. 2. * Create one container and name it `nginx` using the `.",
    "originalSentence": "spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14. 2. * Create one container and name it `nginx` using the `.",
    "position": 442,
    "id": "window_442"
  },
  {
    "type": "window",
    "content": "2. * Create one container and name it `nginx` using the `. spec.",
    "originalSentence": "2. * Create one container and name it `nginx` using the `. spec.",
    "position": 443,
    "id": "window_443"
  },
  {
    "type": "window",
    "content": "* Create one container and name it `nginx` using the `. spec. containers[0].",
    "originalSentence": "* Create one container and name it `nginx` using the `. spec. containers[0].",
    "position": 444,
    "id": "window_444"
  },
  {
    "type": "window",
    "content": "containers[0]. name` field. Before you begin, make sure your Kubernetes cluster is up and running.",
    "originalSentence": "containers[0]. name` field. Before you begin, make sure your Kubernetes cluster is up and running.",
    "position": 445,
    "id": "window_445"
  },
  {
    "type": "window",
    "content": "name` field. Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:\n\n1.",
    "originalSentence": "name` field. Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:\n\n1.",
    "position": 446,
    "id": "window_446"
  },
  {
    "type": "window",
    "content": "Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:\n\n1. Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2.",
    "originalSentence": "Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:\n\n1. Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2.",
    "position": 447,
    "id": "window_447"
  },
  {
    "type": "window",
    "content": "Follow the steps given below to create the above Deployment:\n\n1. Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2. Run `kubectl get deployments` to check if the Deployment was created.",
    "originalSentence": "Follow the steps given below to create the above Deployment:\n\n1. Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2. Run `kubectl get deployments` to check if the Deployment was created.",
    "position": 448,
    "id": "window_448"
  },
  {
    "type": "window",
    "content": "Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2. Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace.",
    "originalSentence": "Create the Deployment by running the following command:\n\n   ```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```\n\n2. Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace.",
    "position": 449,
    "id": "window_449"
  },
  {
    "type": "window",
    "content": "Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace. * `READY` displays how many replicas of the application are available to your users.",
    "originalSentence": "Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace. * `READY` displays how many replicas of the application are available to your users.",
    "position": 450,
    "id": "window_450"
  },
  {
    "type": "window",
    "content": "If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace. * `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired.",
    "originalSentence": "If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace. * `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired.",
    "position": 451,
    "id": "window_451"
  },
  {
    "type": "window",
    "content": "* `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
    "originalSentence": "* `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
    "position": 452,
    "id": "window_452"
  },
  {
    "type": "window",
    "content": "It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users.",
    "originalSentence": "It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users.",
    "position": 453,
    "id": "window_453"
  },
  {
    "type": "window",
    "content": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
    "originalSentence": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
    "position": 454,
    "id": "window_454"
  },
  {
    "type": "window",
    "content": "* `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `.",
    "originalSentence": "* `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `.",
    "position": 455,
    "id": "window_455"
  },
  {
    "type": "window",
    "content": "* `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `. spec.",
    "originalSentence": "* `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `. spec.",
    "position": 456,
    "id": "window_456"
  },
  {
    "type": "window",
    "content": "Notice how the number of desired replicas is 3 according to `. spec. replicas` field.",
    "originalSentence": "Notice how the number of desired replicas is 3 according to `. spec. replicas` field.",
    "position": 457,
    "id": "window_457"
  },
  {
    "type": "window",
    "content": "replicas` field. 3. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
    "originalSentence": "replicas` field. 3. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
    "position": 458,
    "id": "window_458"
  },
  {
    "type": "window",
    "content": "3. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "originalSentence": "3. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 459,
    "id": "window_459"
  },
  {
    "type": "window",
    "content": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4.",
    "originalSentence": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4.",
    "position": 460,
    "id": "window_460"
  },
  {
    "type": "window",
    "content": "The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4. Run the `kubectl get deployments` again a few seconds later.",
    "originalSentence": "The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4. Run the `kubectl get deployments` again a few seconds later.",
    "position": 461,
    "id": "window_461"
  },
  {
    "type": "window",
    "content": "deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4. Run the `kubectl get deployments` again a few seconds later. The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.",
    "originalSentence": "deployment \"nginx-deployment\" successfully rolled out\n   ```\n\n4. Run the `kubectl get deployments` again a few seconds later. The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.",
    "position": 462,
    "id": "window_462"
  },
  {
    "type": "window",
    "content": "Run the `kubectl get deployments` again a few seconds later. The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available. 5.",
    "originalSentence": "Run the `kubectl get deployments` again a few seconds later. The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available. 5.",
    "position": 463,
    "id": "window_463"
  },
  {
    "type": "window",
    "content": "The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available. 5. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
    "originalSentence": "The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available. 5. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
    "position": 464,
    "id": "window_464"
  },
  {
    "type": "window",
    "content": "5. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace.",
    "originalSentence": "5. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace.",
    "position": 465,
    "id": "window_465"
  },
  {
    "type": "window",
    "content": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
    "originalSentence": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
    "position": 466,
    "id": "window_466"
  },
  {
    "type": "window",
    "content": "The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_.",
    "originalSentence": "The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:\n\n   * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_.",
    "position": 467,
    "id": "window_467"
  },
  {
    "type": "window",
    "content": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_. * `CURRENT` displays how many replicas are currently running.",
    "originalSentence": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_. * `CURRENT` displays how many replicas are currently running.",
    "position": 468,
    "id": "window_468"
  },
  {
    "type": "window",
    "content": "This is the _desired state_. * `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users.",
    "originalSentence": "This is the _desired state_. * `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users.",
    "position": 469,
    "id": "window_469"
  },
  {
    "type": "window",
    "content": "* `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
    "originalSentence": "* `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
    "position": 470,
    "id": "window_470"
  },
  {
    "type": "window",
    "content": "* `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`.",
    "originalSentence": "* `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`.",
    "position": 471,
    "id": "window_471"
  },
  {
    "type": "window",
    "content": "* `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\n   which are created.",
    "originalSentence": "* `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\n   which are created.",
    "position": 472,
    "id": "window_472"
  },
  {
    "type": "window",
    "content": "Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\n   which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
    "originalSentence": "Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\n   which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
    "position": 473,
    "id": "window_473"
  },
  {
    "type": "window",
    "content": "This name will become the basis for the Pods\n   which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. 6.",
    "originalSentence": "This name will become the basis for the Pods\n   which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. 6.",
    "position": 474,
    "id": "window_474"
  },
  {
    "type": "window",
    "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. 6. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
    "originalSentence": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. 6. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
    "position": 475,
    "id": "window_475"
  },
  {
    "type": "window",
    "content": "6. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods.",
    "originalSentence": "6. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods.",
    "position": 476,
    "id": "window_476"
  },
  {
    "type": "window",
    "content": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`).",
    "originalSentence": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`).",
    "position": 477,
    "id": "window_477"
  },
  {
    "type": "window",
    "content": "The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
    "originalSentence": "The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
    "position": 478,
    "id": "window_478"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
    "originalSentence": "{{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
    "position": 479,
    "id": "window_479"
  },
  {
    "type": "window",
    "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label.",
    "originalSentence": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label.",
    "position": 480,
    "id": "window_480"
  },
  {
    "type": "window",
    "content": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label. {{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
    "originalSentence": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label. {{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
    "position": 481,
    "id": "window_481"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label. {{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap.",
    "originalSentence": "{{< /note >}}\n\n### Pod-template-hash label\n\n{{< caution >}}\nDo not change this label. {{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap.",
    "position": 482,
    "id": "window_482"
  },
  {
    "type": "window",
    "content": "{{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
    "originalSentence": "{{< /caution >}}\n\nThe `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
    "position": 483,
    "id": "window_483"
  },
  {
    "type": "window",
    "content": "This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have. ## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
    "originalSentence": "This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have. ## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
    "position": 484,
    "id": "window_484"
  },
  {
    "type": "window",
    "content": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have. ## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `. spec.",
    "originalSentence": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have. ## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `. spec.",
    "position": 485,
    "id": "window_485"
  },
  {
    "type": "window",
    "content": "## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `. spec. template`)\nis changed, for example if the labels or container images of the template are updated.",
    "originalSentence": "## Updating a Deployment\n\n{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `. spec. template`)\nis changed, for example if the labels or container images of the template are updated.",
    "position": 486,
    "id": "window_486"
  },
  {
    "type": "window",
    "content": "spec. template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.",
    "originalSentence": "spec. template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.",
    "position": 487,
    "id": "window_487"
  },
  {
    "type": "window",
    "content": "template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1.",
    "originalSentence": "template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1.",
    "position": 488,
    "id": "window_488"
  },
  {
    "type": "window",
    "content": "Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1. Let's update the nginx Pods to use the `nginx:1.16.",
    "originalSentence": "Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1. Let's update the nginx Pods to use the `nginx:1.16.",
    "position": 489,
    "id": "window_489"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1. Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14.",
    "originalSentence": "{{< /note >}}\n\nFollow the steps given below to update your Deployment:\n\n1. Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14.",
    "position": 490,
    "id": "window_490"
  },
  {
    "type": "window",
    "content": "Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14. 2` image.",
    "originalSentence": "Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14. 2` image.",
    "position": 491,
    "id": "window_491"
  },
  {
    "type": "window",
    "content": "1` image instead of the `nginx:1.14. 2` image. ```shell\n   kubectl set image deployment.",
    "originalSentence": "1` image instead of the `nginx:1.14. 2` image. ```shell\n   kubectl set image deployment.",
    "position": 492,
    "id": "window_492"
  },
  {
    "type": "window",
    "content": "2` image. ```shell\n   kubectl set image deployment. v1.",
    "originalSentence": "2` image. ```shell\n   kubectl set image deployment. v1.",
    "position": 493,
    "id": "window_493"
  },
  {
    "type": "window",
    "content": "```shell\n   kubectl set image deployment. v1. apps/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "```shell\n   kubectl set image deployment. v1. apps/nginx-deployment nginx=nginx:1.16.",
    "position": 494,
    "id": "window_494"
  },
  {
    "type": "window",
    "content": "v1. apps/nginx-deployment nginx=nginx:1.16. 1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "v1. apps/nginx-deployment nginx=nginx:1.16. 1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 495,
    "id": "window_495"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment nginx=nginx:1.16. 1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16.",
    "originalSentence": "apps/nginx-deployment nginx=nginx:1.16. 1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16.",
    "position": 496,
    "id": "window_496"
  },
  {
    "type": "window",
    "content": "1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16. 1` indicates the new image and its tag.",
    "originalSentence": "1\n   ```\n\n   or use the following command:\n\n   ```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16. 1` indicates the new image and its tag.",
    "position": 497,
    "id": "window_497"
  },
  {
    "type": "window",
    "content": "1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16. 1` indicates the new image and its tag. The output is similar to:\n\n   ```\n   deployment.",
    "originalSentence": "1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16. 1` indicates the new image and its tag. The output is similar to:\n\n   ```\n   deployment.",
    "position": 498,
    "id": "window_498"
  },
  {
    "type": "window",
    "content": "1` indicates the new image and its tag. The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `.",
    "originalSentence": "1` indicates the new image and its tag. The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `.",
    "position": 499,
    "id": "window_499"
  },
  {
    "type": "window",
    "content": "The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `. spec.",
    "originalSentence": "The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `. spec.",
    "position": 500,
    "id": "window_500"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `. spec. template.",
    "originalSentence": "apps/nginx-deployment image updated\n   ```\n\n   Alternatively, you can `edit` the Deployment and change `. spec. template.",
    "position": 501,
    "id": "window_501"
  },
  {
    "type": "window",
    "content": "containers[0]. image` from `nginx:1.14. 2` to `nginx:1.16.",
    "originalSentence": "containers[0]. image` from `nginx:1.14. 2` to `nginx:1.16.",
    "position": 502,
    "id": "window_502"
  },
  {
    "type": "window",
    "content": "image` from `nginx:1.14. 2` to `nginx:1.16. 1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment.",
    "originalSentence": "image` from `nginx:1.14. 2` to `nginx:1.16. 1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment.",
    "position": 503,
    "id": "window_503"
  },
  {
    "type": "window",
    "content": "2` to `nginx:1.16. 1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment edited\n   ```\n\n2.",
    "originalSentence": "2` to `nginx:1.16. 1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment edited\n   ```\n\n2.",
    "position": 504,
    "id": "window_504"
  },
  {
    "type": "window",
    "content": "1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment edited\n   ```\n\n2. To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "originalSentence": "1`:\n\n   ```shell\n   kubectl edit deployment/nginx-deployment\n   ```\n\n   The output is similar to:\n\n   ```\n   deployment. apps/nginx-deployment edited\n   ```\n\n2. To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 505,
    "id": "window_505"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment edited\n   ```\n\n2. To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
    "originalSentence": "apps/nginx-deployment edited\n   ```\n\n2. To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
    "position": 506,
    "id": "window_506"
  },
  {
    "type": "window",
    "content": "To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
    "originalSentence": "To see the rollout status, run:\n\n   ```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
    "position": 507,
    "id": "window_507"
  },
  {
    "type": "window",
    "content": "```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
    "originalSentence": "```\n\n   or\n\n   ```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```\n\nGet more details on your updated Deployment:\n\n* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
    "position": 508,
    "id": "window_508"
  },
  {
    "type": "window",
    "content": "The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again. Deployment ensures that only a certain number of Pods are down while they are being updated.",
    "originalSentence": "The output is similar to this:\n\n  ```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```\n\n* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again. Deployment ensures that only a certain number of Pods are down while they are being updated.",
    "position": 509,
    "id": "window_509"
  },
  {
    "type": "window",
    "content": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again. Deployment ensures that only a certain number of Pods are down while they are being updated. By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
    "originalSentence": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```\n\n* Running `get pods` should now show only the new Pods:\n\n  ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```\n\n  Next time you want to update these Pods, you only need to update the Deployment's Pod template again. Deployment ensures that only a certain number of Pods are down while they are being updated. By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
    "position": 510,
    "id": "window_510"
  },
  {
    "type": "window",
    "content": "Deployment ensures that only a certain number of Pods are down while they are being updated. By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
    "originalSentence": "Deployment ensures that only a certain number of Pods are down while they are being updated. By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
    "position": 511,
    "id": "window_511"
  },
  {
    "type": "window",
    "content": "By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
    "originalSentence": "By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
    "position": 512,
    "id": "window_512"
  },
  {
    "type": "window",
    "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one.",
    "originalSentence": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one.",
    "position": 513,
    "id": "window_513"
  },
  {
    "type": "window",
    "content": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
    "originalSentence": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
    "position": 514,
    "id": "window_514"
  },
  {
    "type": "window",
    "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
    "originalSentence": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
    "position": 515,
    "id": "window_515"
  },
  {
    "type": "window",
    "content": "It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
    "originalSentence": "It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
    "position": 516,
    "id": "window_516"
  },
  {
    "type": "window",
    "content": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5. * Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.",
    "originalSentence": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5. * Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.",
    "position": 517,
    "id": "window_517"
  },
  {
    "type": "window",
    "content": "In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5. * Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment. kubernetes.",
    "originalSentence": "In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5. * Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment. kubernetes.",
    "position": 518,
    "id": "window_518"
  },
  {
    "type": "window",
    "content": "* Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment. kubernetes. io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.",
    "originalSentence": "* Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment. kubernetes. io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.",
    "position": 519,
    "id": "window_519"
  },
  {
    "type": "window",
    "content": "kubernetes. io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16. 1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly.",
    "originalSentence": "kubernetes. io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16. 1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly.",
    "position": 520,
    "id": "window_520"
  },
  {
    "type": "window",
    "content": "io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16. 1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
    "originalSentence": "io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16. 1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
    "position": 521,
    "id": "window_521"
  },
  {
    "type": "window",
    "content": "1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
    "originalSentence": "1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
    "position": 522,
    "id": "window_522"
  },
  {
    "type": "window",
    "content": "When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
    "originalSentence": "When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
    "position": 523,
    "id": "window_523"
  },
  {
    "type": "window",
    "content": "Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
    "originalSentence": "Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
    "position": 524,
    "id": "window_524"
  },
  {
    "type": "window",
    "content": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`.",
    "originalSentence": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`.",
    "position": 525,
    "id": "window_525"
  },
  {
    "type": "window",
    "content": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.",
    "originalSentence": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.",
    "position": 526,
    "id": "window_526"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods.",
    "originalSentence": "{{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods.",
    "position": 527,
    "id": "window_527"
  },
  {
    "type": "window",
    "content": "As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.",
    "originalSentence": "As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.",
    "position": 528,
    "id": "window_528"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `. spec.",
    "originalSentence": "{{< /note >}}\n\n### Rollover (aka multiple updates in-flight)\n\nEach time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `. spec.",
    "position": 529,
    "id": "window_529"
  },
  {
    "type": "window",
    "content": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `. spec. selector` but whose template does not match `.",
    "originalSentence": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `. spec. selector` but whose template does not match `.",
    "position": 530,
    "id": "window_530"
  },
  {
    "type": "window",
    "content": "spec. selector` but whose template does not match `. spec.",
    "originalSentence": "spec. selector` but whose template does not match `. spec.",
    "position": 531,
    "id": "window_531"
  },
  {
    "type": "window",
    "content": "selector` but whose template does not match `. spec. template` are scaled down.",
    "originalSentence": "selector` but whose template does not match `. spec. template` are scaled down.",
    "position": 532,
    "id": "window_532"
  },
  {
    "type": "window",
    "content": "spec. template` are scaled down. Eventually, the new\nReplicaSet is scaled to `.",
    "originalSentence": "spec. template` are scaled down. Eventually, the new\nReplicaSet is scaled to `.",
    "position": 533,
    "id": "window_533"
  },
  {
    "type": "window",
    "content": "template` are scaled down. Eventually, the new\nReplicaSet is scaled to `. spec.",
    "originalSentence": "template` are scaled down. Eventually, the new\nReplicaSet is scaled to `. spec.",
    "position": 534,
    "id": "window_534"
  },
  {
    "type": "window",
    "content": "Eventually, the new\nReplicaSet is scaled to `. spec. replicas` and all old ReplicaSets is scaled to 0.",
    "originalSentence": "Eventually, the new\nReplicaSet is scaled to `. spec. replicas` and all old ReplicaSets is scaled to 0.",
    "position": 535,
    "id": "window_535"
  },
  {
    "type": "window",
    "content": "spec. replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down.",
    "originalSentence": "spec. replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down.",
    "position": 536,
    "id": "window_536"
  },
  {
    "type": "window",
    "content": "replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
    "originalSentence": "replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
    "position": 537,
    "id": "window_537"
  },
  {
    "type": "window",
    "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.",
    "originalSentence": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.",
    "position": 538,
    "id": "window_538"
  },
  {
    "type": "window",
    "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3\nreplicas of `nginx:1.14.",
    "originalSentence": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3\nreplicas of `nginx:1.14.",
    "position": 539,
    "id": "window_539"
  },
  {
    "type": "window",
    "content": "2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3\nreplicas of `nginx:1.14. 2` had been created.",
    "originalSentence": "2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3\nreplicas of `nginx:1.14. 2` had been created.",
    "position": 540,
    "id": "window_540"
  },
  {
    "type": "window",
    "content": "1`, when only 3\nreplicas of `nginx:1.14. 2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.",
    "originalSentence": "1`, when only 3\nreplicas of `nginx:1.14. 2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.",
    "position": 541,
    "id": "window_541"
  },
  {
    "type": "window",
    "content": "2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14. 2` Pods that it had created, and starts creating\n`nginx:1.16.",
    "originalSentence": "2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14. 2` Pods that it had created, and starts creating\n`nginx:1.16.",
    "position": 542,
    "id": "window_542"
  },
  {
    "type": "window",
    "content": "In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14. 2` Pods that it had created, and starts creating\n`nginx:1.16. 1` Pods.",
    "originalSentence": "In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14. 2` Pods that it had created, and starts creating\n`nginx:1.16. 1` Pods.",
    "position": 543,
    "id": "window_543"
  },
  {
    "type": "window",
    "content": "2` Pods that it had created, and starts creating\n`nginx:1.16. 1` Pods. It does not wait for the 5 replicas of `nginx:1.14.",
    "originalSentence": "2` Pods that it had created, and starts creating\n`nginx:1.16. 1` Pods. It does not wait for the 5 replicas of `nginx:1.14.",
    "position": 544,
    "id": "window_544"
  },
  {
    "type": "window",
    "content": "1` Pods. It does not wait for the 5 replicas of `nginx:1.14. 2` to be created\nbefore changing course.",
    "originalSentence": "1` Pods. It does not wait for the 5 replicas of `nginx:1.14. 2` to be created\nbefore changing course.",
    "position": 545,
    "id": "window_545"
  },
  {
    "type": "window",
    "content": "It does not wait for the 5 replicas of `nginx:1.14. 2` to be created\nbefore changing course. ### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
    "originalSentence": "It does not wait for the 5 replicas of `nginx:1.14. 2` to be created\nbefore changing course. ### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
    "position": 546,
    "id": "window_546"
  },
  {
    "type": "window",
    "content": "2` to be created\nbefore changing course. ### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications.",
    "originalSentence": "2` to be created\nbefore changing course. ### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications.",
    "position": 547,
    "id": "window_547"
  },
  {
    "type": "window",
    "content": "### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications. {{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
    "originalSentence": "### Label selector updates\n\nIt is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications. {{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
    "position": 548,
    "id": "window_548"
  },
  {
    "type": "window",
    "content": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications. {{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned.",
    "originalSentence": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications. {{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned.",
    "position": 549,
    "id": "window_549"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet.",
    "originalSentence": "{{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet.",
    "position": 550,
    "id": "window_550"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet. * Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
    "originalSentence": "{{< /note >}}\n\n* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet. * Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
    "position": 551,
    "id": "window_551"
  },
  {
    "type": "window",
    "content": "This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet. * Selector updates changes the existing value in a selector key -- result in the same behavior as additions. * Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels.",
    "originalSentence": "This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet. * Selector updates changes the existing value in a selector key -- result in the same behavior as additions. * Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels.",
    "position": 552,
    "id": "window_552"
  },
  {
    "type": "window",
    "content": "* Selector updates changes the existing value in a selector key -- result in the same behavior as additions. * Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
    "originalSentence": "* Selector updates changes the existing value in a selector key -- result in the same behavior as additions. * Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
    "position": 553,
    "id": "window_553"
  },
  {
    "type": "window",
    "content": "* Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets. ## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
    "originalSentence": "* Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets. ## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
    "position": 554,
    "id": "window_554"
  },
  {
    "type": "window",
    "content": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets. ## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit).",
    "originalSentence": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets. ## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit).",
    "position": 555,
    "id": "window_555"
  },
  {
    "type": "window",
    "content": "## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit). {{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered.",
    "originalSentence": "## Rolling Back a Deployment\n\nSometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit). {{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered.",
    "position": 556,
    "id": "window_556"
  },
  {
    "type": "window",
    "content": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit). {{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`.",
    "originalSentence": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit). {{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`.",
    "position": 557,
    "id": "window_557"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`. spec.",
    "originalSentence": "{{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`. spec.",
    "position": 558,
    "id": "window_558"
  },
  {
    "type": "window",
    "content": "This means that the\nnew revision is created if and only if the Deployment's Pod template (`. spec. template`) is changed,\nfor example if you update the labels or container images of the template.",
    "originalSentence": "This means that the\nnew revision is created if and only if the Deployment's Pod template (`. spec. template`) is changed,\nfor example if you update the labels or container images of the template.",
    "position": 559,
    "id": "window_559"
  },
  {
    "type": "window",
    "content": "spec. template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
    "originalSentence": "spec. template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
    "position": 560,
    "id": "window_560"
  },
  {
    "type": "window",
    "content": "template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.",
    "originalSentence": "template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.",
    "position": 561,
    "id": "window_561"
  },
  {
    "type": "window",
    "content": "Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back. {{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
    "originalSentence": "Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back. {{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
    "position": 562,
    "id": "window_562"
  },
  {
    "type": "window",
    "content": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back. {{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back. {{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 563,
    "id": "window_563"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck.",
    "originalSentence": "{{< /note >}}\n\n* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck.",
    "position": 564,
    "id": "window_564"
  },
  {
    "type": "window",
    "content": "1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck. You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
    "originalSentence": "1`:\n\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck. You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
    "position": 565,
    "id": "window_565"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck. You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ```\n\n* Press Ctrl-C to stop the above rollout status watch.",
    "originalSentence": "apps/nginx-deployment image updated\n  ```\n\n* The rollout gets stuck. You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ```\n\n* Press Ctrl-C to stop the above rollout status watch.",
    "position": 566,
    "id": "window_566"
  },
  {
    "type": "window",
    "content": "You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ```\n\n* Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).",
    "originalSentence": "You can verify it by checking the rollout status:\n\n  ```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ```\n\n* Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).",
    "position": 567,
    "id": "window_567"
  },
  {
    "type": "window",
    "content": "```\n\n* Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status). * You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1.",
    "originalSentence": "```\n\n* Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status). * You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1.",
    "position": 568,
    "id": "window_568"
  },
  {
    "type": "window",
    "content": "For more information on stuck rollouts,\n[read more here](#deployment-status). * You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
    "originalSentence": "For more information on stuck rollouts,\n[read more here](#deployment-status). * You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
    "position": 569,
    "id": "window_569"
  },
  {
    "type": "window",
    "content": "* You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop. ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet.",
    "originalSentence": "* You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1. ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop. ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet.",
    "position": 570,
    "id": "window_570"
  },
  {
    "type": "window",
    "content": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop. ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
    "originalSentence": "```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```\n\n* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop. ```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
    "position": 571,
    "id": "window_571"
  },
  {
    "type": "window",
    "content": "```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.",
    "originalSentence": "```shell\n  kubectl get pods\n  ```\n\n  The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```\n\n  {{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.",
    "position": 572,
    "id": "window_572"
  },
  {
    "type": "window",
    "content": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%. {{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable.",
    "originalSentence": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%. {{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable.",
    "position": 573,
    "id": "window_573"
  },
  {
    "type": "window",
    "content": "Kubernetes by default sets the value to 25%. {{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable. ### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1.",
    "originalSentence": "Kubernetes by default sets the value to 25%. {{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable. ### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1.",
    "position": 574,
    "id": "window_574"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable. ### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1. First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "{{< /note >}}\n\n* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```\n\n  The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```\n\n  To fix this, you need to rollback to a previous revision of Deployment that is stable. ### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1. First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 575,
    "id": "window_575"
  },
  {
    "type": "window",
    "content": "### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1. First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
    "originalSentence": "### Checking Rollout History of a Deployment\n\nFollow the steps given below to check the rollout history:\n\n1. First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
    "position": 576,
    "id": "window_576"
  },
  {
    "type": "window",
    "content": "First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes. io/change-cause` to its revisions upon creation.",
    "originalSentence": "First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes. io/change-cause` to its revisions upon creation.",
    "position": 577,
    "id": "window_577"
  },
  {
    "type": "window",
    "content": "1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes. io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
    "originalSentence": "1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```\n\n   `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes. io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
    "position": 578,
    "id": "window_578"
  },
  {
    "type": "window",
    "content": "io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16.",
    "originalSentence": "io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16.",
    "position": 579,
    "id": "window_579"
  },
  {
    "type": "window",
    "content": "You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16. 1\"`\n   * Manually editing the manifest of the resource.",
    "originalSentence": "You can specify the`CHANGE-CAUSE` message by:\n\n   * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16. 1\"`\n   * Manually editing the manifest of the resource.",
    "position": 580,
    "id": "window_580"
  },
  {
    "type": "window",
    "content": "io/change-cause=\"image updated to 1.16. 1\"`\n   * Manually editing the manifest of the resource. 2.",
    "originalSentence": "io/change-cause=\"image updated to 1.16. 1\"`\n   * Manually editing the manifest of the resource. 2.",
    "position": 581,
    "id": "window_581"
  },
  {
    "type": "window",
    "content": "1\"`\n   * Manually editing the manifest of the resource. 2. To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.",
    "originalSentence": "1\"`\n   * Manually editing the manifest of the resource. 2. To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.",
    "position": 582,
    "id": "window_582"
  },
  {
    "type": "window",
    "content": "2. To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "2. To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 583,
    "id": "window_583"
  },
  {
    "type": "window",
    "content": "To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.",
    "originalSentence": "To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.",
    "position": 584,
    "id": "window_584"
  },
  {
    "type": "window",
    "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n     Containers:\n      nginx:\n       Image:      nginx:1.16. 1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.",
    "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n     Containers:\n      nginx:\n       Image:      nginx:1.16. 1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.",
    "position": 585,
    "id": "window_585"
  },
  {
    "type": "window",
    "content": "1\n     Containers:\n      nginx:\n       Image:      nginx:1.16. 1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes. ```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
    "originalSentence": "1\n     Containers:\n      nginx:\n       Image:      nginx:1.16. 1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes. ```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
    "position": 586,
    "id": "window_586"
  },
  {
    "type": "window",
    "content": "1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes. ```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. 1.",
    "originalSentence": "1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes. ```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. 1.",
    "position": 587,
    "id": "window_587"
  },
  {
    "type": "window",
    "content": "```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. 1. Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "originalSentence": "```\n\n### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. 1. Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "position": 588,
    "id": "window_588"
  },
  {
    "type": "window",
    "content": "1. Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "originalSentence": "1. Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment.",
    "position": 589,
    "id": "window_589"
  },
  {
    "type": "window",
    "content": "Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
    "originalSentence": "Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
    "position": 590,
    "id": "window_590"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout). The Deployment is now rolled back to a previous stable revision.",
    "originalSentence": "apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```\n\n   The output is similar to this:\n   ```\n   deployment. apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout). The Deployment is now rolled back to a previous stable revision.",
    "position": 591,
    "id": "window_591"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout). The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller.",
    "originalSentence": "apps/nginx-deployment rolled back\n   ```\n\n   For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout). The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller.",
    "position": 592,
    "id": "window_592"
  },
  {
    "type": "window",
    "content": "The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller. 2.",
    "originalSentence": "The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller. 2.",
    "position": 593,
    "id": "window_593"
  },
  {
    "type": "window",
    "content": "As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller. 2. Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3.",
    "originalSentence": "As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller. 2. Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3.",
    "position": 594,
    "id": "window_594"
  },
  {
    "type": "window",
    "content": "2. Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3. Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.",
    "originalSentence": "2. Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3. Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.",
    "position": 595,
    "id": "window_595"
  },
  {
    "type": "window",
    "content": "Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3. Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment. kubernetes.",
    "originalSentence": "Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```\n\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3. Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment. kubernetes.",
    "position": 596,
    "id": "window_596"
  },
  {
    "type": "window",
    "content": "Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment. kubernetes. io/revision=4\n                           kubernetes.",
    "originalSentence": "Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment. kubernetes. io/revision=4\n                           kubernetes.",
    "position": 597,
    "id": "window_597"
  },
  {
    "type": "window",
    "content": "kubernetes. io/revision=4\n                           kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "kubernetes. io/revision=4\n                           kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 598,
    "id": "window_598"
  },
  {
    "type": "window",
    "content": "io/revision=4\n                           kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.",
    "originalSentence": "io/revision=4\n                           kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.",
    "position": 599,
    "id": "window_599"
  },
  {
    "type": "window",
    "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16. 1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment.",
    "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16. 1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment.",
    "position": 600,
    "id": "window_600"
  },
  {
    "type": "window",
    "content": "1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16. 1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods.",
    "originalSentence": "1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16. 1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods.",
    "position": 601,
    "id": "window_601"
  },
  {
    "type": "window",
    "content": "1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods. ```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment.",
    "originalSentence": "1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```\n\n## Scaling a Deployment\n\nYou can scale a Deployment by using the following command:\n\n```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods. ```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment.",
    "position": 602,
    "id": "window_602"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods. ```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time.",
    "originalSentence": "apps/nginx-deployment scaled\n```\n\nAssuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods. ```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time.",
    "position": 603,
    "id": "window_603"
  },
  {
    "type": "window",
    "content": "```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk.",
    "originalSentence": "```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk.",
    "position": 604,
    "id": "window_604"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*.",
    "originalSentence": "apps/nginx-deployment scaled\n```\n\n### Proportional scaling\n\nRollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*.",
    "position": 605,
    "id": "window_605"
  },
  {
    "type": "window",
    "content": "When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
    "originalSentence": "When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
    "position": 606,
    "id": "window_606"
  },
  {
    "type": "window",
    "content": "This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. * Ensure that the 10 replicas in your Deployment are running.",
    "originalSentence": "This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. * Ensure that the 10 replicas in your Deployment are running.",
    "position": 607,
    "id": "window_607"
  },
  {
    "type": "window",
    "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. * Ensure that the 10 replicas in your Deployment are running. ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster.",
    "originalSentence": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. * Ensure that the 10 replicas in your Deployment are running. ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster.",
    "position": 608,
    "id": "window_608"
  },
  {
    "type": "window",
    "content": "* Ensure that the 10 replicas in your Deployment are running. ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster. ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "* Ensure that the 10 replicas in your Deployment are running. ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster. ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 609,
    "id": "window_609"
  },
  {
    "type": "window",
    "content": "```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster. ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above.",
    "originalSentence": "```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n\n  ```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```\n\n* You update to a new image which happens to be unresolvable from inside the cluster. ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above.",
    "position": 610,
    "id": "window_610"
  },
  {
    "type": "window",
    "content": "```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along.",
    "originalSentence": "```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along.",
    "position": 611,
    "id": "window_611"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15.",
    "originalSentence": "apps/nginx-deployment image updated\n  ```\n\n* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15.",
    "position": 612,
    "id": "window_612"
  },
  {
    "type": "window",
    "content": "Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas.",
    "originalSentence": "Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```\n\n* Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas.",
    "position": 613,
    "id": "window_613"
  },
  {
    "type": "window",
    "content": "The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet.",
    "originalSentence": "The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet.",
    "position": 614,
    "id": "window_614"
  },
  {
    "type": "window",
    "content": "The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets.",
    "originalSentence": "The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets.",
    "position": 615,
    "id": "window_615"
  },
  {
    "type": "window",
    "content": "If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas.",
    "originalSentence": "If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas.",
    "position": 616,
    "id": "window_616"
  },
  {
    "type": "window",
    "content": "With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas.",
    "originalSentence": "With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas.",
    "position": 617,
    "id": "window_617"
  },
  {
    "type": "window",
    "content": "Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.",
    "originalSentence": "Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.",
    "position": 618,
    "id": "window_618"
  },
  {
    "type": "window",
    "content": "Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet.",
    "originalSentence": "Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet.",
    "position": 619,
    "id": "window_619"
  },
  {
    "type": "window",
    "content": "ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy.",
    "originalSentence": "ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy.",
    "position": 620,
    "id": "window_620"
  },
  {
    "type": "window",
    "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet.",
    "originalSentence": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet.",
    "position": 621,
    "id": "window_621"
  },
  {
    "type": "window",
    "content": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet. ```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates.",
    "originalSentence": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet. ```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates.",
    "position": 622,
    "id": "window_622"
  },
  {
    "type": "window",
    "content": "To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet. ```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment.",
    "originalSentence": "To confirm this, run:\n\n```shell\nkubectl get deploy\n```\n\nThe output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet. ```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment.",
    "position": 623,
    "id": "window_623"
  },
  {
    "type": "window",
    "content": "```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
    "originalSentence": "```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```\n\n## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}\n\nWhen you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
    "position": 624,
    "id": "window_624"
  },
  {
    "type": "window",
    "content": "When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. * For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. * For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 625,
    "id": "window_625"
  },
  {
    "type": "window",
    "content": "This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. * For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "originalSentence": "This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. * For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
    "position": 626,
    "id": "window_626"
  },
  {
    "type": "window",
    "content": "* For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "* For example, with a Deployment that was created:\n\n  Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```\n\n* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 627,
    "id": "window_627"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "apps/nginx-deployment paused\n  ```\n\n* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 628,
    "id": "window_628"
  },
  {
    "type": "window",
    "content": "1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused.",
    "originalSentence": "1\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused.",
    "position": 629,
    "id": "window_629"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused. * Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "originalSentence": "apps/nginx-deployment image updated\n  ```\n\n* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```\n\n* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused. * Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment.",
    "position": 630,
    "id": "window_630"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused. * Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
    "originalSentence": "apps/nginx-deployment resource requirements updated\n  ```\n\n  The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused. * Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
    "position": 631,
    "id": "window_631"
  },
  {
    "type": "window",
    "content": "* Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done. ```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it.",
    "originalSentence": "* Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```\n\n  The output is similar to this:\n  ```\n  deployment. apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done. ```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it.",
    "position": 632,
    "id": "window_632"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done. ```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it. {{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle.",
    "originalSentence": "apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done. ```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it. {{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle.",
    "position": 633,
    "id": "window_633"
  },
  {
    "type": "window",
    "content": "```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it. {{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
    "originalSentence": "```shell\n  kubectl get rs --watch\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```\n\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it. {{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
    "position": 634,
    "id": "window_634"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment). ### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet.",
    "originalSentence": "{{< /note >}}\n\n## Deployment status\n\nA Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment). ### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet.",
    "position": 635,
    "id": "window_635"
  },
  {
    "type": "window",
    "content": "It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment). ### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet. * The Deployment is scaling up its newest ReplicaSet.",
    "originalSentence": "It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment). ### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet. * The Deployment is scaling up its newest ReplicaSet.",
    "position": 636,
    "id": "window_636"
  },
  {
    "type": "window",
    "content": "### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet. * The Deployment is scaling up its newest ReplicaSet. * The Deployment is scaling down its older ReplicaSet(s).",
    "originalSentence": "### Progressing Deployment\n\nKubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:\n\n* The Deployment creates a new ReplicaSet. * The Deployment is scaling up its newest ReplicaSet. * The Deployment is scaling down its older ReplicaSet(s).",
    "position": 637,
    "id": "window_637"
  },
  {
    "type": "window",
    "content": "* The Deployment is scaling up its newest ReplicaSet. * The Deployment is scaling down its older ReplicaSet(s). * New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
    "originalSentence": "* The Deployment is scaling up its newest ReplicaSet. * The Deployment is scaling down its older ReplicaSet(s). * New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
    "position": 638,
    "id": "window_638"
  },
  {
    "type": "window",
    "content": "* The Deployment is scaling down its older ReplicaSet(s). * New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.",
    "originalSentence": "* The Deployment is scaling down its older ReplicaSet(s). * New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.",
    "position": 639,
    "id": "window_639"
  },
  {
    "type": "window",
    "content": "* New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `. status.",
    "originalSentence": "* New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `. status.",
    "position": 640,
    "id": "window_640"
  },
  {
    "type": "window",
    "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `. status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`.",
    "originalSentence": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `. status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`.",
    "position": 641,
    "id": "window_641"
  },
  {
    "type": "window",
    "content": "status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`. ### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed.",
    "originalSentence": "status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`. ### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed.",
    "position": 642,
    "id": "window_642"
  },
  {
    "type": "window",
    "content": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`. ### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed. * All of the replicas associated with the Deployment are available.",
    "originalSentence": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`\n\nYou can monitor the progress for a Deployment by using `kubectl rollout status`. ### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed. * All of the replicas associated with the Deployment are available.",
    "position": 643,
    "id": "window_643"
  },
  {
    "type": "window",
    "content": "### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed. * All of the replicas associated with the Deployment are available. * No old replicas for the Deployment are running.",
    "originalSentence": "### Complete Deployment\n\nKubernetes marks a Deployment as _complete_ when it has the following characteristics:\n\n* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed. * All of the replicas associated with the Deployment are available. * No old replicas for the Deployment are running.",
    "position": 644,
    "id": "window_644"
  },
  {
    "type": "window",
    "content": "* All of the replicas associated with the Deployment are available. * No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.",
    "originalSentence": "* All of the replicas associated with the Deployment are available. * No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.",
    "position": 645,
    "id": "window_645"
  },
  {
    "type": "window",
    "content": "* No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `. status.",
    "originalSentence": "* No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `. status.",
    "position": 646,
    "id": "window_646"
  },
  {
    "type": "window",
    "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `. status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated.",
    "originalSentence": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `. status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated.",
    "position": 647,
    "id": "window_647"
  },
  {
    "type": "window",
    "content": "status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition).",
    "originalSentence": "status. conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition).",
    "position": 648,
    "id": "window_648"
  },
  {
    "type": "window",
    "content": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`.",
    "originalSentence": "conditions`:\n\n* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`\n\nThis `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`.",
    "position": 649,
    "id": "window_649"
  },
  {
    "type": "window",
    "content": "The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code.",
    "originalSentence": "The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code.",
    "position": 650,
    "id": "window_650"
  },
  {
    "type": "window",
    "content": "You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available...",
    "originalSentence": "You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available...",
    "position": 651,
    "id": "window_651"
  },
  {
    "type": "window",
    "content": "If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $?",
    "originalSentence": "If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $?",
    "position": 652,
    "id": "window_652"
  },
  {
    "type": "window",
    "content": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $? ```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
    "originalSentence": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $? ```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
    "position": 653,
    "id": "window_653"
  },
  {
    "type": "window",
    "content": "deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $? ```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.",
    "originalSentence": "deployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $? ```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.",
    "position": 654,
    "id": "window_654"
  },
  {
    "type": "window",
    "content": "```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`. spec.",
    "originalSentence": "```\n```\n0\n```\n\n### Failed Deployment\n\nYour Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`. spec.",
    "position": 655,
    "id": "window_655"
  },
  {
    "type": "window",
    "content": "This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`. spec. progressDeadlineSeconds`](#progress-deadline-seconds)).",
    "originalSentence": "This can occur\ndue to some of the following factors:\n\n* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration\n\nOne way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`. spec. progressDeadlineSeconds`](#progress-deadline-seconds)).",
    "position": 656,
    "id": "window_656"
  },
  {
    "type": "window",
    "content": "spec. progressDeadlineSeconds`](#progress-deadline-seconds)). `.",
    "originalSentence": "spec. progressDeadlineSeconds`](#progress-deadline-seconds)). `.",
    "position": 657,
    "id": "window_657"
  },
  {
    "type": "window",
    "content": "progressDeadlineSeconds`](#progress-deadline-seconds)). `. spec.",
    "originalSentence": "progressDeadlineSeconds`](#progress-deadline-seconds)). `. spec.",
    "position": 658,
    "id": "window_658"
  },
  {
    "type": "window",
    "content": "`. spec. progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled.",
    "originalSentence": "`. spec. progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled.",
    "position": 659,
    "id": "window_659"
  },
  {
    "type": "window",
    "content": "spec. progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment.",
    "originalSentence": "spec. progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment.",
    "position": 660,
    "id": "window_660"
  },
  {
    "type": "window",
    "content": "progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.",
    "originalSentence": "progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.",
    "position": 661,
    "id": "window_661"
  },
  {
    "type": "window",
    "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `. status.",
    "originalSentence": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:\n\n```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment. apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `. status.",
    "position": 662,
    "id": "window_662"
  },
  {
    "type": "window",
    "content": "apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `. status. conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
    "originalSentence": "apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `. status. conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
    "position": 663,
    "id": "window_663"
  },
  {
    "type": "window",
    "content": "status. conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
    "originalSentence": "status. conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
    "position": 664,
    "id": "window_664"
  },
  {
    "type": "window",
    "content": "conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
    "originalSentence": "conditions`:\n\n* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`\n\nThis condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
    "position": 665,
    "id": "window_665"
  },
  {
    "type": "window",
    "content": "Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`.",
    "originalSentence": "Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`.",
    "position": 666,
    "id": "window_666"
  },
  {
    "type": "window",
    "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.",
    "originalSentence": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.",
    "position": 667,
    "id": "window_667"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version. {{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
    "originalSentence": "{{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version. {{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
    "position": 668,
    "id": "window_668"
  },
  {
    "type": "window",
    "content": "Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version. {{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.",
    "originalSentence": "Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version. {{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.",
    "position": 669,
    "id": "window_669"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline. {{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient.",
    "originalSentence": "{{< /note >}}\n\n{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline. {{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient.",
    "position": 670,
    "id": "window_670"
  },
  {
    "type": "window",
    "content": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline. {{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota.",
    "originalSentence": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline. {{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota.",
    "position": 671,
    "id": "window_671"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<...",
    "originalSentence": "{{< /note >}}\n\nYou may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<...",
    "position": 672,
    "id": "window_672"
  },
  {
    "type": "window",
    "content": "For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<... >\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...",
    "originalSentence": "For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<... >\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...",
    "position": 673,
    "id": "window_673"
  },
  {
    "type": "window",
    "content": "If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<... >\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<... >\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.",
    "originalSentence": "If you describe the Deployment you will notice the following section:\n\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<... >\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<... >\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.",
    "position": 674,
    "id": "window_674"
  },
  {
    "type": "window",
    "content": ">\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<... >\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing. reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.",
    "originalSentence": ">\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<... >\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing. reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.",
    "position": 675,
    "id": "window_675"
  },
  {
    "type": "window",
    "content": ">\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing. reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability. reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace.",
    "originalSentence": ">\n```\n\nIf you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:\n\n```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing. reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability. reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace.",
    "position": 676,
    "id": "window_676"
  },
  {
    "type": "window",
    "content": "reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability. reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
    "originalSentence": "reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability. reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
    "position": 677,
    "id": "window_677"
  },
  {
    "type": "window",
    "content": "reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). ```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
    "originalSentence": "reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```\n\nEventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:\n\n```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```\n\nYou can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). ```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
    "position": 678,
    "id": "window_678"
  },
  {
    "type": "window",
    "content": "If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). ```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy.",
    "originalSentence": "If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). ```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy.",
    "position": 679,
    "id": "window_679"
  },
  {
    "type": "window",
    "content": "```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete).",
    "originalSentence": "```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```\n\n`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete).",
    "position": 680,
    "id": "window_680"
  },
  {
    "type": "window",
    "content": "Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete). You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
    "originalSentence": "Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete). You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
    "position": 681,
    "id": "window_681"
  },
  {
    "type": "window",
    "content": "`type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete). You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline.",
    "originalSentence": "`type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete). You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline.",
    "position": 682,
    "id": "window_682"
  },
  {
    "type": "window",
    "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "originalSentence": "You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 683,
    "id": "window_683"
  },
  {
    "type": "window",
    "content": "`kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated... error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $?",
    "originalSentence": "`kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline. ```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated... error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $?",
    "position": 684,
    "id": "window_684"
  },
  {
    "type": "window",
    "content": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated... error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $? ```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment.",
    "originalSentence": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated... error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $? ```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment.",
    "position": 685,
    "id": "window_685"
  },
  {
    "type": "window",
    "content": "error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $? ```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
    "originalSentence": "error: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $? ```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
    "position": 686,
    "id": "window_686"
  },
  {
    "type": "window",
    "content": "```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template. ## Clean up Policy\n\nYou can set `.",
    "originalSentence": "```\n```\n1\n```\n\n### Operating on a failed deployment\n\nAll actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template. ## Clean up Policy\n\nYou can set `.",
    "position": 687,
    "id": "window_687"
  },
  {
    "type": "window",
    "content": "You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template. ## Clean up Policy\n\nYou can set `. spec.",
    "originalSentence": "You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template. ## Clean up Policy\n\nYou can set `. spec.",
    "position": 688,
    "id": "window_688"
  },
  {
    "type": "window",
    "content": "## Clean up Policy\n\nYou can set `. spec. revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain.",
    "originalSentence": "## Clean up Policy\n\nYou can set `. spec. revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain.",
    "position": 689,
    "id": "window_689"
  },
  {
    "type": "window",
    "content": "spec. revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background.",
    "originalSentence": "spec. revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background.",
    "position": 690,
    "id": "window_690"
  },
  {
    "type": "window",
    "content": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background. By default,\nit is 10.",
    "originalSentence": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background. By default,\nit is 10.",
    "position": 691,
    "id": "window_691"
  },
  {
    "type": "window",
    "content": "The rest will be garbage-collected in the background. By default,\nit is 10. {{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.",
    "originalSentence": "The rest will be garbage-collected in the background. By default,\nit is 10. {{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.",
    "position": 692,
    "id": "window_692"
  },
  {
    "type": "window",
    "content": "By default,\nit is 10. {{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back. {{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
    "originalSentence": "By default,\nit is 10. {{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back. {{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
    "position": 693,
    "id": "window_693"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back. {{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `.",
    "originalSentence": "{{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back. {{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `.",
    "position": 694,
    "id": "window_694"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `. spec.",
    "originalSentence": "{{< /note >}}\n\nThe cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `. spec.",
    "position": 695,
    "id": "window_695"
  },
  {
    "type": "window",
    "content": "If you set `. spec. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one.",
    "originalSentence": "If you set `. spec. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one.",
    "position": 696,
    "id": "window_696"
  },
  {
    "type": "window",
    "content": "spec. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure.",
    "originalSentence": "spec. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure.",
    "position": 697,
    "id": "window_697"
  },
  {
    "type": "window",
    "content": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.",
    "originalSentence": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.",
    "position": 698,
    "id": "window_698"
  },
  {
    "type": "window",
    "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`. spec.",
    "originalSentence": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`. spec.",
    "position": 699,
    "id": "window_699"
  },
  {
    "type": "window",
    "content": "For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`. spec. revisionHistoryLimit` because the Deployment never reaches a complete state.",
    "originalSentence": "For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`. spec. revisionHistoryLimit` because the Deployment never reaches a complete state.",
    "position": 700,
    "id": "window_700"
  },
  {
    "type": "window",
    "content": "spec. revisionHistoryLimit` because the Deployment never reaches a complete state. ## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
    "originalSentence": "spec. revisionHistoryLimit` because the Deployment never reaches a complete state. ## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
    "position": 701,
    "id": "window_701"
  },
  {
    "type": "window",
    "content": "revisionHistoryLimit` because the Deployment never reaches a complete state. ## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments). ## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `.",
    "originalSentence": "revisionHistoryLimit` because the Deployment never reaches a complete state. ## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments). ## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `.",
    "position": 702,
    "id": "window_702"
  },
  {
    "type": "window",
    "content": "## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments). ## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `. apiVersion`, `.",
    "originalSentence": "## Canary Deployment\n\nIf you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments). ## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `. apiVersion`, `.",
    "position": 703,
    "id": "window_703"
  },
  {
    "type": "window",
    "content": "## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `. apiVersion`, `. kind`, and `.",
    "originalSentence": "## Writing a Deployment Spec\n\nAs with all other Kubernetes configs, a Deployment needs `. apiVersion`, `. kind`, and `.",
    "position": 704,
    "id": "window_704"
  },
  {
    "type": "window",
    "content": "kind`, and `. metadata` fields. For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
    "originalSentence": "kind`, and `. metadata` fields. For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
    "position": 705,
    "id": "window_705"
  },
  {
    "type": "window",
    "content": "metadata` fields. For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `.",
    "originalSentence": "metadata` fields. For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `.",
    "position": 706,
    "id": "window_706"
  },
  {
    "type": "window",
    "content": "For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `. metadata.",
    "originalSentence": "For general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `. metadata.",
    "position": 707,
    "id": "window_707"
  },
  {
    "type": "window",
    "content": "When the control plane creates new Pods for a Deployment, the `. metadata. name` of the\nDeployment is part of the basis for naming those Pods.",
    "originalSentence": "When the control plane creates new Pods for a Deployment, the `. metadata. name` of the\nDeployment is part of the basis for naming those Pods.",
    "position": 708,
    "id": "window_708"
  },
  {
    "type": "window",
    "content": "metadata. name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames.",
    "originalSentence": "metadata. name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames.",
    "position": 709,
    "id": "window_709"
  },
  {
    "type": "window",
    "content": "name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
    "originalSentence": "name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
    "position": 710,
    "id": "window_710"
  },
  {
    "type": "window",
    "content": "The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`.",
    "originalSentence": "The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`.",
    "position": 711,
    "id": "window_711"
  },
  {
    "type": "window",
    "content": "For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `.",
    "originalSentence": "For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `.",
    "position": 712,
    "id": "window_712"
  },
  {
    "type": "window",
    "content": "A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `. spec.",
    "originalSentence": "A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `. spec.",
    "position": 713,
    "id": "window_713"
  },
  {
    "type": "window",
    "content": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `. spec. template` and `.",
    "originalSentence": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).\n\n### Pod Template\n\nThe `. spec. template` and `.",
    "position": 714,
    "id": "window_714"
  },
  {
    "type": "window",
    "content": "template` and `. spec. selector` are the only required fields of the `.",
    "originalSentence": "template` and `. spec. selector` are the only required fields of the `.",
    "position": 715,
    "id": "window_715"
  },
  {
    "type": "window",
    "content": "spec. selector` are the only required fields of the `. spec`.",
    "originalSentence": "spec. selector` are the only required fields of the `. spec`.",
    "position": 716,
    "id": "window_716"
  },
  {
    "type": "window",
    "content": "selector` are the only required fields of the `. spec`. The `.",
    "originalSentence": "selector` are the only required fields of the `. spec`. The `.",
    "position": 717,
    "id": "window_717"
  },
  {
    "type": "window",
    "content": "The `. spec. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
    "originalSentence": "The `. spec. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
    "position": 718,
    "id": "window_718"
  },
  {
    "type": "window",
    "content": "spec. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
    "originalSentence": "spec. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
    "position": 719,
    "id": "window_719"
  },
  {
    "type": "window",
    "content": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy.",
    "originalSentence": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy.",
    "position": 720,
    "id": "window_720"
  },
  {
    "type": "window",
    "content": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers.",
    "originalSentence": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers.",
    "position": 721,
    "id": "window_721"
  },
  {
    "type": "window",
    "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector).",
    "originalSentence": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector).",
    "position": 722,
    "id": "window_722"
  },
  {
    "type": "window",
    "content": "For labels, make sure not to overlap with other controllers. See [selector](#selector). Only a [`.",
    "originalSentence": "For labels, make sure not to overlap with other controllers. See [selector](#selector). Only a [`.",
    "position": 723,
    "id": "window_723"
  },
  {
    "type": "window",
    "content": "template. spec. restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
    "originalSentence": "template. spec. restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
    "position": 724,
    "id": "window_724"
  },
  {
    "type": "window",
    "content": "spec. restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified. ### Replicas\n\n`.",
    "originalSentence": "spec. restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified. ### Replicas\n\n`.",
    "position": 725,
    "id": "window_725"
  },
  {
    "type": "window",
    "content": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified. ### Replicas\n\n`. spec.",
    "originalSentence": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified. ### Replicas\n\n`. spec.",
    "position": 726,
    "id": "window_726"
  },
  {
    "type": "window",
    "content": "### Replicas\n\n`. spec. replicas` is an optional field that specifies the number of desired Pods.",
    "originalSentence": "### Replicas\n\n`. spec. replicas` is an optional field that specifies the number of desired Pods.",
    "position": 727,
    "id": "window_727"
  },
  {
    "type": "window",
    "content": "spec. replicas` is an optional field that specifies the number of desired Pods. It defaults to 1.",
    "originalSentence": "spec. replicas` is an optional field that specifies the number of desired Pods. It defaults to 1.",
    "position": 728,
    "id": "window_728"
  },
  {
    "type": "window",
    "content": "replicas` is an optional field that specifies the number of desired Pods. It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.",
    "originalSentence": "replicas` is an optional field that specifies the number of desired Pods. It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.",
    "position": 729,
    "id": "window_729"
  },
  {
    "type": "window",
    "content": "It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment. yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did.",
    "originalSentence": "It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment. yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did.",
    "position": 730,
    "id": "window_730"
  },
  {
    "type": "window",
    "content": "Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment. yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
    "originalSentence": "Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment. yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
    "position": 731,
    "id": "window_731"
  },
  {
    "type": "window",
    "content": "yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `. spec.",
    "originalSentence": "yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `. spec.",
    "position": 732,
    "id": "window_732"
  },
  {
    "type": "window",
    "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `. spec. replicas`.",
    "originalSentence": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `. spec. replicas`.",
    "position": 733,
    "id": "window_733"
  },
  {
    "type": "window",
    "content": "spec. replicas`. Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.",
    "originalSentence": "spec. replicas`. Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.",
    "position": 734,
    "id": "window_734"
  },
  {
    "type": "window",
    "content": "replicas`. Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`. spec.",
    "originalSentence": "replicas`. Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`. spec.",
    "position": 735,
    "id": "window_735"
  },
  {
    "type": "window",
    "content": "Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`. spec. replicas` field automatically.",
    "originalSentence": "Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`. spec. replicas` field automatically.",
    "position": 736,
    "id": "window_736"
  },
  {
    "type": "window",
    "content": "spec. replicas` field automatically. ### Selector\n\n`.",
    "originalSentence": "spec. replicas` field automatically. ### Selector\n\n`.",
    "position": 737,
    "id": "window_737"
  },
  {
    "type": "window",
    "content": "replicas` field automatically. ### Selector\n\n`. spec.",
    "originalSentence": "replicas` field automatically. ### Selector\n\n`. spec.",
    "position": 738,
    "id": "window_738"
  },
  {
    "type": "window",
    "content": "### Selector\n\n`. spec. selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment.",
    "originalSentence": "### Selector\n\n`. spec. selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment.",
    "position": 739,
    "id": "window_739"
  },
  {
    "type": "window",
    "content": "spec. selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment. `.",
    "originalSentence": "spec. selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment. `.",
    "position": 740,
    "id": "window_740"
  },
  {
    "type": "window",
    "content": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment. `. spec.",
    "originalSentence": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment. `. spec.",
    "position": 741,
    "id": "window_741"
  },
  {
    "type": "window",
    "content": "template. metadata. labels`, or it will be rejected by the API.",
    "originalSentence": "template. metadata. labels`, or it will be rejected by the API.",
    "position": 742,
    "id": "window_742"
  },
  {
    "type": "window",
    "content": "metadata. labels`, or it will be rejected by the API. In API version `apps/v1`, `.",
    "originalSentence": "metadata. labels`, or it will be rejected by the API. In API version `apps/v1`, `.",
    "position": 743,
    "id": "window_743"
  },
  {
    "type": "window",
    "content": "labels`, or it will be rejected by the API. In API version `apps/v1`, `. spec.",
    "originalSentence": "labels`, or it will be rejected by the API. In API version `apps/v1`, `. spec.",
    "position": 744,
    "id": "window_744"
  },
  {
    "type": "window",
    "content": "In API version `apps/v1`, `. spec. selector` and `.",
    "originalSentence": "In API version `apps/v1`, `. spec. selector` and `.",
    "position": 745,
    "id": "window_745"
  },
  {
    "type": "window",
    "content": "selector` and `. metadata. labels` do not default to `.",
    "originalSentence": "selector` and `. metadata. labels` do not default to `.",
    "position": 746,
    "id": "window_746"
  },
  {
    "type": "window",
    "content": "metadata. labels` if not set. So they must be set explicitly.",
    "originalSentence": "metadata. labels` if not set. So they must be set explicitly.",
    "position": 747,
    "id": "window_747"
  },
  {
    "type": "window",
    "content": "labels` if not set. So they must be set explicitly. Also note that `.",
    "originalSentence": "labels` if not set. So they must be set explicitly. Also note that `.",
    "position": 748,
    "id": "window_748"
  },
  {
    "type": "window",
    "content": "So they must be set explicitly. Also note that `. spec.",
    "originalSentence": "So they must be set explicitly. Also note that `. spec.",
    "position": 749,
    "id": "window_749"
  },
  {
    "type": "window",
    "content": "Also note that `. spec. selector` is immutable after creation of the Deployment in `apps/v1`.",
    "originalSentence": "Also note that `. spec. selector` is immutable after creation of the Deployment in `apps/v1`.",
    "position": 750,
    "id": "window_750"
  },
  {
    "type": "window",
    "content": "spec. selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.",
    "originalSentence": "spec. selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.",
    "position": 751,
    "id": "window_751"
  },
  {
    "type": "window",
    "content": "selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `. spec.",
    "originalSentence": "selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `. spec.",
    "position": 752,
    "id": "window_752"
  },
  {
    "type": "window",
    "content": "A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `. spec. template` or if the total number of such Pods exceeds `.",
    "originalSentence": "A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `. spec. template` or if the total number of such Pods exceeds `.",
    "position": 753,
    "id": "window_753"
  },
  {
    "type": "window",
    "content": "spec. template` or if the total number of such Pods exceeds `. spec.",
    "originalSentence": "spec. template` or if the total number of such Pods exceeds `. spec.",
    "position": 754,
    "id": "window_754"
  },
  {
    "type": "window",
    "content": "template` or if the total number of such Pods exceeds `. spec. replicas`.",
    "originalSentence": "template` or if the total number of such Pods exceeds `. spec. replicas`.",
    "position": 755,
    "id": "window_755"
  },
  {
    "type": "window",
    "content": "It brings up new\nPods with `. spec. template` if the number of Pods is less than the desired number.",
    "originalSentence": "It brings up new\nPods with `. spec. template` if the number of Pods is less than the desired number.",
    "position": 756,
    "id": "window_756"
  },
  {
    "type": "window",
    "content": "spec. template` if the number of Pods is less than the desired number. {{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController.",
    "originalSentence": "spec. template` if the number of Pods is less than the desired number. {{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController.",
    "position": 757,
    "id": "window_757"
  },
  {
    "type": "window",
    "content": "template` if the number of Pods is less than the desired number. {{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods.",
    "originalSentence": "template` if the number of Pods is less than the desired number. {{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods.",
    "position": 758,
    "id": "window_758"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.",
    "originalSentence": "{{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.",
    "position": 759,
    "id": "window_759"
  },
  {
    "type": "window",
    "content": "If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this. {{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
    "originalSentence": "If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this. {{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
    "position": 760,
    "id": "window_760"
  },
  {
    "type": "window",
    "content": "Kubernetes does not stop you from doing this. {{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly. ### Strategy\n\n`.",
    "originalSentence": "Kubernetes does not stop you from doing this. {{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly. ### Strategy\n\n`.",
    "position": 761,
    "id": "window_761"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly. ### Strategy\n\n`. spec.",
    "originalSentence": "{{< /note >}}\n\nIf you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly. ### Strategy\n\n`. spec.",
    "position": 762,
    "id": "window_762"
  },
  {
    "type": "window",
    "content": "### Strategy\n\n`. spec. strategy` specifies the strategy used to replace old Pods by new ones.",
    "originalSentence": "### Strategy\n\n`. spec. strategy` specifies the strategy used to replace old Pods by new ones.",
    "position": 763,
    "id": "window_763"
  },
  {
    "type": "window",
    "content": "spec. strategy` specifies the strategy used to replace old Pods by new ones. `.",
    "originalSentence": "spec. strategy` specifies the strategy used to replace old Pods by new ones. `.",
    "position": 764,
    "id": "window_764"
  },
  {
    "type": "window",
    "content": "strategy` specifies the strategy used to replace old Pods by new ones. `. spec.",
    "originalSentence": "strategy` specifies the strategy used to replace old Pods by new ones. `. spec.",
    "position": 765,
    "id": "window_765"
  },
  {
    "type": "window",
    "content": "spec. strategy. type` can be \"Recreate\" or \"RollingUpdate\".",
    "originalSentence": "spec. strategy. type` can be \"Recreate\" or \"RollingUpdate\".",
    "position": 766,
    "id": "window_766"
  },
  {
    "type": "window",
    "content": "strategy. type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value.",
    "originalSentence": "strategy. type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value.",
    "position": 767,
    "id": "window_767"
  },
  {
    "type": "window",
    "content": "type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value. #### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `.",
    "originalSentence": "type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value. #### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `.",
    "position": 768,
    "id": "window_768"
  },
  {
    "type": "window",
    "content": "\"RollingUpdate\" is\nthe default value. #### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `. spec.",
    "originalSentence": "\"RollingUpdate\" is\nthe default value. #### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `. spec.",
    "position": 769,
    "id": "window_769"
  },
  {
    "type": "window",
    "content": "#### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `. spec. strategy.",
    "originalSentence": "#### Recreate Deployment\n\nAll existing Pods are killed before new ones are created when `. spec. strategy.",
    "position": 770,
    "id": "window_770"
  },
  {
    "type": "window",
    "content": "strategy. type==Recreate`. {{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades.",
    "originalSentence": "strategy. type==Recreate`. {{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades.",
    "position": 771,
    "id": "window_771"
  },
  {
    "type": "window",
    "content": "type==Recreate`. {{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately.",
    "originalSentence": "type==Recreate`. {{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately.",
    "position": 772,
    "id": "window_772"
  },
  {
    "type": "window",
    "content": "{{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created.",
    "originalSentence": "{{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created.",
    "position": 773,
    "id": "window_773"
  },
  {
    "type": "window",
    "content": "If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state).",
    "originalSentence": "If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state).",
    "position": 774,
    "id": "window_774"
  },
  {
    "type": "window",
    "content": "Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
    "originalSentence": "Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
    "position": 775,
    "id": "window_775"
  },
  {
    "type": "window",
    "content": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
    "originalSentence": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
    "position": 776,
    "id": "window_776"
  },
  {
    "type": "window",
    "content": "If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `. spec.",
    "originalSentence": "If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `. spec.",
    "position": 777,
    "id": "window_777"
  },
  {
    "type": "window",
    "content": "{{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `. spec. strategy.",
    "originalSentence": "{{< /note >}}\n\n#### Rolling Update Deployment\n\nThe Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `. spec. strategy.",
    "position": 778,
    "id": "window_778"
  },
  {
    "type": "window",
    "content": "strategy. type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
    "originalSentence": "strategy. type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
    "position": 779,
    "id": "window_779"
  },
  {
    "type": "window",
    "content": "type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process. ##### Max Unavailable\n\n`.",
    "originalSentence": "type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process. ##### Max Unavailable\n\n`.",
    "position": 780,
    "id": "window_780"
  },
  {
    "type": "window",
    "content": "You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process. ##### Max Unavailable\n\n`. spec.",
    "originalSentence": "You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process. ##### Max Unavailable\n\n`. spec.",
    "position": 781,
    "id": "window_781"
  },
  {
    "type": "window",
    "content": "strategy. rollingUpdate. maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process.",
    "originalSentence": "strategy. rollingUpdate. maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process.",
    "position": 782,
    "id": "window_782"
  },
  {
    "type": "window",
    "content": "rollingUpdate. maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%).",
    "originalSentence": "rollingUpdate. maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%).",
    "position": 783,
    "id": "window_783"
  },
  {
    "type": "window",
    "content": "maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down.",
    "originalSentence": "maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down.",
    "position": 784,
    "id": "window_784"
  },
  {
    "type": "window",
    "content": "The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `.",
    "originalSentence": "The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `.",
    "position": 785,
    "id": "window_785"
  },
  {
    "type": "window",
    "content": "The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `. spec.",
    "originalSentence": "The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `. spec.",
    "position": 786,
    "id": "window_786"
  },
  {
    "type": "window",
    "content": "rollingUpdate. maxSurge` is 0. The default value is 25%.",
    "originalSentence": "rollingUpdate. maxSurge` is 0. The default value is 25%.",
    "position": 787,
    "id": "window_787"
  },
  {
    "type": "window",
    "content": "maxSurge` is 0. The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts.",
    "originalSentence": "maxSurge` is 0. The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts.",
    "position": 788,
    "id": "window_788"
  },
  {
    "type": "window",
    "content": "The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
    "originalSentence": "The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
    "position": 789,
    "id": "window_789"
  },
  {
    "type": "window",
    "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods. ##### Max Surge\n\n`.",
    "originalSentence": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods. ##### Max Surge\n\n`.",
    "position": 790,
    "id": "window_790"
  },
  {
    "type": "window",
    "content": "Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods. ##### Max Surge\n\n`. spec.",
    "originalSentence": "Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods. ##### Max Surge\n\n`. spec.",
    "position": 791,
    "id": "window_791"
  },
  {
    "type": "window",
    "content": "strategy. rollingUpdate. maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods.",
    "originalSentence": "strategy. rollingUpdate. maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods.",
    "position": 792,
    "id": "window_792"
  },
  {
    "type": "window",
    "content": "rollingUpdate. maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%).",
    "originalSentence": "rollingUpdate. maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%).",
    "position": 793,
    "id": "window_793"
  },
  {
    "type": "window",
    "content": "maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0.",
    "originalSentence": "maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0.",
    "position": 794,
    "id": "window_794"
  },
  {
    "type": "window",
    "content": "The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up.",
    "originalSentence": "The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up.",
    "position": 795,
    "id": "window_795"
  },
  {
    "type": "window",
    "content": "The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up. The default value is 25%.",
    "originalSentence": "The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up. The default value is 25%.",
    "position": 796,
    "id": "window_796"
  },
  {
    "type": "window",
    "content": "The absolute number\nis calculated from the percentage by rounding up. The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods.",
    "originalSentence": "The absolute number\nis calculated from the percentage by rounding up. The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods.",
    "position": 797,
    "id": "window_797"
  },
  {
    "type": "window",
    "content": "The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods.",
    "originalSentence": "The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods.",
    "position": 798,
    "id": "window_798"
  },
  {
    "type": "window",
    "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "originalSentence": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "position": 799,
    "id": "window_799"
  },
  {
    "type": "window",
    "content": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "originalSentence": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "position": 800,
    "id": "window_800"
  },
  {
    "type": "window",
    "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "originalSentence": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:\n\n{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.",
    "position": 801,
    "id": "window_801"
  },
  {
    "type": "window",
    "content": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`.",
    "originalSentence": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`.",
    "position": 802,
    "id": "window_802"
  },
  {
    "type": "window",
    "content": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`. spec.",
    "originalSentence": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```\n\n{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}\n\n ```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14. 2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`. spec.",
    "position": 803,
    "id": "window_803"
  },
  {
    "type": "window",
    "content": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`. spec. progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
    "originalSentence": "2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```\n\n{{% /tab %}}\n{{< /tabs >}}\n\n### Progress Deadline Seconds\n\n`. spec. progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
    "position": 804,
    "id": "window_804"
  },
  {
    "type": "window",
    "content": "spec. progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`. and `reason: ProgressDeadlineExceeded` in the status of the resource.",
    "originalSentence": "spec. progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`. and `reason: ProgressDeadlineExceeded` in the status of the resource.",
    "position": 805,
    "id": "window_805"
  },
  {
    "type": "window",
    "content": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`. and `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment.",
    "originalSentence": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`. and `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment.",
    "position": 806,
    "id": "window_806"
  },
  {
    "type": "window",
    "content": "and `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment. This defaults to 600.",
    "originalSentence": "and `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment. This defaults to 600.",
    "position": 807,
    "id": "window_807"
  },
  {
    "type": "window",
    "content": "The Deployment controller will keep\nretrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition.",
    "originalSentence": "The Deployment controller will keep\nretrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition.",
    "position": 808,
    "id": "window_808"
  },
  {
    "type": "window",
    "content": "This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `.",
    "originalSentence": "This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `.",
    "position": 809,
    "id": "window_809"
  },
  {
    "type": "window",
    "content": "In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `. spec.",
    "originalSentence": "In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `. spec.",
    "position": 810,
    "id": "window_810"
  },
  {
    "type": "window",
    "content": "If specified, this field needs to be greater than `. spec. minReadySeconds`.",
    "originalSentence": "If specified, this field needs to be greater than `. spec. minReadySeconds`.",
    "position": 811,
    "id": "window_811"
  },
  {
    "type": "window",
    "content": "### Min Ready Seconds\n\n`. spec. minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.",
    "originalSentence": "### Min Ready Seconds\n\n`. spec. minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.",
    "position": 812,
    "id": "window_812"
  },
  {
    "type": "window",
    "content": "spec. minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready).",
    "originalSentence": "spec. minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready).",
    "position": 813,
    "id": "window_813"
  },
  {
    "type": "window",
    "content": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
    "originalSentence": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
    "position": 814,
    "id": "window_814"
  },
  {
    "type": "window",
    "content": "This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes). ### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period.",
    "originalSentence": "This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes). ### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period.",
    "position": 815,
    "id": "window_815"
  },
  {
    "type": "window",
    "content": "To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes). ### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`.",
    "originalSentence": "To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes). ### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`.",
    "position": 816,
    "id": "window_816"
  },
  {
    "type": "window",
    "content": "### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`. spec.",
    "originalSentence": "### Terminating Pods\n\n{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}\n\nYou can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)\n\nPods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`. spec.",
    "position": 817,
    "id": "window_817"
  },
  {
    "type": "window",
    "content": "As a result, the total number of all pods can temporarily exceed\n`. spec. replicas`.",
    "originalSentence": "As a result, the total number of all pods can temporarily exceed\n`. spec. replicas`.",
    "position": 818,
    "id": "window_818"
  },
  {
    "type": "window",
    "content": "spec. replicas`. Terminating pods can be tracked using the `.",
    "originalSentence": "spec. replicas`. Terminating pods can be tracked using the `.",
    "position": 819,
    "id": "window_819"
  },
  {
    "type": "window",
    "content": "replicas`. Terminating pods can be tracked using the `. status.",
    "originalSentence": "replicas`. Terminating pods can be tracked using the `. status.",
    "position": 820,
    "id": "window_820"
  },
  {
    "type": "window",
    "content": "Terminating pods can be tracked using the `. status. terminatingReplicas` field of the Deployment.",
    "originalSentence": "Terminating pods can be tracked using the `. status. terminatingReplicas` field of the Deployment.",
    "position": 821,
    "id": "window_821"
  },
  {
    "type": "window",
    "content": "status. terminatingReplicas` field of the Deployment. ### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls.",
    "originalSentence": "status. terminatingReplicas` field of the Deployment. ### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls.",
    "position": 822,
    "id": "window_822"
  },
  {
    "type": "window",
    "content": "terminatingReplicas` field of the Deployment. ### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls. `.",
    "originalSentence": "terminatingReplicas` field of the Deployment. ### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls. `.",
    "position": 823,
    "id": "window_823"
  },
  {
    "type": "window",
    "content": "### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls. `. spec.",
    "originalSentence": "### Revision History Limit\n\nA Deployment's revision history is stored in the ReplicaSets it controls. `. spec.",
    "position": 824,
    "id": "window_824"
  },
  {
    "type": "window",
    "content": "`. spec. revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback.",
    "originalSentence": "`. spec. revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback.",
    "position": 825,
    "id": "window_825"
  },
  {
    "type": "window",
    "content": "spec. revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
    "originalSentence": "spec. revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
    "position": 826,
    "id": "window_826"
  },
  {
    "type": "window",
    "content": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
    "originalSentence": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
    "position": 827,
    "id": "window_827"
  },
  {
    "type": "window",
    "content": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
    "originalSentence": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
    "position": 828,
    "id": "window_828"
  },
  {
    "type": "window",
    "content": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
    "originalSentence": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
    "position": 829,
    "id": "window_829"
  },
  {
    "type": "window",
    "content": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
    "originalSentence": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
    "position": 830,
    "id": "window_830"
  },
  {
    "type": "window",
    "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up. ### Paused\n\n`.",
    "originalSentence": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up. ### Paused\n\n`.",
    "position": 831,
    "id": "window_831"
  },
  {
    "type": "window",
    "content": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up. ### Paused\n\n`. spec.",
    "originalSentence": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up. ### Paused\n\n`. spec.",
    "position": 832,
    "id": "window_832"
  },
  {
    "type": "window",
    "content": "### Paused\n\n`. spec. paused` is an optional boolean field for pausing and resuming a Deployment.",
    "originalSentence": "### Paused\n\n`. spec. paused` is an optional boolean field for pausing and resuming a Deployment.",
    "position": 833,
    "id": "window_833"
  },
  {
    "type": "window",
    "content": "spec. paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused.",
    "originalSentence": "spec. paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused.",
    "position": 834,
    "id": "window_834"
  },
  {
    "type": "window",
    "content": "paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created.",
    "originalSentence": "paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created.",
    "position": 835,
    "id": "window_835"
  },
  {
    "type": "window",
    "content": "The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created. ## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods).",
    "originalSentence": "The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created. ## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods).",
    "position": 836,
    "id": "window_836"
  },
  {
    "type": "window",
    "content": "A Deployment is not paused by default when\nit is created. ## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods). * [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
    "originalSentence": "A Deployment is not paused by default when\nit is created. ## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods). * [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
    "position": 837,
    "id": "window_837"
  },
  {
    "type": "window",
    "content": "## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods). * [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). * Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
    "originalSentence": "## {{% heading \"whatsnext\" %}}\n\n* Learn more about [Pods](/docs/concepts/workloads/pods). * [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). * Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
    "position": 838,
    "id": "window_838"
  },
  {
    "type": "window",
    "content": "* [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). * Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. * Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions.",
    "originalSentence": "* [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). * Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. * Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions.",
    "position": 839,
    "id": "window_839"
  },
  {
    "type": "window",
    "content": "* Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. * Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions. * Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "originalSentence": "* Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. * Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions. * Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "position": 840,
    "id": "window_840"
  },
  {
    "type": "window",
    "content": "* Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions. * Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "originalSentence": "* Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions. * Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "position": 841,
    "id": "window_841"
  },
  {
    "type": "paragraph",
    "content": "---\nreviewers:\n- janetkuo\ntitle: Deployments\napi_metadata:\n- apiVersion: \"apps/v1\"\n  kind: \"Deployment\"\nfeature:\n  title: Automated rollouts and rollbacks\n  description: >\n    Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.\ndescription: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.\ncontent_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---",
    "originalSentence": "---\nreviewers:\n- janetkuo\ntitle: Deployments\napi_metadata:\n- apiVersion: \"apps/v1\"\n  kind: \"Deployment\"\nfeature:\n  title: Automated rollouts and rollbacks\n  description: >\n    Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.\ndescription: >-\n  A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.\ncontent_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index\n---",
    "position": 842,
    "id": "paragraph_842"
  },
  {
    "type": "paragraph",
    "content": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
    "originalSentence": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
    "position": 843,
    "id": "paragraph_843"
  },
  {
    "type": "paragraph",
    "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
    "originalSentence": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
    "position": 844,
    "id": "paragraph_844"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.\n{{< /note >}}",
    "position": 845,
    "id": "paragraph_845"
  },
  {
    "type": "paragraph",
    "content": "The following are typical use cases for Deployments:",
    "originalSentence": "The following are typical use cases for Deployments:",
    "position": 846,
    "id": "paragraph_846"
  },
  {
    "type": "paragraph",
    "content": "* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.\n* [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.\n* [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.\n* [Scale up the Deployment to facilitate more load](#scaling-a-deployment).\n* [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.\n* [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.\n* [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
    "originalSentence": "* [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.\n* [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.\n* [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.\n* [Scale up the Deployment to facilitate more load](#scaling-a-deployment).\n* [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.\n* [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.\n* [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
    "position": 847,
    "id": "paragraph_847"
  },
  {
    "type": "paragraph",
    "content": "## Creating a Deployment",
    "originalSentence": "## Creating a Deployment",
    "position": 848,
    "id": "paragraph_848"
  },
  {
    "type": "paragraph",
    "content": "The following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods:",
    "originalSentence": "The following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods:",
    "position": 849,
    "id": "paragraph_849"
  },
  {
    "type": "paragraph",
    "content": "{{% code_sample file=\"controllers/nginx-deployment.yaml\" %}}",
    "originalSentence": "{{% code_sample file=\"controllers/nginx-deployment.yaml\" %}}",
    "position": 850,
    "id": "paragraph_850"
  },
  {
    "type": "paragraph",
    "content": "* A Deployment named `nginx-deployment` is created, indicated by the\n  `.metadata.name` field. This name will become the basis for the ReplicaSets\n  and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details.\n* The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.spec.replicas` field.\n* The `.spec.selector` field defines how the created ReplicaSet finds which Pods to manage.\n  In this case, you select a label that is defined in the Pod template (`app: nginx`).\n  However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule.",
    "originalSentence": "* A Deployment named `nginx-deployment` is created, indicated by the\n  `.metadata.name` field. This name will become the basis for the ReplicaSets\n  and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\n  for more details.\n* The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.spec.replicas` field.\n* The `.spec.selector` field defines how the created ReplicaSet finds which Pods to manage.\n  In this case, you select a label that is defined in the Pod template (`app: nginx`).\n  However, more sophisticated selection rules are possible,\n  as long as the Pod template itself satisfies the rule.",
    "position": 851,
    "id": "paragraph_851"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\n  The `.spec.selector.matchLabels` field is a map of {key,value} pairs.\n  A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".\n  All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.\n  {{< /note >}}",
    "originalSentence": "{{< note >}}\n  The `.spec.selector.matchLabels` field is a map of {key,value} pairs.\n  A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\n  whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".\n  All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.\n  {{< /note >}}",
    "position": 852,
    "id": "paragraph_852"
  },
  {
    "type": "paragraph",
    "content": "* The `.spec.template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `.metadata.labels` field.\n  * The Pod template's specification, or `.spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14.2.\n  * Create one container and name it `nginx` using the `.spec.containers[0].name` field.",
    "originalSentence": "* The `.spec.template` field contains the following sub-fields:\n  * The Pods are labeled `app: nginx`using the `.metadata.labels` field.\n  * The Pod template's specification, or `.spec` field, indicates that\n    the Pods run one container, `nginx`, which runs the `nginx`\n    [Docker Hub](https://hub.docker.com/) image at version 1.14.2.\n  * Create one container and name it `nginx` using the `.spec.containers[0].name` field.",
    "position": 853,
    "id": "paragraph_853"
  },
  {
    "type": "paragraph",
    "content": "Before you begin, make sure your Kubernetes cluster is up and running.\nFollow the steps given below to create the above Deployment:",
    "originalSentence": "Before you begin, make sure your Kubernetes cluster is up and running.\nFollow the steps given below to create the above Deployment:",
    "position": 854,
    "id": "paragraph_854"
  },
  {
    "type": "paragraph",
    "content": "1. Create the Deployment by running the following command:",
    "originalSentence": "1. Create the Deployment by running the following command:",
    "position": 855,
    "id": "paragraph_855"
  },
  {
    "type": "paragraph",
    "content": "```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```",
    "originalSentence": "```shell\n   kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n   ```",
    "position": 856,
    "id": "paragraph_856"
  },
  {
    "type": "paragraph",
    "content": "2. Run `kubectl get deployments` to check if the Deployment was created.",
    "originalSentence": "2. Run `kubectl get deployments` to check if the Deployment was created.",
    "position": 857,
    "id": "paragraph_857"
  },
  {
    "type": "paragraph",
    "content": "If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace.\n   * `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired.\n   * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.\n   * `AVAILABLE` displays how many replicas of the application are available to your users.\n   * `AGE` displays the amount of time that the application has been running.",
    "originalSentence": "If the Deployment is still being created, the output is similar to the following:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s\n   ```\n   When you inspect the Deployments in your cluster, the following fields are displayed:\n   * `NAME` lists the names of the Deployments in the namespace.\n   * `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired.\n   * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.\n   * `AVAILABLE` displays how many replicas of the application are available to your users.\n   * `AGE` displays the amount of time that the application has been running.",
    "position": 858,
    "id": "paragraph_858"
  },
  {
    "type": "paragraph",
    "content": "Notice how the number of desired replicas is 3 according to `.spec.replicas` field.",
    "originalSentence": "Notice how the number of desired replicas is 3 according to `.spec.replicas` field.",
    "position": 859,
    "id": "paragraph_859"
  },
  {
    "type": "paragraph",
    "content": "3. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
    "originalSentence": "3. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
    "position": 860,
    "id": "paragraph_860"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\n   deployment \"nginx-deployment\" successfully rolled out\n   ```",
    "originalSentence": "The output is similar to:\n   ```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\n   deployment \"nginx-deployment\" successfully rolled out\n   ```",
    "position": 861,
    "id": "paragraph_861"
  },
  {
    "type": "paragraph",
    "content": "4. Run the `kubectl get deployments` again a few seconds later.\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.",
    "originalSentence": "4. Run the `kubectl get deployments` again a few seconds later.\n   The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s\n   ```\n   Notice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.",
    "position": 862,
    "id": "paragraph_862"
  },
  {
    "type": "paragraph",
    "content": "5. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:",
    "originalSentence": "5. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n   ```\n   NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s\n   ```\n   ReplicaSet output shows the following fields:",
    "position": 863,
    "id": "paragraph_863"
  },
  {
    "type": "paragraph",
    "content": "* `NAME` lists the names of the ReplicaSets in the namespace.\n   * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_.\n   * `CURRENT` displays how many replicas are currently running.\n   * `READY` displays how many replicas of the application are available to your users.\n   * `AGE` displays the amount of time that the application has been running.",
    "originalSentence": "* `NAME` lists the names of the ReplicaSets in the namespace.\n   * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_.\n   * `CURRENT` displays how many replicas are currently running.\n   * `READY` displays how many replicas of the application are available to your users.\n   * `AGE` displays the amount of time that the application has been running.",
    "position": 864,
    "id": "paragraph_864"
  },
  {
    "type": "paragraph",
    "content": "Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\n   which are created.",
    "originalSentence": "Notice that the name of the ReplicaSet is always formatted as\n   `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\n   which are created.",
    "position": 865,
    "id": "paragraph_865"
  },
  {
    "type": "paragraph",
    "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
    "originalSentence": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
    "position": 866,
    "id": "paragraph_866"
  },
  {
    "type": "paragraph",
    "content": "6. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.\n   The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods.",
    "originalSentence": "6. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.\n   The output is similar to:\n   ```\n   NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   ```\n   The created ReplicaSet ensures that there are three `nginx` Pods.",
    "position": 867,
    "id": "paragraph_867"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`).",
    "originalSentence": "{{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`).",
    "position": 868,
    "id": "paragraph_868"
  },
  {
    "type": "paragraph",
    "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.\n{{< /note >}}",
    "originalSentence": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.\n{{< /note >}}",
    "position": 869,
    "id": "paragraph_869"
  },
  {
    "type": "paragraph",
    "content": "### Pod-template-hash label",
    "originalSentence": "### Pod-template-hash label",
    "position": 870,
    "id": "paragraph_870"
  },
  {
    "type": "paragraph",
    "content": "{{< caution >}}\nDo not change this label.\n{{< /caution >}}",
    "originalSentence": "{{< caution >}}\nDo not change this label.\n{{< /caution >}}",
    "position": 871,
    "id": "paragraph_871"
  },
  {
    "type": "paragraph",
    "content": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
    "originalSentence": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
    "position": 872,
    "id": "paragraph_872"
  },
  {
    "type": "paragraph",
    "content": "This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
    "originalSentence": "This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
    "position": 873,
    "id": "paragraph_873"
  },
  {
    "type": "paragraph",
    "content": "## Updating a Deployment",
    "originalSentence": "## Updating a Deployment",
    "position": 874,
    "id": "paragraph_874"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.spec.template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.spec.template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.\n{{< /note >}}",
    "position": 875,
    "id": "paragraph_875"
  },
  {
    "type": "paragraph",
    "content": "Follow the steps given below to update your Deployment:",
    "originalSentence": "Follow the steps given below to update your Deployment:",
    "position": 876,
    "id": "paragraph_876"
  },
  {
    "type": "paragraph",
    "content": "1. Let's update the nginx Pods to use the `nginx:1.16.1` image instead of the `nginx:1.14.2` image.",
    "originalSentence": "1. Let's update the nginx Pods to use the `nginx:1.16.1` image instead of the `nginx:1.14.2` image.",
    "position": 877,
    "id": "paragraph_877"
  },
  {
    "type": "paragraph",
    "content": "```shell\n   kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1\n   ```",
    "originalSentence": "```shell\n   kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1\n   ```",
    "position": 878,
    "id": "paragraph_878"
  },
  {
    "type": "paragraph",
    "content": "or use the following command:",
    "originalSentence": "or use the following command:",
    "position": 879,
    "id": "paragraph_879"
  },
  {
    "type": "paragraph",
    "content": "```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16.1` indicates the new image and its tag.",
    "originalSentence": "```shell\n   kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   ```\n   where `deployment/nginx-deployment` indicates the Deployment,\n   `nginx` indicates the Container the update will take place and\n   `nginx:1.16.1` indicates the new image and its tag.",
    "position": 880,
    "id": "paragraph_880"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to:",
    "originalSentence": "The output is similar to:",
    "position": 881,
    "id": "paragraph_881"
  },
  {
    "type": "paragraph",
    "content": "```\n   deployment.apps/nginx-deployment image updated\n   ```",
    "originalSentence": "```\n   deployment.apps/nginx-deployment image updated\n   ```",
    "position": 882,
    "id": "paragraph_882"
  },
  {
    "type": "paragraph",
    "content": "Alternatively, you can `edit` the Deployment and change `.spec.template.spec.containers[0].image` from `nginx:1.14.2` to `nginx:1.16.1`:",
    "originalSentence": "Alternatively, you can `edit` the Deployment and change `.spec.template.spec.containers[0].image` from `nginx:1.14.2` to `nginx:1.16.1`:",
    "position": 883,
    "id": "paragraph_883"
  },
  {
    "type": "paragraph",
    "content": "```shell\n   kubectl edit deployment/nginx-deployment\n   ```",
    "originalSentence": "```shell\n   kubectl edit deployment/nginx-deployment\n   ```",
    "position": 884,
    "id": "paragraph_884"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to:",
    "originalSentence": "The output is similar to:",
    "position": 885,
    "id": "paragraph_885"
  },
  {
    "type": "paragraph",
    "content": "```\n   deployment.apps/nginx-deployment edited\n   ```",
    "originalSentence": "```\n   deployment.apps/nginx-deployment edited\n   ```",
    "position": 886,
    "id": "paragraph_886"
  },
  {
    "type": "paragraph",
    "content": "2. To see the rollout status, run:",
    "originalSentence": "2. To see the rollout status, run:",
    "position": 887,
    "id": "paragraph_887"
  },
  {
    "type": "paragraph",
    "content": "```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```",
    "originalSentence": "```shell\n   kubectl rollout status deployment/nginx-deployment\n   ```",
    "position": 888,
    "id": "paragraph_888"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:",
    "originalSentence": "The output is similar to this:",
    "position": 889,
    "id": "paragraph_889"
  },
  {
    "type": "paragraph",
    "content": "```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\n   ```",
    "originalSentence": "```\n   Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\n   ```",
    "position": 890,
    "id": "paragraph_890"
  },
  {
    "type": "paragraph",
    "content": "```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```",
    "originalSentence": "```\n   deployment \"nginx-deployment\" successfully rolled out\n   ```",
    "position": 891,
    "id": "paragraph_891"
  },
  {
    "type": "paragraph",
    "content": "Get more details on your updated Deployment:",
    "originalSentence": "Get more details on your updated Deployment:",
    "position": 892,
    "id": "paragraph_892"
  },
  {
    "type": "paragraph",
    "content": "* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.\n  The output is similar to this:",
    "originalSentence": "* After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.\n  The output is similar to this:",
    "position": 893,
    "id": "paragraph_893"
  },
  {
    "type": "paragraph",
    "content": "```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```",
    "originalSentence": "```\n  NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s\n  ```",
    "position": 894,
    "id": "paragraph_894"
  },
  {
    "type": "paragraph",
    "content": "* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
    "originalSentence": "* Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
    "position": 895,
    "id": "paragraph_895"
  },
  {
    "type": "paragraph",
    "content": "```shell\n  kubectl get rs\n  ```",
    "originalSentence": "```shell\n  kubectl get rs\n  ```",
    "position": 896,
    "id": "paragraph_896"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s\n  ```",
    "position": 897,
    "id": "paragraph_897"
  },
  {
    "type": "paragraph",
    "content": "* Running `get pods` should now show only the new Pods:",
    "originalSentence": "* Running `get pods` should now show only the new Pods:",
    "position": 898,
    "id": "paragraph_898"
  },
  {
    "type": "paragraph",
    "content": "```shell\n  kubectl get pods\n  ```",
    "originalSentence": "```shell\n  kubectl get pods\n  ```",
    "position": 899,
    "id": "paragraph_899"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n  ```",
    "position": 900,
    "id": "paragraph_900"
  },
  {
    "type": "paragraph",
    "content": "Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
    "originalSentence": "Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
    "position": 901,
    "id": "paragraph_901"
  },
  {
    "type": "paragraph",
    "content": "Deployment ensures that only a certain number of Pods are down while they are being updated. By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
    "originalSentence": "Deployment ensures that only a certain number of Pods are down while they are being updated. By default,\n  it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
    "position": 902,
    "id": "paragraph_902"
  },
  {
    "type": "paragraph",
    "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.\n  By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
    "originalSentence": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.\n  By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
    "position": 903,
    "id": "paragraph_903"
  },
  {
    "type": "paragraph",
    "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.\n  It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
    "originalSentence": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\n  then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\n  new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.\n  It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\n  a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
    "position": 904,
    "id": "paragraph_904"
  },
  {
    "type": "paragraph",
    "content": "* Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.kubernetes.io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.\n  It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.\n  Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
    "originalSentence": "* Get details of your Deployment:\n  ```shell\n  kubectl describe deployments\n  ```\n  The output is similar to this:\n  ```\n  Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.kubernetes.io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n  ```\n  Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\n  and scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n  (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\n  to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.\n  It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.\n  Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
    "position": 905,
    "id": "paragraph_905"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.\n{{< /note >}}",
    "position": 906,
    "id": "paragraph_906"
  },
  {
    "type": "paragraph",
    "content": "### Rollover (aka multiple updates in-flight)",
    "originalSentence": "### Rollover (aka multiple updates in-flight)",
    "position": 907,
    "id": "paragraph_907"
  },
  {
    "type": "paragraph",
    "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.spec.selector` but whose template does not match `.spec.template` are scaled down. Eventually, the new\nReplicaSet is scaled to `.spec.replicas` and all old ReplicaSets is scaled to 0.",
    "originalSentence": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.spec.selector` but whose template does not match `.spec.template` are scaled down. Eventually, the new\nReplicaSet is scaled to `.spec.replicas` and all old ReplicaSets is scaled to 0.",
    "position": 908,
    "id": "paragraph_908"
  },
  {
    "type": "paragraph",
    "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down.",
    "originalSentence": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down.",
    "position": 909,
    "id": "paragraph_909"
  },
  {
    "type": "paragraph",
    "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.1`, when only 3\nreplicas of `nginx:1.14.2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.2` Pods that it had created, and starts creating\n`nginx:1.16.1` Pods. It does not wait for the 5 replicas of `nginx:1.14.2` to be created\nbefore changing course.",
    "originalSentence": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.1`, when only 3\nreplicas of `nginx:1.14.2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.2` Pods that it had created, and starts creating\n`nginx:1.16.1` Pods. It does not wait for the 5 replicas of `nginx:1.14.2` to be created\nbefore changing course.",
    "position": 910,
    "id": "paragraph_910"
  },
  {
    "type": "paragraph",
    "content": "### Label selector updates",
    "originalSentence": "### Label selector updates",
    "position": 911,
    "id": "paragraph_911"
  },
  {
    "type": "paragraph",
    "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.\nIn any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications.",
    "originalSentence": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.\nIn any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications.",
    "position": 912,
    "id": "paragraph_912"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.\n{{< /note >}}",
    "position": 913,
    "id": "paragraph_913"
  },
  {
    "type": "paragraph",
    "content": "* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet.\n* Selector updates changes the existing value in a selector key -- result in the same behavior as additions.\n* Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
    "originalSentence": "* Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet.\n* Selector updates changes the existing value in a selector key -- result in the same behavior as additions.\n* Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
    "position": 914,
    "id": "paragraph_914"
  },
  {
    "type": "paragraph",
    "content": "## Rolling Back a Deployment",
    "originalSentence": "## Rolling Back a Deployment",
    "position": 915,
    "id": "paragraph_915"
  },
  {
    "type": "paragraph",
    "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.\nBy default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit).",
    "originalSentence": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.\nBy default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit).",
    "position": 916,
    "id": "paragraph_916"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`.spec.template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.\nThis means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`.spec.template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.\nThis means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.\n{{< /note >}}",
    "position": 917,
    "id": "paragraph_917"
  },
  {
    "type": "paragraph",
    "content": "* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.1`:",
    "originalSentence": "* Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.1`:",
    "position": 918,
    "id": "paragraph_918"
  },
  {
    "type": "paragraph",
    "content": "```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```",
    "originalSentence": "```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n  ```",
    "position": 919,
    "id": "paragraph_919"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment image updated\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment image updated\n  ```",
    "position": 920,
    "id": "paragraph_920"
  },
  {
    "type": "paragraph",
    "content": "* The rollout gets stuck. You can verify it by checking the rollout status:",
    "originalSentence": "* The rollout gets stuck. You can verify it by checking the rollout status:",
    "position": 921,
    "id": "paragraph_921"
  },
  {
    "type": "paragraph",
    "content": "```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```",
    "originalSentence": "```shell\n  kubectl rollout status deployment/nginx-deployment\n  ```",
    "position": 922,
    "id": "paragraph_922"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated...\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  Waiting for rollout to finish: 1 out of 3 new replicas have been updated...\n  ```",
    "position": 923,
    "id": "paragraph_923"
  },
  {
    "type": "paragraph",
    "content": "* Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).",
    "originalSentence": "* Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).",
    "position": 924,
    "id": "paragraph_924"
  },
  {
    "type": "paragraph",
    "content": "* You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1.",
    "originalSentence": "* You see that the number of old replicas (adding the replica count from\n  `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\n  new replicas (from `nginx-deployment-3066724191`) is 1.",
    "position": 925,
    "id": "paragraph_925"
  },
  {
    "type": "paragraph",
    "content": "```shell\n  kubectl get rs\n  ```",
    "originalSentence": "```shell\n  kubectl get rs\n  ```",
    "position": 926,
    "id": "paragraph_926"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s\n  ```",
    "position": 927,
    "id": "paragraph_927"
  },
  {
    "type": "paragraph",
    "content": "* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
    "originalSentence": "* Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
    "position": 928,
    "id": "paragraph_928"
  },
  {
    "type": "paragraph",
    "content": "```shell\n  kubectl get pods\n  ```",
    "originalSentence": "```shell\n  kubectl get pods\n  ```",
    "position": 929,
    "id": "paragraph_929"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n  ```",
    "position": 930,
    "id": "paragraph_930"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.\n  {{< /note >}}",
    "originalSentence": "{{< note >}}\n  The Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.\n  {{< /note >}}",
    "position": 931,
    "id": "paragraph_931"
  },
  {
    "type": "paragraph",
    "content": "* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```",
    "originalSentence": "* Get the description of the Deployment:\n  ```shell\n  kubectl describe deployment\n  ```",
    "position": 932,
    "id": "paragraph_932"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n  ```",
    "position": 933,
    "id": "paragraph_933"
  },
  {
    "type": "paragraph",
    "content": "To fix this, you need to rollback to a previous revision of Deployment that is stable.",
    "originalSentence": "To fix this, you need to rollback to a previous revision of Deployment that is stable.",
    "position": 934,
    "id": "paragraph_934"
  },
  {
    "type": "paragraph",
    "content": "### Checking Rollout History of a Deployment",
    "originalSentence": "### Checking Rollout History of a Deployment",
    "position": 935,
    "id": "paragraph_935"
  },
  {
    "type": "paragraph",
    "content": "Follow the steps given below to check the rollout history:",
    "originalSentence": "Follow the steps given below to check the rollout history:",
    "position": 936,
    "id": "paragraph_936"
  },
  {
    "type": "paragraph",
    "content": "1. First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```",
    "originalSentence": "1. First, check the revisions of this Deployment:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n   ```",
    "position": 937,
    "id": "paragraph_937"
  },
  {
    "type": "paragraph",
    "content": "`CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:",
    "originalSentence": "`CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:",
    "position": 938,
    "id": "paragraph_938"
  },
  {
    "type": "paragraph",
    "content": "* Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.io/change-cause=\"image updated to 1.16.1\"`\n   * Manually editing the manifest of the resource.",
    "originalSentence": "* Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.io/change-cause=\"image updated to 1.16.1\"`\n   * Manually editing the manifest of the resource.",
    "position": 939,
    "id": "paragraph_939"
  },
  {
    "type": "paragraph",
    "content": "2. To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```",
    "originalSentence": "2. To see the details of each revision, run:\n   ```shell\n   kubectl rollout history deployment/nginx-deployment --revision=2\n   ```",
    "position": 940,
    "id": "paragraph_940"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.\n   ```",
    "originalSentence": "The output is similar to this:\n   ```\n   deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.\n   ```",
    "position": 941,
    "id": "paragraph_941"
  },
  {
    "type": "paragraph",
    "content": "### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
    "originalSentence": "### Rolling Back to a Previous Revision\nFollow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
    "position": 942,
    "id": "paragraph_942"
  },
  {
    "type": "paragraph",
    "content": "1. Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```",
    "originalSentence": "1. Now you've decided to undo the current rollout and rollback to the previous revision:\n   ```shell\n   kubectl rollout undo deployment/nginx-deployment\n   ```",
    "position": 943,
    "id": "paragraph_943"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n   ```\n   deployment.apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:",
    "originalSentence": "The output is similar to this:\n   ```\n   deployment.apps/nginx-deployment rolled back\n   ```\n   Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`:",
    "position": 944,
    "id": "paragraph_944"
  },
  {
    "type": "paragraph",
    "content": "```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```",
    "originalSentence": "```shell\n   kubectl rollout undo deployment/nginx-deployment --to-revision=2\n   ```",
    "position": 945,
    "id": "paragraph_945"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n   ```\n   deployment.apps/nginx-deployment rolled back\n   ```",
    "originalSentence": "The output is similar to this:\n   ```\n   deployment.apps/nginx-deployment rolled back\n   ```",
    "position": 946,
    "id": "paragraph_946"
  },
  {
    "type": "paragraph",
    "content": "For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
    "originalSentence": "For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
    "position": 947,
    "id": "paragraph_947"
  },
  {
    "type": "paragraph",
    "content": "The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller.",
    "originalSentence": "The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\n   for rolling back to revision 2 is generated from Deployment controller.",
    "position": 948,
    "id": "paragraph_948"
  },
  {
    "type": "paragraph",
    "content": "2. Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```",
    "originalSentence": "2. Check if the rollback was successful and the Deployment is running as expected, run:\n   ```shell\n   kubectl get deployment nginx-deployment\n   ```",
    "position": 949,
    "id": "paragraph_949"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3. Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.kubernetes.io/revision=4\n                           kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```",
    "originalSentence": "The output is similar to this:\n   ```\n   NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m\n   ```\n3. Get the description of the Deployment:\n   ```shell\n   kubectl describe deployment nginx-deployment\n   ```\n   The output is similar to this:\n   ```\n   Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.kubernetes.io/revision=4\n                           kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n   ```",
    "position": 950,
    "id": "paragraph_950"
  },
  {
    "type": "paragraph",
    "content": "## Scaling a Deployment",
    "originalSentence": "## Scaling a Deployment",
    "position": 951,
    "id": "paragraph_951"
  },
  {
    "type": "paragraph",
    "content": "You can scale a Deployment by using the following command:",
    "originalSentence": "You can scale a Deployment by using the following command:",
    "position": 952,
    "id": "paragraph_952"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment scaled\n```",
    "originalSentence": "```shell\nkubectl scale deployment/nginx-deployment --replicas=10\n```\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment scaled\n```",
    "position": 953,
    "id": "paragraph_953"
  },
  {
    "type": "paragraph",
    "content": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods.",
    "originalSentence": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods.",
    "position": 954,
    "id": "paragraph_954"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment scaled\n```",
    "originalSentence": "```shell\nkubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80\n```\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment scaled\n```",
    "position": 955,
    "id": "paragraph_955"
  },
  {
    "type": "paragraph",
    "content": "### Proportional scaling",
    "originalSentence": "### Proportional scaling",
    "position": 956,
    "id": "paragraph_956"
  },
  {
    "type": "paragraph",
    "content": "RollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*.",
    "originalSentence": "RollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*.",
    "position": 957,
    "id": "paragraph_957"
  },
  {
    "type": "paragraph",
    "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
    "originalSentence": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
    "position": 958,
    "id": "paragraph_958"
  },
  {
    "type": "paragraph",
    "content": "* Ensure that the 10 replicas in your Deployment are running.\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:",
    "originalSentence": "* Ensure that the 10 replicas in your Deployment are running.\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:",
    "position": 959,
    "id": "paragraph_959"
  },
  {
    "type": "paragraph",
    "content": "```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```",
    "originalSentence": "```\n  NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s\n  ```",
    "position": 960,
    "id": "paragraph_960"
  },
  {
    "type": "paragraph",
    "content": "* You update to a new image which happens to be unresolvable from inside the cluster.\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```",
    "originalSentence": "* You update to a new image which happens to be unresolvable from inside the cluster.\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:sometag\n  ```",
    "position": 961,
    "id": "paragraph_961"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment image updated\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment image updated\n  ```",
    "position": 962,
    "id": "paragraph_962"
  },
  {
    "type": "paragraph",
    "content": "* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```",
    "originalSentence": "* The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m\n  ```",
    "position": 963,
    "id": "paragraph_963"
  },
  {
    "type": "paragraph",
    "content": "* Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.",
    "originalSentence": "* Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.",
    "position": 964,
    "id": "paragraph_964"
  },
  {
    "type": "paragraph",
    "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run:",
    "originalSentence": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run:",
    "position": 965,
    "id": "paragraph_965"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl get deploy\n```",
    "originalSentence": "```shell\nkubectl get deploy\n```",
    "position": 966,
    "id": "paragraph_966"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet.\n```shell\nkubectl get rs\n```",
    "originalSentence": "The output is similar to this:\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m\n```\nThe rollout status confirms how the replicas were added to each ReplicaSet.\n```shell\nkubectl get rs\n```",
    "position": 967,
    "id": "paragraph_967"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```",
    "originalSentence": "The output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m\n```",
    "position": 968,
    "id": "paragraph_968"
  },
  {
    "type": "paragraph",
    "content": "## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}",
    "originalSentence": "## Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}",
    "position": 969,
    "id": "paragraph_969"
  },
  {
    "type": "paragraph",
    "content": "When you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
    "originalSentence": "When you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
    "position": 970,
    "id": "paragraph_970"
  },
  {
    "type": "paragraph",
    "content": "* For example, with a Deployment that was created:",
    "originalSentence": "* For example, with a Deployment that was created:",
    "position": 971,
    "id": "paragraph_971"
  },
  {
    "type": "paragraph",
    "content": "Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```",
    "originalSentence": "Get the Deployment details:\n  ```shell\n  kubectl get deploy\n  ```\n  The output is similar to this:\n  ```\n  NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m\n  ```\n  Get the rollout status:\n  ```shell\n  kubectl get rs\n  ```\n  The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m\n  ```",
    "position": 972,
    "id": "paragraph_972"
  },
  {
    "type": "paragraph",
    "content": "* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```",
    "originalSentence": "* Pause by running the following command:\n  ```shell\n  kubectl rollout pause deployment/nginx-deployment\n  ```",
    "position": 973,
    "id": "paragraph_973"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment paused\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment paused\n  ```",
    "position": 974,
    "id": "paragraph_974"
  },
  {
    "type": "paragraph",
    "content": "* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n  ```",
    "originalSentence": "* Then update the image of the Deployment:\n  ```shell\n  kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n  ```",
    "position": 975,
    "id": "paragraph_975"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment image updated\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment image updated\n  ```",
    "position": 976,
    "id": "paragraph_976"
  },
  {
    "type": "paragraph",
    "content": "* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```",
    "originalSentence": "* Notice that no new rollout started:\n  ```shell\n  kubectl rollout history deployment/nginx-deployment\n  ```",
    "position": 977,
    "id": "paragraph_977"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>\n  ```\n* Get the rollout status to verify that the existing ReplicaSet has not changed:\n  ```shell\n  kubectl get rs\n  ```",
    "position": 978,
    "id": "paragraph_978"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m\n  ```",
    "position": 979,
    "id": "paragraph_979"
  },
  {
    "type": "paragraph",
    "content": "* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```",
    "originalSentence": "* You can make as many updates as you wish, for example, update the resources that will be used:\n  ```shell\n  kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n  ```",
    "position": 980,
    "id": "paragraph_980"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment resource requirements updated\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment resource requirements updated\n  ```",
    "position": 981,
    "id": "paragraph_981"
  },
  {
    "type": "paragraph",
    "content": "The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused.",
    "originalSentence": "The initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\n  the Deployment will not have any effect as long as the Deployment rollout is paused.",
    "position": 982,
    "id": "paragraph_982"
  },
  {
    "type": "paragraph",
    "content": "* Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```",
    "originalSentence": "* Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n  ```shell\n  kubectl rollout resume deployment/nginx-deployment\n  ```",
    "position": 983,
    "id": "paragraph_983"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.\n  ```shell\n  kubectl get rs --watch\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  deployment.apps/nginx-deployment resumed\n  ```\n* {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.\n  ```shell\n  kubectl get rs --watch\n  ```",
    "position": 984,
    "id": "paragraph_984"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s\n  ```\n* Get the status of the latest rollout:\n  ```shell\n  kubectl get rs\n  ```",
    "position": 985,
    "id": "paragraph_985"
  },
  {
    "type": "paragraph",
    "content": "The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it.\n{{< /note >}}",
    "originalSentence": "The output is similar to this:\n  ```\n  NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s\n  ```\n{{< note >}}\nYou cannot rollback a paused Deployment until you resume it.\n{{< /note >}}",
    "position": 986,
    "id": "paragraph_986"
  },
  {
    "type": "paragraph",
    "content": "A Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
    "originalSentence": "A Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
    "position": 987,
    "id": "paragraph_987"
  },
  {
    "type": "paragraph",
    "content": "### Progressing Deployment",
    "originalSentence": "### Progressing Deployment",
    "position": 988,
    "id": "paragraph_988"
  },
  {
    "type": "paragraph",
    "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:",
    "originalSentence": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:",
    "position": 989,
    "id": "paragraph_989"
  },
  {
    "type": "paragraph",
    "content": "* The Deployment creates a new ReplicaSet.\n* The Deployment is scaling up its newest ReplicaSet.\n* The Deployment is scaling down its older ReplicaSet(s).\n* New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
    "originalSentence": "* The Deployment creates a new ReplicaSet.\n* The Deployment is scaling up its newest ReplicaSet.\n* The Deployment is scaling down its older ReplicaSet(s).\n* New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
    "position": 990,
    "id": "paragraph_990"
  },
  {
    "type": "paragraph",
    "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.status.conditions`:",
    "originalSentence": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.status.conditions`:",
    "position": 991,
    "id": "paragraph_991"
  },
  {
    "type": "paragraph",
    "content": "* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
    "originalSentence": "* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
    "position": 992,
    "id": "paragraph_992"
  },
  {
    "type": "paragraph",
    "content": "You can monitor the progress for a Deployment by using `kubectl rollout status`.",
    "originalSentence": "You can monitor the progress for a Deployment by using `kubectl rollout status`.",
    "position": 993,
    "id": "paragraph_993"
  },
  {
    "type": "paragraph",
    "content": "### Complete Deployment",
    "originalSentence": "### Complete Deployment",
    "position": 994,
    "id": "paragraph_994"
  },
  {
    "type": "paragraph",
    "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics:",
    "originalSentence": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics:",
    "position": 995,
    "id": "paragraph_995"
  },
  {
    "type": "paragraph",
    "content": "* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed.\n* All of the replicas associated with the Deployment are available.\n* No old replicas for the Deployment are running.",
    "originalSentence": "* All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed.\n* All of the replicas associated with the Deployment are available.\n* No old replicas for the Deployment are running.",
    "position": 996,
    "id": "paragraph_996"
  },
  {
    "type": "paragraph",
    "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.status.conditions`:",
    "originalSentence": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.status.conditions`:",
    "position": 997,
    "id": "paragraph_997"
  },
  {
    "type": "paragraph",
    "content": "* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`",
    "originalSentence": "* `type: Progressing`\n* `status: \"True\"`\n* `reason: NewReplicaSetAvailable`",
    "position": 998,
    "id": "paragraph_998"
  },
  {
    "type": "paragraph",
    "content": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition).",
    "originalSentence": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition).",
    "position": 999,
    "id": "paragraph_999"
  },
  {
    "type": "paragraph",
    "content": "You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code.",
    "originalSentence": "You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code.",
    "position": 1000,
    "id": "paragraph_1000"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available...\ndeployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $?\n```\n```\n0\n```",
    "originalSentence": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 of 3 updated replicas are available...\ndeployment \"nginx-deployment\" successfully rolled out\n```\nand the exit status from `kubectl rollout` is 0 (success):\n```shell\necho $?\n```\n```\n0\n```",
    "position": 1001,
    "id": "paragraph_1001"
  },
  {
    "type": "paragraph",
    "content": "### Failed Deployment",
    "originalSentence": "### Failed Deployment",
    "position": 1002,
    "id": "paragraph_1002"
  },
  {
    "type": "paragraph",
    "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors:",
    "originalSentence": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors:",
    "position": 1003,
    "id": "paragraph_1003"
  },
  {
    "type": "paragraph",
    "content": "* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration",
    "originalSentence": "* Insufficient quota\n* Readiness probe failures\n* Image pull errors\n* Insufficient permissions\n* Limit ranges\n* Application runtime misconfiguration",
    "position": 1004,
    "id": "paragraph_1004"
  },
  {
    "type": "paragraph",
    "content": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.spec.progressDeadlineSeconds`](#progress-deadline-seconds)). `.spec.progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled.",
    "originalSentence": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.spec.progressDeadlineSeconds`](#progress-deadline-seconds)). `.spec.progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled.",
    "position": 1005,
    "id": "paragraph_1005"
  },
  {
    "type": "paragraph",
    "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:",
    "originalSentence": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes:",
    "position": 1006,
    "id": "paragraph_1006"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.status.conditions`:",
    "originalSentence": "```shell\nkubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'\n```\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment patched\n```\nOnce the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.status.conditions`:",
    "position": 1007,
    "id": "paragraph_1007"
  },
  {
    "type": "paragraph",
    "content": "* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`",
    "originalSentence": "* `type: Progressing`\n* `status: \"False\"`\n* `reason: ProgressDeadlineExceeded`",
    "position": 1008,
    "id": "paragraph_1008"
  },
  {
    "type": "paragraph",
    "content": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.\nAlso, the deadline is not taken into account anymore once the Deployment rollout completes.",
    "originalSentence": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.\nAlso, the deadline is not taken into account anymore once the Deployment rollout completes.",
    "position": 1009,
    "id": "paragraph_1009"
  },
  {
    "type": "paragraph",
    "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
    "originalSentence": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
    "position": 1010,
    "id": "paragraph_1010"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.\n{{< /note >}}",
    "position": 1011,
    "id": "paragraph_1011"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.\nYou can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.\nYou can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.\n{{< /note >}}",
    "position": 1012,
    "id": "paragraph_1012"
  },
  {
    "type": "paragraph",
    "content": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section:",
    "originalSentence": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section:",
    "position": 1013,
    "id": "paragraph_1013"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<...>\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...>\n```",
    "originalSentence": "```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\n<...>\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...>\n```",
    "position": 1014,
    "id": "paragraph_1014"
  },
  {
    "type": "paragraph",
    "content": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
    "originalSentence": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
    "position": 1015,
    "id": "paragraph_1015"
  },
  {
    "type": "paragraph",
    "content": "```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.\n    reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```",
    "originalSentence": "```\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.\n    reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2\n```",
    "position": 1016,
    "id": "paragraph_1016"
  },
  {
    "type": "paragraph",
    "content": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:",
    "originalSentence": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition:",
    "position": 1017,
    "id": "paragraph_1017"
  },
  {
    "type": "paragraph",
    "content": "```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```",
    "originalSentence": "```\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate\n```",
    "position": 1018,
    "id": "paragraph_1018"
  },
  {
    "type": "paragraph",
    "content": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
    "originalSentence": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
    "position": 1019,
    "id": "paragraph_1019"
  },
  {
    "type": "paragraph",
    "content": "```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```",
    "originalSentence": "```\nConditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable\n```",
    "position": 1020,
    "id": "paragraph_1020"
  },
  {
    "type": "paragraph",
    "content": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete).",
    "originalSentence": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete).",
    "position": 1021,
    "id": "paragraph_1021"
  },
  {
    "type": "paragraph",
    "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline.",
    "originalSentence": "You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline.",
    "position": 1022,
    "id": "paragraph_1022"
  },
  {
    "type": "paragraph",
    "content": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\nerror: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $?\n```\n```\n1\n```",
    "originalSentence": "```shell\nkubectl rollout status deployment/nginx-deployment\n```\nThe output is similar to this:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\nerror: deployment \"nginx\" exceeded its progress deadline\n```\nand the exit status from `kubectl rollout` is 1 (indicating an error):\n```shell\necho $?\n```\n```\n1\n```",
    "position": 1023,
    "id": "paragraph_1023"
  },
  {
    "type": "paragraph",
    "content": "### Operating on a failed deployment",
    "originalSentence": "### Operating on a failed deployment",
    "position": 1024,
    "id": "paragraph_1024"
  },
  {
    "type": "paragraph",
    "content": "All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
    "originalSentence": "All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
    "position": 1025,
    "id": "paragraph_1025"
  },
  {
    "type": "paragraph",
    "content": "You can set `.spec.revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background. By default,\nit is 10.",
    "originalSentence": "You can set `.spec.revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background. By default,\nit is 10.",
    "position": 1026,
    "id": "paragraph_1026"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.\n{{< /note >}}",
    "position": 1027,
    "id": "paragraph_1027"
  },
  {
    "type": "paragraph",
    "content": "The cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).\nIf you set `.spec.revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one.",
    "originalSentence": "The cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).\nIf you set `.spec.revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one.",
    "position": 1028,
    "id": "paragraph_1028"
  },
  {
    "type": "paragraph",
    "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.spec.revisionHistoryLimit` because the Deployment never reaches a complete state.",
    "originalSentence": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.spec.revisionHistoryLimit` because the Deployment never reaches a complete state.",
    "position": 1029,
    "id": "paragraph_1029"
  },
  {
    "type": "paragraph",
    "content": "If you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
    "originalSentence": "If you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
    "position": 1030,
    "id": "paragraph_1030"
  },
  {
    "type": "paragraph",
    "content": "## Writing a Deployment Spec",
    "originalSentence": "## Writing a Deployment Spec",
    "position": 1031,
    "id": "paragraph_1031"
  },
  {
    "type": "paragraph",
    "content": "As with all other Kubernetes configs, a Deployment needs `.apiVersion`, `.kind`, and `.metadata` fields.\nFor general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
    "originalSentence": "As with all other Kubernetes configs, a Deployment needs `.apiVersion`, `.kind`, and `.metadata` fields.\nFor general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
    "position": 1032,
    "id": "paragraph_1032"
  },
  {
    "type": "paragraph",
    "content": "When the control plane creates new Pods for a Deployment, the `.metadata.name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
    "originalSentence": "When the control plane creates new Pods for a Deployment, the `.metadata.name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
    "position": 1033,
    "id": "paragraph_1033"
  },
  {
    "type": "paragraph",
    "content": "A Deployment also needs a [`.spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
    "originalSentence": "A Deployment also needs a [`.spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
    "position": 1034,
    "id": "paragraph_1034"
  },
  {
    "type": "paragraph",
    "content": "The `.spec.template` and `.spec.selector` are the only required fields of the `.spec`.",
    "originalSentence": "The `.spec.template` and `.spec.selector` are the only required fields of the `.spec`.",
    "position": 1035,
    "id": "paragraph_1035"
  },
  {
    "type": "paragraph",
    "content": "The `.spec.template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
    "originalSentence": "The `.spec.template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
    "position": 1036,
    "id": "paragraph_1036"
  },
  {
    "type": "paragraph",
    "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector).",
    "originalSentence": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector).",
    "position": 1037,
    "id": "paragraph_1037"
  },
  {
    "type": "paragraph",
    "content": "Only a [`.spec.template.spec.restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
    "originalSentence": "Only a [`.spec.template.spec.restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
    "position": 1038,
    "id": "paragraph_1038"
  },
  {
    "type": "paragraph",
    "content": "`.spec.replicas` is an optional field that specifies the number of desired Pods. It defaults to 1.",
    "originalSentence": "`.spec.replicas` is an optional field that specifies the number of desired Pods. It defaults to 1.",
    "position": 1039,
    "id": "paragraph_1039"
  },
  {
    "type": "paragraph",
    "content": "Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did.",
    "originalSentence": "Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did.",
    "position": 1040,
    "id": "paragraph_1040"
  },
  {
    "type": "paragraph",
    "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.spec.replicas`.",
    "originalSentence": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.spec.replicas`.",
    "position": 1041,
    "id": "paragraph_1041"
  },
  {
    "type": "paragraph",
    "content": "Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.spec.replicas` field automatically.",
    "originalSentence": "Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.spec.replicas` field automatically.",
    "position": 1042,
    "id": "paragraph_1042"
  },
  {
    "type": "paragraph",
    "content": "`.spec.selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment.",
    "originalSentence": "`.spec.selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment.",
    "position": 1043,
    "id": "paragraph_1043"
  },
  {
    "type": "paragraph",
    "content": "`.spec.selector` must match `.spec.template.metadata.labels`, or it will be rejected by the API.",
    "originalSentence": "`.spec.selector` must match `.spec.template.metadata.labels`, or it will be rejected by the API.",
    "position": 1044,
    "id": "paragraph_1044"
  },
  {
    "type": "paragraph",
    "content": "In API version `apps/v1`, `.spec.selector` and `.metadata.labels` do not default to `.spec.template.metadata.labels` if not set. So they must be set explicitly. Also note that `.spec.selector` is immutable after creation of the Deployment in `apps/v1`.",
    "originalSentence": "In API version `apps/v1`, `.spec.selector` and `.metadata.labels` do not default to `.spec.template.metadata.labels` if not set. So they must be set explicitly. Also note that `.spec.selector` is immutable after creation of the Deployment in `apps/v1`.",
    "position": 1045,
    "id": "paragraph_1045"
  },
  {
    "type": "paragraph",
    "content": "A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.spec.template` or if the total number of such Pods exceeds `.spec.replicas`. It brings up new\nPods with `.spec.template` if the number of Pods is less than the desired number.",
    "originalSentence": "A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.spec.template` or if the total number of such Pods exceeds `.spec.replicas`. It brings up new\nPods with `.spec.template` if the number of Pods is less than the desired number.",
    "position": 1046,
    "id": "paragraph_1046"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.\n{{< /note >}}",
    "position": 1047,
    "id": "paragraph_1047"
  },
  {
    "type": "paragraph",
    "content": "If you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
    "originalSentence": "If you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
    "position": 1048,
    "id": "paragraph_1048"
  },
  {
    "type": "paragraph",
    "content": "`.spec.strategy` specifies the strategy used to replace old Pods by new ones.\n`.spec.strategy.type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value.",
    "originalSentence": "`.spec.strategy` specifies the strategy used to replace old Pods by new ones.\n`.spec.strategy.type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value.",
    "position": 1049,
    "id": "paragraph_1049"
  },
  {
    "type": "paragraph",
    "content": "#### Recreate Deployment",
    "originalSentence": "#### Recreate Deployment",
    "position": 1050,
    "id": "paragraph_1050"
  },
  {
    "type": "paragraph",
    "content": "All existing Pods are killed before new ones are created when `.spec.strategy.type==Recreate`.",
    "originalSentence": "All existing Pods are killed before new ones are created when `.spec.strategy.type==Recreate`.",
    "position": 1051,
    "id": "paragraph_1051"
  },
  {
    "type": "paragraph",
    "content": "{{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).\n{{< /note >}}",
    "originalSentence": "{{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).\n{{< /note >}}",
    "position": 1052,
    "id": "paragraph_1052"
  },
  {
    "type": "paragraph",
    "content": "#### Rolling Update Deployment",
    "originalSentence": "#### Rolling Update Deployment",
    "position": 1053,
    "id": "paragraph_1053"
  },
  {
    "type": "paragraph",
    "content": "The Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.spec.strategy.type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
    "originalSentence": "The Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.spec.strategy.type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
    "position": 1054,
    "id": "paragraph_1054"
  },
  {
    "type": "paragraph",
    "content": "##### Max Unavailable",
    "originalSentence": "##### Max Unavailable",
    "position": 1055,
    "id": "paragraph_1055"
  },
  {
    "type": "paragraph",
    "content": "`.spec.strategy.rollingUpdate.maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `.spec.strategy.rollingUpdate.maxSurge` is 0. The default value is 25%.",
    "originalSentence": "`.spec.strategy.rollingUpdate.maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `.spec.strategy.rollingUpdate.maxSurge` is 0. The default value is 25%.",
    "position": 1056,
    "id": "paragraph_1056"
  },
  {
    "type": "paragraph",
    "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
    "originalSentence": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
    "position": 1057,
    "id": "paragraph_1057"
  },
  {
    "type": "paragraph",
    "content": "`.spec.strategy.rollingUpdate.maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up. The default value is 25%.",
    "originalSentence": "`.spec.strategy.rollingUpdate.maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up. The default value is 25%.",
    "position": 1058,
    "id": "paragraph_1058"
  },
  {
    "type": "paragraph",
    "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods.",
    "originalSentence": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods.",
    "position": 1059,
    "id": "paragraph_1059"
  },
  {
    "type": "paragraph",
    "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:",
    "originalSentence": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:",
    "position": 1060,
    "id": "paragraph_1060"
  },
  {
    "type": "paragraph",
    "content": "{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}",
    "originalSentence": "{{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}}",
    "position": 1061,
    "id": "paragraph_1061"
  },
  {
    "type": "paragraph",
    "content": "```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```",
    "originalSentence": "```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n ```",
    "position": 1062,
    "id": "paragraph_1062"
  },
  {
    "type": "paragraph",
    "content": "{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}",
    "originalSentence": "{{% /tab %}}\n{{% tab name=\"Max Surge\" %}}",
    "position": 1063,
    "id": "paragraph_1063"
  },
  {
    "type": "paragraph",
    "content": "```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```",
    "originalSentence": "```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n ```",
    "position": 1064,
    "id": "paragraph_1064"
  },
  {
    "type": "paragraph",
    "content": "{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}",
    "originalSentence": "{{% /tab %}}\n{{% tab name=\"Hybrid\" %}}",
    "position": 1065,
    "id": "paragraph_1065"
  },
  {
    "type": "paragraph",
    "content": "```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```",
    "originalSentence": "```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n ```",
    "position": 1066,
    "id": "paragraph_1066"
  },
  {
    "type": "paragraph",
    "content": "{{% /tab %}}\n{{< /tabs >}}",
    "originalSentence": "{{% /tab %}}\n{{< /tabs >}}",
    "position": 1067,
    "id": "paragraph_1067"
  },
  {
    "type": "paragraph",
    "content": "### Progress Deadline Seconds",
    "originalSentence": "### Progress Deadline Seconds",
    "position": 1068,
    "id": "paragraph_1068"
  },
  {
    "type": "paragraph",
    "content": "`.spec.progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.\nand `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition.",
    "originalSentence": "`.spec.progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.\nand `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition.",
    "position": 1069,
    "id": "paragraph_1069"
  },
  {
    "type": "paragraph",
    "content": "If specified, this field needs to be greater than `.spec.minReadySeconds`.",
    "originalSentence": "If specified, this field needs to be greater than `.spec.minReadySeconds`.",
    "position": 1070,
    "id": "paragraph_1070"
  },
  {
    "type": "paragraph",
    "content": "### Min Ready Seconds",
    "originalSentence": "### Min Ready Seconds",
    "position": 1071,
    "id": "paragraph_1071"
  },
  {
    "type": "paragraph",
    "content": "`.spec.minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.\nThis defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
    "originalSentence": "`.spec.minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.\nThis defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
    "position": 1072,
    "id": "paragraph_1072"
  },
  {
    "type": "paragraph",
    "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}",
    "originalSentence": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}",
    "position": 1073,
    "id": "paragraph_1073"
  },
  {
    "type": "paragraph",
    "content": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)",
    "originalSentence": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)",
    "position": 1074,
    "id": "paragraph_1074"
  },
  {
    "type": "paragraph",
    "content": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`.spec.replicas`. Terminating pods can be tracked using the `.status.terminatingReplicas` field of the Deployment.",
    "originalSentence": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`.spec.replicas`. Terminating pods can be tracked using the `.status.terminatingReplicas` field of the Deployment.",
    "position": 1075,
    "id": "paragraph_1075"
  },
  {
    "type": "paragraph",
    "content": "### Revision History Limit",
    "originalSentence": "### Revision History Limit",
    "position": 1076,
    "id": "paragraph_1076"
  },
  {
    "type": "paragraph",
    "content": "A Deployment's revision history is stored in the ReplicaSets it controls.",
    "originalSentence": "A Deployment's revision history is stored in the ReplicaSets it controls.",
    "position": 1077,
    "id": "paragraph_1077"
  },
  {
    "type": "paragraph",
    "content": "`.spec.revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
    "originalSentence": "`.spec.revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
    "position": 1078,
    "id": "paragraph_1078"
  },
  {
    "type": "paragraph",
    "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.\nIn this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
    "originalSentence": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.\nIn this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
    "position": 1079,
    "id": "paragraph_1079"
  },
  {
    "type": "paragraph",
    "content": "`.spec.paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created.",
    "originalSentence": "`.spec.paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created.",
    "position": 1080,
    "id": "paragraph_1080"
  },
  {
    "type": "paragraph",
    "content": "## {{% heading \"whatsnext\" %}}",
    "originalSentence": "## {{% heading \"whatsnext\" %}}",
    "position": 1081,
    "id": "paragraph_1081"
  },
  {
    "type": "paragraph",
    "content": "* Learn more about [Pods](/docs/concepts/workloads/pods).\n* [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).\n* Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.\n* Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions.\n* Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "originalSentence": "* Learn more about [Pods](/docs/concepts/workloads/pods).\n* [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).\n* Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.\n* Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\n  you can use it to manage application availability during disruptions.\n* Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
    "position": 1082,
    "id": "paragraph_1082"
  },
  {
    "type": "code_block",
    "content": "kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml",
    "language": "shell",
    "originalSentence": "kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml",
    "position": 1083,
    "id": "code_block_1083"
  },
  {
    "type": "code_block",
    "content": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s",
    "language": "text",
    "originalSentence": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   0/3     0            0           1s",
    "position": 1084,
    "id": "code_block_1084"
  },
  {
    "type": "code_block",
    "content": "Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\n   deployment \"nginx-deployment\" successfully rolled out",
    "language": "text",
    "originalSentence": "Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\n   deployment \"nginx-deployment\" successfully rolled out",
    "position": 1085,
    "id": "code_block_1085"
  },
  {
    "type": "code_block",
    "content": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s",
    "language": "text",
    "originalSentence": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           18s",
    "position": 1086,
    "id": "code_block_1086"
  },
  {
    "type": "code_block",
    "content": "NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s",
    "language": "text",
    "originalSentence": "NAME                          DESIRED   CURRENT   READY   AGE\n   nginx-deployment-75675f5897   3         3         3       18s",
    "position": 1087,
    "id": "code_block_1087"
  },
  {
    "type": "code_block",
    "content": "NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897",
    "language": "text",
    "originalSentence": "NAME                                READY     STATUS    RESTARTS   AGE       LABELS\n   nginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n   nginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897",
    "position": 1088,
    "id": "code_block_1088"
  },
  {
    "type": "code_block",
    "content": "kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1",
    "language": "shell",
    "originalSentence": "kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1",
    "position": 1089,
    "id": "code_block_1089"
  },
  {
    "type": "code_block",
    "content": "kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1",
    "language": "shell",
    "originalSentence": "kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1",
    "position": 1090,
    "id": "code_block_1090"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment image updated",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment image updated",
    "position": 1091,
    "id": "code_block_1091"
  },
  {
    "type": "code_block",
    "content": "kubectl edit deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl edit deployment/nginx-deployment",
    "position": 1092,
    "id": "code_block_1092"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment edited",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment edited",
    "position": 1093,
    "id": "code_block_1093"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout status deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout status deployment/nginx-deployment",
    "position": 1094,
    "id": "code_block_1094"
  },
  {
    "type": "code_block",
    "content": "Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "language": "text",
    "originalSentence": "Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
    "position": 1095,
    "id": "code_block_1095"
  },
  {
    "type": "code_block",
    "content": "deployment \"nginx-deployment\" successfully rolled out",
    "language": "text",
    "originalSentence": "deployment \"nginx-deployment\" successfully rolled out",
    "position": 1096,
    "id": "code_block_1096"
  },
  {
    "type": "code_block",
    "content": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s",
    "language": "text",
    "originalSentence": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment   3/3     3            3           36s",
    "position": 1097,
    "id": "code_block_1097"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1098,
    "id": "code_block_1098"
  },
  {
    "type": "code_block",
    "content": "NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s",
    "language": "text",
    "originalSentence": "NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       6s\n  nginx-deployment-2035384211   0         0         0       36s",
    "position": 1099,
    "id": "code_block_1099"
  },
  {
    "type": "code_block",
    "content": "kubectl get pods",
    "language": "shell",
    "originalSentence": "kubectl get pods",
    "position": 1100,
    "id": "code_block_1100"
  },
  {
    "type": "code_block",
    "content": "NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s",
    "language": "text",
    "originalSentence": "NAME                                READY     STATUS    RESTARTS   AGE\n  nginx-deployment-1564180365-khku8   1/1       Running   0          14s\n  nginx-deployment-1564180365-nacti   1/1       Running   0          14s\n  nginx-deployment-1564180365-z9gth   1/1       Running   0          14s",
    "position": 1101,
    "id": "code_block_1101"
  },
  {
    "type": "code_block",
    "content": "kubectl describe deployments",
    "language": "shell",
    "originalSentence": "kubectl describe deployments",
    "position": 1102,
    "id": "code_block_1102"
  },
  {
    "type": "code_block",
    "content": "Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.kubernetes.io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0",
    "language": "text",
    "originalSentence": "Name:                   nginx-deployment\n  Namespace:              default\n  CreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\n  Labels:                 app=nginx\n  Annotations:            deployment.kubernetes.io/revision=2\n  Selector:               app=nginx\n  Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n  StrategyType:           RollingUpdate\n  MinReadySeconds:        0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n     Containers:\n      nginx:\n        Image:        nginx:1.16.1\n        Port:         80/TCP\n        Environment:  <none>\n        Mounts:       <none>\n      Volumes:        <none>\n    Conditions:\n      Type           Status  Reason\n      ----           ------  ------\n      Available      True    MinimumReplicasAvailable\n      Progressing    True    NewReplicaSetAvailable\n    OldReplicaSets:  <none>\n    NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n    Events:\n      Type    Reason             Age   From                   Message\n      ----    ------             ----  ----                   -------\n      Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n      Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n      Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n      Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n      Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0",
    "position": 1103,
    "id": "code_block_1103"
  },
  {
    "type": "code_block",
    "content": "kubectl set image deployment/nginx-deployment nginx=nginx:1.161",
    "language": "shell",
    "originalSentence": "kubectl set image deployment/nginx-deployment nginx=nginx:1.161",
    "position": 1104,
    "id": "code_block_1104"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment image updated",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment image updated",
    "position": 1105,
    "id": "code_block_1105"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout status deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout status deployment/nginx-deployment",
    "position": 1106,
    "id": "code_block_1106"
  },
  {
    "type": "code_block",
    "content": "Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
    "language": "text",
    "originalSentence": "Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
    "position": 1107,
    "id": "code_block_1107"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1108,
    "id": "code_block_1108"
  },
  {
    "type": "code_block",
    "content": "NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s",
    "language": "text",
    "originalSentence": "NAME                          DESIRED   CURRENT   READY   AGE\n  nginx-deployment-1564180365   3         3         3       25s\n  nginx-deployment-2035384211   0         0         0       36s\n  nginx-deployment-3066724191   1         1         0       6s",
    "position": 1109,
    "id": "code_block_1109"
  },
  {
    "type": "code_block",
    "content": "kubectl get pods",
    "language": "shell",
    "originalSentence": "kubectl get pods",
    "position": 1110,
    "id": "code_block_1110"
  },
  {
    "type": "code_block",
    "content": "NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s",
    "language": "text",
    "originalSentence": "NAME                                READY     STATUS             RESTARTS   AGE\n  nginx-deployment-1564180365-70iae   1/1       Running            0          25s\n  nginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\n  nginx-deployment-1564180365-hysrc   1/1       Running            0          25s\n  nginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s",
    "position": 1111,
    "id": "code_block_1111"
  },
  {
    "type": "code_block",
    "content": "kubectl describe deployment",
    "language": "shell",
    "originalSentence": "kubectl describe deployment",
    "position": 1112,
    "id": "code_block_1112"
  },
  {
    "type": "code_block",
    "content": "Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1",
    "language": "text",
    "originalSentence": "Name:           nginx-deployment\n  Namespace:      default\n  CreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\n  Labels:         app=nginx\n  Selector:       app=nginx\n  Replicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\n  StrategyType:       RollingUpdate\n  MinReadySeconds:    0\n  RollingUpdateStrategy:  25% max unavailable, 25% max surge\n  Pod Template:\n    Labels:  app=nginx\n    Containers:\n     nginx:\n      Image:        nginx:1.161\n      Port:         80/TCP\n      Host Port:    0/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    ReplicaSetUpdated\n  OldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\n  NewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\n  Events:\n    FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n    --------- --------    -----   ----                    -------------   --------    ------              -------\n    1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n    22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n    21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n    13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1",
    "position": 1113,
    "id": "code_block_1113"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout history deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout history deployment/nginx-deployment",
    "position": 1114,
    "id": "code_block_1114"
  },
  {
    "type": "code_block",
    "content": "deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161",
    "language": "text",
    "originalSentence": "deployments \"nginx-deployment\"\n   REVISION    CHANGE-CAUSE\n   1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n   2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161",
    "position": 1115,
    "id": "code_block_1115"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout history deployment/nginx-deployment --revision=2",
    "language": "shell",
    "originalSentence": "kubectl rollout history deployment/nginx-deployment --revision=2",
    "position": 1116,
    "id": "code_block_1116"
  },
  {
    "type": "code_block",
    "content": "deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.",
    "language": "text",
    "originalSentence": "deployments \"nginx-deployment\" revision 2\n     Labels:       app=nginx\n             pod-template-hash=1159050644\n     Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n     Containers:\n      nginx:\n       Image:      nginx:1.16.1\n       Port:       80/TCP\n        QoS Tier:\n           cpu:      BestEffort\n           memory:   BestEffort\n       Environment Variables:      <none>\n     No volumes.",
    "position": 1117,
    "id": "code_block_1117"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout undo deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout undo deployment/nginx-deployment",
    "position": 1118,
    "id": "code_block_1118"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment rolled back",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment rolled back",
    "position": 1119,
    "id": "code_block_1119"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout undo deployment/nginx-deployment --to-revision=2",
    "language": "shell",
    "originalSentence": "kubectl rollout undo deployment/nginx-deployment --to-revision=2",
    "position": 1120,
    "id": "code_block_1120"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment rolled back",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment rolled back",
    "position": 1121,
    "id": "code_block_1121"
  },
  {
    "type": "code_block",
    "content": "kubectl get deployment nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl get deployment nginx-deployment",
    "position": 1122,
    "id": "code_block_1122"
  },
  {
    "type": "code_block",
    "content": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m",
    "language": "text",
    "originalSentence": "NAME               READY   UP-TO-DATE   AVAILABLE   AGE\n   nginx-deployment   3/3     3            3           30m",
    "position": 1123,
    "id": "code_block_1123"
  },
  {
    "type": "code_block",
    "content": "kubectl describe deployment nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl describe deployment nginx-deployment",
    "position": 1124,
    "id": "code_block_1124"
  },
  {
    "type": "code_block",
    "content": "Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.kubernetes.io/revision=4\n                           kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0",
    "language": "text",
    "originalSentence": "Name:                   nginx-deployment\n   Namespace:              default\n   CreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\n   Labels:                 app=nginx\n   Annotations:            deployment.kubernetes.io/revision=4\n                           kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n   Selector:               app=nginx\n   Replicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\n   StrategyType:           RollingUpdate\n   MinReadySeconds:        0\n   RollingUpdateStrategy:  25% max unavailable, 25% max surge\n   Pod Template:\n     Labels:  app=nginx\n     Containers:\n      nginx:\n       Image:        nginx:1.16.1\n       Port:         80/TCP\n       Host Port:    0/TCP\n       Environment:  <none>\n       Mounts:       <none>\n     Volumes:        <none>\n   Conditions:\n     Type           Status  Reason\n     ----           ------  ------\n     Available      True    MinimumReplicasAvailable\n     Progressing    True    NewReplicaSetAvailable\n   OldReplicaSets:  <none>\n   NewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\n   Events:\n     Type    Reason              Age   From                   Message\n     ----    ------              ----  ----                   -------\n     Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n     Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n     Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n     Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0",
    "position": 1125,
    "id": "code_block_1125"
  },
  {
    "type": "code_block",
    "content": "kubectl scale deployment/nginx-deployment --replicas=10",
    "language": "shell",
    "originalSentence": "kubectl scale deployment/nginx-deployment --replicas=10",
    "position": 1126,
    "id": "code_block_1126"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment scaled",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment scaled",
    "position": 1127,
    "id": "code_block_1127"
  },
  {
    "type": "code_block",
    "content": "kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80",
    "language": "shell",
    "originalSentence": "kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80",
    "position": 1128,
    "id": "code_block_1128"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment scaled",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment scaled",
    "position": 1129,
    "id": "code_block_1129"
  },
  {
    "type": "code_block",
    "content": "kubectl get deploy",
    "language": "shell",
    "originalSentence": "kubectl get deploy",
    "position": 1130,
    "id": "code_block_1130"
  },
  {
    "type": "code_block",
    "content": "NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s",
    "language": "text",
    "originalSentence": "NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx-deployment     10        10        10           10          50s",
    "position": 1131,
    "id": "code_block_1131"
  },
  {
    "type": "code_block",
    "content": "kubectl set image deployment/nginx-deployment nginx=nginx:sometag",
    "language": "shell",
    "originalSentence": "kubectl set image deployment/nginx-deployment nginx=nginx:sometag",
    "position": 1132,
    "id": "code_block_1132"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment image updated",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment image updated",
    "position": 1133,
    "id": "code_block_1133"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1134,
    "id": "code_block_1134"
  },
  {
    "type": "code_block",
    "content": "NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m",
    "language": "text",
    "originalSentence": "NAME                          DESIRED   CURRENT   READY     AGE\n  nginx-deployment-1989198191   5         5         0         9s\n  nginx-deployment-618515232    8         8         8         1m",
    "position": 1135,
    "id": "code_block_1135"
  },
  {
    "type": "code_block",
    "content": "kubectl get deploy",
    "language": "shell",
    "originalSentence": "kubectl get deploy",
    "position": 1136,
    "id": "code_block_1136"
  },
  {
    "type": "code_block",
    "content": "NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m",
    "language": "text",
    "originalSentence": "NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     15        18        7            8           7m",
    "position": 1137,
    "id": "code_block_1137"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1138,
    "id": "code_block_1138"
  },
  {
    "type": "code_block",
    "content": "NAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m",
    "language": "text",
    "originalSentence": "NAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   7         7         0         7m\nnginx-deployment-618515232    11        11        11        7m",
    "position": 1139,
    "id": "code_block_1139"
  },
  {
    "type": "code_block",
    "content": "kubectl get deploy",
    "language": "shell",
    "originalSentence": "kubectl get deploy",
    "position": 1140,
    "id": "code_block_1140"
  },
  {
    "type": "code_block",
    "content": "NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m",
    "language": "text",
    "originalSentence": "NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\n  nginx     3         3         3            3           1m",
    "position": 1141,
    "id": "code_block_1141"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1142,
    "id": "code_block_1142"
  },
  {
    "type": "code_block",
    "content": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m",
    "language": "text",
    "originalSentence": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         1m",
    "position": 1143,
    "id": "code_block_1143"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout pause deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout pause deployment/nginx-deployment",
    "position": 1144,
    "id": "code_block_1144"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment paused",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment paused",
    "position": 1145,
    "id": "code_block_1145"
  },
  {
    "type": "code_block",
    "content": "kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1",
    "language": "shell",
    "originalSentence": "kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1",
    "position": 1146,
    "id": "code_block_1146"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment image updated",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment image updated",
    "position": 1147,
    "id": "code_block_1147"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout history deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout history deployment/nginx-deployment",
    "position": 1148,
    "id": "code_block_1148"
  },
  {
    "type": "code_block",
    "content": "deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>",
    "language": "text",
    "originalSentence": "deployments \"nginx\"\n  REVISION  CHANGE-CAUSE\n  1   <none>",
    "position": 1149,
    "id": "code_block_1149"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1150,
    "id": "code_block_1150"
  },
  {
    "type": "code_block",
    "content": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m",
    "language": "text",
    "originalSentence": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   3         3         3         2m",
    "position": 1151,
    "id": "code_block_1151"
  },
  {
    "type": "code_block",
    "content": "kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi",
    "language": "shell",
    "originalSentence": "kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi",
    "position": 1152,
    "id": "code_block_1152"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment resource requirements updated",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment resource requirements updated",
    "position": 1153,
    "id": "code_block_1153"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout resume deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout resume deployment/nginx-deployment",
    "position": 1154,
    "id": "code_block_1154"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment resumed",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment resumed",
    "position": 1155,
    "id": "code_block_1155"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs --watch",
    "language": "shell",
    "originalSentence": "kubectl get rs --watch",
    "position": 1156,
    "id": "code_block_1156"
  },
  {
    "type": "code_block",
    "content": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s",
    "language": "text",
    "originalSentence": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   2         2         2         2m\n  nginx-3926361531   2         2         0         6s\n  nginx-3926361531   2         2         1         18s\n  nginx-2142116321   1         2         2         2m\n  nginx-2142116321   1         2         2         2m\n  nginx-3926361531   3         2         1         18s\n  nginx-3926361531   3         2         1         18s\n  nginx-2142116321   1         1         1         2m\n  nginx-3926361531   3         3         1         18s\n  nginx-3926361531   3         3         2         19s\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         1         1         2m\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         20s",
    "position": 1157,
    "id": "code_block_1157"
  },
  {
    "type": "code_block",
    "content": "kubectl get rs",
    "language": "shell",
    "originalSentence": "kubectl get rs",
    "position": 1158,
    "id": "code_block_1158"
  },
  {
    "type": "code_block",
    "content": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s",
    "language": "text",
    "originalSentence": "NAME               DESIRED   CURRENT   READY     AGE\n  nginx-2142116321   0         0         0         2m\n  nginx-3926361531   3         3         3         28s",
    "position": 1159,
    "id": "code_block_1159"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout status deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout status deployment/nginx-deployment",
    "position": 1160,
    "id": "code_block_1160"
  },
  {
    "type": "code_block",
    "content": "Waiting for rollout to finish: 2 of 3 updated replicas are available...\ndeployment \"nginx-deployment\" successfully rolled out",
    "language": "text",
    "originalSentence": "Waiting for rollout to finish: 2 of 3 updated replicas are available...\ndeployment \"nginx-deployment\" successfully rolled out",
    "position": 1161,
    "id": "code_block_1161"
  },
  {
    "type": "code_block",
    "content": "kubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'",
    "language": "shell",
    "originalSentence": "kubectl patch deployment/nginx-deployment -p '{\"spec\":{\"progressDeadlineSeconds\":600}}'",
    "position": 1162,
    "id": "code_block_1162"
  },
  {
    "type": "code_block",
    "content": "deployment.apps/nginx-deployment patched",
    "language": "text",
    "originalSentence": "deployment.apps/nginx-deployment patched",
    "position": 1163,
    "id": "code_block_1163"
  },
  {
    "type": "code_block",
    "content": "kubectl describe deployment nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl describe deployment nginx-deployment",
    "position": 1164,
    "id": "code_block_1164"
  },
  {
    "type": "code_block",
    "content": "<...>\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...>",
    "language": "text",
    "originalSentence": "<...>\nConditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     True    ReplicaSetUpdated\n  ReplicaFailure  True    FailedCreate\n<...>",
    "position": 1165,
    "id": "code_block_1165"
  },
  {
    "type": "code_block",
    "content": "status:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.\n    reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2",
    "language": "text",
    "originalSentence": "status:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: Replica set \"nginx-deployment-4262182780\" is progressing.\n    reason: ReplicaSetUpdated\n    status: \"True\"\n    type: Progressing\n  - lastTransitionTime: 2016-10-04T12:25:42Z\n    lastUpdateTime: 2016-10-04T12:25:42Z\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: \"True\"\n    type: Available\n  - lastTransitionTime: 2016-10-04T12:25:39Z\n    lastUpdateTime: 2016-10-04T12:25:39Z\n    message: 'Error creating: pods \"nginx-deployment-4262182780-\" is forbidden: exceeded quota:\n      object-counts, requested: pods=1, used: pods=3, limited: pods=2'\n    reason: FailedCreate\n    status: \"True\"\n    type: ReplicaFailure\n  observedGeneration: 3\n  replicas: 2\n  unavailableReplicas: 2",
    "position": 1166,
    "id": "code_block_1166"
  },
  {
    "type": "code_block",
    "content": "Conditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate",
    "language": "text",
    "originalSentence": "Conditions:\n  Type            Status  Reason\n  ----            ------  ------\n  Available       True    MinimumReplicasAvailable\n  Progressing     False   ProgressDeadlineExceeded\n  ReplicaFailure  True    FailedCreate",
    "position": 1167,
    "id": "code_block_1167"
  },
  {
    "type": "code_block",
    "content": "Conditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable",
    "language": "text",
    "originalSentence": "Conditions:\n  Type          Status  Reason\n  ----          ------  ------\n  Available     True    MinimumReplicasAvailable\n  Progressing   True    NewReplicaSetAvailable",
    "position": 1168,
    "id": "code_block_1168"
  },
  {
    "type": "code_block",
    "content": "kubectl rollout status deployment/nginx-deployment",
    "language": "shell",
    "originalSentence": "kubectl rollout status deployment/nginx-deployment",
    "position": 1169,
    "id": "code_block_1169"
  },
  {
    "type": "code_block",
    "content": "Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\nerror: deployment \"nginx\" exceeded its progress deadline",
    "language": "text",
    "originalSentence": "Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\nerror: deployment \"nginx\" exceeded its progress deadline",
    "position": 1170,
    "id": "code_block_1170"
  },
  {
    "type": "code_block",
    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1",
    "language": "yaml",
    "originalSentence": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1",
    "position": 1171,
    "id": "code_block_1171"
  },
  {
    "type": "code_block",
    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1",
    "language": "yaml",
    "originalSentence": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1",
    "position": 1172,
    "id": "code_block_1172"
  },
  {
    "type": "code_block",
    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1",
    "language": "yaml",
    "originalSentence": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1",
    "position": 1173,
    "id": "code_block_1173"
  }
]