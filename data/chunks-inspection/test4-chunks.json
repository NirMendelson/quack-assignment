{
  "filename": "test4.md",
  "totalChunks": 1335,
  "chunksByType": {
    "window": {
      "count": 68,
      "chunks": [
        {
          "id": "w_0",
          "content": "reviewers: janetkuo\ntitle: Deployments\napi_metadata: apiVersion: \"apps/v1\"\nkind: \"Deployment\"\nfeature:\ntitle: Automated rollouts and rollbacks\ndescription: >\n  Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.\ndescription: >-\nA Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.\ncontent_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.\n{{< /note >}}",
          "position": 0,
          "windowSize": 179
        },
        {
          "id": "w_33",
          "content": "The following are typical use cases for Deployments: [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not. [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment. [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment. [Scale up the Deployment to facilitate more load](#scaling-a-deployment). [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
          "position": 0,
          "windowSize": 161
        },
        {
          "id": "w_72",
          "content": "The following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods: {{% code_sample file=\"controllers/nginx-deployment.yaml\" %}} In this example: A Deployment named `nginx-deployment` is created, indicated by the\n`.metadata.name` field. This name will become the basis for the ReplicaSets\nand Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\nfor more details. The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.spec.replicas` field. The `.spec.selector` field defines how the created ReplicaSet finds which Pods to manage.\nIn this case, you select a label that is defined in the Pod template (`app: nginx`).\nHowever, more sophisticated selection rules are possible,\nas long as the Pod template itself satisfies the rule.\n\n{{< note >}}\nThe `.spec.selector.matchLabels` field is a map of {key,value} pairs.\nA single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\nwhose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".\nAll of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.\n{{< /note >}}\n The `.spec.template` field contains the following sub-fields:\n* The Pods are labeled `app: nginx`using the `.metadata.labels` field.\n* The Pod template's specification, or `.spec` field, indicates that\n  the Pods run one container, `nginx`, which runs the `nginx`\n  [Docker Hub](https://hub.docker.com/) image at version 1.14.2.\n* Create one container and name it `nginx` using the `.spec.containers[0].name` field. Before you begin, make sure your Kubernetes cluster is up and running.\nFollow the steps given below to create the above Deployment: Create the Deployment by running the following command:\n\n```shell\nkubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n```\n Run `kubectl get deployments` to check if the Deployment was created.\n\nIf the Deployment is still being created, the output is similar to the following:\n```\nNAME ",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_73",
          "content": "`app: nginx`using the `.metadata.labels` field.\n* The Pod template's specification, or `.spec` field, indicates that\n  the Pods run one container, `nginx`, which runs the `nginx`\n  [Docker Hub](https://hub.docker.com/) image at version 1.14.2.\n* Create one container and name it `nginx` using the `.spec.containers[0].name` field. Before you begin, make sure your Kubernetes cluster is up and running.\nFollow the steps given below to create the above Deployment: Create the Deployment by running the following command:\n\n```shell\nkubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n```\n Run `kubectl get deployments` to check if the Deployment was created.\n\nIf the Deployment is still being created, the output is similar to the following:\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   0/3     0            0           1s\n```\nWhen you inspect the Deployments in your cluster, the following fields are displayed:\n* `NAME` lists the names of the Deployments in the namespace.\n* `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired.\n* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.\n* `AVAILABLE` displays how many replicas of the application are available to your users.\n* `AGE` displays the amount of time that the application has been running.\n\nNotice how the number of desired replicas is 3 according to `.spec.replicas` field.\n To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.\n\nThe output is similar to:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\ndeployment \"nginx-deployment\" successfully rolled out\n```\n Run the",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_74",
          "content": "replicas of the application are available to your users. It follows the pattern ready/desired.\n* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.\n* `AVAILABLE` displays how many replicas of the application are available to your users.\n* `AGE` displays the amount of time that the application has been running.\n\nNotice how the number of desired replicas is 3 according to `.spec.replicas` field.\n To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.\n\nThe output is similar to:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\ndeployment \"nginx-deployment\" successfully rolled out\n```\n Run the `kubectl get deployments` again a few seconds later.\nThe output is similar to this:\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           18s\n```\nNotice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.\n To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-75675f5897   3         3         3       18s\n```\nReplicaSet output shows the following fields:\n\n* `NAME` lists the names",
          "position": 360,
          "windowSize": 280
        },
        {
          "id": "w_75",
          "content": "up-to-date (they contain the latest Pod template) and available.\n To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-75675f5897   3         3         3       18s\n```\nReplicaSet output shows the following fields:\n\n* `NAME` lists the names of the ReplicaSets in the namespace.\n* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_.\n* `CURRENT` displays how many replicas are currently running.\n* `READY` displays how many replicas of the application are available to your users.\n* `AGE` displays the amount of time that the application has been running.\n\nNotice that the name of the ReplicaSet is always formatted as\n`[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\nwhich are created.\n\nThe `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.\n To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.\nThe output is similar to:\n```\nNAME                                READY     STATUS    RESTARTS   AGE       LABELS\nnginx-deployment-75675f5897-7ci7o   1/1       Running   0   ",
          "position": 540,
          "windowSize": 280
        },
        {
          "id": "w_76",
          "content": "Pods\nwhich are created.\n\nThe `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.\n To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.\nThe output is similar to:\n```\nNAME                                READY     STATUS    RESTARTS   AGE       LABELS\nnginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\nnginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\nnginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n```\nThe created ReplicaSet ensures that there are three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.\n{{< /note >}}",
          "position": 720,
          "windowSize": 238
        },
        {
          "id": "w_77",
          "content": "three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.\n{{< /note >}}",
          "position": 900,
          "windowSize": 58
        },
        {
          "id": "w_248",
          "content": "{{< caution >}}\nDo not change this label.\n{{< /caution >}} The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
          "position": 0,
          "windowSize": 77
        },
        {
          "id": "w_266",
          "content": "{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.spec.template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.\n{{< /note >}} Follow the steps given below to update your Deployment: Let's update the nginx Pods to use the `nginx:1.16.1` image instead of the `nginx:1.14.2` image.\n\n```shell\nkubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1\n```\n\nor use the following command:\n\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n```\nwhere `deployment/nginx-deployment` indicates the Deployment,\n`nginx` indicates the Container the update will take place and\n`nginx:1.16.1` indicates the new image and its tag.\n\n\nThe output is similar to:\n\n```\ndeployment.apps/nginx-deployment image updated\n```\n\nAlternatively, you can `edit` the Deployment and change `.spec.template.spec.containers[0].image` from `nginx:1.14.2` to `nginx:1.16.1`:\n\n```shell\nkubectl edit deployment/nginx-deployment\n```\n\nThe output is similar to:\n\n```\ndeployment.apps/nginx-deployment edited\n```\n To see the rollout status, run:\n\n```shell\nkubectl rollout status deployment/nginx-deployment\n```\n\nThe output is similar to this:\n\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\n```\n\nor\n\n```\ndeployment \"nginx-deployment\" successfully rolled out\n``` Get more details on your updated Deployment: After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.\nThe output is similar to this:\n\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           36s\n```\n Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_267",
          "content": "is similar to this:\n\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           36s\n```\n Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-1564180365   3         3         3       6s\nnginx-deployment-2035384211   0         0         0       36s\n```\n Running `get pods` should now show only the new Pods:\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS    RESTARTS   AGE\nnginx-deployment-1564180365-khku8   1/1       Running   0          14s\nnginx-deployment-1564180365-nacti   1/1  ",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_268",
          "content": "   0       36s\n```\n Running `get pods` should now show only the new Pods:\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS    RESTARTS   AGE\nnginx-deployment-1564180365-khku8   1/1       Running   0          14s\nnginx-deployment-1564180365-nacti   1/1       Running   0          14s\nnginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n```\n\nNext time you want to update these Pods, you only need to update the Deployment's Pod template again.\n\nDeployment ensures that only a certain number of Pods are down while they are being updated. By default,\nit ensures that at least 75% of the desired number of Pods are up (25% max unavailable).\n\nDeployment also ensures that only a certain number of Pods are created above the desired number of Pods.\nBy default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).\n\nFor example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\nthen deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\nnew Pods have come up, and does not create new Pods until a sufficient number of",
          "position": 360,
          "windowSize": 280
        },
        {
          "id": "w_269",
          "content": "of the desired number of Pods are up (25% max unavailable).\n\nDeployment also ensures that only a certain number of Pods are created above the desired number of Pods.\nBy default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).\n\nFor example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\nthen deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\nnew Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.\nIt makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\na Deployment with 4 replicas, the number of Pods would be between 3 and 5.\n Get details of your Deployment:\n```shell\nkubectl describe deployments\n```\nThe output is similar to this:\n```\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=2\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:",
          "position": 540,
          "windowSize": 280
        },
        {
          "id": "w_270",
          "content": "     default\nCreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=2\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n   Containers:\n    nginx:\n      Image:        nginx:1.16.1\n      Port:         80/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    NewReplicaSetAvailable\n  OldReplicaSets:  <none>\n  NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n  Events:\n    Type    Reason       ",
          "position": 720,
          "windowSize": 280
        },
        {
          "id": "w_271",
          "content": "Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    NewReplicaSetAvailable\n  OldReplicaSets:  <none>\n  NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n  Events:\n    Type    Reason             Age   From                   Message\n    ----    ------             ----  ----                   -------\n    Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n    Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up",
          "position": 900,
          "windowSize": 280
        },
        {
          "id": "w_272",
          "content": " deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n    Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n    Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n```\nHere you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\nand scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n(nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\nto 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.\nIt then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.\nFinally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total",
          "position": 1080,
          "windowSize": 280
        },
        {
          "id": "w_273",
          "content": "new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.\nIt then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.\nFinally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.\n{{< /note >}}",
          "position": 1260,
          "windowSize": 120
        },
        {
          "id": "w_405",
          "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.spec.selector` but whose template does not match `.spec.template` are scaled down. Eventually, the new\nReplicaSet is scaled to `.spec.replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.1`, when only 3\nreplicas of `nginx:1.14.2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.2` Pods that it had created, and starts creating\n`nginx:1.16.1` Pods. It does not wait for the 5 replicas of `nginx:1.14.2` to be created\nbefore changing course.",
          "position": 0,
          "windowSize": 176
        },
        {
          "id": "w_453",
          "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.\nIn any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications. {{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.\n{{< /note >}} Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet. Selector updates changes the existing value in a selector key -- result in the same behavior as additions. Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
          "position": 0,
          "windowSize": 178
        },
        {
          "id": "w_480",
          "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.\nBy default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit). {{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`.spec.template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.\nThis means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.\n{{< /note >}} Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.1`:\n\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.161\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n The rollout gets stuck. You can verify it by checking the rollout status:\n\n```shell\nkubectl rollout status deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\nWaiting for rollout to finish: 1 out of 3 new replicas have been updated...\n```\n Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).\n You see that the number of old replicas (adding the replica count from\n`nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\nnew replicas (from `nginx-deployment-3066724191`) is 1.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY ",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_481",
          "content": "is similar to this:\n```\nWaiting for rollout to finish: 1 out of 3 new replicas have been updated...\n```\n Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).\n You see that the number of old replicas (adding the replica count from\n`nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\nnew replicas (from `nginx-deployment-3066724191`) is 1.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-1564180365   3         3         3       25s\nnginx-deployment-2035384211   0         0         0       36s\nnginx-deployment-3066724191   1         1         0       6s\n```\n Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS             RESTARTS   AGE\nnginx-deployment-1564180365-70iae   1/1       Running   ",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_482",
          "content": "     6s\n```\n Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS             RESTARTS   AGE\nnginx-deployment-1564180365-70iae   1/1       Running            0          25s\nnginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\nnginx-deployment-1564180365-hysrc   1/1       Running            0          25s\nnginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n```\n\n{{< note >}}\nThe Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.\n{{< /note >}}\n Get the description of the Deployment:\n```shell\nkubectl describe deployment\n```\n\nThe output is similar to this:\n```\nName:           nginx-deployment\nNamespace:      default\nCreationTimestamp:  Tue, 15 Mar 2016 14:48:04",
          "position": 360,
          "windowSize": 280
        },
        {
          "id": "w_483",
          "content": "  25s\nnginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n```\n\n{{< note >}}\nThe Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.\n{{< /note >}}\n Get the description of the Deployment:\n```shell\nkubectl describe deployment\n```\n\nThe output is similar to this:\n```\nName:           nginx-deployment\nNamespace:      default\nCreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\nLabels:         app=nginx\nSelector:       app=nginx\nReplicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\nStrategyType:       RollingUpdate\nMinReadySeconds:    0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.161\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    ReplicaSetUpdated\nOldReplicaSets:  ",
          "position": 540,
          "windowSize": 280
        },
        {
          "id": "w_484",
          "content": "Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    ReplicaSetUpdated\nOldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\nNewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\nEvents:\n  FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n  --------- --------    -----   ----                    -------------   --------    ------              -------\n  1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n",
          "position": 720,
          "windowSize": 280
        },
        {
          "id": "w_485",
          "content": "                   -------------   --------    ------              -------\n  1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n  21s       21s",
          "position": 900,
          "windowSize": 280
        },
        {
          "id": "w_486",
          "content": " {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n  21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n  21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n  13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n  13s       13s         1",
          "position": 1080,
          "windowSize": 280
        },
        {
          "id": "w_487",
          "content": "         Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n  13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n  13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n```\n\nTo fix this, you need to rollback to a previous revision of Deployment that is stable.",
          "position": 1260,
          "windowSize": 154
        },
        {
          "id": "w_553",
          "content": "Follow the steps given below to check the rollout history: First, check the revisions of this Deployment:\n```shell\nkubectl rollout history deployment/nginx-deployment\n```\nThe output is similar to this:\n```\ndeployments \"nginx-deployment\"\nREVISION    CHANGE-CAUSE\n1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n```\n\n`CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:\n\n* Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.io/change-cause=\"image updated to 1.16.1\"`\n* Manually editing the manifest of the resource.\n To see the details of each revision, run:\n```shell\nkubectl rollout history deployment/nginx-deployment --revision=2\n```\n\nThe output is similar to this:\n```\ndeployments \"nginx-deployment\" revision 2\n  Labels:       app=nginx\n          pod-template-hash=1159050644\n  Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n  Containers:\n   nginx:\n    Image:      nginx:1.16.1\n    Port:       80/TCP\n     QoS Tier:\n        cpu:      BestEffort\n        memory:   BestEffort\n    Environment Variables:      <none>\n  No volumes.\n```",
          "position": 0,
          "windowSize": 227
        },
        {
          "id": "w_554",
          "content": " 80/TCP\n     QoS Tier:\n        cpu:      BestEffort\n        memory:   BestEffort\n    Environment Variables:      <none>\n  No volumes.\n```",
          "position": 180,
          "windowSize": 47
        },
        {
          "id": "w_587",
          "content": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. Now you've decided to undo the current rollout and rollback to the previous revision:\n```shell\nkubectl rollout undo deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment rolled back\n```\nAlternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n```shell\nkubectl rollout undo deployment/nginx-deployment --to-revision=2\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment rolled back\n```\n\nFor more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).\n\nThe Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\nfor rolling back to revision 2 is generated from Deployment controller.\n Check if the rollback was successful and the Deployment is running as expected, run:\n```shell\nkubectl get deployment nginx-deployment\n```\n\nThe output is similar to this:\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           30m\n``` Get the description of the Deployment:\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=4\n            ",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_588",
          "content": "30m\n``` Get the description of the Deployment:\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=4\n                        kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.16.1\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----       ",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_589",
          "content": "max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.16.1\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\nEvents:\n  Type    Reason              Age   From                   Message\n  ----    ------              ----  ----                   -------\n  Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n  Normal  ScalingReplicaSet   11m",
          "position": 360,
          "windowSize": 280
        },
        {
          "id": "w_590",
          "content": "   ------              ----  ----                   -------\n  Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n  Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n  Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n```",
          "position": 540,
          "windowSize": 218
        },
        {
          "id": "w_591",
          "content": "nginx-deployment-595696685f to 1\n  Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n  Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n```",
          "position": 720,
          "windowSize": 38
        },
        {
          "id": "w_627",
          "content": "You can scale a Deployment by using the following command: The output is similar to this: Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods. The output is similar to this:",
          "position": 0,
          "windowSize": 60
        },
        {
          "id": "w_639",
          "content": "RollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. Ensure that the 10 replicas in your Deployment are running.\n```shell\nkubectl get deploy\n```\nThe output is similar to this:\n\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     10        10        10           10          50s\n```\n You update to a new image which happens to be unresolvable from inside the cluster.\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:sometag\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n```shell\nkubectl get rs\n```\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   5         5         0     ",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_640",
          "content": "to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n```shell\nkubectl get rs\n```\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   5         5         0         9s\nnginx-deployment-618515232    8         8         8         1m\n```\n Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run: The output is similar to this: The rollout status confirms how the",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_641",
          "content": "ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run: The output is similar to this: The rollout status confirms how the replicas were added to each ReplicaSet. The output is similar to this:",
          "position": 360,
          "windowSize": 112
        },
        {
          "id": "w_710",
          "content": "When you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. For example, with a Deployment that was created:\n\nGet the Deployment details:\n```shell\nkubectl get deploy\n```\nThe output is similar to this:\n```\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx     3         3         3            3           1m\n```\nGet the rollout status:\n```shell\nkubectl get rs\n```\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   3         3         3         1m\n```\n Pause by running the following command:\n```shell\nkubectl rollout pause deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment paused\n```\n Then update the image of the Deployment:\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n Notice that no new rollout started:\n```shell\nkubectl rollout history deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployments \"nginx\"\nREVISION  CHANGE-CAUSE\n1   <none>\n``` Get the rollout status to verify that the existing ReplicaSet has not changed:\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME           ",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_711",
          "content": "      3         1m\n```\n Pause by running the following command:\n```shell\nkubectl rollout pause deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment paused\n```\n Then update the image of the Deployment:\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n Notice that no new rollout started:\n```shell\nkubectl rollout history deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployments \"nginx\"\nREVISION  CHANGE-CAUSE\n1   <none>\n``` Get the rollout status to verify that the existing ReplicaSet has not changed:\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   3         3         3         2m\n```\n You can make as many updates as you wish, for example, update the resources that will be used:\n```shell\nkubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment resource requirements updated\n```\n\nThe initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\nthe Deployment will not have any effect as long as the Deployment rollout is paused.\n Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n```shell\nkubectl rollout resume deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment resumed\n``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.\n```shell\nkubectl get rs --watch\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY    ",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_712",
          "content": "Deployment prior to pausing its rollout will continue its function, but new updates to\nthe Deployment will not have any effect as long as the Deployment rollout is paused.\n Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n```shell\nkubectl rollout resume deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment resumed\n``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.\n```shell\nkubectl get rs --watch\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   2         2         2         2m\nnginx-3926361531   2         2         0         6s\nnginx-3926361531   2         2         1         18s\nnginx-2142116321   1         2         2         2m\nnginx-2142116321   1         2         2         2m\nnginx-3926361531   3         2         1        ",
          "position": 360,
          "windowSize": 280
        },
        {
          "id": "w_713",
          "content": " 1         18s\nnginx-2142116321   1         2         2         2m\nnginx-2142116321   1         2         2         2m\nnginx-3926361531   3         2         1         18s\nnginx-3926361531   3         2         1         18s\nnginx-2142116321   1         1         1         2m\nnginx-3926361531   3         3         1         18s\nnginx-3926361531   3         3         2         19s\nnginx-2142116321   0         1         1         2m\nnginx-2142116321   0         1         1        ",
          "position": 540,
          "windowSize": 280
        },
        {
          "id": "w_714",
          "content": " 1         18s\nnginx-3926361531   3         3         2         19s\nnginx-2142116321   0         1         1         2m\nnginx-2142116321   0         1         1         2m\nnginx-2142116321   0         0         0         2m\nnginx-3926361531   3         3         3         20s\n``` Get the status of the latest rollout:\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   0         0         0         2m\nnginx-3926361531   3         3         3         28s\n``` {{< note >}}\nYou cannot rollback a paused Deployment until you resume it.\n{{< /note >}}",
          "position": 720,
          "windowSize": 275
        },
        {
          "id": "w_715",
          "content": "         DESIRED   CURRENT   READY     AGE\nnginx-2142116321   0         0         0         2m\nnginx-3926361531   3         3         3         28s\n``` {{< note >}}\nYou cannot rollback a paused Deployment until you resume it.\n{{< /note >}}",
          "position": 900,
          "windowSize": 95
        },
        {
          "id": "w_760",
          "content": "A Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
          "position": 0,
          "windowSize": 27
        },
        {
          "id": "w_766",
          "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed: The Deployment creates a new ReplicaSet. The Deployment is scaling up its newest ReplicaSet. The Deployment is scaling down its older ReplicaSet(s). New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.status.conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated` You can monitor the progress for a Deployment by using `kubectl rollout status`.",
          "position": 0,
          "windowSize": 90
        },
        {
          "id": "w_793",
          "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics: All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed. All of the replicas associated with the Deployment are available. No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.status.conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable` This `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code. The output is similar to this: and the exit status from `kubectl rollout` is 0 (success):",
          "position": 0,
          "windowSize": 149
        },
        {
          "id": "w_832",
          "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors: Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration One way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.spec.progressDeadlineSeconds`](#progress-deadline-seconds)). `.spec.progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes: The output is similar to this: Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.status.conditions`: `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded` This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.\nAlso, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.\n{{< /note >}} {{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.\nYou can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.\n{{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error",
          "position": 0,
          "windowSize": 280
        },
        {
          "id": "w_833",
          "content": "action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.\n{{< /note >}} {{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.\nYou can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.\n{{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section: The output is similar to this: If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this: Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition: You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). `type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the",
          "position": 180,
          "windowSize": 280
        },
        {
          "id": "w_834",
          "content": "other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). `type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete). You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline. The output is similar to this: and the exit status from `kubectl rollout` is 1 (indicating an error):",
          "position": 360,
          "windowSize": 166
        },
        {
          "id": "w_939",
          "content": "All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
          "position": 0,
          "windowSize": 40
        },
        {
          "id": "w_945",
          "content": "You can set `.spec.revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background. By default,\nit is 10. {{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.\n{{< /note >}} The cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).\nIf you set `.spec.revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.spec.revisionHistoryLimit` because the Deployment never reaches a complete state.",
          "position": 0,
          "windowSize": 142
        },
        {
          "id": "w_981",
          "content": "If you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
          "position": 0,
          "windowSize": 32
        },
        {
          "id": "w_984",
          "content": "As with all other Kubernetes configs, a Deployment needs `.apiVersion`, `.kind`, and `.metadata` fields.\nFor general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `.metadata.name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`.spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
          "position": 0,
          "windowSize": 94
        },
        {
          "id": "w_1020",
          "content": "The `.spec.template` and `.spec.selector` are the only required fields of the `.spec`. The `.spec.template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector). Only a [`.spec.template.spec.restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
          "position": 0,
          "windowSize": 91
        },
        {
          "id": "w_1044",
          "content": "`.spec.replicas` is an optional field that specifies the number of desired Pods. It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.spec.replicas`. Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.spec.replicas` field automatically.",
          "position": 0,
          "windowSize": 88
        },
        {
          "id": "w_1068",
          "content": "`.spec.selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment. `.spec.selector` must match `.spec.template.metadata.labels`, or it will be rejected by the API. In API version `apps/v1`, `.spec.selector` and `.metadata.labels` do not default to `.spec.template.metadata.labels` if not set. So they must be set explicitly. Also note that `.spec.selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.spec.template` or if the total number of such Pods exceeds `.spec.replicas`. It brings up new\nPods with `.spec.template` if the number of Pods is less than the desired number. {{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.\n{{< /note >}} If you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
          "position": 0,
          "windowSize": 177
        },
        {
          "id": "w_1128",
          "content": "`.spec.strategy` specifies the strategy used to replace old Pods by new ones.\n`.spec.strategy.type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value.",
          "position": 0,
          "windowSize": 21
        },
        {
          "id": "w_1137",
          "content": "All existing Pods are killed before new ones are created when `.spec.strategy.type==Recreate`. {{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).\n{{< /note >}}",
          "position": 0,
          "windowSize": 97
        },
        {
          "id": "w_1161",
          "content": "The Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.spec.strategy.type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
          "position": 0,
          "windowSize": 33
        },
        {
          "id": "w_1170",
          "content": "`.spec.strategy.rollingUpdate.maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `.spec.strategy.rollingUpdate.maxSurge` is 0. The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
          "position": 0,
          "windowSize": 125
        },
        {
          "id": "w_1200",
          "content": "`.spec.strategy.rollingUpdate.maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up. The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`: {{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}} {{% /tab %}}\n{{% tab name=\"Max Surge\" %}} {{% /tab %}}\n{{% tab name=\"Hybrid\" %}} {{% /tab %}}\n{{< /tabs >}}",
          "position": 0,
          "windowSize": 173
        },
        {
          "id": "w_1239",
          "content": "`.spec.progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.\nand `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `.spec.minReadySeconds`.",
          "position": 0,
          "windowSize": 92
        },
        {
          "id": "w_1260",
          "content": "`.spec.minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.\nThis defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
          "position": 0,
          "windowSize": 59
        },
        {
          "id": "w_1272",
          "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}} You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/) Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`.spec.replicas`. Terminating pods can be tracked using the `.status.terminatingReplicas` field of the Deployment.",
          "position": 0,
          "windowSize": 68
        },
        {
          "id": "w_1290",
          "content": "A Deployment's revision history is stored in the ReplicaSets it controls. `.spec.revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.\nIn this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
          "position": 0,
          "windowSize": 127
        },
        {
          "id": "w_1311",
          "content": "`.spec.paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created.",
          "position": 0,
          "windowSize": 55
        },
        {
          "id": "w_1320",
          "content": "Learn more about [Pods](/docs/concepts/workloads/pods). [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\nyou can use it to manage application availability during disruptions. Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
          "position": 0,
          "windowSize": 42
        }
      ]
    },
    "sentence_window": {
      "count": 399,
      "chunks": [
        {
          "id": "sw_1",
          "content": "janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_2",
          "content": "If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions. description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_3",
          "content": "Take advantage of a growing ecosystem of deployment solutions. description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept weight: 10 hide_summary: true # Listed separately in section index",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_4",
          "content": "description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept weight: 10 hide_summary: true # Listed separately in section index A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_5",
          "content": "content_type: concept weight: 10 hide_summary: true # Listed separately in section index A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_6",
          "content": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_7",
          "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}} Do not manage",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_8",
          "content": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}} Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_9",
          "content": "{{< note >}} Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_10",
          "content": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}",
          "position": 9,
          "sentenceCount": 2
        },
        {
          "id": "sw_34",
          "content": "The following are typical use cases for Deployments: [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_35",
          "content": "[Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_36",
          "content": "The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not. [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_37",
          "content": "Check the status of the rollout to see if it succeeds or not. [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_38",
          "content": "[Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_39",
          "content": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment. [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_40",
          "content": "Each new ReplicaSet updates the revision of the Deployment. [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_41",
          "content": "[Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment. [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_42",
          "content": "Each rollback updates the revision of the Deployment. [Scale up the Deployment to facilitate more load](#scaling-a-deployment). [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_43",
          "content": "[Scale up the Deployment to facilitate more load](#scaling-a-deployment). [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_44",
          "content": "[Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_45",
          "content": "[Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
          "position": 11,
          "sentenceCount": 2
        },
        {
          "id": "sw_78",
          "content": "The following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods: {{% code_sample file=\"controllers/nginx-deployment.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_79",
          "content": "It creates a ReplicaSet to bring up three `nginx` Pods: {{% code_sample file=\"controllers/nginx-deployment. In this example:",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_80",
          "content": "{{% code_sample file=\"controllers/nginx-deployment. In this example: A Deployment named `nginx-deployment` is created, indicated by the `.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_81",
          "content": "In this example: A Deployment named `nginx-deployment` is created, indicated by the `. name` field.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_82",
          "content": "A Deployment named `nginx-deployment` is created, indicated by the `. name` field. This name will become the basis for the ReplicaSets and Pods which are created later.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_83",
          "content": "name` field. This name will become the basis for the ReplicaSets and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_84",
          "content": "This name will become the basis for the ReplicaSets and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details. The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_85",
          "content": "See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details. The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. replicas` field.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_86",
          "content": "The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. replicas` field. selector` field defines how the created ReplicaSet finds which Pods to manage.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_87",
          "content": "replicas` field. selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`).",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_88",
          "content": "selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_89",
          "content": "In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule. {{< note >}} The `.",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_90",
          "content": "However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule. {{< note >}} The `. matchLabels` field is a map of {key,value} pairs.",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_91",
          "content": "{{< note >}} The `. matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_92",
          "content": "matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to",
          "position": 14,
          "sentenceCount": 3
        },
        {
          "id": "sw_93",
          "content": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}} The `.",
          "position": 15,
          "sentenceCount": 3
        },
        {
          "id": "sw_94",
          "content": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}} The `. template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `.",
          "position": 16,
          "sentenceCount": 3
        },
        {
          "id": "sw_95",
          "content": "{{< /note >}} The `. template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `. labels` field.",
          "position": 17,
          "sentenceCount": 3
        },
        {
          "id": "sw_96",
          "content": "template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `. labels` field. * The Pod template's specification, or `.",
          "position": 18,
          "sentenceCount": 3
        },
        {
          "id": "sw_97",
          "content": "labels` field. * The Pod template's specification, or `. spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14.",
          "position": 19,
          "sentenceCount": 3
        },
        {
          "id": "sw_98",
          "content": "* The Pod template's specification, or `. spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14. * Create one container and name it `nginx` using the `.",
          "position": 20,
          "sentenceCount": 3
        },
        {
          "id": "sw_99",
          "content": "spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14. * Create one container and name it `nginx` using the `. containers[0].",
          "position": 21,
          "sentenceCount": 3
        },
        {
          "id": "sw_100",
          "content": "* Create one container and name it `nginx` using the `. containers[0]. name` field.",
          "position": 22,
          "sentenceCount": 3
        },
        {
          "id": "sw_101",
          "content": "containers[0]. name` field. Before you begin, make sure your Kubernetes cluster is up and running.",
          "position": 23,
          "sentenceCount": 3
        },
        {
          "id": "sw_102",
          "content": "name` field. Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:",
          "position": 24,
          "sentenceCount": 3
        },
        {
          "id": "sw_103",
          "content": "Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment: Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created.",
          "position": 25,
          "sentenceCount": 3
        },
        {
          "id": "sw_104",
          "content": "Follow the steps given below to create the above Deployment: Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the",
          "position": 26,
          "sentenceCount": 3
        },
        {
          "id": "sw_105",
          "content": "Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE",
          "position": 27,
          "sentenceCount": 3
        },
        {
          "id": "sw_106",
          "content": "If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the names of the Deployments in the namespace. * `READY` displays how many replicas of the",
          "position": 28,
          "sentenceCount": 3
        },
        {
          "id": "sw_107",
          "content": "* `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
          "position": 29,
          "sentenceCount": 3
        },
        {
          "id": "sw_108",
          "content": "It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users.",
          "position": 30,
          "sentenceCount": 3
        },
        {
          "id": "sw_109",
          "content": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
          "position": 31,
          "sentenceCount": 3
        },
        {
          "id": "sw_110",
          "content": "* `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `.",
          "position": 32,
          "sentenceCount": 3
        },
        {
          "id": "sw_111",
          "content": "* `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `. replicas` field.",
          "position": 33,
          "sentenceCount": 3
        },
        {
          "id": "sw_112",
          "content": "Notice how the number of desired replicas is 3 according to `. replicas` field. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
          "position": 34,
          "sentenceCount": 3
        },
        {
          "id": "sw_113",
          "content": "replicas` field. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
          "position": 35,
          "sentenceCount": 3
        },
        {
          "id": "sw_114",
          "content": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later.",
          "position": 36,
          "sentenceCount": 3
        },
        {
          "id": "sw_115",
          "content": "The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the",
          "position": 37,
          "sentenceCount": 3
        },
        {
          "id": "sw_116",
          "content": "deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas and all replicas are up-to-date (they contain the latest Pod",
          "position": 38,
          "sentenceCount": 3
        },
        {
          "id": "sw_117",
          "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas and all replicas are up-to-date (they contain the latest Pod template) and available. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
          "position": 39,
          "sentenceCount": 3
        },
        {
          "id": "sw_118",
          "content": "and all replicas are up-to-date (they contain the latest Pod template) and available. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of",
          "position": 40,
          "sentenceCount": 3
        },
        {
          "id": "sw_119",
          "content": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_",
          "position": 41,
          "sentenceCount": 3
        },
        {
          "id": "sw_120",
          "content": "The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is",
          "position": 42,
          "sentenceCount": 3
        },
        {
          "id": "sw_121",
          "content": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_. * `CURRENT` displays how many replicas are currently running.",
          "position": 43,
          "sentenceCount": 3
        },
        {
          "id": "sw_122",
          "content": "This is the _desired state_. * `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users.",
          "position": 44,
          "sentenceCount": 3
        },
        {
          "id": "sw_123",
          "content": "* `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
          "position": 45,
          "sentenceCount": 3
        },
        {
          "id": "sw_124",
          "content": "* `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`.",
          "position": 46,
          "sentenceCount": 3
        },
        {
          "id": "sw_125",
          "content": "* `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods which are created.",
          "position": 47,
          "sentenceCount": 3
        },
        {
          "id": "sw_126",
          "content": "Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
          "position": 48,
          "sentenceCount": 3
        },
        {
          "id": "sw_127",
          "content": "This name will become the basis for the Pods which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
          "position": 49,
          "sentenceCount": 3
        },
        {
          "id": "sw_128",
          "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897",
          "position": 50,
          "sentenceCount": 3
        },
        {
          "id": "sw_129",
          "content": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897",
          "position": 51,
          "sentenceCount": 3
        },
        {
          "id": "sw_130",
          "content": "The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-qqcnn 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 ``` The",
          "position": 52,
          "sentenceCount": 3
        },
        {
          "id": "sw_131",
          "content": "{{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers",
          "position": 53,
          "sentenceCount": 3
        },
        {
          "id": "sw_132",
          "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}",
          "position": 54,
          "sentenceCount": 3
        },
        {
          "id": "sw_133",
          "content": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}",
          "position": 55,
          "sentenceCount": 2
        },
        {
          "id": "sw_249",
          "content": "{{< caution >}} Do not change this label. {{< /caution >}} The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_250",
          "content": "{{< /caution >}} The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_251",
          "content": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_252",
          "content": "This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels and in any existing Pods that the ReplicaSet might have.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_253",
          "content": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels and in any existing Pods that the ReplicaSet might have.",
          "position": 4,
          "sentenceCount": 2
        },
        {
          "id": "sw_274",
          "content": "{{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `. template`) is changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_275",
          "content": "template`) is changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}}",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_276",
          "content": "Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}} Follow the steps given below to update your Deployment:",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_277",
          "content": "{{< /note >}} Follow the steps given below to update your Deployment: Let's update the nginx Pods to use the `nginx:1.16.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_278",
          "content": "Follow the steps given below to update your Deployment: Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_279",
          "content": "Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14. ```shell kubectl set image deployment.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_280",
          "content": "1` image instead of the `nginx:1.14. ```shell kubectl set image deployment. apps/nginx-deployment nginx=nginx:1.16.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_281",
          "content": "```shell kubectl set image deployment. apps/nginx-deployment nginx=nginx:1.16. 1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_282",
          "content": "apps/nginx-deployment nginx=nginx:1.16. 1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_283",
          "content": "1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16. 1` indicates the new image and its tag.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_284",
          "content": "1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16. 1` indicates the new image and its tag. The output is similar to: ``` deployment.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_285",
          "content": "1` indicates the new image and its tag. The output is similar to: ``` deployment. apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `.",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_286",
          "content": "The output is similar to: ``` deployment. apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `. containers[0].",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_287",
          "content": "apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `. containers[0]. image` from `nginx:1.14.",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_288",
          "content": "containers[0]. image` from `nginx:1.14. 2` to `nginx:1.16.",
          "position": 14,
          "sentenceCount": 3
        },
        {
          "id": "sw_289",
          "content": "image` from `nginx:1.14. 2` to `nginx:1.16. 1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment.",
          "position": 15,
          "sentenceCount": 3
        },
        {
          "id": "sw_290",
          "content": "2` to `nginx:1.16. 1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment. apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been",
          "position": 16,
          "sentenceCount": 3
        },
        {
          "id": "sw_291",
          "content": "1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment. apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ``` or",
          "position": 17,
          "sentenceCount": 3
        },
        {
          "id": "sw_292",
          "content": "apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ``` or ``` deployment \"nginx-deployment\" successfully rolled out ``` Get more details on your updated",
          "position": 18,
          "sentenceCount": 3
        },
        {
          "id": "sw_293",
          "content": "``` or ``` deployment \"nginx-deployment\" successfully rolled out ``` Get more details on your updated Deployment: After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
          "position": 19,
          "sentenceCount": 3
        },
        {
          "id": "sw_294",
          "content": "Get more details on your updated Deployment: After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling",
          "position": 20,
          "sentenceCount": 3
        },
        {
          "id": "sw_295",
          "content": "After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down",
          "position": 21,
          "sentenceCount": 3
        },
        {
          "id": "sw_296",
          "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas. ```shell kubectl get rs ``` The output is similar to this:",
          "position": 22,
          "sentenceCount": 3
        },
        {
          "id": "sw_297",
          "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE",
          "position": 23,
          "sentenceCount": 3
        },
        {
          "id": "sw_298",
          "content": "Deployment ensures that only a certain number of Pods are down while they are being updated. By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
          "position": 24,
          "sentenceCount": 3
        },
        {
          "id": "sw_299",
          "content": "By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
          "position": 25,
          "sentenceCount": 3
        },
        {
          "id": "sw_300",
          "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another",
          "position": 26,
          "sentenceCount": 3
        },
        {
          "id": "sw_301",
          "content": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of new Pods have come up, and does not",
          "position": 27,
          "sentenceCount": 3
        },
        {
          "id": "sw_302",
          "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least",
          "position": 28,
          "sentenceCount": 3
        },
        {
          "id": "sw_303",
          "content": "It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
          "position": 29,
          "sentenceCount": 3
        },
        {
          "id": "sw_304",
          "content": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5. Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default",
          "position": 30,
          "sentenceCount": 3
        },
        {
          "id": "sw_305",
          "content": "In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5. Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment. kubernetes.",
          "position": 31,
          "sentenceCount": 3
        },
        {
          "id": "sw_306",
          "content": "Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment. kubernetes. io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available |",
          "position": 32,
          "sentenceCount": 3
        },
        {
          "id": "sw_307",
          "content": "kubernetes. io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP Environment: <none> Mounts: <none>",
          "position": 33,
          "sentenceCount": 3
        },
        {
          "id": "sw_308",
          "content": "io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none>",
          "position": 34,
          "sentenceCount": 3
        },
        {
          "id": "sw_309",
          "content": "1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-1564180365 (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ----",
          "position": 35,
          "sentenceCount": 3
        },
        {
          "id": "sw_310",
          "content": "When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down",
          "position": 36,
          "sentenceCount": 3
        },
        {
          "id": "sw_311",
          "content": "Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the",
          "position": 37,
          "sentenceCount": 3
        },
        {
          "id": "sw_312",
          "content": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between",
          "position": 38,
          "sentenceCount": 3
        },
        {
          "id": "sw_313",
          "content": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods",
          "position": 39,
          "sentenceCount": 3
        },
        {
          "id": "sw_314",
          "content": "{{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than expected during a rollout and that the total resources consumed by the Deployment is more than `replicas",
          "position": 40,
          "sentenceCount": 3
        },
        {
          "id": "sw_315",
          "content": "As a result, you might notice that there are more Pods than expected during a rollout and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}",
          "position": 41,
          "sentenceCount": 3
        },
        {
          "id": "sw_316",
          "content": "and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}",
          "position": 42,
          "sentenceCount": 2
        },
        {
          "id": "sw_406",
          "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `. selector` but whose template does not match `.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_407",
          "content": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `. selector` but whose template does not match `. template` are scaled down.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_408",
          "content": "selector` but whose template does not match `. template` are scaled down. Eventually, the new ReplicaSet is scaled to `.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_409",
          "content": "template` are scaled down. Eventually, the new ReplicaSet is scaled to `. replicas` and all old ReplicaSets is scaled to 0.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_410",
          "content": "Eventually, the new ReplicaSet is scaled to `. replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_411",
          "content": "replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_412",
          "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_413",
          "content": "and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`, but then update the Deployment to create 5 replicas of `nginx:1.16.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_414",
          "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`, but then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3 replicas of `nginx:1.14.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_415",
          "content": "2`, but then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3 replicas of `nginx:1.14. 2` had been created.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_416",
          "content": "1`, when only 3 replicas of `nginx:1.14. 2` had been created. In that case, the Deployment immediately starts killing the 3 `nginx:1.14.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_417",
          "content": "2` had been created. In that case, the Deployment immediately starts killing the 3 `nginx:1.14. 2` Pods that it had created, and starts creating `nginx:1.16.",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_418",
          "content": "In that case, the Deployment immediately starts killing the 3 `nginx:1.14. 2` Pods that it had created, and starts creating `nginx:1.16. It does not wait for the 5 replicas of `nginx:1.14.",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_419",
          "content": "2` Pods that it had created, and starts creating `nginx:1.16. It does not wait for the 5 replicas of `nginx:1.14. 2` to be created before changing course.",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_420",
          "content": "It does not wait for the 5 replicas of `nginx:1.14. 2` to be created before changing course.",
          "position": 14,
          "sentenceCount": 2
        },
        {
          "id": "sw_454",
          "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications. {{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_455",
          "content": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications. {{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}}",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_456",
          "content": "{{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}} Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_457",
          "content": "{{< /note >}} Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_458",
          "content": "Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_459",
          "content": "This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet. Selector updates changes the existing value in a selector key -- result in the same behavior as additions. Selector removals removes an",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_460",
          "content": "Selector updates changes the existing value in a selector key -- result in the same behavior as additions. Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_461",
          "content": "Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.",
          "position": 7,
          "sentenceCount": 2
        },
        {
          "id": "sw_488",
          "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit). {{< note >}} A Deployment's revision is created when",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_489",
          "content": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit). {{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered. This means that the new revision is created if and only if the Deployment's Pod",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_490",
          "content": "{{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered. This means that the new revision is created if and only if the Deployment's Pod template (`. template`) is changed, for example if you update the labels or container images of the template.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_491",
          "content": "This means that the new revision is created if and only if the Deployment's Pod template (`. template`) is changed, for example if you update the labels or container images of the template. Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_492",
          "content": "template`) is changed, for example if you update the labels or container images of the template. Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_493",
          "content": "Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back. {{< /note >}}",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_494",
          "content": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back. {{< /note >}} Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_495",
          "content": "{{< /note >}} Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_496",
          "content": "Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` The rollout gets stuck.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_497",
          "content": "1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` The rollout gets stuck. You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_498",
          "content": "apps/nginx-deployment image updated ``` The rollout gets stuck. You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ``` Press Ctrl-C to stop the above rollout status watch.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_499",
          "content": "You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ``` Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts, [read more",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_500",
          "content": "``` Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts, [read more here](#deployment-status). You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_501",
          "content": "For more information on stuck rollouts, [read more here](#deployment-status). You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3 and the number of new replicas (from `nginx-deployment-3066724191`) is 1.",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_502",
          "content": "You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3 and the number of new replicas (from `nginx-deployment-3066724191`) is 1. ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s",
          "position": 14,
          "sentenceCount": 3
        },
        {
          "id": "sw_503",
          "content": "and the number of new replicas (from `nginx-deployment-3066724191`) is 1. ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new",
          "position": 15,
          "sentenceCount": 3
        },
        {
          "id": "sw_504",
          "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop. ```shell kubectl get pods ```",
          "position": 16,
          "sentenceCount": 3
        },
        {
          "id": "sw_505",
          "content": "```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s nginx-deployment-3066724191-08mng 0/1 ImagePullBackOff 0 6s ``` {{< note >}} The Deployment",
          "position": 17,
          "sentenceCount": 3
        },
        {
          "id": "sw_506",
          "content": "and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.",
          "position": 18,
          "sentenceCount": 3
        },
        {
          "id": "sw_507",
          "content": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%. {{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar",
          "position": 19,
          "sentenceCount": 3
        },
        {
          "id": "sw_508",
          "content": "Kubernetes by default sets the value to 25%. {{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx Replicas: 3 desired | 1 updated | 4 total |",
          "position": 20,
          "sentenceCount": 2
        },
        {
          "id": "sw_555",
          "content": "Follow the steps given below to check the rollout history: First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_556",
          "content": "First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2 kubectl set image deployment/nginx-deployment",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_557",
          "content": "1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes. io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_558",
          "content": "io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_559",
          "content": "You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16. 1\"` * Manually editing the manifest of the resource.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_560",
          "content": "io/change-cause=\"image updated to 1.16. 1\"` * Manually editing the manifest of the resource. To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_561",
          "content": "1\"` * Manually editing the manifest of the resource. To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes. io/change-cause=kubectl",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_562",
          "content": "To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_563",
          "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_564",
          "content": "1 Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
          "position": 9,
          "sentenceCount": 2
        },
        {
          "id": "sw_592",
          "content": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_593",
          "content": "Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_594",
          "content": "apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ``` deployment. apps/nginx-deployment rolled back ``` For more details about rollout related commands, read",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_595",
          "content": "apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout). The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_596",
          "content": "The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller. Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_597",
          "content": "As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller. Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_598",
          "content": "Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ``` Get the description of the Deployment: ```shell kubectl describe deployment nginx-deployment ``` The",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_599",
          "content": "kubernetes. io/revision=4 kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_600",
          "content": "io/revision=4 kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers:",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_601",
          "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_602",
          "content": "1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes:",
          "position": 10,
          "sentenceCount": 2
        },
        {
          "id": "sw_628",
          "content": "You can scale a Deployment by using the following command: The output is similar to this: Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_629",
          "content": "The output is similar to this: Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods. The output is",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_630",
          "content": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods. The output is similar to this:",
          "position": 2,
          "sentenceCount": 2
        },
        {
          "id": "sw_642",
          "content": "RollingUpdate Deployments support running multiple versions of an application at the same time. When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_643",
          "content": "When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*. For example, you are running a",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_644",
          "content": "This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. Ensure that the 10 replicas in your Deployment are running.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_645",
          "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. Ensure that the 10 replicas in your Deployment are running. ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_646",
          "content": "Ensure that the 10 replicas in your Deployment are running. ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster. ```shell kubectl set image deployment/nginx-deployment",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_647",
          "content": "```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster. ```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ```",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_648",
          "content": "```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191 but it's blocked due to the `maxUnavailable` requirement that you mentioned above.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_649",
          "content": "apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191 but it's blocked due to the `maxUnavailable` requirement that you mentioned above. Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_650",
          "content": "but it's blocked due to the `maxUnavailable` requirement that you mentioned above. Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along. The",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_651",
          "content": "Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas to 15. The Deployment controller needs",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_652",
          "content": "The autoscaler increments the Deployment replicas to 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_653",
          "content": "The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you spread the additional replicas across all ReplicaSets.",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_654",
          "content": "If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you spread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas.",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_655",
          "content": "With proportional scaling, you spread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the ReplicaSet with the most replicas.",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_656",
          "content": "Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the ReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.",
          "position": 14,
          "sentenceCount": 3
        },
        {
          "id": "sw_657",
          "content": "Any leftovers are added to the ReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet.",
          "position": 15,
          "sentenceCount": 3
        },
        {
          "id": "sw_658",
          "content": "ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy.",
          "position": 16,
          "sentenceCount": 3
        },
        {
          "id": "sw_659",
          "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy. To confirm this, run:",
          "position": 17,
          "sentenceCount": 3
        },
        {
          "id": "sw_660",
          "content": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy. To confirm this, run: The output is similar to this:",
          "position": 18,
          "sentenceCount": 3
        },
        {
          "id": "sw_661",
          "content": "To confirm this, run: The output is similar to this: The rollout status confirms how the replicas were added to each ReplicaSet.",
          "position": 19,
          "sentenceCount": 3
        },
        {
          "id": "sw_662",
          "content": "The output is similar to this: The rollout status confirms how the replicas were added to each ReplicaSet. The output is similar to this:",
          "position": 20,
          "sentenceCount": 3
        },
        {
          "id": "sw_663",
          "content": "The rollout status confirms how the replicas were added to each ReplicaSet. The output is similar to this:",
          "position": 21,
          "sentenceCount": 2
        },
        {
          "id": "sw_716",
          "content": "When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates. When you're ready to apply those changes, you resume rollouts for the Deployment. This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_717",
          "content": "When you're ready to apply those changes, you resume rollouts for the Deployment. This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ```",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_718",
          "content": "This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_719",
          "content": "For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_720",
          "content": "apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_721",
          "content": "1 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_722",
          "content": "apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet has not changed: ```shell kubectl get rs ``` The output",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_723",
          "content": "for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ``` deployment. apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_724",
          "content": "apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused. Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_725",
          "content": "but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused. Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_726",
          "content": "Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_727",
          "content": "apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done. ```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_728",
          "content": "```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m nginx-2142116321 1 2 2 2m nginx-3926361531 3 2 1 18s nginx-3926361531 3 2 1 18s nginx-2142116321 1 1 1 2m nginx-3926361531 3 3 1 18s",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_729",
          "content": "{{< note >}} You cannot rollback a paused Deployment until you resume it. {{< /note >}}",
          "position": 13,
          "sentenceCount": 2
        },
        {
          "id": "sw_761",
          "content": "A Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
          "position": 0,
          "sentenceCount": 2
        },
        {
          "id": "sw_767",
          "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed: The Deployment creates a new ReplicaSet. The Deployment is scaling up its newest ReplicaSet.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_768",
          "content": "The Deployment creates a new ReplicaSet. The Deployment is scaling up its newest ReplicaSet. The Deployment is scaling down its older ReplicaSet(s).",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_769",
          "content": "The Deployment is scaling up its newest ReplicaSet. The Deployment is scaling down its older ReplicaSet(s). New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_770",
          "content": "The Deployment is scaling down its older ReplicaSet(s). New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_771",
          "content": "New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `. conditions`:",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_772",
          "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `. conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_773",
          "content": "conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated` You can monitor the progress for a Deployment by using `kubectl rollout status`.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_774",
          "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated` You can monitor the progress for a Deployment by using `kubectl rollout status`.",
          "position": 7,
          "sentenceCount": 2
        },
        {
          "id": "sw_794",
          "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics: All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed. All of the replicas associated with the Deployment are available.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_795",
          "content": "All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed. All of the replicas associated with the Deployment are available. No old replicas for the Deployment are running.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_796",
          "content": "All of the replicas associated with the Deployment are available. No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_797",
          "content": "No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `. conditions`:",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_798",
          "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `. conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_799",
          "content": "conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable` This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_800",
          "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable` This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated. The condition holds even when availability of replicas changes (which does instead affect the `Available` condition).",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_801",
          "content": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated. The condition holds even when availability of replicas changes (which does instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_802",
          "content": "The condition holds even when availability of replicas changes (which does instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed successfully, `kubectl rollout status` returns a zero exit code.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_803",
          "content": "You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed successfully, `kubectl rollout status` returns a zero exit code. The output is similar to this:",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_804",
          "content": "If the rollout completed successfully, `kubectl rollout status` returns a zero exit code. The output is similar to this: and the exit status from `kubectl rollout` is 0 (success):",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_805",
          "content": "The output is similar to this: and the exit status from `kubectl rollout` is 0 (success):",
          "position": 11,
          "sentenceCount": 2
        },
        {
          "id": "sw_835",
          "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur due to some of the following factors: Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_836",
          "content": "This can occur due to some of the following factors: Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_837",
          "content": "Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`. progressDeadlineSeconds`](#progress-deadline-seconds)).",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_838",
          "content": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`. progressDeadlineSeconds`](#progress-deadline-seconds)). progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_839",
          "content": "progressDeadlineSeconds`](#progress-deadline-seconds)). progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_840",
          "content": "progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_841",
          "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes: The output is similar to this: Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_842",
          "content": "The output is similar to this: Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `. conditions`:",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_843",
          "content": "Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `. conditions`: `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_844",
          "content": "conditions`: `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded` This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_845",
          "content": "`type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded` This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_846",
          "content": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_847",
          "content": "Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}} Kubernetes takes no action on a stalled Deployment",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_848",
          "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`. Higher level",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_849",
          "content": "{{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version. {{< /note >}}",
          "position": 14,
          "sentenceCount": 3
        },
        {
          "id": "sw_850",
          "content": "Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version. {{< /note >}} {{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
          "position": 15,
          "sentenceCount": 3
        },
        {
          "id": "sw_851",
          "content": "{{< /note >}} {{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.",
          "position": 16,
          "sentenceCount": 3
        },
        {
          "id": "sw_852",
          "content": "{{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline. {{< /note >}}",
          "position": 17,
          "sentenceCount": 3
        },
        {
          "id": "sw_853",
          "content": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline. {{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient.",
          "position": 18,
          "sentenceCount": 3
        },
        {
          "id": "sw_854",
          "content": "{{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient. For example, let's suppose you have insufficient quota.",
          "position": 19,
          "sentenceCount": 3
        },
        {
          "id": "sw_855",
          "content": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient. For example, let's suppose you have insufficient quota. If you describe the Deployment you will notice the following section:",
          "position": 20,
          "sentenceCount": 3
        },
        {
          "id": "sw_856",
          "content": "For example, let's suppose you have insufficient quota. If you describe the Deployment you will notice the following section: The output is similar to this:",
          "position": 21,
          "sentenceCount": 3
        },
        {
          "id": "sw_857",
          "content": "If you describe the Deployment you will notice the following section: The output is similar to this: If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
          "position": 22,
          "sentenceCount": 3
        },
        {
          "id": "sw_858",
          "content": "The output is similar to this: If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this: Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:",
          "position": 23,
          "sentenceCount": 3
        },
        {
          "id": "sw_859",
          "content": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this: Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition: You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other",
          "position": 24,
          "sentenceCount": 3
        },
        {
          "id": "sw_860",
          "content": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition: You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace. If you satisfy the quota",
          "position": 25,
          "sentenceCount": 3
        },
        {
          "id": "sw_861",
          "content": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace. If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful",
          "position": 26,
          "sentenceCount": 3
        },
        {
          "id": "sw_862",
          "content": "If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). `type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is",
          "position": 27,
          "sentenceCount": 3
        },
        {
          "id": "sw_863",
          "content": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated by the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed",
          "position": 28,
          "sentenceCount": 3
        },
        {
          "id": "sw_864",
          "content": "Minimum availability is dictated by the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the",
          "position": 29,
          "sentenceCount": 3
        },
        {
          "id": "sw_865",
          "content": "`type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case `reason: NewReplicaSetAvailable` means that the",
          "position": 30,
          "sentenceCount": 3
        },
        {
          "id": "sw_866",
          "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline. The output is similar to this:",
          "position": 31,
          "sentenceCount": 3
        },
        {
          "id": "sw_867",
          "content": "`kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline. The output is similar to this: and the exit status from `kubectl rollout` is 1 (indicating an error):",
          "position": 32,
          "sentenceCount": 3
        },
        {
          "id": "sw_868",
          "content": "The output is similar to this: and the exit status from `kubectl rollout` is 1 (indicating an error):",
          "position": 33,
          "sentenceCount": 2
        },
        {
          "id": "sw_940",
          "content": "All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
          "position": 0,
          "sentenceCount": 2
        },
        {
          "id": "sw_946",
          "content": "You can set `. revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain. The rest will be garbage-collected in the background.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_947",
          "content": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain. The rest will be garbage-collected in the background. By default, it is 10.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_948",
          "content": "The rest will be garbage-collected in the background. By default, it is 10. {{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_949",
          "content": "By default, it is 10. {{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back. {{< /note >}}",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_950",
          "content": "{{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back. {{< /note >}} The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_951",
          "content": "{{< /note >}} The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_952",
          "content": "The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_953",
          "content": "If you set `. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_954",
          "content": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure. For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_955",
          "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure. For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `. revisionHistoryLimit` because the Deployment never reaches a complete state.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_956",
          "content": "For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `. revisionHistoryLimit` because the Deployment never reaches a complete state.",
          "position": 10,
          "sentenceCount": 2
        },
        {
          "id": "sw_985",
          "content": "As with all other Kubernetes configs, a Deployment needs `. apiVersion`, `. kind`, and `.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_986",
          "content": "apiVersion`, `. kind`, and `. metadata` fields.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_987",
          "content": "kind`, and `. metadata` fields. For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_988",
          "content": "metadata` fields. For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_989",
          "content": "For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_990",
          "content": "and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `. name` of the Deployment is part of the basis for naming those Pods.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_991",
          "content": "When the control plane creates new Pods for a Deployment, the `. name` of the Deployment is part of the basis for naming those Pods. The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_992",
          "content": "name` of the Deployment is part of the basis for naming those Pods. The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames. For best compatibility, the name should follow the more restrictive rules for a",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_993",
          "content": "The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames. For best compatibility, the name should follow the more restrictive rules for a [DNS",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_994",
          "content": "For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_995",
          "content": "A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
          "position": 10,
          "sentenceCount": 2
        },
        {
          "id": "sw_1021",
          "content": "template` and `. selector` are the only required fields of the `. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1022",
          "content": "selector` are the only required fields of the `. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1023",
          "content": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1024",
          "content": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy. For labels, make sure not to overlap with other",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1025",
          "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector).",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1026",
          "content": "For labels, make sure not to overlap with other controllers. See [selector](#selector). restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_1027",
          "content": "See [selector](#selector). restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
          "position": 6,
          "sentenceCount": 2
        },
        {
          "id": "sw_1045",
          "content": "replicas` is an optional field that specifies the number of desired Pods. It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1046",
          "content": "It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X` and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1047",
          "content": "Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X` and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment. yaml`), then applying that manifest overwrites the manual scaling that you previously did.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1048",
          "content": "and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment. yaml`), then applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1049",
          "content": "yaml`), then applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `. Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\"",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1050",
          "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `. Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `. replicas` field automatically.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_1051",
          "content": "Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `. replicas` field automatically.",
          "position": 6,
          "sentenceCount": 2
        },
        {
          "id": "sw_1069",
          "content": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment. selector` must match `. labels`, or it will be rejected by the API.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1070",
          "content": "selector` must match `. labels`, or it will be rejected by the API. In API version `apps/v1`, `.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1071",
          "content": "labels`, or it will be rejected by the API. In API version `apps/v1`, `. selector` and `.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1072",
          "content": "In API version `apps/v1`, `. selector` and `. labels` do not default to `.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1073",
          "content": "selector` and `. labels` do not default to `. labels` if not set.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1074",
          "content": "labels` do not default to `. labels` if not set. So they must be set explicitly.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_1075",
          "content": "labels` if not set. So they must be set explicitly. Also note that `.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_1076",
          "content": "So they must be set explicitly. Also note that `. selector` is immutable after creation of the Deployment in `apps/v1`.",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_1077",
          "content": "Also note that `. selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different from `.",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_1078",
          "content": "selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different from `. template` or if the total number of such Pods exceeds `.",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_1079",
          "content": "A Deployment may terminate Pods whose labels match the selector if their template is different from `. template` or if the total number of such Pods exceeds `. It brings up new Pods with `.",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_1080",
          "content": "template` or if the total number of such Pods exceeds `. It brings up new Pods with `. template` if the number of Pods is less than the desired number.",
          "position": 11,
          "sentenceCount": 3
        },
        {
          "id": "sw_1081",
          "content": "It brings up new Pods with `. template` if the number of Pods is less than the desired number. {{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment",
          "position": 12,
          "sentenceCount": 3
        },
        {
          "id": "sw_1082",
          "content": "template` if the number of Pods is less than the desired number. {{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment or by creating another controller such as a ReplicaSet or a ReplicationController.",
          "position": 13,
          "sentenceCount": 3
        },
        {
          "id": "sw_1083",
          "content": "{{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment or by creating another controller such as a ReplicaSet or a ReplicationController. If you do so, the first Deployment thinks that it created these other Pods.",
          "position": 14,
          "sentenceCount": 3
        },
        {
          "id": "sw_1084",
          "content": "or by creating another controller such as a ReplicaSet or a ReplicationController. If you do so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.",
          "position": 15,
          "sentenceCount": 3
        },
        {
          "id": "sw_1085",
          "content": "If you do so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this. {{< /note >}}",
          "position": 16,
          "sentenceCount": 3
        },
        {
          "id": "sw_1086",
          "content": "Kubernetes does not stop you from doing this. {{< /note >}} If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
          "position": 17,
          "sentenceCount": 3
        },
        {
          "id": "sw_1087",
          "content": "{{< /note >}} If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
          "position": 18,
          "sentenceCount": 2
        },
        {
          "id": "sw_1129",
          "content": "strategy` specifies the strategy used to replace old Pods by new ones. type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is the default value.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1130",
          "content": "type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is the default value.",
          "position": 1,
          "sentenceCount": 2
        },
        {
          "id": "sw_1138",
          "content": "All existing Pods are killed before new ones are created when `. type==Recreate`. {{< note >}} This will only guarantee Pod termination previous to creation for upgrades.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1139",
          "content": "type==Recreate`. {{< note >}} This will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods of the old revision will be terminated immediately.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1140",
          "content": "{{< note >}} This will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods of the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new revision is created.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1141",
          "content": "If you upgrade a Deployment, all Pods of the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new revision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state).",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1142",
          "content": "Successful removal is awaited before any Pod of the new revision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an \"at most\" guarantee for your Pods, you should consider using a",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1143",
          "content": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_1144",
          "content": "If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}",
          "position": 6,
          "sentenceCount": 2
        },
        {
          "id": "sw_1162",
          "content": "The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `. type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1163",
          "content": "type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
          "position": 1,
          "sentenceCount": 2
        },
        {
          "id": "sw_1171",
          "content": "rollingUpdate. maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1172",
          "content": "maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by rounding down.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1173",
          "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by rounding down. The value cannot be 0 if `.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1174",
          "content": "The absolute number is calculated from percentage by rounding down. The value cannot be 0 if `. rollingUpdate.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1175",
          "content": "The value cannot be 0 if `. rollingUpdate. maxSurge` is 0.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1176",
          "content": "rollingUpdate. maxSurge` is 0. The default value is 25%.",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_1177",
          "content": "maxSurge` is 0. The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts.",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_1178",
          "content": "The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_1179",
          "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at",
          "position": 8,
          "sentenceCount": 2
        },
        {
          "id": "sw_1201",
          "content": "rollingUpdate. maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1202",
          "content": "maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1203",
          "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number is calculated from the percentage by rounding up.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1204",
          "content": "The value cannot be 0 if `maxUnavailable` is 0. The absolute number is calculated from the percentage by rounding up. The default value is 25%.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1205",
          "content": "The absolute number is calculated from the percentage by rounding up. The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1206",
          "content": "The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of",
          "position": 5,
          "sentenceCount": 3
        },
        {
          "id": "sw_1207",
          "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time",
          "position": 6,
          "sentenceCount": 3
        },
        {
          "id": "sw_1208",
          "content": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`: {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}",
          "position": 7,
          "sentenceCount": 3
        },
        {
          "id": "sw_1209",
          "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`: {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}} {{% /tab %}} {{% tab name=\"Max Surge\" %}}",
          "position": 8,
          "sentenceCount": 3
        },
        {
          "id": "sw_1210",
          "content": "{{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}} {{% /tab %}} {{% tab name=\"Max Surge\" %}} {{% /tab %}} {{% tab name=\"Hybrid\" %}}",
          "position": 9,
          "sentenceCount": 3
        },
        {
          "id": "sw_1211",
          "content": "{{% /tab %}} {{% tab name=\"Max Surge\" %}} {{% /tab %}} {{% tab name=\"Hybrid\" %}} {{% /tab %}} {{< /tabs >}}",
          "position": 10,
          "sentenceCount": 3
        },
        {
          "id": "sw_1212",
          "content": "{{% /tab %}} {{% tab name=\"Hybrid\" %}} {{% /tab %}} {{< /tabs >}}",
          "position": 11,
          "sentenceCount": 2
        },
        {
          "id": "sw_1240",
          "content": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`. and `reason: ProgressDeadlineExceeded` in the",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1241",
          "content": "and `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep retrying the Deployment. This defaults to 600.",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1242",
          "content": "The Deployment controller will keep retrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1243",
          "content": "This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1244",
          "content": "In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `. minReadySeconds`.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1245",
          "content": "If specified, this field needs to be greater than `. minReadySeconds`.",
          "position": 5,
          "sentenceCount": 2
        },
        {
          "id": "sw_1261",
          "content": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready).",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1262",
          "content": "for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1263",
          "content": "This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
          "position": 2,
          "sentenceCount": 2
        },
        {
          "id": "sw_1273",
          "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}} You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1274",
          "content": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1275",
          "content": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period. As a result, the total number of all pods can temporarily exceed `. Terminating pods can be tracked using the `.",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1276",
          "content": "As a result, the total number of all pods can temporarily exceed `. Terminating pods can be tracked using the `. terminatingReplicas` field of the Deployment.",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1277",
          "content": "Terminating pods can be tracked using the `. terminatingReplicas` field of the Deployment.",
          "position": 4,
          "sentenceCount": 2
        },
        {
          "id": "sw_1291",
          "content": "A Deployment's revision history is stored in the ReplicaSets it controls. revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1292",
          "content": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1293",
          "content": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1294",
          "content": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this",
          "position": 3,
          "sentenceCount": 3
        },
        {
          "id": "sw_1295",
          "content": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
          "position": 4,
          "sentenceCount": 3
        },
        {
          "id": "sw_1296",
          "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
          "position": 5,
          "sentenceCount": 2
        },
        {
          "id": "sw_1312",
          "content": "paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when it is created.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1313",
          "content": "The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when it is created.",
          "position": 1,
          "sentenceCount": 2
        },
        {
          "id": "sw_1321",
          "content": "Learn more about [Pods](/docs/concepts/workloads/pods). [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
          "position": 0,
          "sentenceCount": 3
        },
        {
          "id": "sw_1322",
          "content": "[Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application",
          "position": 1,
          "sentenceCount": 3
        },
        {
          "id": "sw_1323",
          "content": "Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions. Use kubectl to [create a",
          "position": 2,
          "sentenceCount": 3
        },
        {
          "id": "sw_1324",
          "content": "Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions. Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
          "position": 3,
          "sentenceCount": 2
        }
      ]
    },
    "sentence_context": {
      "count": 434,
      "chunks": [
        {
          "id": "sc_11",
          "content": "[Document Content] janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time.",
          "position": 0,
          "originalSentence": "janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time."
        },
        {
          "id": "sc_12",
          "content": "[Document Content] [Previous: janetkuo title: Deployments api_metadata: apiVersi...] If something goes wrong, Kubernetes will rollback the change for you.",
          "position": 1,
          "originalSentence": "If something goes wrong, Kubernetes will rollback the change for you."
        },
        {
          "id": "sc_13",
          "content": "[Document Content] [Previous: If something goes wrong, Kubernetes will rollback ...] Take advantage of a growing ecosystem of deployment solutions.",
          "position": 2,
          "originalSentence": "Take advantage of a growing ecosystem of deployment solutions."
        },
        {
          "id": "sc_14",
          "content": "[Document Content] [Previous: Take advantage of a growing ecosystem of deploymen...] description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
          "position": 3,
          "originalSentence": "description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state."
        },
        {
          "id": "sc_15",
          "content": "[Document Content] [Previous: description: >- A Deployment manages a set of Pods...] content_type: concept weight: 10 hide_summary: true # Listed separately in section index",
          "position": 4,
          "originalSentence": "content_type: concept weight: 10 hide_summary: true # Listed separately in section index"
        },
        {
          "id": "sc_16",
          "content": "[Document Content] [Previous: content_type: concept weight: 10 hide_summary: tru...] A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
          "position": 5,
          "originalSentence": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}."
        },
        {
          "id": "sc_17",
          "content": "[Document Content] [Previous: A _Deployment_ provides declarative updates for {{...] You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
          "position": 6,
          "originalSentence": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate."
        },
        {
          "id": "sc_18",
          "content": "[Document Content] [Previous: You describe a _desired state_ in a Deployment, an...] You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
          "position": 7,
          "originalSentence": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments."
        },
        {
          "id": "sc_19",
          "content": "[Document Content] [Previous: You can define Deployments to create new ReplicaSe...] {{< note >}} Do not manage ReplicaSets owned by a Deployment.",
          "position": 8,
          "originalSentence": "{{< note >}} Do not manage ReplicaSets owned by a Deployment."
        },
        {
          "id": "sc_20",
          "content": "[Document Content] [Previous: {{< note >}} Do not manage ReplicaSets owned by a ...] Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
          "position": 9,
          "originalSentence": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below."
        },
        {
          "id": "sc_21",
          "content": "[Document Content] [Previous: Consider opening an issue in the main Kubernetes r...] {{< /note >}}",
          "position": 10,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_46",
          "content": "[Use Case] The following are typical use cases for Deployments:",
          "position": 0,
          "originalSentence": "The following are typical use cases for Deployments:"
        },
        {
          "id": "sc_47",
          "content": "[Use Case] [Previous: The following are typical use cases for Deployment...] [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
          "position": 1,
          "originalSentence": "[Create a Deployment to rollout a ReplicaSet](#creating-a-deployment)."
        },
        {
          "id": "sc_48",
          "content": "[Use Case] [Previous: [Create a Deployment to rollout a ReplicaSet](#cre...] The ReplicaSet creates Pods in the background.",
          "position": 2,
          "originalSentence": "The ReplicaSet creates Pods in the background."
        },
        {
          "id": "sc_49",
          "content": "[Use Case] [Previous: The ReplicaSet creates Pods in the background....] Check the status of the rollout to see if it succeeds or not.",
          "position": 3,
          "originalSentence": "Check the status of the rollout to see if it succeeds or not."
        },
        {
          "id": "sc_50",
          "content": "[Use Case] [Previous: Check the status of the rollout to see if it succe...] [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
          "position": 4,
          "originalSentence": "[Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment."
        },
        {
          "id": "sc_51",
          "content": "[Use Case] [Previous: [Declare the new state of the Pods](#updating-a-de...] A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
          "position": 5,
          "originalSentence": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate."
        },
        {
          "id": "sc_52",
          "content": "[Use Case] [Previous: A new ReplicaSet is created, and the Deployment gr...] Each new ReplicaSet updates the revision of the Deployment.",
          "position": 6,
          "originalSentence": "Each new ReplicaSet updates the revision of the Deployment."
        },
        {
          "id": "sc_53",
          "content": "[Use Case] [Previous: Each new ReplicaSet updates the revision of the De...] [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
          "position": 7,
          "originalSentence": "[Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable."
        },
        {
          "id": "sc_54",
          "content": "[Use Case] [Previous: [Rollback to an earlier Deployment revision](#roll...] Each rollback updates the revision of the Deployment.",
          "position": 8,
          "originalSentence": "Each rollback updates the revision of the Deployment."
        },
        {
          "id": "sc_55",
          "content": "[Use Case] [Previous: Each rollback updates the revision of the Deployme...] [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
          "position": 9,
          "originalSentence": "[Scale up the Deployment to facilitate more load](#scaling-a-deployment)."
        },
        {
          "id": "sc_56",
          "content": "[Use Case] [Previous: [Scale up the Deployment to facilitate more load](...] [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
          "position": 10,
          "originalSentence": "[Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout."
        },
        {
          "id": "sc_57",
          "content": "[Use Case] [Previous: [Pause the rollout of a Deployment](#pausing-and-r...] [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
          "position": 11,
          "originalSentence": "[Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck."
        },
        {
          "id": "sc_58",
          "content": "[Use Case] [Previous: [Use the status of the Deployment](#deployment-sta...] [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
          "position": 12,
          "originalSentence": "[Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore."
        },
        {
          "id": "sc_134",
          "content": "[Creating a Deployment] The following is an example of a Deployment.",
          "position": 0,
          "originalSentence": "The following is an example of a Deployment."
        },
        {
          "id": "sc_135",
          "content": "[Creating a Deployment] [Previous: The following is an example of a Deployment....] It creates a ReplicaSet to bring up three `nginx` Pods:",
          "position": 1,
          "originalSentence": "It creates a ReplicaSet to bring up three `nginx` Pods:"
        },
        {
          "id": "sc_136",
          "content": "[Creating a Deployment] [Previous: It creates a ReplicaSet to bring up three `nginx` ...] {{% code_sample file=\"controllers/nginx-deployment.",
          "position": 2,
          "originalSentence": "{{% code_sample file=\"controllers/nginx-deployment."
        },
        {
          "id": "sc_137",
          "content": "[Creating a Deployment] [Previous: {{% code_sample file=\"controllers/nginx-deployment...] In this example:",
          "position": 3,
          "originalSentence": "In this example:"
        },
        {
          "id": "sc_138",
          "content": "[Creating a Deployment] A Deployment named `nginx-deployment` is created, indicated by the `.",
          "position": 4,
          "originalSentence": "A Deployment named `nginx-deployment` is created, indicated by the `."
        },
        {
          "id": "sc_139",
          "content": "[Creating a Deployment] [Previous: A Deployment named `nginx-deployment` is created, ...] name` field.",
          "position": 5,
          "originalSentence": "name` field."
        },
        {
          "id": "sc_140",
          "content": "[Creating a Deployment] This name will become the basis for the ReplicaSets and Pods which are created later.",
          "position": 6,
          "originalSentence": "This name will become the basis for the ReplicaSets and Pods which are created later."
        },
        {
          "id": "sc_141",
          "content": "[Creating a Deployment] [Previous: This name will become the basis for the ReplicaSet...] See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details.",
          "position": 7,
          "originalSentence": "See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details."
        },
        {
          "id": "sc_142",
          "content": "[Creating a Deployment] [Previous: See [Writing a Deployment Spec](#writing-a-deploym...] The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
          "position": 8,
          "originalSentence": "The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `."
        },
        {
          "id": "sc_143",
          "content": "[Creating a Deployment] [Previous: The Deployment creates a ReplicaSet that creates t...] replicas` field.",
          "position": 9,
          "originalSentence": "replicas` field."
        },
        {
          "id": "sc_144",
          "content": "[Creating a Deployment] selector` field defines how the created ReplicaSet finds which Pods to manage.",
          "position": 10,
          "originalSentence": "selector` field defines how the created ReplicaSet finds which Pods to manage."
        },
        {
          "id": "sc_145",
          "content": "[Creating a Deployment] [Previous: selector` field defines how the created ReplicaSet...] In this case, you select a label that is defined in the Pod template (`app: nginx`).",
          "position": 11,
          "originalSentence": "In this case, you select a label that is defined in the Pod template (`app: nginx`)."
        },
        {
          "id": "sc_146",
          "content": "[Creating a Deployment] [Previous: In this case, you select a label that is defined i...] However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.",
          "position": 12,
          "originalSentence": "However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule."
        },
        {
          "id": "sc_147",
          "content": "[Creating a Deployment] [Previous: However, more sophisticated selection rules are po...] {{< note >}} The `.",
          "position": 13,
          "originalSentence": "{{< note >}} The `."
        },
        {
          "id": "sc_148",
          "content": "[Creating a Deployment] matchLabels` field is a map of {key,value} pairs.",
          "position": 14,
          "originalSentence": "matchLabels` field is a map of {key,value} pairs."
        },
        {
          "id": "sc_149",
          "content": "[Creating a Deployment] [Previous: matchLabels` field is a map of {key,value} pairs....] A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
          "position": 15,
          "originalSentence": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\"."
        },
        {
          "id": "sc_150",
          "content": "[Creating a Deployment] [Previous: A single {key,value} in the `matchLabels` map is e...] All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
          "position": 16,
          "originalSentence": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match."
        },
        {
          "id": "sc_151",
          "content": "[Creating a Deployment] [Previous: All of the requirements, from both `matchLabels` a...] {{< /note >}} The `.",
          "position": 17,
          "originalSentence": "{{< /note >}} The `."
        },
        {
          "id": "sc_152",
          "content": "[Creating a Deployment] template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `.",
          "position": 18,
          "originalSentence": "template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `."
        },
        {
          "id": "sc_153",
          "content": "[Creating a Deployment] [Previous: template` field contains the following sub-fields:...] labels` field.",
          "position": 19,
          "originalSentence": "labels` field."
        },
        {
          "id": "sc_154",
          "content": "[Creating a Deployment] * The Pod template's specification, or `.",
          "position": 20,
          "originalSentence": "* The Pod template's specification, or `."
        },
        {
          "id": "sc_155",
          "content": "[Creating a Deployment] [Previous: * The Pod template's specification, or `....] spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14.",
          "position": 21,
          "originalSentence": "spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14."
        },
        {
          "id": "sc_156",
          "content": "[Creating a Deployment] [Previous: spec` field, indicates that the Pods run one conta...] * Create one container and name it `nginx` using the `.",
          "position": 22,
          "originalSentence": "* Create one container and name it `nginx` using the `."
        },
        {
          "id": "sc_157",
          "content": "[Creating a Deployment] [Previous: * Create one container and name it `nginx` using t...] containers[0].",
          "position": 23,
          "originalSentence": "containers[0]."
        },
        {
          "id": "sc_158",
          "content": "[Creating a Deployment] name` field.",
          "position": 24,
          "originalSentence": "name` field."
        },
        {
          "id": "sc_159",
          "content": "[Creating a Deployment] Before you begin, make sure your Kubernetes cluster is up and running.",
          "position": 25,
          "originalSentence": "Before you begin, make sure your Kubernetes cluster is up and running."
        },
        {
          "id": "sc_160",
          "content": "[Creating a Deployment] [Previous: Before you begin, make sure your Kubernetes cluste...] Follow the steps given below to create the above Deployment:",
          "position": 26,
          "originalSentence": "Follow the steps given below to create the above Deployment:"
        },
        {
          "id": "sc_161",
          "content": "[Creating a Deployment] [Previous: Follow the steps given below to create the above D...] Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created.",
          "position": 27,
          "originalSentence": "Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created."
        },
        {
          "id": "sc_162",
          "content": "[Creating a Deployment] [Previous: Create the Deployment by running the following com...] If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the",
          "position": 28,
          "originalSentence": "If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the names of the Deployments in the namespace."
        },
        {
          "id": "sc_163",
          "content": "[Creating a Deployment] [Previous: If the Deployment is still being created, the outp...] * `READY` displays how many replicas of the application are available to your users.",
          "position": 29,
          "originalSentence": "* `READY` displays how many replicas of the application are available to your users."
        },
        {
          "id": "sc_164",
          "content": "[Creating a Deployment] [Previous: * `READY` displays how many replicas of the applic...] It follows the pattern ready/desired.",
          "position": 30,
          "originalSentence": "It follows the pattern ready/desired."
        },
        {
          "id": "sc_165",
          "content": "[Creating a Deployment] [Previous: It follows the pattern ready/desired....] * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
          "position": 31,
          "originalSentence": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state."
        },
        {
          "id": "sc_166",
          "content": "[Creating a Deployment] [Previous: * `UP-TO-DATE` displays the number of replicas tha...] * `AVAILABLE` displays how many replicas of the application are available to your users.",
          "position": 32,
          "originalSentence": "* `AVAILABLE` displays how many replicas of the application are available to your users."
        },
        {
          "id": "sc_167",
          "content": "[Creating a Deployment] [Previous: * `AVAILABLE` displays how many replicas of the ap...] * `AGE` displays the amount of time that the application has been running.",
          "position": 33,
          "originalSentence": "* `AGE` displays the amount of time that the application has been running."
        },
        {
          "id": "sc_168",
          "content": "[Creating a Deployment] [Previous: * `AGE` displays the amount of time that the appli...] Notice how the number of desired replicas is 3 according to `.",
          "position": 34,
          "originalSentence": "Notice how the number of desired replicas is 3 according to `."
        },
        {
          "id": "sc_169",
          "content": "[Creating a Deployment] [Previous: Notice how the number of desired replicas is 3 acc...] replicas` field.",
          "position": 35,
          "originalSentence": "replicas` field."
        },
        {
          "id": "sc_170",
          "content": "[Creating a Deployment] To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
          "position": 36,
          "originalSentence": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`."
        },
        {
          "id": "sc_171",
          "content": "[Creating a Deployment] [Previous: To see the Deployment rollout status, run `kubectl...] The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
          "position": 37,
          "originalSentence": "The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated..."
        },
        {
          "id": "sc_172",
          "content": "[Creating a Deployment] [Previous: The output is similar to: ``` Waiting for rollout ...] deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later.",
          "position": 38,
          "originalSentence": "deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later."
        },
        {
          "id": "sc_173",
          "content": "[Creating a Deployment] [Previous: deployment \"nginx-deployment\" successfully rolled ...] The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas",
          "position": 39,
          "originalSentence": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas"
        },
        {
          "id": "sc_174",
          "content": "[Creating a Deployment] [Previous: The output is similar to this: ``` NAME READY UP-T...] and all replicas are up-to-date (they contain the latest Pod template) and available.",
          "position": 40,
          "originalSentence": "and all replicas are up-to-date (they contain the latest Pod template) and available."
        },
        {
          "id": "sc_175",
          "content": "[Creating a Deployment] [Previous: and all replicas are up-to-date (they contain the ...] To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
          "position": 41,
          "originalSentence": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`."
        },
        {
          "id": "sc_176",
          "content": "[Creating a Deployment] [Previous: To see the ReplicaSet (`rs`) created by the Deploy...] The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace.",
          "position": 42,
          "originalSentence": "The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace."
        },
        {
          "id": "sc_177",
          "content": "[Creating a Deployment] [Previous: The output is similar to this: ``` NAME DESIRED CU...] * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
          "position": 43,
          "originalSentence": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment."
        },
        {
          "id": "sc_178",
          "content": "[Creating a Deployment] [Previous: * `DESIRED` displays the desired number of _replic...] This is the _desired state_.",
          "position": 44,
          "originalSentence": "This is the _desired state_."
        },
        {
          "id": "sc_179",
          "content": "[Creating a Deployment] [Previous: This is the _desired state_....] * `CURRENT` displays how many replicas are currently running.",
          "position": 45,
          "originalSentence": "* `CURRENT` displays how many replicas are currently running."
        },
        {
          "id": "sc_180",
          "content": "[Creating a Deployment] [Previous: * `CURRENT` displays how many replicas are current...] * `READY` displays how many replicas of the application are available to your users.",
          "position": 46,
          "originalSentence": "* `READY` displays how many replicas of the application are available to your users."
        },
        {
          "id": "sc_181",
          "content": "[Creating a Deployment] [Previous: * `READY` displays how many replicas of the applic...] * `AGE` displays the amount of time that the application has been running.",
          "position": 47,
          "originalSentence": "* `AGE` displays the amount of time that the application has been running."
        },
        {
          "id": "sc_182",
          "content": "[Creating a Deployment] [Previous: * `AGE` displays the amount of time that the appli...] Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`.",
          "position": 48,
          "originalSentence": "Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`."
        },
        {
          "id": "sc_183",
          "content": "[Creating a Deployment] [Previous: Notice that the name of the ReplicaSet is always f...] This name will become the basis for the Pods which are created.",
          "position": 49,
          "originalSentence": "This name will become the basis for the Pods which are created."
        },
        {
          "id": "sc_184",
          "content": "[Creating a Deployment] [Previous: This name will become the basis for the Pods which...] The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
          "position": 50,
          "originalSentence": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet."
        },
        {
          "id": "sc_185",
          "content": "[Creating a Deployment] [Previous: The `HASH` string is the same as the `pod-template...] To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
          "position": 51,
          "originalSentence": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`."
        },
        {
          "id": "sc_186",
          "content": "[Creating a Deployment] [Previous: To see the labels automatically generated for each...] The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897",
          "position": 52,
          "originalSentence": "The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-qqcnn 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 ``` The created ReplicaSet ensures that there are three `nginx` Pods."
        },
        {
          "id": "sc_187",
          "content": "[Creating a Deployment] [Previous: The output is similar to: ``` NAME READY STATUS RE...] {{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`).",
          "position": 53,
          "originalSentence": "{{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`)."
        },
        {
          "id": "sc_188",
          "content": "[Creating a Deployment] [Previous: {{< note >}} You must specify an appropriate selec...] Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
          "position": 54,
          "originalSentence": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets)."
        },
        {
          "id": "sc_189",
          "content": "[Creating a Deployment] [Previous: Do not overlap labels or selectors with other cont...] Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
          "position": 55,
          "originalSentence": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly."
        },
        {
          "id": "sc_190",
          "content": "[Creating a Deployment] [Previous: Kubernetes doesn't stop you from overlapping, and ...] {{< /note >}}",
          "position": 56,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_254",
          "content": "[Pod-template-hash label] {{< caution >}} Do not change this label.",
          "position": 0,
          "originalSentence": "{{< caution >}} Do not change this label."
        },
        {
          "id": "sc_255",
          "content": "[Pod-template-hash label] [Previous: {{< caution >}} Do not change this label....] {{< /caution >}}",
          "position": 1,
          "originalSentence": "{{< /caution >}}"
        },
        {
          "id": "sc_256",
          "content": "[Pod-template-hash label] The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
          "position": 2,
          "originalSentence": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts."
        },
        {
          "id": "sc_257",
          "content": "[Pod-template-hash label] [Previous: The `pod-template-hash` label is added by the Depl...] This label ensures that child ReplicaSets of a Deployment do not overlap.",
          "position": 3,
          "originalSentence": "This label ensures that child ReplicaSets of a Deployment do not overlap."
        },
        {
          "id": "sc_258",
          "content": "[Pod-template-hash label] [Previous: This label ensures that child ReplicaSets of a Dep...] It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels",
          "position": 4,
          "originalSentence": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels"
        },
        {
          "id": "sc_259",
          "content": "[Pod-template-hash label] [Previous: It is generated by hashing the `PodTemplate` of th...] and in any existing Pods that the ReplicaSet might have.",
          "position": 5,
          "originalSentence": "and in any existing Pods that the ReplicaSet might have."
        },
        {
          "id": "sc_317",
          "content": "[Updating a Deployment] {{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
          "position": 0,
          "originalSentence": "{{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `."
        },
        {
          "id": "sc_318",
          "content": "[Updating a Deployment] [Previous: {{< note >}} A Deployment's rollout is triggered i...] template`) is changed, for example if the labels or container images of the template are updated.",
          "position": 1,
          "originalSentence": "template`) is changed, for example if the labels or container images of the template are updated."
        },
        {
          "id": "sc_319",
          "content": "[Updating a Deployment] [Previous: template`) is changed, for example if the labels o...] Other updates, such as scaling the Deployment, do not trigger a rollout.",
          "position": 2,
          "originalSentence": "Other updates, such as scaling the Deployment, do not trigger a rollout."
        },
        {
          "id": "sc_320",
          "content": "[Updating a Deployment] [Previous: Other updates, such as scaling the Deployment, do ...] {{< /note >}}",
          "position": 3,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_321",
          "content": "[Updating a Deployment] Follow the steps given below to update your Deployment:",
          "position": 4,
          "originalSentence": "Follow the steps given below to update your Deployment:"
        },
        {
          "id": "sc_322",
          "content": "[Updating a Deployment] [Previous: Follow the steps given below to update your Deploy...] Let's update the nginx Pods to use the `nginx:1.16.",
          "position": 5,
          "originalSentence": "Let's update the nginx Pods to use the `nginx:1.16."
        },
        {
          "id": "sc_323",
          "content": "[Updating a Deployment] [Previous: Let's update the nginx Pods to use the `nginx:1.16...] 1` image instead of the `nginx:1.14.",
          "position": 6,
          "originalSentence": "1` image instead of the `nginx:1.14."
        },
        {
          "id": "sc_324",
          "content": "[Updating a Deployment] [Previous: 1` image instead of the `nginx:1.14....] ```shell kubectl set image deployment.",
          "position": 7,
          "originalSentence": "```shell kubectl set image deployment."
        },
        {
          "id": "sc_325",
          "content": "[Updating a Deployment] [Previous: ```shell kubectl set image deployment....] apps/nginx-deployment nginx=nginx:1.16.",
          "position": 8,
          "originalSentence": "apps/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "sc_326",
          "content": "[Updating a Deployment] [Previous: apps/nginx-deployment nginx=nginx:1.16....] 1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 9,
          "originalSentence": "1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "sc_327",
          "content": "[Updating a Deployment] [Previous: 1 ``` or use the following command: ```shell kubec...] 1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16.",
          "position": 10,
          "originalSentence": "1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16."
        },
        {
          "id": "sc_328",
          "content": "[Updating a Deployment] [Previous: 1 ``` where `deployment/nginx-deployment` indicate...] 1` indicates the new image and its tag.",
          "position": 11,
          "originalSentence": "1` indicates the new image and its tag."
        },
        {
          "id": "sc_329",
          "content": "[Updating a Deployment] [Previous: 1` indicates the new image and its tag....] The output is similar to: ``` deployment.",
          "position": 12,
          "originalSentence": "The output is similar to: ``` deployment."
        },
        {
          "id": "sc_330",
          "content": "[Updating a Deployment] [Previous: The output is similar to: ``` deployment....] apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `.",
          "position": 13,
          "originalSentence": "apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `."
        },
        {
          "id": "sc_331",
          "content": "[Updating a Deployment] [Previous: apps/nginx-deployment image updated ``` Alternativ...] containers[0].",
          "position": 14,
          "originalSentence": "containers[0]."
        },
        {
          "id": "sc_332",
          "content": "[Updating a Deployment] image` from `nginx:1.14.",
          "position": 15,
          "originalSentence": "image` from `nginx:1.14."
        },
        {
          "id": "sc_333",
          "content": "[Updating a Deployment] [Previous: image` from `nginx:1.14....] 2` to `nginx:1.16.",
          "position": 16,
          "originalSentence": "2` to `nginx:1.16."
        },
        {
          "id": "sc_334",
          "content": "[Updating a Deployment] 1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment.",
          "position": 17,
          "originalSentence": "1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment."
        },
        {
          "id": "sc_335",
          "content": "[Updating a Deployment] [Previous: 1`: ```shell kubectl edit deployment/nginx-deploym...] apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
          "position": 18,
          "originalSentence": "apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated..."
        },
        {
          "id": "sc_336",
          "content": "[Updating a Deployment] [Previous: apps/nginx-deployment edited ``` To see the rollou...] ``` or ``` deployment \"nginx-deployment\" successfully rolled out ```",
          "position": 19,
          "originalSentence": "``` or ``` deployment \"nginx-deployment\" successfully rolled out ```"
        },
        {
          "id": "sc_337",
          "content": "[Updating a Deployment] [Previous: ``` or ``` deployment \"nginx-deployment\" successfu...] Get more details on your updated Deployment:",
          "position": 20,
          "originalSentence": "Get more details on your updated Deployment:"
        },
        {
          "id": "sc_338",
          "content": "[Updating a Deployment] [Previous: Get more details on your updated Deployment:...] After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
          "position": 21,
          "originalSentence": "After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`."
        },
        {
          "id": "sc_339",
          "content": "[Updating a Deployment] [Previous: After the rollout succeeds, you can view the Deplo...] The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the",
          "position": 22,
          "originalSentence": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas."
        },
        {
          "id": "sc_340",
          "content": "[Updating a Deployment] [Previous: The output is similar to this: ``` NAME READY UP-T...] ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ```",
          "position": 23,
          "originalSentence": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-khku8 1/1 Running 0 14s nginx-deployment-1564180365-nacti 1/1 Running 0 14s nginx-deployment-1564180365-z9gth 1/1 Running 0 14s ``` Next time you want to update these Pods, you only need to update the Deployment's Pod template again."
        },
        {
          "id": "sc_341",
          "content": "[Updating a Deployment] [Previous: ```shell kubectl get rs ``` The output is similar ...] Deployment ensures that only a certain number of Pods are down while they are being updated.",
          "position": 24,
          "originalSentence": "Deployment ensures that only a certain number of Pods are down while they are being updated."
        },
        {
          "id": "sc_342",
          "content": "[Updating a Deployment] [Previous: Deployment ensures that only a certain number of P...] By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
          "position": 25,
          "originalSentence": "By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable)."
        },
        {
          "id": "sc_343",
          "content": "[Updating a Deployment] [Previous: By default, it ensures that at least 75% of the de...] Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
          "position": 26,
          "originalSentence": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods."
        },
        {
          "id": "sc_344",
          "content": "[Updating a Deployment] [Previous: Deployment also ensures that only a certain number...] By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
          "position": 27,
          "originalSentence": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge)."
        },
        {
          "id": "sc_345",
          "content": "[Updating a Deployment] [Previous: By default, it ensures that at most 125% of the de...] For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one.",
          "position": 28,
          "originalSentence": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one."
        },
        {
          "id": "sc_346",
          "content": "[Updating a Deployment] [Previous: For example, if you look at the above Deployment c...] It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
          "position": 29,
          "originalSentence": "It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed."
        },
        {
          "id": "sc_347",
          "content": "[Updating a Deployment] [Previous: It does not kill old Pods until a sufficient numbe...] It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
          "position": 30,
          "originalSentence": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available."
        },
        {
          "id": "sc_348",
          "content": "[Updating a Deployment] [Previous: It makes sure that at least 3 Pods are available a...] In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
          "position": 31,
          "originalSentence": "In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5."
        },
        {
          "id": "sc_349",
          "content": "[Updating a Deployment] [Previous: In case of a Deployment with 4 replicas, the numbe...] Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment.",
          "position": 32,
          "originalSentence": "Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment."
        },
        {
          "id": "sc_350",
          "content": "[Updating a Deployment] [Previous: Get details of your Deployment: ```shell kubectl d...] kubernetes.",
          "position": 33,
          "originalSentence": "kubernetes."
        },
        {
          "id": "sc_351",
          "content": "[Updating a Deployment] io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
          "position": 34,
          "originalSentence": "io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16."
        },
        {
          "id": "sc_352",
          "content": "[Updating a Deployment] [Previous: io/revision=2 Selector: app=nginx Replicas: 3 desi...] 1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet:",
          "position": 35,
          "originalSentence": "1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-1564180365 (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-deployment-2035384211 to 3 Normal ScalingReplicaSet 24s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 1 Normal ScalingReplicaSet 22s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 2 Normal ScalingReplicaSet 22s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 2 Normal ScalingReplicaSet 19s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 1 Normal ScalingReplicaSet 19s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 3 Normal ScalingReplicaSet 14s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 0 ``` Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211) and scaled it up to 3 replicas directly."
        },
        {
          "id": "sc_353",
          "content": "[Updating a Deployment] [Previous: 1 Port: 80/TCP Environment: <none> Mounts: <none> ...] When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
          "position": 36,
          "originalSentence": "When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up."
        },
        {
          "id": "sc_354",
          "content": "[Updating a Deployment] [Previous: When you updated the Deployment, it created a new ...] Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
          "position": 37,
          "originalSentence": "Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times."
        },
        {
          "id": "sc_355",
          "content": "[Updating a Deployment] [Previous: Then it scaled down the old ReplicaSet to 2 and sc...] It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
          "position": 38,
          "originalSentence": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy."
        },
        {
          "id": "sc_356",
          "content": "[Updating a Deployment] [Previous: It then continued scaling up and down the new and ...] Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
          "position": 39,
          "originalSentence": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0."
        },
        {
          "id": "sc_357",
          "content": "[Updating a Deployment] [Previous: Finally, you'll have 3 available replicas in the n...] {{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`.",
          "position": 40,
          "originalSentence": "{{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`."
        },
        {
          "id": "sc_358",
          "content": "[Updating a Deployment] [Previous: {{< note >}} Kubernetes doesn't count terminating ...] As a result, you might notice that there are more Pods than expected during a rollout",
          "position": 41,
          "originalSentence": "As a result, you might notice that there are more Pods than expected during a rollout"
        },
        {
          "id": "sc_359",
          "content": "[Updating a Deployment] [Previous: As a result, you might notice that there are more ...] and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires.",
          "position": 42,
          "originalSentence": "and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires."
        },
        {
          "id": "sc_360",
          "content": "[Updating a Deployment] [Previous: and that the total resources consumed by the Deplo...] {{< /note >}}",
          "position": 43,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_421",
          "content": "[Rollover (aka multiple updates in-flight)] Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods.",
          "position": 0,
          "originalSentence": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods."
        },
        {
          "id": "sc_422",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: Each time a new Deployment is observed by the Depl...] If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `.",
          "position": 1,
          "originalSentence": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `."
        },
        {
          "id": "sc_423",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: If the Deployment is updated, the existing Replica...] selector` but whose template does not match `.",
          "position": 2,
          "originalSentence": "selector` but whose template does not match `."
        },
        {
          "id": "sc_424",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: selector` but whose template does not match `....] template` are scaled down.",
          "position": 3,
          "originalSentence": "template` are scaled down."
        },
        {
          "id": "sc_425",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: template` are scaled down....] Eventually, the new ReplicaSet is scaled to `.",
          "position": 4,
          "originalSentence": "Eventually, the new ReplicaSet is scaled to `."
        },
        {
          "id": "sc_426",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: Eventually, the new ReplicaSet is scaled to `....] replicas` and all old ReplicaSets is scaled to 0.",
          "position": 5,
          "originalSentence": "replicas` and all old ReplicaSets is scaled to 0."
        },
        {
          "id": "sc_427",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: replicas` and all old ReplicaSets is scaled to 0....] If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up",
          "position": 6,
          "originalSentence": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up"
        },
        {
          "id": "sc_428",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: If you update a Deployment while an existing rollo...] and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.",
          "position": 7,
          "originalSentence": "and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down."
        },
        {
          "id": "sc_429",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: and rolls over the ReplicaSet that it was scaling ...] For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
          "position": 8,
          "originalSentence": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14."
        },
        {
          "id": "sc_430",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: For example, suppose you create a Deployment to cr...] 2`, but then update the Deployment to create 5 replicas of `nginx:1.16.",
          "position": 9,
          "originalSentence": "2`, but then update the Deployment to create 5 replicas of `nginx:1.16."
        },
        {
          "id": "sc_431",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: 2`, but then update the Deployment to create 5 rep...] 1`, when only 3 replicas of `nginx:1.14.",
          "position": 10,
          "originalSentence": "1`, when only 3 replicas of `nginx:1.14."
        },
        {
          "id": "sc_432",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: 1`, when only 3 replicas of `nginx:1.14....] 2` had been created.",
          "position": 11,
          "originalSentence": "2` had been created."
        },
        {
          "id": "sc_433",
          "content": "[Rollover (aka multiple updates in-flight)] In that case, the Deployment immediately starts killing the 3 `nginx:1.14.",
          "position": 12,
          "originalSentence": "In that case, the Deployment immediately starts killing the 3 `nginx:1.14."
        },
        {
          "id": "sc_434",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: In that case, the Deployment immediately starts ki...] 2` Pods that it had created, and starts creating `nginx:1.16.",
          "position": 13,
          "originalSentence": "2` Pods that it had created, and starts creating `nginx:1.16."
        },
        {
          "id": "sc_435",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: 2` Pods that it had created, and starts creating `...] It does not wait for the 5 replicas of `nginx:1.14.",
          "position": 14,
          "originalSentence": "It does not wait for the 5 replicas of `nginx:1.14."
        },
        {
          "id": "sc_436",
          "content": "[Rollover (aka multiple updates in-flight)] [Previous: It does not wait for the 5 replicas of `nginx:1.14...] 2` to be created before changing course.",
          "position": 15,
          "originalSentence": "2` to be created before changing course."
        },
        {
          "id": "sc_462",
          "content": "[Label selector updates] It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
          "position": 0,
          "originalSentence": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front."
        },
        {
          "id": "sc_463",
          "content": "[Label selector updates] [Previous: It is generally discouraged to make label selector...] In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications.",
          "position": 1,
          "originalSentence": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications."
        },
        {
          "id": "sc_464",
          "content": "[Label selector updates] [Previous: In any case, if you need to perform a label select...] {{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
          "position": 2,
          "originalSentence": "{{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created."
        },
        {
          "id": "sc_465",
          "content": "[Label selector updates] [Previous: {{< note >}} In API version `apps/v1`, a Deploymen...] {{< /note >}}",
          "position": 3,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_466",
          "content": "[Label selector updates] Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned.",
          "position": 4,
          "originalSentence": "Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned."
        },
        {
          "id": "sc_467",
          "content": "[Label selector updates] [Previous: Selector additions require the Pod template labels...] This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet.",
          "position": 5,
          "originalSentence": "This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet."
        },
        {
          "id": "sc_468",
          "content": "[Label selector updates] [Previous: This change is a non-overlapping one, meaning that...] Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
          "position": 6,
          "originalSentence": "Selector updates changes the existing value in a selector key -- result in the same behavior as additions."
        },
        {
          "id": "sc_469",
          "content": "[Label selector updates] [Previous: Selector updates changes the existing value in a s...] Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels.",
          "position": 7,
          "originalSentence": "Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels."
        },
        {
          "id": "sc_470",
          "content": "[Label selector updates] [Previous: Selector removals removes an existing key from the...] Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.",
          "position": 8,
          "originalSentence": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets."
        },
        {
          "id": "sc_509",
          "content": "[Rolling Back a Deployment] Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
          "position": 0,
          "originalSentence": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping."
        },
        {
          "id": "sc_510",
          "content": "[Rolling Back a Deployment] [Previous: Sometimes, you may want to rollback a Deployment; ...] By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit).",
          "position": 1,
          "originalSentence": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit)."
        },
        {
          "id": "sc_511",
          "content": "[Rolling Back a Deployment] [Previous: By default, all of the Deployment's rollout histor...] {{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered.",
          "position": 2,
          "originalSentence": "{{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered."
        },
        {
          "id": "sc_512",
          "content": "[Rolling Back a Deployment] [Previous: {{< note >}} A Deployment's revision is created wh...] This means that the new revision is created if and only if the Deployment's Pod template (`.",
          "position": 3,
          "originalSentence": "This means that the new revision is created if and only if the Deployment's Pod template (`."
        },
        {
          "id": "sc_513",
          "content": "[Rolling Back a Deployment] [Previous: This means that the new revision is created if and...] template`) is changed, for example if you update the labels or container images of the template.",
          "position": 4,
          "originalSentence": "template`) is changed, for example if you update the labels or container images of the template."
        },
        {
          "id": "sc_514",
          "content": "[Rolling Back a Deployment] [Previous: template`) is changed, for example if you update t...] Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
          "position": 5,
          "originalSentence": "Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling."
        },
        {
          "id": "sc_515",
          "content": "[Rolling Back a Deployment] [Previous: Other updates, such as scaling the Deployment, do ...] This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back.",
          "position": 6,
          "originalSentence": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back."
        },
        {
          "id": "sc_516",
          "content": "[Rolling Back a Deployment] [Previous: This means that when you roll back to an earlier r...] {{< /note >}}",
          "position": 7,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_517",
          "content": "[Rolling Back a Deployment] Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
          "position": 8,
          "originalSentence": "Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16."
        },
        {
          "id": "sc_518",
          "content": "[Rolling Back a Deployment] [Previous: Suppose that you made a typo while updating the De...] 1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment.",
          "position": 9,
          "originalSentence": "1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_519",
          "content": "[Rolling Back a Deployment] [Previous: 1`: ```shell kubectl set image deployment/nginx-de...] apps/nginx-deployment image updated ``` The rollout gets stuck.",
          "position": 10,
          "originalSentence": "apps/nginx-deployment image updated ``` The rollout gets stuck."
        },
        {
          "id": "sc_520",
          "content": "[Rolling Back a Deployment] [Previous: apps/nginx-deployment image updated ``` The rollou...] You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
          "position": 11,
          "originalSentence": "You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated..."
        },
        {
          "id": "sc_521",
          "content": "[Rolling Back a Deployment] [Previous: You can verify it by checking the rollout status: ...] ``` Press Ctrl-C to stop the above rollout status watch.",
          "position": 12,
          "originalSentence": "``` Press Ctrl-C to stop the above rollout status watch."
        },
        {
          "id": "sc_522",
          "content": "[Rolling Back a Deployment] [Previous: ``` Press Ctrl-C to stop the above rollout status ...] For more information on stuck rollouts, [read more here](#deployment-status).",
          "position": 13,
          "originalSentence": "For more information on stuck rollouts, [read more here](#deployment-status)."
        },
        {
          "id": "sc_523",
          "content": "[Rolling Back a Deployment] [Previous: For more information on stuck rollouts, [read more...] You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3",
          "position": 14,
          "originalSentence": "You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3"
        },
        {
          "id": "sc_524",
          "content": "[Rolling Back a Deployment] [Previous: You see that the number of old replicas (adding th...] and the number of new replicas (from `nginx-deployment-3066724191`) is 1.",
          "position": 15,
          "originalSentence": "and the number of new replicas (from `nginx-deployment-3066724191`) is 1."
        },
        {
          "id": "sc_525",
          "content": "[Rolling Back a Deployment] [Previous: and the number of new replicas (from `nginx-deploy...] ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1",
          "position": 16,
          "originalSentence": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop."
        },
        {
          "id": "sc_526",
          "content": "[Rolling Back a Deployment] [Previous: ```shell kubectl get rs ``` The output is similar ...] ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s",
          "position": 17,
          "originalSentence": "```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s nginx-deployment-3066724191-08mng 0/1 ImagePullBackOff 0 6s ``` {{< note >}} The Deployment controller stops the bad rollout automatically"
        },
        {
          "id": "sc_527",
          "content": "[Rolling Back a Deployment] [Previous: ```shell kubectl get pods ``` The output is simila...] and stops scaling up the new ReplicaSet.",
          "position": 18,
          "originalSentence": "and stops scaling up the new ReplicaSet."
        },
        {
          "id": "sc_528",
          "content": "[Rolling Back a Deployment] [Previous: and stops scaling up the new ReplicaSet....] This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
          "position": 19,
          "originalSentence": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified."
        },
        {
          "id": "sc_529",
          "content": "[Rolling Back a Deployment] [Previous: This depends on the rollingUpdate parameters (`max...] Kubernetes by default sets the value to 25%.",
          "position": 20,
          "originalSentence": "Kubernetes by default sets the value to 25%."
        },
        {
          "id": "sc_530",
          "content": "[Rolling Back a Deployment] [Previous: Kubernetes by default sets the value to 25%....] {{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx",
          "position": 21,
          "originalSentence": "{{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx Replicas: 3 desired | 1 updated | 4 total | 3 available | 1 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.161 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True ReplicaSetUpdated OldReplicaSets: nginx-deployment-1564180365 (3/3 replicas created) NewReplicaSet: nginx-deployment-3066724191 (1/1 replicas created) Events: FirstSeen LastSeen Count From SubObjectPath Type Reason Message --------- -------- ----- ---- ------------- -------- ------ ------- 1m 1m 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-2035384211 to 3 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 1 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 2 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 2 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 1 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 3 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 0 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-3066724191 to 1 ``` To fix this, you need to rollback to a previous revision of Deployment that is stable."
        },
        {
          "id": "sc_565",
          "content": "[Checking Rollout History of a Deployment] Follow the steps given below to check the rollout history:",
          "position": 0,
          "originalSentence": "Follow the steps given below to check the rollout history:"
        },
        {
          "id": "sc_566",
          "content": "[Checking Rollout History of a Deployment] [Previous: Follow the steps given below to check the rollout ...] First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply",
          "position": 1,
          "originalSentence": "First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2 kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "sc_567",
          "content": "[Checking Rollout History of a Deployment] [Previous: First, check the revisions of this Deployment: ```...] 1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
          "position": 2,
          "originalSentence": "1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes."
        },
        {
          "id": "sc_568",
          "content": "[Checking Rollout History of a Deployment] [Previous: 1 3 kubectl set image deployment/nginx-deployment ...] io/change-cause` to its revisions upon creation.",
          "position": 3,
          "originalSentence": "io/change-cause` to its revisions upon creation."
        },
        {
          "id": "sc_569",
          "content": "[Checking Rollout History of a Deployment] [Previous: io/change-cause` to its revisions upon creation....] You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
          "position": 4,
          "originalSentence": "You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes."
        },
        {
          "id": "sc_570",
          "content": "[Checking Rollout History of a Deployment] [Previous: You can specify the`CHANGE-CAUSE` message by: * An...] io/change-cause=\"image updated to 1.16.",
          "position": 5,
          "originalSentence": "io/change-cause=\"image updated to 1.16."
        },
        {
          "id": "sc_571",
          "content": "[Checking Rollout History of a Deployment] [Previous: io/change-cause=\"image updated to 1.16....] 1\"` * Manually editing the manifest of the resource.",
          "position": 6,
          "originalSentence": "1\"` * Manually editing the manifest of the resource."
        },
        {
          "id": "sc_572",
          "content": "[Checking Rollout History of a Deployment] [Previous: 1\"` * Manually editing the manifest of the resourc...] To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx",
          "position": 7,
          "originalSentence": "To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes."
        },
        {
          "id": "sc_573",
          "content": "[Checking Rollout History of a Deployment] [Previous: To see the details of each revision, run: ```shell...] io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 8,
          "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "sc_574",
          "content": "[Checking Rollout History of a Deployment] [Previous: io/change-cause=kubectl set image deployment/nginx...] 1 Containers: nginx: Image: nginx:1.16.",
          "position": 9,
          "originalSentence": "1 Containers: nginx: Image: nginx:1.16."
        },
        {
          "id": "sc_575",
          "content": "[Checking Rollout History of a Deployment] [Previous: 1 Containers: nginx: Image: nginx:1.16....] 1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
          "position": 10,
          "originalSentence": "1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes."
        },
        {
          "id": "sc_603",
          "content": "[Rolling Back to a Previous Revision] Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
          "position": 0,
          "originalSentence": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2."
        },
        {
          "id": "sc_604",
          "content": "[Rolling Back to a Previous Revision] [Previous: Follow the steps given below to rollback the Deplo...] Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
          "position": 1,
          "originalSentence": "Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_605",
          "content": "[Rolling Back to a Previous Revision] [Previous: Now you've decided to undo the current rollout and...] apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ```",
          "position": 2,
          "originalSentence": "apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_606",
          "content": "[Rolling Back to a Previous Revision] [Previous: apps/nginx-deployment rolled back ``` Alternativel...] apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
          "position": 3,
          "originalSentence": "apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout)."
        },
        {
          "id": "sc_607",
          "content": "[Rolling Back to a Previous Revision] [Previous: apps/nginx-deployment rolled back ``` For more det...] The Deployment is now rolled back to a previous stable revision.",
          "position": 4,
          "originalSentence": "The Deployment is now rolled back to a previous stable revision."
        },
        {
          "id": "sc_608",
          "content": "[Rolling Back to a Previous Revision] [Previous: The Deployment is now rolled back to a previous st...] As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller.",
          "position": 5,
          "originalSentence": "As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller."
        },
        {
          "id": "sc_609",
          "content": "[Rolling Back to a Previous Revision] [Previous: As you can see, a `DeploymentRollback` event for r...] Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ```",
          "position": 6,
          "originalSentence": "Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ``` Get the description of the Deployment: ```shell kubectl describe deployment nginx-deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Sun, 02 Sep 2018 18:17:55 -0500 Labels: app=nginx Annotations: deployment."
        },
        {
          "id": "sc_610",
          "content": "[Rolling Back to a Previous Revision] [Previous: Check if the rollback was successful and the Deplo...] kubernetes.",
          "position": 7,
          "originalSentence": "kubernetes."
        },
        {
          "id": "sc_611",
          "content": "[Rolling Back to a Previous Revision] io/revision=4 kubernetes.",
          "position": 8,
          "originalSentence": "io/revision=4 kubernetes."
        },
        {
          "id": "sc_612",
          "content": "[Rolling Back to a Previous Revision] [Previous: io/revision=4 kubernetes....] io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 9,
          "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "sc_613",
          "content": "[Rolling Back to a Previous Revision] [Previous: io/change-cause=kubectl set image deployment/nginx...] 1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers:",
          "position": 10,
          "originalSentence": "1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16."
        },
        {
          "id": "sc_614",
          "content": "[Rolling Back to a Previous Revision] [Previous: 1 Selector: app=nginx Replicas: 3 desired | 3 upda...] 1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none>",
          "position": 11,
          "originalSentence": "1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-c4747d96c (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 12m deployment-controller Scaled up replica set nginx-deployment-75675f5897 to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 0 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-595696685f to 1 Normal DeploymentRollback 15s deployment-controller Rolled back deployment \"nginx-deployment\" to revision 2 Normal ScalingReplicaSet 15s deployment-controller Scaled down replica set nginx-deployment-595696685f to 0 ```"
        },
        {
          "id": "sc_631",
          "content": "[Scaling a Deployment] You can scale a Deployment by using the following command:",
          "position": 0,
          "originalSentence": "You can scale a Deployment by using the following command:"
        },
        {
          "id": "sc_632",
          "content": "[Scaling a Deployment] [Previous: You can scale a Deployment by using the following ...] The output is similar to this:",
          "position": 1,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_633",
          "content": "[Scaling a Deployment] [Previous: The output is similar to this:...] Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of",
          "position": 2,
          "originalSentence": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods."
        },
        {
          "id": "sc_634",
          "content": "[Scaling a Deployment] [Previous: Assuming [horizontal Pod autoscaling](/docs/tasks/...] The output is similar to this:",
          "position": 3,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_664",
          "content": "[Proportional scaling] RollingUpdate Deployments support running multiple versions of an application at the same time.",
          "position": 0,
          "originalSentence": "RollingUpdate Deployments support running multiple versions of an application at the same time."
        },
        {
          "id": "sc_665",
          "content": "[Proportional scaling] [Previous: RollingUpdate Deployments support running multiple...] When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to",
          "position": 1,
          "originalSentence": "When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk."
        },
        {
          "id": "sc_666",
          "content": "[Proportional scaling] [Previous: When you or an autoscaler scales a RollingUpdate D...] This is called *proportional scaling*.",
          "position": 2,
          "originalSentence": "This is called *proportional scaling*."
        },
        {
          "id": "sc_667",
          "content": "[Proportional scaling] [Previous: This is called *proportional scaling*....] For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
          "position": 3,
          "originalSentence": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2."
        },
        {
          "id": "sc_668",
          "content": "[Proportional scaling] [Previous: For example, you are running a Deployment with 10 ...] Ensure that the 10 replicas in your Deployment are running.",
          "position": 4,
          "originalSentence": "Ensure that the 10 replicas in your Deployment are running."
        },
        {
          "id": "sc_669",
          "content": "[Proportional scaling] [Previous: Ensure that the 10 replicas in your Deployment are...] ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster.",
          "position": 5,
          "originalSentence": "```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster."
        },
        {
          "id": "sc_670",
          "content": "[Proportional scaling] [Previous: ```shell kubectl get deploy ``` The output is simi...] ```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment.",
          "position": 6,
          "originalSentence": "```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_671",
          "content": "[Proportional scaling] [Previous: ```shell kubectl set image deployment/nginx-deploy...] apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191",
          "position": 7,
          "originalSentence": "apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191"
        },
        {
          "id": "sc_672",
          "content": "[Proportional scaling] [Previous: apps/nginx-deployment image updated ``` The image ...] but it's blocked due to the `maxUnavailable` requirement that you mentioned above.",
          "position": 8,
          "originalSentence": "but it's blocked due to the `maxUnavailable` requirement that you mentioned above."
        },
        {
          "id": "sc_673",
          "content": "[Proportional scaling] [Previous: but it's blocked due to the `maxUnavailable` requi...] Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along.",
          "position": 9,
          "originalSentence": "Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along."
        },
        {
          "id": "sc_674",
          "content": "[Proportional scaling] [Previous: Check out the rollout status: ```shell kubectl get...] The autoscaler increments the Deployment replicas to 15.",
          "position": 10,
          "originalSentence": "The autoscaler increments the Deployment replicas to 15."
        },
        {
          "id": "sc_675",
          "content": "[Proportional scaling] [Previous: The autoscaler increments the Deployment replicas ...] The Deployment controller needs to decide where to add these new 5 replicas.",
          "position": 11,
          "originalSentence": "The Deployment controller needs to decide where to add these new 5 replicas."
        },
        {
          "id": "sc_676",
          "content": "[Proportional scaling] [Previous: The Deployment controller needs to decide where to...] If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet.",
          "position": 12,
          "originalSentence": "If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet."
        },
        {
          "id": "sc_677",
          "content": "[Proportional scaling] [Previous: If you weren't using proportional scaling, all 5 o...] With proportional scaling, you spread the additional replicas across all ReplicaSets.",
          "position": 13,
          "originalSentence": "With proportional scaling, you spread the additional replicas across all ReplicaSets."
        },
        {
          "id": "sc_678",
          "content": "[Proportional scaling] [Previous: With proportional scaling, you spread the addition...] Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas.",
          "position": 14,
          "originalSentence": "Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas."
        },
        {
          "id": "sc_679",
          "content": "[Proportional scaling] [Previous: Bigger proportions go to the ReplicaSets with the ...] Any leftovers are added to the ReplicaSet with the most replicas.",
          "position": 15,
          "originalSentence": "Any leftovers are added to the ReplicaSet with the most replicas."
        },
        {
          "id": "sc_680",
          "content": "[Proportional scaling] [Previous: Any leftovers are added to the ReplicaSet with the...] ReplicaSets with zero replicas are not scaled up.",
          "position": 16,
          "originalSentence": "ReplicaSets with zero replicas are not scaled up."
        },
        {
          "id": "sc_681",
          "content": "[Proportional scaling] [Previous: ReplicaSets with zero replicas are not scaled up....] In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet.",
          "position": 17,
          "originalSentence": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet."
        },
        {
          "id": "sc_682",
          "content": "[Proportional scaling] [Previous: In our example above, 3 replicas are added to the ...] The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy.",
          "position": 18,
          "originalSentence": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy."
        },
        {
          "id": "sc_683",
          "content": "[Proportional scaling] [Previous: The rollout process should eventually move all rep...] To confirm this, run:",
          "position": 19,
          "originalSentence": "To confirm this, run:"
        },
        {
          "id": "sc_684",
          "content": "[Proportional scaling] [Previous: To confirm this, run:...] The output is similar to this:",
          "position": 20,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_685",
          "content": "[Proportional scaling] [Previous: The output is similar to this:...] The rollout status confirms how the replicas were added to each ReplicaSet.",
          "position": 21,
          "originalSentence": "The rollout status confirms how the replicas were added to each ReplicaSet."
        },
        {
          "id": "sc_686",
          "content": "[Proportional scaling] [Previous: The rollout status confirms how the replicas were ...] The output is similar to this:",
          "position": 22,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_730",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates.",
          "position": 0,
          "originalSentence": "When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates."
        },
        {
          "id": "sc_731",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: When you update a Deployment, or plan to, you can ...] When you're ready to apply those changes, you resume rollouts for the Deployment.",
          "position": 1,
          "originalSentence": "When you're ready to apply those changes, you resume rollouts for the Deployment."
        },
        {
          "id": "sc_732",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: When you're ready to apply those changes, you resu...] This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
          "position": 2,
          "originalSentence": "This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts."
        },
        {
          "id": "sc_733",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: This approach allows you to apply multiple fixes i...] For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx",
          "position": 3,
          "originalSentence": "For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 1m ``` Pause by running the following command: ```shell kubectl rollout pause deployment/nginx-deployment ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_734",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: For example, with a Deployment that was created: G...] apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 4,
          "originalSentence": "apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "sc_735",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment paused ``` Then update the i...] 1 ``` The output is similar to this: ``` deployment.",
          "position": 5,
          "originalSentence": "1 ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_736",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: 1 ``` The output is similar to this: ``` deploymen...] apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\"",
          "position": 6,
          "originalSentence": "apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet has not changed: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 2m ``` You can make as many updates as you wish"
        },
        {
          "id": "sc_737",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment image updated ``` Notice tha...] for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ```",
          "position": 7,
          "originalSentence": "for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_738",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: for example, update the resources that will be use...] apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function",
          "position": 8,
          "originalSentence": "apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function"
        },
        {
          "id": "sc_739",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment resource requirements update...] but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused.",
          "position": 9,
          "originalSentence": "but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused."
        },
        {
          "id": "sc_740",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: but new updates to the Deployment will not have an...] Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to",
          "position": 10,
          "originalSentence": "Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "sc_741",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: Eventually, resume the Deployment rollout and obse...] apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
          "position": 11,
          "originalSentence": "apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done."
        },
        {
          "id": "sc_742",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment resumed ``` {{< glossary_too...] ```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s",
          "position": 12,
          "originalSentence": "```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m nginx-2142116321 1 2 2 2m nginx-3926361531 3 2 1 18s nginx-3926361531 3 2 1 18s nginx-2142116321 1 1 1 2m nginx-3926361531 3 3 1 18s nginx-3926361531 3 3 2 19s nginx-2142116321 0 1 1 2m nginx-2142116321 0 1 1 2m nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 20s ``` Get the status of the latest rollout: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 28s ```"
        },
        {
          "id": "sc_743",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: ```shell kubectl get rs --watch ``` The output is ...] {{< note >}} You cannot rollback a paused Deployment until you resume it.",
          "position": 13,
          "originalSentence": "{{< note >}} You cannot rollback a paused Deployment until you resume it."
        },
        {
          "id": "sc_744",
          "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: {{< note >}} You cannot rollback a paused Deployme...] {{< /note >}}",
          "position": 14,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_762",
          "content": "[Deployment status] A Deployment enters various states during its lifecycle.",
          "position": 0,
          "originalSentence": "A Deployment enters various states during its lifecycle."
        },
        {
          "id": "sc_763",
          "content": "[Deployment status] [Previous: A Deployment enters various states during its life...] It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
          "position": 1,
          "originalSentence": "It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment)."
        },
        {
          "id": "sc_775",
          "content": "[Progressing Deployment] Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:",
          "position": 0,
          "originalSentence": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:"
        },
        {
          "id": "sc_776",
          "content": "[Progressing Deployment] [Previous: Kubernetes marks a Deployment as _progressing_ whe...] The Deployment creates a new ReplicaSet.",
          "position": 1,
          "originalSentence": "The Deployment creates a new ReplicaSet."
        },
        {
          "id": "sc_777",
          "content": "[Progressing Deployment] [Previous: The Deployment creates a new ReplicaSet....] The Deployment is scaling up its newest ReplicaSet.",
          "position": 2,
          "originalSentence": "The Deployment is scaling up its newest ReplicaSet."
        },
        {
          "id": "sc_778",
          "content": "[Progressing Deployment] [Previous: The Deployment is scaling up its newest ReplicaSet...] The Deployment is scaling down its older ReplicaSet(s).",
          "position": 3,
          "originalSentence": "The Deployment is scaling down its older ReplicaSet(s)."
        },
        {
          "id": "sc_779",
          "content": "[Progressing Deployment] [Previous: The Deployment is scaling down its older ReplicaSe...] New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
          "position": 4,
          "originalSentence": "New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds))."
        },
        {
          "id": "sc_780",
          "content": "[Progressing Deployment] [Previous: New Pods become ready or available (ready for at l...] When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `.",
          "position": 5,
          "originalSentence": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `."
        },
        {
          "id": "sc_781",
          "content": "[Progressing Deployment] [Previous: When the rollout becomes “progressing”, the Deploy...] conditions`:",
          "position": 6,
          "originalSentence": "conditions`:"
        },
        {
          "id": "sc_782",
          "content": "[Progressing Deployment] `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
          "position": 7,
          "originalSentence": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`"
        },
        {
          "id": "sc_783",
          "content": "[Progressing Deployment] [Previous: `type: Progressing` `status: \"True\"` `reason: NewR...] You can monitor the progress for a Deployment by using `kubectl rollout status`.",
          "position": 8,
          "originalSentence": "You can monitor the progress for a Deployment by using `kubectl rollout status`."
        },
        {
          "id": "sc_806",
          "content": "[Complete Deployment] Kubernetes marks a Deployment as _complete_ when it has the following characteristics:",
          "position": 0,
          "originalSentence": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics:"
        },
        {
          "id": "sc_807",
          "content": "[Complete Deployment] [Previous: Kubernetes marks a Deployment as _complete_ when i...] All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed.",
          "position": 1,
          "originalSentence": "All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed."
        },
        {
          "id": "sc_808",
          "content": "[Complete Deployment] [Previous: All of the replicas associated with the Deployment...] All of the replicas associated with the Deployment are available.",
          "position": 2,
          "originalSentence": "All of the replicas associated with the Deployment are available."
        },
        {
          "id": "sc_809",
          "content": "[Complete Deployment] [Previous: All of the replicas associated with the Deployment...] No old replicas for the Deployment are running.",
          "position": 3,
          "originalSentence": "No old replicas for the Deployment are running."
        },
        {
          "id": "sc_810",
          "content": "[Complete Deployment] [Previous: No old replicas for the Deployment are running....] When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `.",
          "position": 4,
          "originalSentence": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `."
        },
        {
          "id": "sc_811",
          "content": "[Complete Deployment] [Previous: When the rollout becomes “complete”, the Deploymen...] conditions`:",
          "position": 5,
          "originalSentence": "conditions`:"
        },
        {
          "id": "sc_812",
          "content": "[Complete Deployment] `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`",
          "position": 6,
          "originalSentence": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`"
        },
        {
          "id": "sc_813",
          "content": "[Complete Deployment] [Previous: `type: Progressing` `status: \"True\"` `reason: NewR...] This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated.",
          "position": 7,
          "originalSentence": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated."
        },
        {
          "id": "sc_814",
          "content": "[Complete Deployment] [Previous: This `Progressing` condition will retain a status ...] The condition holds even when availability of replicas changes (which does instead affect the `Available` condition).",
          "position": 8,
          "originalSentence": "The condition holds even when availability of replicas changes (which does instead affect the `Available` condition)."
        },
        {
          "id": "sc_815",
          "content": "[Complete Deployment] [Previous: The condition holds even when availability of repl...] You can check if a Deployment has completed by using `kubectl rollout status`.",
          "position": 9,
          "originalSentence": "You can check if a Deployment has completed by using `kubectl rollout status`."
        },
        {
          "id": "sc_816",
          "content": "[Complete Deployment] [Previous: You can check if a Deployment has completed by usi...] If the rollout completed successfully, `kubectl rollout status` returns a zero exit code.",
          "position": 10,
          "originalSentence": "If the rollout completed successfully, `kubectl rollout status` returns a zero exit code."
        },
        {
          "id": "sc_817",
          "content": "[Complete Deployment] [Previous: If the rollout completed successfully, `kubectl ro...] The output is similar to this:",
          "position": 11,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_818",
          "content": "[Complete Deployment] [Previous: The output is similar to this:...] and the exit status from `kubectl rollout` is 0 (success):",
          "position": 12,
          "originalSentence": "and the exit status from `kubectl rollout` is 0 (success):"
        },
        {
          "id": "sc_869",
          "content": "[Failed Deployment] Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
          "position": 0,
          "originalSentence": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing."
        },
        {
          "id": "sc_870",
          "content": "[Failed Deployment] [Previous: Your Deployment may get stuck trying to deploy its...] This can occur due to some of the following factors:",
          "position": 1,
          "originalSentence": "This can occur due to some of the following factors:"
        },
        {
          "id": "sc_871",
          "content": "[Failed Deployment] [Previous: This can occur due to some of the following factor...] Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration",
          "position": 2,
          "originalSentence": "Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration"
        },
        {
          "id": "sc_872",
          "content": "[Failed Deployment] [Previous: Insufficient quota Readiness probe failures Image ...] One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`.",
          "position": 3,
          "originalSentence": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`."
        },
        {
          "id": "sc_873",
          "content": "[Failed Deployment] [Previous: One way you can detect this condition is to specif...] progressDeadlineSeconds`](#progress-deadline-seconds)).",
          "position": 4,
          "originalSentence": "progressDeadlineSeconds`](#progress-deadline-seconds))."
        },
        {
          "id": "sc_874",
          "content": "[Failed Deployment] [Previous: progressDeadlineSeconds`](#progress-deadline-secon...] progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.",
          "position": 5,
          "originalSentence": "progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled."
        },
        {
          "id": "sc_875",
          "content": "[Failed Deployment] [Previous: progressDeadlineSeconds` denotes the number of sec...] The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:",
          "position": 6,
          "originalSentence": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:"
        },
        {
          "id": "sc_876",
          "content": "[Failed Deployment] [Previous: The following `kubectl` command sets the spec with...] The output is similar to this:",
          "position": 7,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_877",
          "content": "[Failed Deployment] [Previous: The output is similar to this:...] Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `.",
          "position": 8,
          "originalSentence": "Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `."
        },
        {
          "id": "sc_878",
          "content": "[Failed Deployment] [Previous: Once the deadline has been exceeded, the Deploymen...] conditions`:",
          "position": 9,
          "originalSentence": "conditions`:"
        },
        {
          "id": "sc_879",
          "content": "[Failed Deployment] `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`",
          "position": 10,
          "originalSentence": "`type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`"
        },
        {
          "id": "sc_880",
          "content": "[Failed Deployment] [Previous: `type: Progressing` `status: \"False\"` `reason: Pro...] This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
          "position": 11,
          "originalSentence": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`."
        },
        {
          "id": "sc_881",
          "content": "[Failed Deployment] [Previous: This condition can also fail early and is then set...] Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
          "position": 12,
          "originalSentence": "Also, the deadline is not taken into account anymore once the Deployment rollout completes."
        },
        {
          "id": "sc_882",
          "content": "[Failed Deployment] [Previous: Also, the deadline is not taken into account anymo...] See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
          "position": 13,
          "originalSentence": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions."
        },
        {
          "id": "sc_883",
          "content": "[Failed Deployment] [Previous: See the [Kubernetes API conventions](https://git.k...] {{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`.",
          "position": 14,
          "originalSentence": "{{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`."
        },
        {
          "id": "sc_884",
          "content": "[Failed Deployment] [Previous: {{< note >}} Kubernetes takes no action on a stall...] Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.",
          "position": 15,
          "originalSentence": "Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version."
        },
        {
          "id": "sc_885",
          "content": "[Failed Deployment] [Previous: Higher level orchestrators can take advantage of i...] {{< /note >}}",
          "position": 16,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_886",
          "content": "[Failed Deployment] {{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
          "position": 17,
          "originalSentence": "{{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline."
        },
        {
          "id": "sc_887",
          "content": "[Failed Deployment] [Previous: {{< note >}} If you pause a Deployment rollout, Ku...] You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.",
          "position": 18,
          "originalSentence": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline."
        },
        {
          "id": "sc_888",
          "content": "[Failed Deployment] [Previous: You can safely pause a Deployment rollout in the m...] {{< /note >}}",
          "position": 19,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_889",
          "content": "[Failed Deployment] You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient.",
          "position": 20,
          "originalSentence": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient."
        },
        {
          "id": "sc_890",
          "content": "[Failed Deployment] [Previous: You may experience transient errors with your Depl...] For example, let's suppose you have insufficient quota.",
          "position": 21,
          "originalSentence": "For example, let's suppose you have insufficient quota."
        },
        {
          "id": "sc_891",
          "content": "[Failed Deployment] [Previous: For example, let's suppose you have insufficient q...] If you describe the Deployment you will notice the following section:",
          "position": 22,
          "originalSentence": "If you describe the Deployment you will notice the following section:"
        },
        {
          "id": "sc_892",
          "content": "[Failed Deployment] [Previous: If you describe the Deployment you will notice the...] The output is similar to this:",
          "position": 23,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_893",
          "content": "[Failed Deployment] [Previous: The output is similar to this:...] If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
          "position": 24,
          "originalSentence": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:"
        },
        {
          "id": "sc_894",
          "content": "[Failed Deployment] [Previous: If you run `kubectl get deployment nginx-deploymen...] Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:",
          "position": 25,
          "originalSentence": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:"
        },
        {
          "id": "sc_895",
          "content": "[Failed Deployment] [Previous: Eventually, once the Deployment progress deadline ...] You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace.",
          "position": 26,
          "originalSentence": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace."
        },
        {
          "id": "sc_896",
          "content": "[Failed Deployment] [Previous: You can address an issue of insufficient quota by ...] If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
          "position": 27,
          "originalSentence": "If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`)."
        },
        {
          "id": "sc_897",
          "content": "[Failed Deployment] [Previous: If you satisfy the quota conditions and the Deploy...] `type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
          "position": 28,
          "originalSentence": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability."
        },
        {
          "id": "sc_898",
          "content": "[Failed Deployment] [Previous: `type: Available` with `status: \"True\"` means that...] Minimum availability is dictated by the parameters specified in the deployment strategy.",
          "position": 29,
          "originalSentence": "Minimum availability is dictated by the parameters specified in the deployment strategy."
        },
        {
          "id": "sc_899",
          "content": "[Failed Deployment] [Previous: Minimum availability is dictated by the parameters...] `type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the",
          "position": 30,
          "originalSentence": "`type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case `reason: NewReplicaSetAvailable` means that the Deployment is complete)."
        },
        {
          "id": "sc_900",
          "content": "[Failed Deployment] [Previous: `type: Progressing` with `status: \"True\"` means th...] You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
          "position": 31,
          "originalSentence": "You can check if a Deployment has failed to progress by using `kubectl rollout status`."
        },
        {
          "id": "sc_901",
          "content": "[Failed Deployment] [Previous: You can check if a Deployment has failed to progre...] `kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline.",
          "position": 32,
          "originalSentence": "`kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline."
        },
        {
          "id": "sc_902",
          "content": "[Failed Deployment] [Previous: `kubectl rollout status` returns a non-zero exit c...] The output is similar to this:",
          "position": 33,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "sc_903",
          "content": "[Failed Deployment] [Previous: The output is similar to this:...] and the exit status from `kubectl rollout` is 1 (indicating an error):",
          "position": 34,
          "originalSentence": "and the exit status from `kubectl rollout` is 1 (indicating an error):"
        },
        {
          "id": "sc_941",
          "content": "[Operating on a failed deployment] All actions that apply to a complete Deployment also apply to a failed Deployment.",
          "position": 0,
          "originalSentence": "All actions that apply to a complete Deployment also apply to a failed Deployment."
        },
        {
          "id": "sc_942",
          "content": "[Operating on a failed deployment] [Previous: All actions that apply to a complete Deployment al...] You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
          "position": 1,
          "originalSentence": "You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template."
        },
        {
          "id": "sc_957",
          "content": "[Clean up Policy] You can set `.",
          "position": 0,
          "originalSentence": "You can set `."
        },
        {
          "id": "sc_958",
          "content": "[Clean up Policy] revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain.",
          "position": 1,
          "originalSentence": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain."
        },
        {
          "id": "sc_959",
          "content": "[Clean up Policy] [Previous: revisionHistoryLimit` field in a Deployment to spe...] The rest will be garbage-collected in the background.",
          "position": 2,
          "originalSentence": "The rest will be garbage-collected in the background."
        },
        {
          "id": "sc_960",
          "content": "[Clean up Policy] [Previous: The rest will be garbage-collected in the backgrou...] By default, it is 10.",
          "position": 3,
          "originalSentence": "By default, it is 10."
        },
        {
          "id": "sc_961",
          "content": "[Clean up Policy] [Previous: By default, it is 10....] {{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.",
          "position": 4,
          "originalSentence": "{{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back."
        },
        {
          "id": "sc_962",
          "content": "[Clean up Policy] [Previous: {{< note >}} Explicitly setting this field to 0, w...] {{< /note >}}",
          "position": 5,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_963",
          "content": "[Clean up Policy] The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
          "position": 6,
          "originalSentence": "The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment)."
        },
        {
          "id": "sc_964",
          "content": "[Clean up Policy] [Previous: The cleanup only starts **after** a Deployment rea...] If you set `.",
          "position": 7,
          "originalSentence": "If you set `."
        },
        {
          "id": "sc_965",
          "content": "[Clean up Policy] revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one.",
          "position": 8,
          "originalSentence": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one."
        },
        {
          "id": "sc_966",
          "content": "[Clean up Policy] [Previous: revisionHistoryLimit` to 0, any rollout nonetheles...] Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure.",
          "position": 9,
          "originalSentence": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure."
        },
        {
          "id": "sc_967",
          "content": "[Clean up Policy] [Previous: Even with a non-zero revision history limit, you c...] For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `.",
          "position": 10,
          "originalSentence": "For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `."
        },
        {
          "id": "sc_968",
          "content": "[Clean up Policy] [Previous: For example, if pods are crash looping, and there ...] revisionHistoryLimit` because the Deployment never reaches a complete state.",
          "position": 11,
          "originalSentence": "revisionHistoryLimit` because the Deployment never reaches a complete state."
        },
        {
          "id": "sc_982",
          "content": "[Canary Deployment] If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in [managing resources](/docs/concepts/workloads/management/#canary-deployments).",
          "position": 0,
          "originalSentence": "If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in [managing resources](/docs/concepts/workloads/management/#canary-deployments)."
        },
        {
          "id": "sc_996",
          "content": "[Writing a Deployment Spec] As with all other Kubernetes configs, a Deployment needs `.",
          "position": 0,
          "originalSentence": "As with all other Kubernetes configs, a Deployment needs `."
        },
        {
          "id": "sc_997",
          "content": "[Writing a Deployment Spec] [Previous: As with all other Kubernetes configs, a Deployment...] apiVersion`, `.",
          "position": 1,
          "originalSentence": "apiVersion`, `."
        },
        {
          "id": "sc_998",
          "content": "[Writing a Deployment Spec] kind`, and `.",
          "position": 2,
          "originalSentence": "kind`, and `."
        },
        {
          "id": "sc_999",
          "content": "[Writing a Deployment Spec] metadata` fields.",
          "position": 3,
          "originalSentence": "metadata` fields."
        },
        {
          "id": "sc_1000",
          "content": "[Writing a Deployment Spec] For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers",
          "position": 4,
          "originalSentence": "For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers"
        },
        {
          "id": "sc_1001",
          "content": "[Writing a Deployment Spec] [Previous: For general information about working with config ...] and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
          "position": 5,
          "originalSentence": "and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents."
        },
        {
          "id": "sc_1002",
          "content": "[Writing a Deployment Spec] [Previous: and [using kubectl to manage resources](/docs/conc...] When the control plane creates new Pods for a Deployment, the `.",
          "position": 6,
          "originalSentence": "When the control plane creates new Pods for a Deployment, the `."
        },
        {
          "id": "sc_1003",
          "content": "[Writing a Deployment Spec] [Previous: When the control plane creates new Pods for a Depl...] name` of the Deployment is part of the basis for naming those Pods.",
          "position": 7,
          "originalSentence": "name` of the Deployment is part of the basis for naming those Pods."
        },
        {
          "id": "sc_1004",
          "content": "[Writing a Deployment Spec] [Previous: name` of the Deployment is part of the basis for n...] The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames.",
          "position": 8,
          "originalSentence": "The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames."
        },
        {
          "id": "sc_1005",
          "content": "[Writing a Deployment Spec] [Previous: The name of a Deployment must be a valid [DNS subd...] For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
          "position": 9,
          "originalSentence": "For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names)."
        },
        {
          "id": "sc_1006",
          "content": "[Writing a Deployment Spec] [Previous: For best compatibility, the name should follow the...] A Deployment also needs a [`.",
          "position": 10,
          "originalSentence": "A Deployment also needs a [`."
        },
        {
          "id": "sc_1007",
          "content": "[Writing a Deployment Spec] [Previous: A Deployment also needs a [`....] spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
          "position": 11,
          "originalSentence": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status)."
        },
        {
          "id": "sc_1028",
          "content": "[Pod Template] template` and `.",
          "position": 0,
          "originalSentence": "template` and `."
        },
        {
          "id": "sc_1029",
          "content": "[Pod Template] selector` are the only required fields of the `.",
          "position": 1,
          "originalSentence": "selector` are the only required fields of the `."
        },
        {
          "id": "sc_1030",
          "content": "[Pod Template] [Previous: selector` are the only required fields of the `....] template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
          "position": 2,
          "originalSentence": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates)."
        },
        {
          "id": "sc_1031",
          "content": "[Pod Template] [Previous: template` is a [Pod template](/docs/concepts/workl...] It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
          "position": 3,
          "originalSentence": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`."
        },
        {
          "id": "sc_1032",
          "content": "[Pod Template] [Previous: It has exactly the same schema as a {{< glossary_t...] In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy.",
          "position": 4,
          "originalSentence": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy."
        },
        {
          "id": "sc_1033",
          "content": "[Pod Template] [Previous: In addition to required fields for a Pod, a Pod te...] For labels, make sure not to overlap with other controllers.",
          "position": 5,
          "originalSentence": "For labels, make sure not to overlap with other controllers."
        },
        {
          "id": "sc_1034",
          "content": "[Pod Template] [Previous: For labels, make sure not to overlap with other co...] See [selector](#selector).",
          "position": 6,
          "originalSentence": "See [selector](#selector)."
        },
        {
          "id": "sc_1035",
          "content": "[Pod Template] [Previous: See [selector](#selector)....] restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
          "position": 7,
          "originalSentence": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified."
        },
        {
          "id": "sc_1052",
          "content": "[Replicas] replicas` is an optional field that specifies the number of desired Pods.",
          "position": 0,
          "originalSentence": "replicas` is an optional field that specifies the number of desired Pods."
        },
        {
          "id": "sc_1053",
          "content": "[Replicas] [Previous: replicas` is an optional field that specifies the ...] It defaults to 1.",
          "position": 1,
          "originalSentence": "It defaults to 1."
        },
        {
          "id": "sc_1054",
          "content": "[Replicas] Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`",
          "position": 2,
          "originalSentence": "Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`"
        },
        {
          "id": "sc_1055",
          "content": "[Replicas] [Previous: Should you manually scale a Deployment, example vi...] and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment.",
          "position": 3,
          "originalSentence": "and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment."
        },
        {
          "id": "sc_1056",
          "content": "[Replicas] [Previous: and then you update that Deployment based on a man...] yaml`), then applying that manifest overwrites the manual scaling that you previously did.",
          "position": 4,
          "originalSentence": "yaml`), then applying that manifest overwrites the manual scaling that you previously did."
        },
        {
          "id": "sc_1057",
          "content": "[Replicas] [Previous: yaml`), then applying that manifest overwrites the...] If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
          "position": 5,
          "originalSentence": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `."
        },
        {
          "id": "sc_1058",
          "content": "[Replicas] [Previous: If a [HorizontalPodAutoscaler](/docs/tasks/run-app...] Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `.",
          "position": 6,
          "originalSentence": "Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `."
        },
        {
          "id": "sc_1059",
          "content": "[Replicas] [Previous: Instead, allow the Kubernetes {{< glossary_tooltip...] replicas` field automatically.",
          "position": 7,
          "originalSentence": "replicas` field automatically."
        },
        {
          "id": "sc_1088",
          "content": "[Selector] selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment.",
          "position": 0,
          "originalSentence": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment."
        },
        {
          "id": "sc_1089",
          "content": "[Selector] [Previous: selector` is a required field that specifies a [la...] selector` must match `.",
          "position": 1,
          "originalSentence": "selector` must match `."
        },
        {
          "id": "sc_1090",
          "content": "[Selector] [Previous: selector` must match `....] labels`, or it will be rejected by the API.",
          "position": 2,
          "originalSentence": "labels`, or it will be rejected by the API."
        },
        {
          "id": "sc_1091",
          "content": "[Selector] [Previous: labels`, or it will be rejected by the API....] In API version `apps/v1`, `.",
          "position": 3,
          "originalSentence": "In API version `apps/v1`, `."
        },
        {
          "id": "sc_1092",
          "content": "[Selector] [Previous: In API version `apps/v1`, `....] selector` and `.",
          "position": 4,
          "originalSentence": "selector` and `."
        },
        {
          "id": "sc_1093",
          "content": "[Selector] labels` do not default to `.",
          "position": 5,
          "originalSentence": "labels` do not default to `."
        },
        {
          "id": "sc_1094",
          "content": "[Selector] [Previous: labels` do not default to `....] labels` if not set.",
          "position": 6,
          "originalSentence": "labels` if not set."
        },
        {
          "id": "sc_1095",
          "content": "[Selector] So they must be set explicitly.",
          "position": 7,
          "originalSentence": "So they must be set explicitly."
        },
        {
          "id": "sc_1096",
          "content": "[Selector] [Previous: So they must be set explicitly....] Also note that `.",
          "position": 8,
          "originalSentence": "Also note that `."
        },
        {
          "id": "sc_1097",
          "content": "[Selector] selector` is immutable after creation of the Deployment in `apps/v1`.",
          "position": 9,
          "originalSentence": "selector` is immutable after creation of the Deployment in `apps/v1`."
        },
        {
          "id": "sc_1098",
          "content": "[Selector] [Previous: selector` is immutable after creation of the Deplo...] A Deployment may terminate Pods whose labels match the selector if their template is different from `.",
          "position": 10,
          "originalSentence": "A Deployment may terminate Pods whose labels match the selector if their template is different from `."
        },
        {
          "id": "sc_1099",
          "content": "[Selector] [Previous: A Deployment may terminate Pods whose labels match...] template` or if the total number of such Pods exceeds `.",
          "position": 11,
          "originalSentence": "template` or if the total number of such Pods exceeds `."
        },
        {
          "id": "sc_1100",
          "content": "[Selector] [Previous: template` or if the total number of such Pods exce...] It brings up new Pods with `.",
          "position": 12,
          "originalSentence": "It brings up new Pods with `."
        },
        {
          "id": "sc_1101",
          "content": "[Selector] [Previous: It brings up new Pods with `....] template` if the number of Pods is less than the desired number.",
          "position": 13,
          "originalSentence": "template` if the number of Pods is less than the desired number."
        },
        {
          "id": "sc_1102",
          "content": "[Selector] [Previous: template` if the number of Pods is less than the d...] {{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment",
          "position": 14,
          "originalSentence": "{{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment"
        },
        {
          "id": "sc_1103",
          "content": "[Selector] [Previous: {{< note >}} You should not create other Pods whos...] or by creating another controller such as a ReplicaSet or a ReplicationController.",
          "position": 15,
          "originalSentence": "or by creating another controller such as a ReplicaSet or a ReplicationController."
        },
        {
          "id": "sc_1104",
          "content": "[Selector] [Previous: or by creating another controller such as a Replic...] If you do so, the first Deployment thinks that it created these other Pods.",
          "position": 16,
          "originalSentence": "If you do so, the first Deployment thinks that it created these other Pods."
        },
        {
          "id": "sc_1105",
          "content": "[Selector] [Previous: If you do so, the first Deployment thinks that it ...] Kubernetes does not stop you from doing this.",
          "position": 17,
          "originalSentence": "Kubernetes does not stop you from doing this."
        },
        {
          "id": "sc_1106",
          "content": "[Selector] [Previous: Kubernetes does not stop you from doing this....] {{< /note >}}",
          "position": 18,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_1107",
          "content": "[Selector] If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
          "position": 19,
          "originalSentence": "If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly."
        },
        {
          "id": "sc_1131",
          "content": "[Strategy] strategy` specifies the strategy used to replace old Pods by new ones.",
          "position": 0,
          "originalSentence": "strategy` specifies the strategy used to replace old Pods by new ones."
        },
        {
          "id": "sc_1132",
          "content": "[Strategy] [Previous: strategy` specifies the strategy used to replace o...] type` can be \"Recreate\" or \"RollingUpdate\".",
          "position": 1,
          "originalSentence": "type` can be \"Recreate\" or \"RollingUpdate\"."
        },
        {
          "id": "sc_1133",
          "content": "[Strategy] [Previous: type` can be \"Recreate\" or \"RollingUpdate\"....] \"RollingUpdate\" is the default value.",
          "position": 2,
          "originalSentence": "\"RollingUpdate\" is the default value."
        },
        {
          "id": "sc_1145",
          "content": "[Recreate Deployment] All existing Pods are killed before new ones are created when `.",
          "position": 0,
          "originalSentence": "All existing Pods are killed before new ones are created when `."
        },
        {
          "id": "sc_1146",
          "content": "[Recreate Deployment] [Previous: All existing Pods are killed before new ones are c...] type==Recreate`.",
          "position": 1,
          "originalSentence": "type==Recreate`."
        },
        {
          "id": "sc_1147",
          "content": "[Recreate Deployment] {{< note >}} This will only guarantee Pod termination previous to creation for upgrades.",
          "position": 2,
          "originalSentence": "{{< note >}} This will only guarantee Pod termination previous to creation for upgrades."
        },
        {
          "id": "sc_1148",
          "content": "[Recreate Deployment] [Previous: {{< note >}} This will only guarantee Pod terminat...] If you upgrade a Deployment, all Pods of the old revision will be terminated immediately.",
          "position": 3,
          "originalSentence": "If you upgrade a Deployment, all Pods of the old revision will be terminated immediately."
        },
        {
          "id": "sc_1149",
          "content": "[Recreate Deployment] [Previous: If you upgrade a Deployment, all Pods of the old r...] Successful removal is awaited before any Pod of the new revision is created.",
          "position": 4,
          "originalSentence": "Successful removal is awaited before any Pod of the new revision is created."
        },
        {
          "id": "sc_1150",
          "content": "[Recreate Deployment] [Previous: Successful removal is awaited before any Pod of th...] If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state).",
          "position": 5,
          "originalSentence": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state)."
        },
        {
          "id": "sc_1151",
          "content": "[Recreate Deployment] [Previous: If you manually delete a Pod, the lifecycle is con...] If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
          "position": 6,
          "originalSentence": "If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/)."
        },
        {
          "id": "sc_1152",
          "content": "[Recreate Deployment] [Previous: If you need an \"at most\" guarantee for your Pods, ...] {{< /note >}}",
          "position": 7,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "sc_1164",
          "content": "[Rolling Update Deployment] The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
          "position": 0,
          "originalSentence": "The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `."
        },
        {
          "id": "sc_1165",
          "content": "[Rolling Update Deployment] [Previous: The Deployment updates Pods in a rolling update fa...] type==RollingUpdate`.",
          "position": 1,
          "originalSentence": "type==RollingUpdate`."
        },
        {
          "id": "sc_1166",
          "content": "[Rolling Update Deployment] [Previous: type==RollingUpdate`....] You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
          "position": 2,
          "originalSentence": "You can specify `maxUnavailable` and `maxSurge` to control the rolling update process."
        },
        {
          "id": "sc_1180",
          "content": "[Max Unavailable] rollingUpdate.",
          "position": 0,
          "originalSentence": "rollingUpdate."
        },
        {
          "id": "sc_1181",
          "content": "[Max Unavailable] maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process.",
          "position": 1,
          "originalSentence": "maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process."
        },
        {
          "id": "sc_1182",
          "content": "[Max Unavailable] [Previous: maxUnavailable` is an optional field that specifie...] The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
          "position": 2,
          "originalSentence": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%)."
        },
        {
          "id": "sc_1183",
          "content": "[Max Unavailable] [Previous: The value can be an absolute number (for example, ...] The absolute number is calculated from percentage by rounding down.",
          "position": 3,
          "originalSentence": "The absolute number is calculated from percentage by rounding down."
        },
        {
          "id": "sc_1184",
          "content": "[Max Unavailable] [Previous: The absolute number is calculated from percentage ...] The value cannot be 0 if `.",
          "position": 4,
          "originalSentence": "The value cannot be 0 if `."
        },
        {
          "id": "sc_1185",
          "content": "[Max Unavailable] [Previous: The value cannot be 0 if `....] rollingUpdate.",
          "position": 5,
          "originalSentence": "rollingUpdate."
        },
        {
          "id": "sc_1186",
          "content": "[Max Unavailable] maxSurge` is 0.",
          "position": 6,
          "originalSentence": "maxSurge` is 0."
        },
        {
          "id": "sc_1187",
          "content": "[Max Unavailable] The default value is 25%.",
          "position": 7,
          "originalSentence": "The default value is 25%."
        },
        {
          "id": "sc_1188",
          "content": "[Max Unavailable] [Previous: The default value is 25%....] For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts.",
          "position": 8,
          "originalSentence": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts."
        },
        {
          "id": "sc_1189",
          "content": "[Max Unavailable] [Previous: For example, when this value is set to 30%, the ol...] Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods.",
          "position": 9,
          "originalSentence": "Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods."
        },
        {
          "id": "sc_1213",
          "content": "[Max Surge] rollingUpdate.",
          "position": 0,
          "originalSentence": "rollingUpdate."
        },
        {
          "id": "sc_1214",
          "content": "[Max Surge] maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods.",
          "position": 1,
          "originalSentence": "maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods."
        },
        {
          "id": "sc_1215",
          "content": "[Max Surge] [Previous: maxSurge` is an optional field that specifies the ...] The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
          "position": 2,
          "originalSentence": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%)."
        },
        {
          "id": "sc_1216",
          "content": "[Max Surge] [Previous: The value can be an absolute number (for example, ...] The value cannot be 0 if `maxUnavailable` is 0.",
          "position": 3,
          "originalSentence": "The value cannot be 0 if `maxUnavailable` is 0."
        },
        {
          "id": "sc_1217",
          "content": "[Max Surge] [Previous: The value cannot be 0 if `maxUnavailable` is 0....] The absolute number is calculated from the percentage by rounding up.",
          "position": 4,
          "originalSentence": "The absolute number is calculated from the percentage by rounding up."
        },
        {
          "id": "sc_1218",
          "content": "[Max Surge] [Previous: The absolute number is calculated from the percent...] The default value is 25%.",
          "position": 5,
          "originalSentence": "The default value is 25%."
        },
        {
          "id": "sc_1219",
          "content": "[Max Surge] [Previous: The default value is 25%....] For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods.",
          "position": 6,
          "originalSentence": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods."
        },
        {
          "id": "sc_1220",
          "content": "[Max Surge] [Previous: For example, when this value is set to 30%, the ne...] Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods.",
          "position": 7,
          "originalSentence": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods."
        },
        {
          "id": "sc_1221",
          "content": "[Max Surge] [Previous: Once old Pods have been killed, the new ReplicaSet...] Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:",
          "position": 8,
          "originalSentence": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:"
        },
        {
          "id": "sc_1222",
          "content": "[Max Surge] [Previous: Here are some Rolling Update Deployment examples t...] {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}",
          "position": 9,
          "originalSentence": "{{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}"
        },
        {
          "id": "sc_1223",
          "content": "[Max Surge] [Previous: {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max ...] {{% /tab %}} {{% tab name=\"Max Surge\" %}}",
          "position": 10,
          "originalSentence": "{{% /tab %}} {{% tab name=\"Max Surge\" %}}"
        },
        {
          "id": "sc_1224",
          "content": "[Max Surge] [Previous: {{% /tab %}} {{% tab name=\"Max Surge\" %}}...] {{% /tab %}} {{% tab name=\"Hybrid\" %}}",
          "position": 11,
          "originalSentence": "{{% /tab %}} {{% tab name=\"Hybrid\" %}}"
        },
        {
          "id": "sc_1225",
          "content": "[Max Surge] [Previous: {{% /tab %}} {{% tab name=\"Hybrid\" %}}...] {{% /tab %}} {{< /tabs >}}",
          "position": 12,
          "originalSentence": "{{% /tab %}} {{< /tabs >}}"
        },
        {
          "id": "sc_1246",
          "content": "[Progress Deadline Seconds] progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
          "position": 0,
          "originalSentence": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`."
        },
        {
          "id": "sc_1247",
          "content": "[Progress Deadline Seconds] [Previous: progressDeadlineSeconds` is an optional field that...] and `reason: ProgressDeadlineExceeded` in the status of the resource.",
          "position": 1,
          "originalSentence": "and `reason: ProgressDeadlineExceeded` in the status of the resource."
        },
        {
          "id": "sc_1248",
          "content": "[Progress Deadline Seconds] [Previous: and `reason: ProgressDeadlineExceeded` in the stat...] The Deployment controller will keep retrying the Deployment.",
          "position": 2,
          "originalSentence": "The Deployment controller will keep retrying the Deployment."
        },
        {
          "id": "sc_1249",
          "content": "[Progress Deadline Seconds] [Previous: The Deployment controller will keep retrying the D...] This defaults to 600.",
          "position": 3,
          "originalSentence": "This defaults to 600."
        },
        {
          "id": "sc_1250",
          "content": "[Progress Deadline Seconds] [Previous: This defaults to 600....] In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.",
          "position": 4,
          "originalSentence": "In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition."
        },
        {
          "id": "sc_1251",
          "content": "[Progress Deadline Seconds] [Previous: In the future, once automatic rollback will be imp...] If specified, this field needs to be greater than `.",
          "position": 5,
          "originalSentence": "If specified, this field needs to be greater than `."
        },
        {
          "id": "sc_1252",
          "content": "[Progress Deadline Seconds] [Previous: If specified, this field needs to be greater than ...] minReadySeconds`.",
          "position": 6,
          "originalSentence": "minReadySeconds`."
        },
        {
          "id": "sc_1264",
          "content": "[Min Ready Seconds] minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing",
          "position": 0,
          "originalSentence": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing"
        },
        {
          "id": "sc_1265",
          "content": "[Min Ready Seconds] [Previous: minReadySeconds` is an optional field that specifi...] for it to be considered available.",
          "position": 1,
          "originalSentence": "for it to be considered available."
        },
        {
          "id": "sc_1266",
          "content": "[Min Ready Seconds] [Previous: for it to be considered available....] This defaults to 0 (the Pod will be considered available as soon as it is ready).",
          "position": 2,
          "originalSentence": "This defaults to 0 (the Pod will be considered available as soon as it is ready)."
        },
        {
          "id": "sc_1267",
          "content": "[Min Ready Seconds] [Previous: This defaults to 0 (the Pod will be considered ava...] To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
          "position": 3,
          "originalSentence": "To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes)."
        },
        {
          "id": "sc_1278",
          "content": "[Terminating Pods] {{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}",
          "position": 0,
          "originalSentence": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}"
        },
        {
          "id": "sc_1279",
          "content": "[Terminating Pods] [Previous: {{< feature-state feature_gate_name=\"DeploymentRep...] You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the",
          "position": 1,
          "originalSentence": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)"
        },
        {
          "id": "sc_1280",
          "content": "[Terminating Pods] [Previous: You can enable this feature by setting the `Deploy...] Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period.",
          "position": 2,
          "originalSentence": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period."
        },
        {
          "id": "sc_1281",
          "content": "[Terminating Pods] [Previous: Pods that become terminating due to deletion or sc...] As a result, the total number of all pods can temporarily exceed `.",
          "position": 3,
          "originalSentence": "As a result, the total number of all pods can temporarily exceed `."
        },
        {
          "id": "sc_1282",
          "content": "[Terminating Pods] [Previous: As a result, the total number of all pods can temp...] Terminating pods can be tracked using the `.",
          "position": 4,
          "originalSentence": "Terminating pods can be tracked using the `."
        },
        {
          "id": "sc_1283",
          "content": "[Terminating Pods] [Previous: Terminating pods can be tracked using the `....] terminatingReplicas` field of the Deployment.",
          "position": 5,
          "originalSentence": "terminatingReplicas` field of the Deployment."
        },
        {
          "id": "sc_1297",
          "content": "[Revision History Limit] A Deployment's revision history is stored in the ReplicaSets it controls.",
          "position": 0,
          "originalSentence": "A Deployment's revision history is stored in the ReplicaSets it controls."
        },
        {
          "id": "sc_1298",
          "content": "[Revision History Limit] [Previous: A Deployment's revision history is stored in the R...] revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback.",
          "position": 1,
          "originalSentence": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback."
        },
        {
          "id": "sc_1299",
          "content": "[Revision History Limit] [Previous: revisionHistoryLimit` is an optional field that sp...] These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
          "position": 2,
          "originalSentence": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`."
        },
        {
          "id": "sc_1300",
          "content": "[Revision History Limit] [Previous: These old ReplicaSets consume resources in `etcd` ...] The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
          "position": 3,
          "originalSentence": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment."
        },
        {
          "id": "sc_1301",
          "content": "[Revision History Limit] [Previous: The configuration of each Deployment revision is s...] By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
          "position": 4,
          "originalSentence": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments."
        },
        {
          "id": "sc_1302",
          "content": "[Revision History Limit] [Previous: By default, 10 old ReplicaSets will be kept, howev...] More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
          "position": 5,
          "originalSentence": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up."
        },
        {
          "id": "sc_1303",
          "content": "[Revision History Limit] [Previous: More specifically, setting this field to zero mean...] In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
          "position": 6,
          "originalSentence": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up."
        },
        {
          "id": "sc_1314",
          "content": "[Paused] paused` is an optional boolean field for pausing and resuming a Deployment.",
          "position": 0,
          "originalSentence": "paused` is an optional boolean field for pausing and resuming a Deployment."
        },
        {
          "id": "sc_1315",
          "content": "[Paused] [Previous: paused` is an optional boolean field for pausing a...] The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused.",
          "position": 1,
          "originalSentence": "The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused."
        },
        {
          "id": "sc_1316",
          "content": "[Paused] [Previous: The only difference between a paused Deployment an...] A Deployment is not paused by default when it is created.",
          "position": 2,
          "originalSentence": "A Deployment is not paused by default when it is created."
        },
        {
          "id": "sc_1325",
          "content": "[{{% heading \"whatsnext\" %}}] Learn more about [Pods](/docs/concepts/workloads/pods).",
          "position": 0,
          "originalSentence": "Learn more about [Pods](/docs/concepts/workloads/pods)."
        },
        {
          "id": "sc_1326",
          "content": "[{{% heading \"whatsnext\" %}}] [Previous: Learn more about [Pods](/docs/concepts/workloads/p...] [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
          "position": 1,
          "originalSentence": "[Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/)."
        },
        {
          "id": "sc_1327",
          "content": "[{{% heading \"whatsnext\" %}}] [Previous: [Run a stateless application using a Deployment](/...] Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
          "position": 2,
          "originalSentence": "Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API."
        },
        {
          "id": "sc_1328",
          "content": "[{{% heading \"whatsnext\" %}}] [Previous: Read the {{< api-reference page=\"workload-resource...] Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions.",
          "position": 3,
          "originalSentence": "Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions."
        },
        {
          "id": "sc_1329",
          "content": "[{{% heading \"whatsnext\" %}}] [Previous: Read about [PodDisruptionBudget](/docs/concepts/wo...] Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
          "position": 4,
          "originalSentence": "Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/)."
        }
      ]
    },
    "paragraph": {
      "count": 0,
      "chunks": []
    },
    "sentence": {
      "count": 434,
      "chunks": [
        {
          "id": "s_22",
          "content": "janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time.",
          "position": 0,
          "originalSentence": "janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time."
        },
        {
          "id": "s_23",
          "content": "If something goes wrong, Kubernetes will rollback the change for you.",
          "position": 1,
          "originalSentence": "If something goes wrong, Kubernetes will rollback the change for you."
        },
        {
          "id": "s_24",
          "content": "Take advantage of a growing ecosystem of deployment solutions.",
          "position": 2,
          "originalSentence": "Take advantage of a growing ecosystem of deployment solutions."
        },
        {
          "id": "s_25",
          "content": "description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
          "position": 3,
          "originalSentence": "description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state."
        },
        {
          "id": "s_26",
          "content": "content_type: concept weight: 10 hide_summary: true # Listed separately in section index",
          "position": 4,
          "originalSentence": "content_type: concept weight: 10 hide_summary: true # Listed separately in section index"
        },
        {
          "id": "s_27",
          "content": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
          "position": 5,
          "originalSentence": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}."
        },
        {
          "id": "s_28",
          "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
          "position": 6,
          "originalSentence": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate."
        },
        {
          "id": "s_29",
          "content": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
          "position": 7,
          "originalSentence": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments."
        },
        {
          "id": "s_30",
          "content": "{{< note >}} Do not manage ReplicaSets owned by a Deployment.",
          "position": 8,
          "originalSentence": "{{< note >}} Do not manage ReplicaSets owned by a Deployment."
        },
        {
          "id": "s_31",
          "content": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
          "position": 9,
          "originalSentence": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below."
        },
        {
          "id": "s_32",
          "content": "{{< /note >}}",
          "position": 10,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_59",
          "content": "The following are typical use cases for Deployments:",
          "position": 0,
          "originalSentence": "The following are typical use cases for Deployments:"
        },
        {
          "id": "s_60",
          "content": "[Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
          "position": 1,
          "originalSentence": "[Create a Deployment to rollout a ReplicaSet](#creating-a-deployment)."
        },
        {
          "id": "s_61",
          "content": "The ReplicaSet creates Pods in the background.",
          "position": 2,
          "originalSentence": "The ReplicaSet creates Pods in the background."
        },
        {
          "id": "s_62",
          "content": "Check the status of the rollout to see if it succeeds or not.",
          "position": 3,
          "originalSentence": "Check the status of the rollout to see if it succeeds or not."
        },
        {
          "id": "s_63",
          "content": "[Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
          "position": 4,
          "originalSentence": "[Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment."
        },
        {
          "id": "s_64",
          "content": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
          "position": 5,
          "originalSentence": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate."
        },
        {
          "id": "s_65",
          "content": "Each new ReplicaSet updates the revision of the Deployment.",
          "position": 6,
          "originalSentence": "Each new ReplicaSet updates the revision of the Deployment."
        },
        {
          "id": "s_66",
          "content": "[Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
          "position": 7,
          "originalSentence": "[Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable."
        },
        {
          "id": "s_67",
          "content": "Each rollback updates the revision of the Deployment.",
          "position": 8,
          "originalSentence": "Each rollback updates the revision of the Deployment."
        },
        {
          "id": "s_68",
          "content": "[Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
          "position": 9,
          "originalSentence": "[Scale up the Deployment to facilitate more load](#scaling-a-deployment)."
        },
        {
          "id": "s_69",
          "content": "[Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
          "position": 10,
          "originalSentence": "[Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout."
        },
        {
          "id": "s_70",
          "content": "[Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
          "position": 11,
          "originalSentence": "[Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck."
        },
        {
          "id": "s_71",
          "content": "[Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
          "position": 12,
          "originalSentence": "[Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore."
        },
        {
          "id": "s_191",
          "content": "The following is an example of a Deployment.",
          "position": 0,
          "originalSentence": "The following is an example of a Deployment."
        },
        {
          "id": "s_192",
          "content": "It creates a ReplicaSet to bring up three `nginx` Pods:",
          "position": 1,
          "originalSentence": "It creates a ReplicaSet to bring up three `nginx` Pods:"
        },
        {
          "id": "s_193",
          "content": "{{% code_sample file=\"controllers/nginx-deployment.",
          "position": 2,
          "originalSentence": "{{% code_sample file=\"controllers/nginx-deployment."
        },
        {
          "id": "s_194",
          "content": "In this example:",
          "position": 3,
          "originalSentence": "In this example:"
        },
        {
          "id": "s_195",
          "content": "A Deployment named `nginx-deployment` is created, indicated by the `.",
          "position": 4,
          "originalSentence": "A Deployment named `nginx-deployment` is created, indicated by the `."
        },
        {
          "id": "s_196",
          "content": "name` field.",
          "position": 5,
          "originalSentence": "name` field."
        },
        {
          "id": "s_197",
          "content": "This name will become the basis for the ReplicaSets and Pods which are created later.",
          "position": 6,
          "originalSentence": "This name will become the basis for the ReplicaSets and Pods which are created later."
        },
        {
          "id": "s_198",
          "content": "See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details.",
          "position": 7,
          "originalSentence": "See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details."
        },
        {
          "id": "s_199",
          "content": "The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
          "position": 8,
          "originalSentence": "The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `."
        },
        {
          "id": "s_200",
          "content": "replicas` field.",
          "position": 9,
          "originalSentence": "replicas` field."
        },
        {
          "id": "s_201",
          "content": "selector` field defines how the created ReplicaSet finds which Pods to manage.",
          "position": 10,
          "originalSentence": "selector` field defines how the created ReplicaSet finds which Pods to manage."
        },
        {
          "id": "s_202",
          "content": "In this case, you select a label that is defined in the Pod template (`app: nginx`).",
          "position": 11,
          "originalSentence": "In this case, you select a label that is defined in the Pod template (`app: nginx`)."
        },
        {
          "id": "s_203",
          "content": "However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.",
          "position": 12,
          "originalSentence": "However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule."
        },
        {
          "id": "s_204",
          "content": "{{< note >}} The `.",
          "position": 13,
          "originalSentence": "{{< note >}} The `."
        },
        {
          "id": "s_205",
          "content": "matchLabels` field is a map of {key,value} pairs.",
          "position": 14,
          "originalSentence": "matchLabels` field is a map of {key,value} pairs."
        },
        {
          "id": "s_206",
          "content": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
          "position": 15,
          "originalSentence": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\"."
        },
        {
          "id": "s_207",
          "content": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
          "position": 16,
          "originalSentence": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match."
        },
        {
          "id": "s_208",
          "content": "{{< /note >}} The `.",
          "position": 17,
          "originalSentence": "{{< /note >}} The `."
        },
        {
          "id": "s_209",
          "content": "template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `.",
          "position": 18,
          "originalSentence": "template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `."
        },
        {
          "id": "s_210",
          "content": "labels` field.",
          "position": 19,
          "originalSentence": "labels` field."
        },
        {
          "id": "s_211",
          "content": "* The Pod template's specification, or `.",
          "position": 20,
          "originalSentence": "* The Pod template's specification, or `."
        },
        {
          "id": "s_212",
          "content": "spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14.",
          "position": 21,
          "originalSentence": "spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14."
        },
        {
          "id": "s_213",
          "content": "* Create one container and name it `nginx` using the `.",
          "position": 22,
          "originalSentence": "* Create one container and name it `nginx` using the `."
        },
        {
          "id": "s_214",
          "content": "containers[0].",
          "position": 23,
          "originalSentence": "containers[0]."
        },
        {
          "id": "s_215",
          "content": "name` field.",
          "position": 24,
          "originalSentence": "name` field."
        },
        {
          "id": "s_216",
          "content": "Before you begin, make sure your Kubernetes cluster is up and running.",
          "position": 25,
          "originalSentence": "Before you begin, make sure your Kubernetes cluster is up and running."
        },
        {
          "id": "s_217",
          "content": "Follow the steps given below to create the above Deployment:",
          "position": 26,
          "originalSentence": "Follow the steps given below to create the above Deployment:"
        },
        {
          "id": "s_218",
          "content": "Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created.",
          "position": 27,
          "originalSentence": "Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created."
        },
        {
          "id": "s_219",
          "content": "If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the names of the Deployments in the namespace.",
          "position": 28,
          "originalSentence": "If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the names of the Deployments in the namespace."
        },
        {
          "id": "s_220",
          "content": "* `READY` displays how many replicas of the application are available to your users.",
          "position": 29,
          "originalSentence": "* `READY` displays how many replicas of the application are available to your users."
        },
        {
          "id": "s_221",
          "content": "It follows the pattern ready/desired.",
          "position": 30,
          "originalSentence": "It follows the pattern ready/desired."
        },
        {
          "id": "s_222",
          "content": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
          "position": 31,
          "originalSentence": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state."
        },
        {
          "id": "s_223",
          "content": "* `AVAILABLE` displays how many replicas of the application are available to your users.",
          "position": 32,
          "originalSentence": "* `AVAILABLE` displays how many replicas of the application are available to your users."
        },
        {
          "id": "s_224",
          "content": "* `AGE` displays the amount of time that the application has been running.",
          "position": 33,
          "originalSentence": "* `AGE` displays the amount of time that the application has been running."
        },
        {
          "id": "s_225",
          "content": "Notice how the number of desired replicas is 3 according to `.",
          "position": 34,
          "originalSentence": "Notice how the number of desired replicas is 3 according to `."
        },
        {
          "id": "s_226",
          "content": "replicas` field.",
          "position": 35,
          "originalSentence": "replicas` field."
        },
        {
          "id": "s_227",
          "content": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
          "position": 36,
          "originalSentence": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`."
        },
        {
          "id": "s_228",
          "content": "The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
          "position": 37,
          "originalSentence": "The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated..."
        },
        {
          "id": "s_229",
          "content": "deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later.",
          "position": 38,
          "originalSentence": "deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later."
        },
        {
          "id": "s_230",
          "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas",
          "position": 39,
          "originalSentence": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas"
        },
        {
          "id": "s_231",
          "content": "and all replicas are up-to-date (they contain the latest Pod template) and available.",
          "position": 40,
          "originalSentence": "and all replicas are up-to-date (they contain the latest Pod template) and available."
        },
        {
          "id": "s_232",
          "content": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
          "position": 41,
          "originalSentence": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`."
        },
        {
          "id": "s_233",
          "content": "The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace.",
          "position": 42,
          "originalSentence": "The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace."
        },
        {
          "id": "s_234",
          "content": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
          "position": 43,
          "originalSentence": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment."
        },
        {
          "id": "s_235",
          "content": "This is the _desired state_.",
          "position": 44,
          "originalSentence": "This is the _desired state_."
        },
        {
          "id": "s_236",
          "content": "* `CURRENT` displays how many replicas are currently running.",
          "position": 45,
          "originalSentence": "* `CURRENT` displays how many replicas are currently running."
        },
        {
          "id": "s_237",
          "content": "* `READY` displays how many replicas of the application are available to your users.",
          "position": 46,
          "originalSentence": "* `READY` displays how many replicas of the application are available to your users."
        },
        {
          "id": "s_238",
          "content": "* `AGE` displays the amount of time that the application has been running.",
          "position": 47,
          "originalSentence": "* `AGE` displays the amount of time that the application has been running."
        },
        {
          "id": "s_239",
          "content": "Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`.",
          "position": 48,
          "originalSentence": "Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`."
        },
        {
          "id": "s_240",
          "content": "This name will become the basis for the Pods which are created.",
          "position": 49,
          "originalSentence": "This name will become the basis for the Pods which are created."
        },
        {
          "id": "s_241",
          "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
          "position": 50,
          "originalSentence": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet."
        },
        {
          "id": "s_242",
          "content": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
          "position": 51,
          "originalSentence": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`."
        },
        {
          "id": "s_243",
          "content": "The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-qqcnn 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 ``` The created ReplicaSet ensures that there are three `nginx` Pods.",
          "position": 52,
          "originalSentence": "The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-qqcnn 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 ``` The created ReplicaSet ensures that there are three `nginx` Pods."
        },
        {
          "id": "s_244",
          "content": "{{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`).",
          "position": 53,
          "originalSentence": "{{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`)."
        },
        {
          "id": "s_245",
          "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
          "position": 54,
          "originalSentence": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets)."
        },
        {
          "id": "s_246",
          "content": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
          "position": 55,
          "originalSentence": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly."
        },
        {
          "id": "s_247",
          "content": "{{< /note >}}",
          "position": 56,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_260",
          "content": "{{< caution >}} Do not change this label.",
          "position": 0,
          "originalSentence": "{{< caution >}} Do not change this label."
        },
        {
          "id": "s_261",
          "content": "{{< /caution >}}",
          "position": 1,
          "originalSentence": "{{< /caution >}}"
        },
        {
          "id": "s_262",
          "content": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
          "position": 2,
          "originalSentence": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts."
        },
        {
          "id": "s_263",
          "content": "This label ensures that child ReplicaSets of a Deployment do not overlap.",
          "position": 3,
          "originalSentence": "This label ensures that child ReplicaSets of a Deployment do not overlap."
        },
        {
          "id": "s_264",
          "content": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels",
          "position": 4,
          "originalSentence": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels"
        },
        {
          "id": "s_265",
          "content": "and in any existing Pods that the ReplicaSet might have.",
          "position": 5,
          "originalSentence": "and in any existing Pods that the ReplicaSet might have."
        },
        {
          "id": "s_361",
          "content": "{{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
          "position": 0,
          "originalSentence": "{{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `."
        },
        {
          "id": "s_362",
          "content": "template`) is changed, for example if the labels or container images of the template are updated.",
          "position": 1,
          "originalSentence": "template`) is changed, for example if the labels or container images of the template are updated."
        },
        {
          "id": "s_363",
          "content": "Other updates, such as scaling the Deployment, do not trigger a rollout.",
          "position": 2,
          "originalSentence": "Other updates, such as scaling the Deployment, do not trigger a rollout."
        },
        {
          "id": "s_364",
          "content": "{{< /note >}}",
          "position": 3,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_365",
          "content": "Follow the steps given below to update your Deployment:",
          "position": 4,
          "originalSentence": "Follow the steps given below to update your Deployment:"
        },
        {
          "id": "s_366",
          "content": "Let's update the nginx Pods to use the `nginx:1.16.",
          "position": 5,
          "originalSentence": "Let's update the nginx Pods to use the `nginx:1.16."
        },
        {
          "id": "s_367",
          "content": "1` image instead of the `nginx:1.14.",
          "position": 6,
          "originalSentence": "1` image instead of the `nginx:1.14."
        },
        {
          "id": "s_368",
          "content": "```shell kubectl set image deployment.",
          "position": 7,
          "originalSentence": "```shell kubectl set image deployment."
        },
        {
          "id": "s_369",
          "content": "apps/nginx-deployment nginx=nginx:1.16.",
          "position": 8,
          "originalSentence": "apps/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "s_370",
          "content": "1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 9,
          "originalSentence": "1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "s_371",
          "content": "1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16.",
          "position": 10,
          "originalSentence": "1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16."
        },
        {
          "id": "s_372",
          "content": "1` indicates the new image and its tag.",
          "position": 11,
          "originalSentence": "1` indicates the new image and its tag."
        },
        {
          "id": "s_373",
          "content": "The output is similar to: ``` deployment.",
          "position": 12,
          "originalSentence": "The output is similar to: ``` deployment."
        },
        {
          "id": "s_374",
          "content": "apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `.",
          "position": 13,
          "originalSentence": "apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `."
        },
        {
          "id": "s_375",
          "content": "containers[0].",
          "position": 14,
          "originalSentence": "containers[0]."
        },
        {
          "id": "s_376",
          "content": "image` from `nginx:1.14.",
          "position": 15,
          "originalSentence": "image` from `nginx:1.14."
        },
        {
          "id": "s_377",
          "content": "2` to `nginx:1.16.",
          "position": 16,
          "originalSentence": "2` to `nginx:1.16."
        },
        {
          "id": "s_378",
          "content": "1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment.",
          "position": 17,
          "originalSentence": "1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment."
        },
        {
          "id": "s_379",
          "content": "apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
          "position": 18,
          "originalSentence": "apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated..."
        },
        {
          "id": "s_380",
          "content": "``` or ``` deployment \"nginx-deployment\" successfully rolled out ```",
          "position": 19,
          "originalSentence": "``` or ``` deployment \"nginx-deployment\" successfully rolled out ```"
        },
        {
          "id": "s_381",
          "content": "Get more details on your updated Deployment:",
          "position": 20,
          "originalSentence": "Get more details on your updated Deployment:"
        },
        {
          "id": "s_382",
          "content": "After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
          "position": 21,
          "originalSentence": "After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`."
        },
        {
          "id": "s_383",
          "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
          "position": 22,
          "originalSentence": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas."
        },
        {
          "id": "s_384",
          "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-khku8 1/1 Running 0 14s nginx-deployment-1564180365-nacti 1/1 Running 0 14s nginx-deployment-1564180365-z9gth 1/1 Running 0 14s ``` Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
          "position": 23,
          "originalSentence": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-khku8 1/1 Running 0 14s nginx-deployment-1564180365-nacti 1/1 Running 0 14s nginx-deployment-1564180365-z9gth 1/1 Running 0 14s ``` Next time you want to update these Pods, you only need to update the Deployment's Pod template again."
        },
        {
          "id": "s_385",
          "content": "Deployment ensures that only a certain number of Pods are down while they are being updated.",
          "position": 24,
          "originalSentence": "Deployment ensures that only a certain number of Pods are down while they are being updated."
        },
        {
          "id": "s_386",
          "content": "By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
          "position": 25,
          "originalSentence": "By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable)."
        },
        {
          "id": "s_387",
          "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
          "position": 26,
          "originalSentence": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods."
        },
        {
          "id": "s_388",
          "content": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
          "position": 27,
          "originalSentence": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge)."
        },
        {
          "id": "s_389",
          "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one.",
          "position": 28,
          "originalSentence": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one."
        },
        {
          "id": "s_390",
          "content": "It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
          "position": 29,
          "originalSentence": "It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed."
        },
        {
          "id": "s_391",
          "content": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
          "position": 30,
          "originalSentence": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available."
        },
        {
          "id": "s_392",
          "content": "In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
          "position": 31,
          "originalSentence": "In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5."
        },
        {
          "id": "s_393",
          "content": "Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment.",
          "position": 32,
          "originalSentence": "Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment."
        },
        {
          "id": "s_394",
          "content": "kubernetes.",
          "position": 33,
          "originalSentence": "kubernetes."
        },
        {
          "id": "s_395",
          "content": "io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
          "position": 34,
          "originalSentence": "io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16."
        },
        {
          "id": "s_396",
          "content": "1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-1564180365 (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-deployment-2035384211 to 3 Normal ScalingReplicaSet 24s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 1 Normal ScalingReplicaSet 22s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 2 Normal ScalingReplicaSet 22s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 2 Normal ScalingReplicaSet 19s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 1 Normal ScalingReplicaSet 19s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 3 Normal ScalingReplicaSet 14s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 0 ``` Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211) and scaled it up to 3 replicas directly.",
          "position": 35,
          "originalSentence": "1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-1564180365 (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-deployment-2035384211 to 3 Normal ScalingReplicaSet 24s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 1 Normal ScalingReplicaSet 22s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 2 Normal ScalingReplicaSet 22s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 2 Normal ScalingReplicaSet 19s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 1 Normal ScalingReplicaSet 19s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 3 Normal ScalingReplicaSet 14s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 0 ``` Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211) and scaled it up to 3 replicas directly."
        },
        {
          "id": "s_397",
          "content": "When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
          "position": 36,
          "originalSentence": "When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up."
        },
        {
          "id": "s_398",
          "content": "Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
          "position": 37,
          "originalSentence": "Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times."
        },
        {
          "id": "s_399",
          "content": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
          "position": 38,
          "originalSentence": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy."
        },
        {
          "id": "s_400",
          "content": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
          "position": 39,
          "originalSentence": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0."
        },
        {
          "id": "s_401",
          "content": "{{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`.",
          "position": 40,
          "originalSentence": "{{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`."
        },
        {
          "id": "s_402",
          "content": "As a result, you might notice that there are more Pods than expected during a rollout",
          "position": 41,
          "originalSentence": "As a result, you might notice that there are more Pods than expected during a rollout"
        },
        {
          "id": "s_403",
          "content": "and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires.",
          "position": 42,
          "originalSentence": "and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires."
        },
        {
          "id": "s_404",
          "content": "{{< /note >}}",
          "position": 43,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_437",
          "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods.",
          "position": 0,
          "originalSentence": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods."
        },
        {
          "id": "s_438",
          "content": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `.",
          "position": 1,
          "originalSentence": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `."
        },
        {
          "id": "s_439",
          "content": "selector` but whose template does not match `.",
          "position": 2,
          "originalSentence": "selector` but whose template does not match `."
        },
        {
          "id": "s_440",
          "content": "template` are scaled down.",
          "position": 3,
          "originalSentence": "template` are scaled down."
        },
        {
          "id": "s_441",
          "content": "Eventually, the new ReplicaSet is scaled to `.",
          "position": 4,
          "originalSentence": "Eventually, the new ReplicaSet is scaled to `."
        },
        {
          "id": "s_442",
          "content": "replicas` and all old ReplicaSets is scaled to 0.",
          "position": 5,
          "originalSentence": "replicas` and all old ReplicaSets is scaled to 0."
        },
        {
          "id": "s_443",
          "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up",
          "position": 6,
          "originalSentence": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up"
        },
        {
          "id": "s_444",
          "content": "and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.",
          "position": 7,
          "originalSentence": "and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down."
        },
        {
          "id": "s_445",
          "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
          "position": 8,
          "originalSentence": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14."
        },
        {
          "id": "s_446",
          "content": "2`, but then update the Deployment to create 5 replicas of `nginx:1.16.",
          "position": 9,
          "originalSentence": "2`, but then update the Deployment to create 5 replicas of `nginx:1.16."
        },
        {
          "id": "s_447",
          "content": "1`, when only 3 replicas of `nginx:1.14.",
          "position": 10,
          "originalSentence": "1`, when only 3 replicas of `nginx:1.14."
        },
        {
          "id": "s_448",
          "content": "2` had been created.",
          "position": 11,
          "originalSentence": "2` had been created."
        },
        {
          "id": "s_449",
          "content": "In that case, the Deployment immediately starts killing the 3 `nginx:1.14.",
          "position": 12,
          "originalSentence": "In that case, the Deployment immediately starts killing the 3 `nginx:1.14."
        },
        {
          "id": "s_450",
          "content": "2` Pods that it had created, and starts creating `nginx:1.16.",
          "position": 13,
          "originalSentence": "2` Pods that it had created, and starts creating `nginx:1.16."
        },
        {
          "id": "s_451",
          "content": "It does not wait for the 5 replicas of `nginx:1.14.",
          "position": 14,
          "originalSentence": "It does not wait for the 5 replicas of `nginx:1.14."
        },
        {
          "id": "s_452",
          "content": "2` to be created before changing course.",
          "position": 15,
          "originalSentence": "2` to be created before changing course."
        },
        {
          "id": "s_471",
          "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
          "position": 0,
          "originalSentence": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front."
        },
        {
          "id": "s_472",
          "content": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications.",
          "position": 1,
          "originalSentence": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications."
        },
        {
          "id": "s_473",
          "content": "{{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
          "position": 2,
          "originalSentence": "{{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created."
        },
        {
          "id": "s_474",
          "content": "{{< /note >}}",
          "position": 3,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_475",
          "content": "Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned.",
          "position": 4,
          "originalSentence": "Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned."
        },
        {
          "id": "s_476",
          "content": "This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet.",
          "position": 5,
          "originalSentence": "This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet."
        },
        {
          "id": "s_477",
          "content": "Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
          "position": 6,
          "originalSentence": "Selector updates changes the existing value in a selector key -- result in the same behavior as additions."
        },
        {
          "id": "s_478",
          "content": "Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels.",
          "position": 7,
          "originalSentence": "Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels."
        },
        {
          "id": "s_479",
          "content": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.",
          "position": 8,
          "originalSentence": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets."
        },
        {
          "id": "s_531",
          "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
          "position": 0,
          "originalSentence": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping."
        },
        {
          "id": "s_532",
          "content": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit).",
          "position": 1,
          "originalSentence": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit)."
        },
        {
          "id": "s_533",
          "content": "{{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered.",
          "position": 2,
          "originalSentence": "{{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered."
        },
        {
          "id": "s_534",
          "content": "This means that the new revision is created if and only if the Deployment's Pod template (`.",
          "position": 3,
          "originalSentence": "This means that the new revision is created if and only if the Deployment's Pod template (`."
        },
        {
          "id": "s_535",
          "content": "template`) is changed, for example if you update the labels or container images of the template.",
          "position": 4,
          "originalSentence": "template`) is changed, for example if you update the labels or container images of the template."
        },
        {
          "id": "s_536",
          "content": "Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
          "position": 5,
          "originalSentence": "Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling."
        },
        {
          "id": "s_537",
          "content": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back.",
          "position": 6,
          "originalSentence": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back."
        },
        {
          "id": "s_538",
          "content": "{{< /note >}}",
          "position": 7,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_539",
          "content": "Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
          "position": 8,
          "originalSentence": "Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16."
        },
        {
          "id": "s_540",
          "content": "1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment.",
          "position": 9,
          "originalSentence": "1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_541",
          "content": "apps/nginx-deployment image updated ``` The rollout gets stuck.",
          "position": 10,
          "originalSentence": "apps/nginx-deployment image updated ``` The rollout gets stuck."
        },
        {
          "id": "s_542",
          "content": "You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
          "position": 11,
          "originalSentence": "You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated..."
        },
        {
          "id": "s_543",
          "content": "``` Press Ctrl-C to stop the above rollout status watch.",
          "position": 12,
          "originalSentence": "``` Press Ctrl-C to stop the above rollout status watch."
        },
        {
          "id": "s_544",
          "content": "For more information on stuck rollouts, [read more here](#deployment-status).",
          "position": 13,
          "originalSentence": "For more information on stuck rollouts, [read more here](#deployment-status)."
        },
        {
          "id": "s_545",
          "content": "You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3",
          "position": 14,
          "originalSentence": "You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3"
        },
        {
          "id": "s_546",
          "content": "and the number of new replicas (from `nginx-deployment-3066724191`) is 1.",
          "position": 15,
          "originalSentence": "and the number of new replicas (from `nginx-deployment-3066724191`) is 1."
        },
        {
          "id": "s_547",
          "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
          "position": 16,
          "originalSentence": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop."
        },
        {
          "id": "s_548",
          "content": "```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s nginx-deployment-3066724191-08mng 0/1 ImagePullBackOff 0 6s ``` {{< note >}} The Deployment controller stops the bad rollout automatically",
          "position": 17,
          "originalSentence": "```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s nginx-deployment-3066724191-08mng 0/1 ImagePullBackOff 0 6s ``` {{< note >}} The Deployment controller stops the bad rollout automatically"
        },
        {
          "id": "s_549",
          "content": "and stops scaling up the new ReplicaSet.",
          "position": 18,
          "originalSentence": "and stops scaling up the new ReplicaSet."
        },
        {
          "id": "s_550",
          "content": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
          "position": 19,
          "originalSentence": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified."
        },
        {
          "id": "s_551",
          "content": "Kubernetes by default sets the value to 25%.",
          "position": 20,
          "originalSentence": "Kubernetes by default sets the value to 25%."
        },
        {
          "id": "s_552",
          "content": "{{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx Replicas: 3 desired | 1 updated | 4 total | 3 available | 1 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.161 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True ReplicaSetUpdated OldReplicaSets: nginx-deployment-1564180365 (3/3 replicas created) NewReplicaSet: nginx-deployment-3066724191 (1/1 replicas created) Events: FirstSeen LastSeen Count From SubObjectPath Type Reason Message --------- -------- ----- ---- ------------- -------- ------ ------- 1m 1m 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-2035384211 to 3 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 1 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 2 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 2 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 1 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 3 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 0 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-3066724191 to 1 ``` To fix this, you need to rollback to a previous revision of Deployment that is stable.",
          "position": 21,
          "originalSentence": "{{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx Replicas: 3 desired | 1 updated | 4 total | 3 available | 1 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.161 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True ReplicaSetUpdated OldReplicaSets: nginx-deployment-1564180365 (3/3 replicas created) NewReplicaSet: nginx-deployment-3066724191 (1/1 replicas created) Events: FirstSeen LastSeen Count From SubObjectPath Type Reason Message --------- -------- ----- ---- ------------- -------- ------ ------- 1m 1m 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-2035384211 to 3 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 1 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 2 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 2 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 1 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 3 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 0 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-3066724191 to 1 ``` To fix this, you need to rollback to a previous revision of Deployment that is stable."
        },
        {
          "id": "s_576",
          "content": "Follow the steps given below to check the rollout history:",
          "position": 0,
          "originalSentence": "Follow the steps given below to check the rollout history:"
        },
        {
          "id": "s_577",
          "content": "First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2 kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 1,
          "originalSentence": "First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2 kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "s_578",
          "content": "1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
          "position": 2,
          "originalSentence": "1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes."
        },
        {
          "id": "s_579",
          "content": "io/change-cause` to its revisions upon creation.",
          "position": 3,
          "originalSentence": "io/change-cause` to its revisions upon creation."
        },
        {
          "id": "s_580",
          "content": "You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
          "position": 4,
          "originalSentence": "You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes."
        },
        {
          "id": "s_581",
          "content": "io/change-cause=\"image updated to 1.16.",
          "position": 5,
          "originalSentence": "io/change-cause=\"image updated to 1.16."
        },
        {
          "id": "s_582",
          "content": "1\"` * Manually editing the manifest of the resource.",
          "position": 6,
          "originalSentence": "1\"` * Manually editing the manifest of the resource."
        },
        {
          "id": "s_583",
          "content": "To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes.",
          "position": 7,
          "originalSentence": "To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes."
        },
        {
          "id": "s_584",
          "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 8,
          "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "s_585",
          "content": "1 Containers: nginx: Image: nginx:1.16.",
          "position": 9,
          "originalSentence": "1 Containers: nginx: Image: nginx:1.16."
        },
        {
          "id": "s_586",
          "content": "1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
          "position": 10,
          "originalSentence": "1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes."
        },
        {
          "id": "s_615",
          "content": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
          "position": 0,
          "originalSentence": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2."
        },
        {
          "id": "s_616",
          "content": "Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
          "position": 1,
          "originalSentence": "Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_617",
          "content": "apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ``` deployment.",
          "position": 2,
          "originalSentence": "apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_618",
          "content": "apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
          "position": 3,
          "originalSentence": "apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout)."
        },
        {
          "id": "s_619",
          "content": "The Deployment is now rolled back to a previous stable revision.",
          "position": 4,
          "originalSentence": "The Deployment is now rolled back to a previous stable revision."
        },
        {
          "id": "s_620",
          "content": "As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller.",
          "position": 5,
          "originalSentence": "As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller."
        },
        {
          "id": "s_621",
          "content": "Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ``` Get the description of the Deployment: ```shell kubectl describe deployment nginx-deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Sun, 02 Sep 2018 18:17:55 -0500 Labels: app=nginx Annotations: deployment.",
          "position": 6,
          "originalSentence": "Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ``` Get the description of the Deployment: ```shell kubectl describe deployment nginx-deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Sun, 02 Sep 2018 18:17:55 -0500 Labels: app=nginx Annotations: deployment."
        },
        {
          "id": "s_622",
          "content": "kubernetes.",
          "position": 7,
          "originalSentence": "kubernetes."
        },
        {
          "id": "s_623",
          "content": "io/revision=4 kubernetes.",
          "position": 8,
          "originalSentence": "io/revision=4 kubernetes."
        },
        {
          "id": "s_624",
          "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 9,
          "originalSentence": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "s_625",
          "content": "1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
          "position": 10,
          "originalSentence": "1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16."
        },
        {
          "id": "s_626",
          "content": "1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-c4747d96c (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 12m deployment-controller Scaled up replica set nginx-deployment-75675f5897 to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 0 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-595696685f to 1 Normal DeploymentRollback 15s deployment-controller Rolled back deployment \"nginx-deployment\" to revision 2 Normal ScalingReplicaSet 15s deployment-controller Scaled down replica set nginx-deployment-595696685f to 0 ```",
          "position": 11,
          "originalSentence": "1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-c4747d96c (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 12m deployment-controller Scaled up replica set nginx-deployment-75675f5897 to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 0 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-595696685f to 1 Normal DeploymentRollback 15s deployment-controller Rolled back deployment \"nginx-deployment\" to revision 2 Normal ScalingReplicaSet 15s deployment-controller Scaled down replica set nginx-deployment-595696685f to 0 ```"
        },
        {
          "id": "s_635",
          "content": "You can scale a Deployment by using the following command:",
          "position": 0,
          "originalSentence": "You can scale a Deployment by using the following command:"
        },
        {
          "id": "s_636",
          "content": "The output is similar to this:",
          "position": 1,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_637",
          "content": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods.",
          "position": 2,
          "originalSentence": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods."
        },
        {
          "id": "s_638",
          "content": "The output is similar to this:",
          "position": 3,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_687",
          "content": "RollingUpdate Deployments support running multiple versions of an application at the same time.",
          "position": 0,
          "originalSentence": "RollingUpdate Deployments support running multiple versions of an application at the same time."
        },
        {
          "id": "s_688",
          "content": "When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk.",
          "position": 1,
          "originalSentence": "When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk."
        },
        {
          "id": "s_689",
          "content": "This is called *proportional scaling*.",
          "position": 2,
          "originalSentence": "This is called *proportional scaling*."
        },
        {
          "id": "s_690",
          "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
          "position": 3,
          "originalSentence": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2."
        },
        {
          "id": "s_691",
          "content": "Ensure that the 10 replicas in your Deployment are running.",
          "position": 4,
          "originalSentence": "Ensure that the 10 replicas in your Deployment are running."
        },
        {
          "id": "s_692",
          "content": "```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster.",
          "position": 5,
          "originalSentence": "```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster."
        },
        {
          "id": "s_693",
          "content": "```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment.",
          "position": 6,
          "originalSentence": "```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_694",
          "content": "apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191",
          "position": 7,
          "originalSentence": "apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191"
        },
        {
          "id": "s_695",
          "content": "but it's blocked due to the `maxUnavailable` requirement that you mentioned above.",
          "position": 8,
          "originalSentence": "but it's blocked due to the `maxUnavailable` requirement that you mentioned above."
        },
        {
          "id": "s_696",
          "content": "Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along.",
          "position": 9,
          "originalSentence": "Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along."
        },
        {
          "id": "s_697",
          "content": "The autoscaler increments the Deployment replicas to 15.",
          "position": 10,
          "originalSentence": "The autoscaler increments the Deployment replicas to 15."
        },
        {
          "id": "s_698",
          "content": "The Deployment controller needs to decide where to add these new 5 replicas.",
          "position": 11,
          "originalSentence": "The Deployment controller needs to decide where to add these new 5 replicas."
        },
        {
          "id": "s_699",
          "content": "If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet.",
          "position": 12,
          "originalSentence": "If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet."
        },
        {
          "id": "s_700",
          "content": "With proportional scaling, you spread the additional replicas across all ReplicaSets.",
          "position": 13,
          "originalSentence": "With proportional scaling, you spread the additional replicas across all ReplicaSets."
        },
        {
          "id": "s_701",
          "content": "Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas.",
          "position": 14,
          "originalSentence": "Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas."
        },
        {
          "id": "s_702",
          "content": "Any leftovers are added to the ReplicaSet with the most replicas.",
          "position": 15,
          "originalSentence": "Any leftovers are added to the ReplicaSet with the most replicas."
        },
        {
          "id": "s_703",
          "content": "ReplicaSets with zero replicas are not scaled up.",
          "position": 16,
          "originalSentence": "ReplicaSets with zero replicas are not scaled up."
        },
        {
          "id": "s_704",
          "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet.",
          "position": 17,
          "originalSentence": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet."
        },
        {
          "id": "s_705",
          "content": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy.",
          "position": 18,
          "originalSentence": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy."
        },
        {
          "id": "s_706",
          "content": "To confirm this, run:",
          "position": 19,
          "originalSentence": "To confirm this, run:"
        },
        {
          "id": "s_707",
          "content": "The output is similar to this:",
          "position": 20,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_708",
          "content": "The rollout status confirms how the replicas were added to each ReplicaSet.",
          "position": 21,
          "originalSentence": "The rollout status confirms how the replicas were added to each ReplicaSet."
        },
        {
          "id": "s_709",
          "content": "The output is similar to this:",
          "position": 22,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_745",
          "content": "When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates.",
          "position": 0,
          "originalSentence": "When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates."
        },
        {
          "id": "s_746",
          "content": "When you're ready to apply those changes, you resume rollouts for the Deployment.",
          "position": 1,
          "originalSentence": "When you're ready to apply those changes, you resume rollouts for the Deployment."
        },
        {
          "id": "s_747",
          "content": "This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
          "position": 2,
          "originalSentence": "This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts."
        },
        {
          "id": "s_748",
          "content": "For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 1m ``` Pause by running the following command: ```shell kubectl rollout pause deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
          "position": 3,
          "originalSentence": "For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 1m ``` Pause by running the following command: ```shell kubectl rollout pause deployment/nginx-deployment ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_749",
          "content": "apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
          "position": 4,
          "originalSentence": "apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16."
        },
        {
          "id": "s_750",
          "content": "1 ``` The output is similar to this: ``` deployment.",
          "position": 5,
          "originalSentence": "1 ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_751",
          "content": "apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet has not changed: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 2m ``` You can make as many updates as you wish",
          "position": 6,
          "originalSentence": "apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet has not changed: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 2m ``` You can make as many updates as you wish"
        },
        {
          "id": "s_752",
          "content": "for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ``` deployment.",
          "position": 7,
          "originalSentence": "for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_753",
          "content": "apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function",
          "position": 8,
          "originalSentence": "apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function"
        },
        {
          "id": "s_754",
          "content": "but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused.",
          "position": 9,
          "originalSentence": "but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused."
        },
        {
          "id": "s_755",
          "content": "Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
          "position": 10,
          "originalSentence": "Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment."
        },
        {
          "id": "s_756",
          "content": "apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
          "position": 11,
          "originalSentence": "apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done."
        },
        {
          "id": "s_757",
          "content": "```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m nginx-2142116321 1 2 2 2m nginx-3926361531 3 2 1 18s nginx-3926361531 3 2 1 18s nginx-2142116321 1 1 1 2m nginx-3926361531 3 3 1 18s nginx-3926361531 3 3 2 19s nginx-2142116321 0 1 1 2m nginx-2142116321 0 1 1 2m nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 20s ``` Get the status of the latest rollout: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 28s ```",
          "position": 12,
          "originalSentence": "```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m nginx-2142116321 1 2 2 2m nginx-3926361531 3 2 1 18s nginx-3926361531 3 2 1 18s nginx-2142116321 1 1 1 2m nginx-3926361531 3 3 1 18s nginx-3926361531 3 3 2 19s nginx-2142116321 0 1 1 2m nginx-2142116321 0 1 1 2m nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 20s ``` Get the status of the latest rollout: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 28s ```"
        },
        {
          "id": "s_758",
          "content": "{{< note >}} You cannot rollback a paused Deployment until you resume it.",
          "position": 13,
          "originalSentence": "{{< note >}} You cannot rollback a paused Deployment until you resume it."
        },
        {
          "id": "s_759",
          "content": "{{< /note >}}",
          "position": 14,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_764",
          "content": "A Deployment enters various states during its lifecycle.",
          "position": 0,
          "originalSentence": "A Deployment enters various states during its lifecycle."
        },
        {
          "id": "s_765",
          "content": "It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
          "position": 1,
          "originalSentence": "It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment)."
        },
        {
          "id": "s_784",
          "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:",
          "position": 0,
          "originalSentence": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:"
        },
        {
          "id": "s_785",
          "content": "The Deployment creates a new ReplicaSet.",
          "position": 1,
          "originalSentence": "The Deployment creates a new ReplicaSet."
        },
        {
          "id": "s_786",
          "content": "The Deployment is scaling up its newest ReplicaSet.",
          "position": 2,
          "originalSentence": "The Deployment is scaling up its newest ReplicaSet."
        },
        {
          "id": "s_787",
          "content": "The Deployment is scaling down its older ReplicaSet(s).",
          "position": 3,
          "originalSentence": "The Deployment is scaling down its older ReplicaSet(s)."
        },
        {
          "id": "s_788",
          "content": "New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
          "position": 4,
          "originalSentence": "New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds))."
        },
        {
          "id": "s_789",
          "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `.",
          "position": 5,
          "originalSentence": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `."
        },
        {
          "id": "s_790",
          "content": "conditions`:",
          "position": 6,
          "originalSentence": "conditions`:"
        },
        {
          "id": "s_791",
          "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
          "position": 7,
          "originalSentence": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`"
        },
        {
          "id": "s_792",
          "content": "You can monitor the progress for a Deployment by using `kubectl rollout status`.",
          "position": 8,
          "originalSentence": "You can monitor the progress for a Deployment by using `kubectl rollout status`."
        },
        {
          "id": "s_819",
          "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics:",
          "position": 0,
          "originalSentence": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics:"
        },
        {
          "id": "s_820",
          "content": "All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed.",
          "position": 1,
          "originalSentence": "All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed."
        },
        {
          "id": "s_821",
          "content": "All of the replicas associated with the Deployment are available.",
          "position": 2,
          "originalSentence": "All of the replicas associated with the Deployment are available."
        },
        {
          "id": "s_822",
          "content": "No old replicas for the Deployment are running.",
          "position": 3,
          "originalSentence": "No old replicas for the Deployment are running."
        },
        {
          "id": "s_823",
          "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `.",
          "position": 4,
          "originalSentence": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `."
        },
        {
          "id": "s_824",
          "content": "conditions`:",
          "position": 5,
          "originalSentence": "conditions`:"
        },
        {
          "id": "s_825",
          "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`",
          "position": 6,
          "originalSentence": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`"
        },
        {
          "id": "s_826",
          "content": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated.",
          "position": 7,
          "originalSentence": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated."
        },
        {
          "id": "s_827",
          "content": "The condition holds even when availability of replicas changes (which does instead affect the `Available` condition).",
          "position": 8,
          "originalSentence": "The condition holds even when availability of replicas changes (which does instead affect the `Available` condition)."
        },
        {
          "id": "s_828",
          "content": "You can check if a Deployment has completed by using `kubectl rollout status`.",
          "position": 9,
          "originalSentence": "You can check if a Deployment has completed by using `kubectl rollout status`."
        },
        {
          "id": "s_829",
          "content": "If the rollout completed successfully, `kubectl rollout status` returns a zero exit code.",
          "position": 10,
          "originalSentence": "If the rollout completed successfully, `kubectl rollout status` returns a zero exit code."
        },
        {
          "id": "s_830",
          "content": "The output is similar to this:",
          "position": 11,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_831",
          "content": "and the exit status from `kubectl rollout` is 0 (success):",
          "position": 12,
          "originalSentence": "and the exit status from `kubectl rollout` is 0 (success):"
        },
        {
          "id": "s_904",
          "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
          "position": 0,
          "originalSentence": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing."
        },
        {
          "id": "s_905",
          "content": "This can occur due to some of the following factors:",
          "position": 1,
          "originalSentence": "This can occur due to some of the following factors:"
        },
        {
          "id": "s_906",
          "content": "Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration",
          "position": 2,
          "originalSentence": "Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration"
        },
        {
          "id": "s_907",
          "content": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`.",
          "position": 3,
          "originalSentence": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`."
        },
        {
          "id": "s_908",
          "content": "progressDeadlineSeconds`](#progress-deadline-seconds)).",
          "position": 4,
          "originalSentence": "progressDeadlineSeconds`](#progress-deadline-seconds))."
        },
        {
          "id": "s_909",
          "content": "progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.",
          "position": 5,
          "originalSentence": "progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled."
        },
        {
          "id": "s_910",
          "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:",
          "position": 6,
          "originalSentence": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:"
        },
        {
          "id": "s_911",
          "content": "The output is similar to this:",
          "position": 7,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_912",
          "content": "Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `.",
          "position": 8,
          "originalSentence": "Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `."
        },
        {
          "id": "s_913",
          "content": "conditions`:",
          "position": 9,
          "originalSentence": "conditions`:"
        },
        {
          "id": "s_914",
          "content": "`type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`",
          "position": 10,
          "originalSentence": "`type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`"
        },
        {
          "id": "s_915",
          "content": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
          "position": 11,
          "originalSentence": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`."
        },
        {
          "id": "s_916",
          "content": "Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
          "position": 12,
          "originalSentence": "Also, the deadline is not taken into account anymore once the Deployment rollout completes."
        },
        {
          "id": "s_917",
          "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
          "position": 13,
          "originalSentence": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions."
        },
        {
          "id": "s_918",
          "content": "{{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`.",
          "position": 14,
          "originalSentence": "{{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`."
        },
        {
          "id": "s_919",
          "content": "Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.",
          "position": 15,
          "originalSentence": "Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version."
        },
        {
          "id": "s_920",
          "content": "{{< /note >}}",
          "position": 16,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_921",
          "content": "{{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
          "position": 17,
          "originalSentence": "{{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline."
        },
        {
          "id": "s_922",
          "content": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.",
          "position": 18,
          "originalSentence": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline."
        },
        {
          "id": "s_923",
          "content": "{{< /note >}}",
          "position": 19,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_924",
          "content": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient.",
          "position": 20,
          "originalSentence": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient."
        },
        {
          "id": "s_925",
          "content": "For example, let's suppose you have insufficient quota.",
          "position": 21,
          "originalSentence": "For example, let's suppose you have insufficient quota."
        },
        {
          "id": "s_926",
          "content": "If you describe the Deployment you will notice the following section:",
          "position": 22,
          "originalSentence": "If you describe the Deployment you will notice the following section:"
        },
        {
          "id": "s_927",
          "content": "The output is similar to this:",
          "position": 23,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_928",
          "content": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
          "position": 24,
          "originalSentence": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:"
        },
        {
          "id": "s_929",
          "content": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:",
          "position": 25,
          "originalSentence": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:"
        },
        {
          "id": "s_930",
          "content": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace.",
          "position": 26,
          "originalSentence": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace."
        },
        {
          "id": "s_931",
          "content": "If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
          "position": 27,
          "originalSentence": "If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`)."
        },
        {
          "id": "s_932",
          "content": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
          "position": 28,
          "originalSentence": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability."
        },
        {
          "id": "s_933",
          "content": "Minimum availability is dictated by the parameters specified in the deployment strategy.",
          "position": 29,
          "originalSentence": "Minimum availability is dictated by the parameters specified in the deployment strategy."
        },
        {
          "id": "s_934",
          "content": "`type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case `reason: NewReplicaSetAvailable` means that the Deployment is complete).",
          "position": 30,
          "originalSentence": "`type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case `reason: NewReplicaSetAvailable` means that the Deployment is complete)."
        },
        {
          "id": "s_935",
          "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
          "position": 31,
          "originalSentence": "You can check if a Deployment has failed to progress by using `kubectl rollout status`."
        },
        {
          "id": "s_936",
          "content": "`kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline.",
          "position": 32,
          "originalSentence": "`kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline."
        },
        {
          "id": "s_937",
          "content": "The output is similar to this:",
          "position": 33,
          "originalSentence": "The output is similar to this:"
        },
        {
          "id": "s_938",
          "content": "and the exit status from `kubectl rollout` is 1 (indicating an error):",
          "position": 34,
          "originalSentence": "and the exit status from `kubectl rollout` is 1 (indicating an error):"
        },
        {
          "id": "s_943",
          "content": "All actions that apply to a complete Deployment also apply to a failed Deployment.",
          "position": 0,
          "originalSentence": "All actions that apply to a complete Deployment also apply to a failed Deployment."
        },
        {
          "id": "s_944",
          "content": "You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
          "position": 1,
          "originalSentence": "You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template."
        },
        {
          "id": "s_969",
          "content": "You can set `.",
          "position": 0,
          "originalSentence": "You can set `."
        },
        {
          "id": "s_970",
          "content": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain.",
          "position": 1,
          "originalSentence": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain."
        },
        {
          "id": "s_971",
          "content": "The rest will be garbage-collected in the background.",
          "position": 2,
          "originalSentence": "The rest will be garbage-collected in the background."
        },
        {
          "id": "s_972",
          "content": "By default, it is 10.",
          "position": 3,
          "originalSentence": "By default, it is 10."
        },
        {
          "id": "s_973",
          "content": "{{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.",
          "position": 4,
          "originalSentence": "{{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back."
        },
        {
          "id": "s_974",
          "content": "{{< /note >}}",
          "position": 5,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_975",
          "content": "The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
          "position": 6,
          "originalSentence": "The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment)."
        },
        {
          "id": "s_976",
          "content": "If you set `.",
          "position": 7,
          "originalSentence": "If you set `."
        },
        {
          "id": "s_977",
          "content": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one.",
          "position": 8,
          "originalSentence": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one."
        },
        {
          "id": "s_978",
          "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure.",
          "position": 9,
          "originalSentence": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure."
        },
        {
          "id": "s_979",
          "content": "For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `.",
          "position": 10,
          "originalSentence": "For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `."
        },
        {
          "id": "s_980",
          "content": "revisionHistoryLimit` because the Deployment never reaches a complete state.",
          "position": 11,
          "originalSentence": "revisionHistoryLimit` because the Deployment never reaches a complete state."
        },
        {
          "id": "s_983",
          "content": "If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in [managing resources](/docs/concepts/workloads/management/#canary-deployments).",
          "position": 0,
          "originalSentence": "If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in [managing resources](/docs/concepts/workloads/management/#canary-deployments)."
        },
        {
          "id": "s_1008",
          "content": "As with all other Kubernetes configs, a Deployment needs `.",
          "position": 0,
          "originalSentence": "As with all other Kubernetes configs, a Deployment needs `."
        },
        {
          "id": "s_1009",
          "content": "apiVersion`, `.",
          "position": 1,
          "originalSentence": "apiVersion`, `."
        },
        {
          "id": "s_1010",
          "content": "kind`, and `.",
          "position": 2,
          "originalSentence": "kind`, and `."
        },
        {
          "id": "s_1011",
          "content": "metadata` fields.",
          "position": 3,
          "originalSentence": "metadata` fields."
        },
        {
          "id": "s_1012",
          "content": "For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers",
          "position": 4,
          "originalSentence": "For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers"
        },
        {
          "id": "s_1013",
          "content": "and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
          "position": 5,
          "originalSentence": "and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents."
        },
        {
          "id": "s_1014",
          "content": "When the control plane creates new Pods for a Deployment, the `.",
          "position": 6,
          "originalSentence": "When the control plane creates new Pods for a Deployment, the `."
        },
        {
          "id": "s_1015",
          "content": "name` of the Deployment is part of the basis for naming those Pods.",
          "position": 7,
          "originalSentence": "name` of the Deployment is part of the basis for naming those Pods."
        },
        {
          "id": "s_1016",
          "content": "The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames.",
          "position": 8,
          "originalSentence": "The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames."
        },
        {
          "id": "s_1017",
          "content": "For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
          "position": 9,
          "originalSentence": "For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names)."
        },
        {
          "id": "s_1018",
          "content": "A Deployment also needs a [`.",
          "position": 10,
          "originalSentence": "A Deployment also needs a [`."
        },
        {
          "id": "s_1019",
          "content": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
          "position": 11,
          "originalSentence": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status)."
        },
        {
          "id": "s_1036",
          "content": "template` and `.",
          "position": 0,
          "originalSentence": "template` and `."
        },
        {
          "id": "s_1037",
          "content": "selector` are the only required fields of the `.",
          "position": 1,
          "originalSentence": "selector` are the only required fields of the `."
        },
        {
          "id": "s_1038",
          "content": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
          "position": 2,
          "originalSentence": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates)."
        },
        {
          "id": "s_1039",
          "content": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
          "position": 3,
          "originalSentence": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`."
        },
        {
          "id": "s_1040",
          "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy.",
          "position": 4,
          "originalSentence": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy."
        },
        {
          "id": "s_1041",
          "content": "For labels, make sure not to overlap with other controllers.",
          "position": 5,
          "originalSentence": "For labels, make sure not to overlap with other controllers."
        },
        {
          "id": "s_1042",
          "content": "See [selector](#selector).",
          "position": 6,
          "originalSentence": "See [selector](#selector)."
        },
        {
          "id": "s_1043",
          "content": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
          "position": 7,
          "originalSentence": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified."
        },
        {
          "id": "s_1060",
          "content": "replicas` is an optional field that specifies the number of desired Pods.",
          "position": 0,
          "originalSentence": "replicas` is an optional field that specifies the number of desired Pods."
        },
        {
          "id": "s_1061",
          "content": "It defaults to 1.",
          "position": 1,
          "originalSentence": "It defaults to 1."
        },
        {
          "id": "s_1062",
          "content": "Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`",
          "position": 2,
          "originalSentence": "Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`"
        },
        {
          "id": "s_1063",
          "content": "and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment.",
          "position": 3,
          "originalSentence": "and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment."
        },
        {
          "id": "s_1064",
          "content": "yaml`), then applying that manifest overwrites the manual scaling that you previously did.",
          "position": 4,
          "originalSentence": "yaml`), then applying that manifest overwrites the manual scaling that you previously did."
        },
        {
          "id": "s_1065",
          "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
          "position": 5,
          "originalSentence": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `."
        },
        {
          "id": "s_1066",
          "content": "Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `.",
          "position": 6,
          "originalSentence": "Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `."
        },
        {
          "id": "s_1067",
          "content": "replicas` field automatically.",
          "position": 7,
          "originalSentence": "replicas` field automatically."
        },
        {
          "id": "s_1108",
          "content": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment.",
          "position": 0,
          "originalSentence": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment."
        },
        {
          "id": "s_1109",
          "content": "selector` must match `.",
          "position": 1,
          "originalSentence": "selector` must match `."
        },
        {
          "id": "s_1110",
          "content": "labels`, or it will be rejected by the API.",
          "position": 2,
          "originalSentence": "labels`, or it will be rejected by the API."
        },
        {
          "id": "s_1111",
          "content": "In API version `apps/v1`, `.",
          "position": 3,
          "originalSentence": "In API version `apps/v1`, `."
        },
        {
          "id": "s_1112",
          "content": "selector` and `.",
          "position": 4,
          "originalSentence": "selector` and `."
        },
        {
          "id": "s_1113",
          "content": "labels` do not default to `.",
          "position": 5,
          "originalSentence": "labels` do not default to `."
        },
        {
          "id": "s_1114",
          "content": "labels` if not set.",
          "position": 6,
          "originalSentence": "labels` if not set."
        },
        {
          "id": "s_1115",
          "content": "So they must be set explicitly.",
          "position": 7,
          "originalSentence": "So they must be set explicitly."
        },
        {
          "id": "s_1116",
          "content": "Also note that `.",
          "position": 8,
          "originalSentence": "Also note that `."
        },
        {
          "id": "s_1117",
          "content": "selector` is immutable after creation of the Deployment in `apps/v1`.",
          "position": 9,
          "originalSentence": "selector` is immutable after creation of the Deployment in `apps/v1`."
        },
        {
          "id": "s_1118",
          "content": "A Deployment may terminate Pods whose labels match the selector if their template is different from `.",
          "position": 10,
          "originalSentence": "A Deployment may terminate Pods whose labels match the selector if their template is different from `."
        },
        {
          "id": "s_1119",
          "content": "template` or if the total number of such Pods exceeds `.",
          "position": 11,
          "originalSentence": "template` or if the total number of such Pods exceeds `."
        },
        {
          "id": "s_1120",
          "content": "It brings up new Pods with `.",
          "position": 12,
          "originalSentence": "It brings up new Pods with `."
        },
        {
          "id": "s_1121",
          "content": "template` if the number of Pods is less than the desired number.",
          "position": 13,
          "originalSentence": "template` if the number of Pods is less than the desired number."
        },
        {
          "id": "s_1122",
          "content": "{{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment",
          "position": 14,
          "originalSentence": "{{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment"
        },
        {
          "id": "s_1123",
          "content": "or by creating another controller such as a ReplicaSet or a ReplicationController.",
          "position": 15,
          "originalSentence": "or by creating another controller such as a ReplicaSet or a ReplicationController."
        },
        {
          "id": "s_1124",
          "content": "If you do so, the first Deployment thinks that it created these other Pods.",
          "position": 16,
          "originalSentence": "If you do so, the first Deployment thinks that it created these other Pods."
        },
        {
          "id": "s_1125",
          "content": "Kubernetes does not stop you from doing this.",
          "position": 17,
          "originalSentence": "Kubernetes does not stop you from doing this."
        },
        {
          "id": "s_1126",
          "content": "{{< /note >}}",
          "position": 18,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_1127",
          "content": "If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
          "position": 19,
          "originalSentence": "If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly."
        },
        {
          "id": "s_1134",
          "content": "strategy` specifies the strategy used to replace old Pods by new ones.",
          "position": 0,
          "originalSentence": "strategy` specifies the strategy used to replace old Pods by new ones."
        },
        {
          "id": "s_1135",
          "content": "type` can be \"Recreate\" or \"RollingUpdate\".",
          "position": 1,
          "originalSentence": "type` can be \"Recreate\" or \"RollingUpdate\"."
        },
        {
          "id": "s_1136",
          "content": "\"RollingUpdate\" is the default value.",
          "position": 2,
          "originalSentence": "\"RollingUpdate\" is the default value."
        },
        {
          "id": "s_1153",
          "content": "All existing Pods are killed before new ones are created when `.",
          "position": 0,
          "originalSentence": "All existing Pods are killed before new ones are created when `."
        },
        {
          "id": "s_1154",
          "content": "type==Recreate`.",
          "position": 1,
          "originalSentence": "type==Recreate`."
        },
        {
          "id": "s_1155",
          "content": "{{< note >}} This will only guarantee Pod termination previous to creation for upgrades.",
          "position": 2,
          "originalSentence": "{{< note >}} This will only guarantee Pod termination previous to creation for upgrades."
        },
        {
          "id": "s_1156",
          "content": "If you upgrade a Deployment, all Pods of the old revision will be terminated immediately.",
          "position": 3,
          "originalSentence": "If you upgrade a Deployment, all Pods of the old revision will be terminated immediately."
        },
        {
          "id": "s_1157",
          "content": "Successful removal is awaited before any Pod of the new revision is created.",
          "position": 4,
          "originalSentence": "Successful removal is awaited before any Pod of the new revision is created."
        },
        {
          "id": "s_1158",
          "content": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state).",
          "position": 5,
          "originalSentence": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state)."
        },
        {
          "id": "s_1159",
          "content": "If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
          "position": 6,
          "originalSentence": "If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/)."
        },
        {
          "id": "s_1160",
          "content": "{{< /note >}}",
          "position": 7,
          "originalSentence": "{{< /note >}}"
        },
        {
          "id": "s_1167",
          "content": "The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
          "position": 0,
          "originalSentence": "The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `."
        },
        {
          "id": "s_1168",
          "content": "type==RollingUpdate`.",
          "position": 1,
          "originalSentence": "type==RollingUpdate`."
        },
        {
          "id": "s_1169",
          "content": "You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
          "position": 2,
          "originalSentence": "You can specify `maxUnavailable` and `maxSurge` to control the rolling update process."
        },
        {
          "id": "s_1190",
          "content": "rollingUpdate.",
          "position": 0,
          "originalSentence": "rollingUpdate."
        },
        {
          "id": "s_1191",
          "content": "maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process.",
          "position": 1,
          "originalSentence": "maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process."
        },
        {
          "id": "s_1192",
          "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
          "position": 2,
          "originalSentence": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%)."
        },
        {
          "id": "s_1193",
          "content": "The absolute number is calculated from percentage by rounding down.",
          "position": 3,
          "originalSentence": "The absolute number is calculated from percentage by rounding down."
        },
        {
          "id": "s_1194",
          "content": "The value cannot be 0 if `.",
          "position": 4,
          "originalSentence": "The value cannot be 0 if `."
        },
        {
          "id": "s_1195",
          "content": "rollingUpdate.",
          "position": 5,
          "originalSentence": "rollingUpdate."
        },
        {
          "id": "s_1196",
          "content": "maxSurge` is 0.",
          "position": 6,
          "originalSentence": "maxSurge` is 0."
        },
        {
          "id": "s_1197",
          "content": "The default value is 25%.",
          "position": 7,
          "originalSentence": "The default value is 25%."
        },
        {
          "id": "s_1198",
          "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts.",
          "position": 8,
          "originalSentence": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts."
        },
        {
          "id": "s_1199",
          "content": "Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods.",
          "position": 9,
          "originalSentence": "Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods."
        },
        {
          "id": "s_1226",
          "content": "rollingUpdate.",
          "position": 0,
          "originalSentence": "rollingUpdate."
        },
        {
          "id": "s_1227",
          "content": "maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods.",
          "position": 1,
          "originalSentence": "maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods."
        },
        {
          "id": "s_1228",
          "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
          "position": 2,
          "originalSentence": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%)."
        },
        {
          "id": "s_1229",
          "content": "The value cannot be 0 if `maxUnavailable` is 0.",
          "position": 3,
          "originalSentence": "The value cannot be 0 if `maxUnavailable` is 0."
        },
        {
          "id": "s_1230",
          "content": "The absolute number is calculated from the percentage by rounding up.",
          "position": 4,
          "originalSentence": "The absolute number is calculated from the percentage by rounding up."
        },
        {
          "id": "s_1231",
          "content": "The default value is 25%.",
          "position": 5,
          "originalSentence": "The default value is 25%."
        },
        {
          "id": "s_1232",
          "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods.",
          "position": 6,
          "originalSentence": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods."
        },
        {
          "id": "s_1233",
          "content": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods.",
          "position": 7,
          "originalSentence": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods."
        },
        {
          "id": "s_1234",
          "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:",
          "position": 8,
          "originalSentence": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:"
        },
        {
          "id": "s_1235",
          "content": "{{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}",
          "position": 9,
          "originalSentence": "{{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}"
        },
        {
          "id": "s_1236",
          "content": "{{% /tab %}} {{% tab name=\"Max Surge\" %}}",
          "position": 10,
          "originalSentence": "{{% /tab %}} {{% tab name=\"Max Surge\" %}}"
        },
        {
          "id": "s_1237",
          "content": "{{% /tab %}} {{% tab name=\"Hybrid\" %}}",
          "position": 11,
          "originalSentence": "{{% /tab %}} {{% tab name=\"Hybrid\" %}}"
        },
        {
          "id": "s_1238",
          "content": "{{% /tab %}} {{< /tabs >}}",
          "position": 12,
          "originalSentence": "{{% /tab %}} {{< /tabs >}}"
        },
        {
          "id": "s_1253",
          "content": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
          "position": 0,
          "originalSentence": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`."
        },
        {
          "id": "s_1254",
          "content": "and `reason: ProgressDeadlineExceeded` in the status of the resource.",
          "position": 1,
          "originalSentence": "and `reason: ProgressDeadlineExceeded` in the status of the resource."
        },
        {
          "id": "s_1255",
          "content": "The Deployment controller will keep retrying the Deployment.",
          "position": 2,
          "originalSentence": "The Deployment controller will keep retrying the Deployment."
        },
        {
          "id": "s_1256",
          "content": "This defaults to 600.",
          "position": 3,
          "originalSentence": "This defaults to 600."
        },
        {
          "id": "s_1257",
          "content": "In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.",
          "position": 4,
          "originalSentence": "In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition."
        },
        {
          "id": "s_1258",
          "content": "If specified, this field needs to be greater than `.",
          "position": 5,
          "originalSentence": "If specified, this field needs to be greater than `."
        },
        {
          "id": "s_1259",
          "content": "minReadySeconds`.",
          "position": 6,
          "originalSentence": "minReadySeconds`."
        },
        {
          "id": "s_1268",
          "content": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing",
          "position": 0,
          "originalSentence": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing"
        },
        {
          "id": "s_1269",
          "content": "for it to be considered available.",
          "position": 1,
          "originalSentence": "for it to be considered available."
        },
        {
          "id": "s_1270",
          "content": "This defaults to 0 (the Pod will be considered available as soon as it is ready).",
          "position": 2,
          "originalSentence": "This defaults to 0 (the Pod will be considered available as soon as it is ready)."
        },
        {
          "id": "s_1271",
          "content": "To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
          "position": 3,
          "originalSentence": "To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes)."
        },
        {
          "id": "s_1284",
          "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}",
          "position": 0,
          "originalSentence": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}"
        },
        {
          "id": "s_1285",
          "content": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)",
          "position": 1,
          "originalSentence": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)"
        },
        {
          "id": "s_1286",
          "content": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period.",
          "position": 2,
          "originalSentence": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period."
        },
        {
          "id": "s_1287",
          "content": "As a result, the total number of all pods can temporarily exceed `.",
          "position": 3,
          "originalSentence": "As a result, the total number of all pods can temporarily exceed `."
        },
        {
          "id": "s_1288",
          "content": "Terminating pods can be tracked using the `.",
          "position": 4,
          "originalSentence": "Terminating pods can be tracked using the `."
        },
        {
          "id": "s_1289",
          "content": "terminatingReplicas` field of the Deployment.",
          "position": 5,
          "originalSentence": "terminatingReplicas` field of the Deployment."
        },
        {
          "id": "s_1304",
          "content": "A Deployment's revision history is stored in the ReplicaSets it controls.",
          "position": 0,
          "originalSentence": "A Deployment's revision history is stored in the ReplicaSets it controls."
        },
        {
          "id": "s_1305",
          "content": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback.",
          "position": 1,
          "originalSentence": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback."
        },
        {
          "id": "s_1306",
          "content": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
          "position": 2,
          "originalSentence": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`."
        },
        {
          "id": "s_1307",
          "content": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
          "position": 3,
          "originalSentence": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment."
        },
        {
          "id": "s_1308",
          "content": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
          "position": 4,
          "originalSentence": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments."
        },
        {
          "id": "s_1309",
          "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
          "position": 5,
          "originalSentence": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up."
        },
        {
          "id": "s_1310",
          "content": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
          "position": 6,
          "originalSentence": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up."
        },
        {
          "id": "s_1317",
          "content": "paused` is an optional boolean field for pausing and resuming a Deployment.",
          "position": 0,
          "originalSentence": "paused` is an optional boolean field for pausing and resuming a Deployment."
        },
        {
          "id": "s_1318",
          "content": "The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused.",
          "position": 1,
          "originalSentence": "The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused."
        },
        {
          "id": "s_1319",
          "content": "A Deployment is not paused by default when it is created.",
          "position": 2,
          "originalSentence": "A Deployment is not paused by default when it is created."
        },
        {
          "id": "s_1330",
          "content": "Learn more about [Pods](/docs/concepts/workloads/pods).",
          "position": 0,
          "originalSentence": "Learn more about [Pods](/docs/concepts/workloads/pods)."
        },
        {
          "id": "s_1331",
          "content": "[Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
          "position": 1,
          "originalSentence": "[Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/)."
        },
        {
          "id": "s_1332",
          "content": "Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
          "position": 2,
          "originalSentence": "Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API."
        },
        {
          "id": "s_1333",
          "content": "Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions.",
          "position": 3,
          "originalSentence": "Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions."
        },
        {
          "id": "s_1334",
          "content": "Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
          "position": 4,
          "originalSentence": "Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/)."
        }
      ]
    }
  },
  "allChunks": [
    {
      "id": "w_0",
      "type": "window",
      "content": "reviewers: janetkuo\ntitle: Deployments\napi_metadata: apiVersion: \"apps/v1\"\nkind: \"Deployment\"\nfeature:\ntitle: Automated rollouts and rollbacks\ndescription: >\n  Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.\ndescription: >-\nA Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.\ncontent_type: concept\nweight: 10\nhide_summary: true # Listed separately in section index A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and\n{{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}}\nDo not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.\n{{< /note >}}",
      "position": 0,
      "windowSize": 179
    },
    {
      "id": "sw_1",
      "type": "sentence_window",
      "content": "janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time. If something goes",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_2",
      "type": "sentence_window",
      "content": "If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions. description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_3",
      "type": "sentence_window",
      "content": "Take advantage of a growing ecosystem of deployment solutions. description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept weight: 10 hide_summary: true # Listed separately in section index",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_4",
      "type": "sentence_window",
      "content": "description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state. content_type: concept weight: 10 hide_summary: true # Listed separately in section index A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_5",
      "type": "sentence_window",
      "content": "content_type: concept weight: 10 hide_summary: true # Listed separately in section index A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_6",
      "type": "sentence_window",
      "content": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}. You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_7",
      "type": "sentence_window",
      "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}} Do not manage",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_8",
      "type": "sentence_window",
      "content": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments. {{< note >}} Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_9",
      "type": "sentence_window",
      "content": "{{< note >}} Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_10",
      "type": "sentence_window",
      "content": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below. {{< /note >}}",
      "position": 9,
      "sentenceCount": 2
    },
    {
      "id": "sc_11",
      "type": "sentence_context",
      "content": "[Document Content] janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time.",
      "position": 0
    },
    {
      "id": "sc_12",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: janetkuo title: Deployments api_metadata: apiVersi...] If something goes wrong, Kubernetes will rollback the change for you.",
      "position": 1
    },
    {
      "id": "sc_13",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: If something goes wrong, Kubernetes will rollback ...] Take advantage of a growing ecosystem of deployment solutions.",
      "position": 2
    },
    {
      "id": "sc_14",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: Take advantage of a growing ecosystem of deploymen...] description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
      "position": 3
    },
    {
      "id": "sc_15",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: description: >- A Deployment manages a set of Pods...] content_type: concept weight: 10 hide_summary: true # Listed separately in section index",
      "position": 4
    },
    {
      "id": "sc_16",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: content_type: concept weight: 10 hide_summary: tru...] A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
      "position": 5
    },
    {
      "id": "sc_17",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: A _Deployment_ provides declarative updates for {{...] You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
      "position": 6
    },
    {
      "id": "sc_18",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: You describe a _desired state_ in a Deployment, an...] You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
      "position": 7
    },
    {
      "id": "sc_19",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: You can define Deployments to create new ReplicaSe...] {{< note >}} Do not manage ReplicaSets owned by a Deployment.",
      "position": 8
    },
    {
      "id": "sc_20",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: {{< note >}} Do not manage ReplicaSets owned by a ...] Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
      "position": 9
    },
    {
      "id": "sc_21",
      "type": "sentence_context",
      "content": "[Document Content] [Previous: Consider opening an issue in the main Kubernetes r...] {{< /note >}}",
      "position": 10
    },
    {
      "id": "s_22",
      "type": "sentence",
      "content": "janetkuo title: Deployments api_metadata: apiVersion: \"apps/v1\" kind: \"Deployment\" feature: title: Automated rollouts and rollbacks description: > Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn't kill all your instances at the same time.",
      "position": 0
    },
    {
      "id": "s_23",
      "type": "sentence",
      "content": "If something goes wrong, Kubernetes will rollback the change for you.",
      "position": 1
    },
    {
      "id": "s_24",
      "type": "sentence",
      "content": "Take advantage of a growing ecosystem of deployment solutions.",
      "position": 2
    },
    {
      "id": "s_25",
      "type": "sentence",
      "content": "description: >- A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.",
      "position": 3
    },
    {
      "id": "s_26",
      "type": "sentence",
      "content": "content_type: concept weight: 10 hide_summary: true # Listed separately in section index",
      "position": 4
    },
    {
      "id": "s_27",
      "type": "sentence",
      "content": "A _Deployment_ provides declarative updates for {{< glossary_tooltip text=\"Pods\" term_id=\"pod\" >}} and {{< glossary_tooltip term_id=\"replica-set\" text=\"ReplicaSets\" >}}.",
      "position": 5
    },
    {
      "id": "s_28",
      "type": "sentence",
      "content": "You describe a _desired state_ in a Deployment, and the Deployment {{< glossary_tooltip term_id=\"controller\" >}} changes the actual state to the desired state at a controlled rate.",
      "position": 6
    },
    {
      "id": "s_29",
      "type": "sentence",
      "content": "You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.",
      "position": 7
    },
    {
      "id": "s_30",
      "type": "sentence",
      "content": "{{< note >}} Do not manage ReplicaSets owned by a Deployment.",
      "position": 8
    },
    {
      "id": "s_31",
      "type": "sentence",
      "content": "Consider opening an issue in the main Kubernetes repository if your use case is not covered below.",
      "position": 9
    },
    {
      "id": "s_32",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 10
    },
    {
      "id": "w_33",
      "type": "window",
      "content": "The following are typical use cases for Deployments: [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not. [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment. [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment. [Scale up the Deployment to facilitate more load](#scaling-a-deployment). [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
      "position": 0,
      "windowSize": 161
    },
    {
      "id": "sw_34",
      "type": "sentence_window",
      "content": "The following are typical use cases for Deployments: [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_35",
      "type": "sentence_window",
      "content": "[Create a Deployment to rollout a ReplicaSet](#creating-a-deployment). The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_36",
      "type": "sentence_window",
      "content": "The ReplicaSet creates Pods in the background. Check the status of the rollout to see if it succeeds or not. [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_37",
      "type": "sentence_window",
      "content": "Check the status of the rollout to see if it succeeds or not. [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_38",
      "type": "sentence_window",
      "content": "[Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment. A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_39",
      "type": "sentence_window",
      "content": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate. Each new ReplicaSet updates the revision of the Deployment. [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_40",
      "type": "sentence_window",
      "content": "Each new ReplicaSet updates the revision of the Deployment. [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_41",
      "type": "sentence_window",
      "content": "[Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable. Each rollback updates the revision of the Deployment. [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_42",
      "type": "sentence_window",
      "content": "Each rollback updates the revision of the Deployment. [Scale up the Deployment to facilitate more load](#scaling-a-deployment). [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_43",
      "type": "sentence_window",
      "content": "[Scale up the Deployment to facilitate more load](#scaling-a-deployment). [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_44",
      "type": "sentence_window",
      "content": "[Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout. [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_45",
      "type": "sentence_window",
      "content": "[Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck. [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
      "position": 11,
      "sentenceCount": 2
    },
    {
      "id": "sc_46",
      "type": "sentence_context",
      "content": "[Use Case] The following are typical use cases for Deployments:",
      "position": 0
    },
    {
      "id": "sc_47",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: The following are typical use cases for Deployment...] [Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
      "position": 1
    },
    {
      "id": "sc_48",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: [Create a Deployment to rollout a ReplicaSet](#cre...] The ReplicaSet creates Pods in the background.",
      "position": 2
    },
    {
      "id": "sc_49",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: The ReplicaSet creates Pods in the background....] Check the status of the rollout to see if it succeeds or not.",
      "position": 3
    },
    {
      "id": "sc_50",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: Check the status of the rollout to see if it succe...] [Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
      "position": 4
    },
    {
      "id": "sc_51",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: [Declare the new state of the Pods](#updating-a-de...] A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
      "position": 5
    },
    {
      "id": "sc_52",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: A new ReplicaSet is created, and the Deployment gr...] Each new ReplicaSet updates the revision of the Deployment.",
      "position": 6
    },
    {
      "id": "sc_53",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: Each new ReplicaSet updates the revision of the De...] [Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
      "position": 7
    },
    {
      "id": "sc_54",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: [Rollback to an earlier Deployment revision](#roll...] Each rollback updates the revision of the Deployment.",
      "position": 8
    },
    {
      "id": "sc_55",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: Each rollback updates the revision of the Deployme...] [Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
      "position": 9
    },
    {
      "id": "sc_56",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: [Scale up the Deployment to facilitate more load](...] [Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
      "position": 10
    },
    {
      "id": "sc_57",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: [Pause the rollout of a Deployment](#pausing-and-r...] [Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
      "position": 11
    },
    {
      "id": "sc_58",
      "type": "sentence_context",
      "content": "[Use Case] [Previous: [Use the status of the Deployment](#deployment-sta...] [Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
      "position": 12
    },
    {
      "id": "s_59",
      "type": "sentence",
      "content": "The following are typical use cases for Deployments:",
      "position": 0
    },
    {
      "id": "s_60",
      "type": "sentence",
      "content": "[Create a Deployment to rollout a ReplicaSet](#creating-a-deployment).",
      "position": 1
    },
    {
      "id": "s_61",
      "type": "sentence",
      "content": "The ReplicaSet creates Pods in the background.",
      "position": 2
    },
    {
      "id": "s_62",
      "type": "sentence",
      "content": "Check the status of the rollout to see if it succeeds or not.",
      "position": 3
    },
    {
      "id": "s_63",
      "type": "sentence",
      "content": "[Declare the new state of the Pods](#updating-a-deployment) by updating the PodTemplateSpec of the Deployment.",
      "position": 4
    },
    {
      "id": "s_64",
      "type": "sentence",
      "content": "A new ReplicaSet is created, and the Deployment gradually scales it up while scaling down the old ReplicaSet, ensuring Pods are replaced at a controlled rate.",
      "position": 5
    },
    {
      "id": "s_65",
      "type": "sentence",
      "content": "Each new ReplicaSet updates the revision of the Deployment.",
      "position": 6
    },
    {
      "id": "s_66",
      "type": "sentence",
      "content": "[Rollback to an earlier Deployment revision](#rolling-back-a-deployment) if the current state of the Deployment is not stable.",
      "position": 7
    },
    {
      "id": "s_67",
      "type": "sentence",
      "content": "Each rollback updates the revision of the Deployment.",
      "position": 8
    },
    {
      "id": "s_68",
      "type": "sentence",
      "content": "[Scale up the Deployment to facilitate more load](#scaling-a-deployment).",
      "position": 9
    },
    {
      "id": "s_69",
      "type": "sentence",
      "content": "[Pause the rollout of a Deployment](#pausing-and-resuming-a-deployment) to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.",
      "position": 10
    },
    {
      "id": "s_70",
      "type": "sentence",
      "content": "[Use the status of the Deployment](#deployment-status) as an indicator that a rollout has stuck.",
      "position": 11
    },
    {
      "id": "s_71",
      "type": "sentence",
      "content": "[Clean up older ReplicaSets](#clean-up-policy) that you don't need anymore.",
      "position": 12
    },
    {
      "id": "w_72",
      "type": "window",
      "content": "The following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods: {{% code_sample file=\"controllers/nginx-deployment.yaml\" %}} In this example: A Deployment named `nginx-deployment` is created, indicated by the\n`.metadata.name` field. This name will become the basis for the ReplicaSets\nand Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec)\nfor more details. The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.spec.replicas` field. The `.spec.selector` field defines how the created ReplicaSet finds which Pods to manage.\nIn this case, you select a label that is defined in the Pod template (`app: nginx`).\nHowever, more sophisticated selection rules are possible,\nas long as the Pod template itself satisfies the rule.\n\n{{< note >}}\nThe `.spec.selector.matchLabels` field is a map of {key,value} pairs.\nA single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`,\nwhose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".\nAll of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.\n{{< /note >}}\n The `.spec.template` field contains the following sub-fields:\n* The Pods are labeled `app: nginx`using the `.metadata.labels` field.\n* The Pod template's specification, or `.spec` field, indicates that\n  the Pods run one container, `nginx`, which runs the `nginx`\n  [Docker Hub](https://hub.docker.com/) image at version 1.14.2.\n* Create one container and name it `nginx` using the `.spec.containers[0].name` field. Before you begin, make sure your Kubernetes cluster is up and running.\nFollow the steps given below to create the above Deployment: Create the Deployment by running the following command:\n\n```shell\nkubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n```\n Run `kubectl get deployments` to check if the Deployment was created.\n\nIf the Deployment is still being created, the output is similar to the following:\n```\nNAME ",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_73",
      "type": "window",
      "content": "`app: nginx`using the `.metadata.labels` field.\n* The Pod template's specification, or `.spec` field, indicates that\n  the Pods run one container, `nginx`, which runs the `nginx`\n  [Docker Hub](https://hub.docker.com/) image at version 1.14.2.\n* Create one container and name it `nginx` using the `.spec.containers[0].name` field. Before you begin, make sure your Kubernetes cluster is up and running.\nFollow the steps given below to create the above Deployment: Create the Deployment by running the following command:\n\n```shell\nkubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml\n```\n Run `kubectl get deployments` to check if the Deployment was created.\n\nIf the Deployment is still being created, the output is similar to the following:\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   0/3     0            0           1s\n```\nWhen you inspect the Deployments in your cluster, the following fields are displayed:\n* `NAME` lists the names of the Deployments in the namespace.\n* `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired.\n* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.\n* `AVAILABLE` displays how many replicas of the application are available to your users.\n* `AGE` displays the amount of time that the application has been running.\n\nNotice how the number of desired replicas is 3 according to `.spec.replicas` field.\n To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.\n\nThe output is similar to:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\ndeployment \"nginx-deployment\" successfully rolled out\n```\n Run the",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_74",
      "type": "window",
      "content": "replicas of the application are available to your users. It follows the pattern ready/desired.\n* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.\n* `AVAILABLE` displays how many replicas of the application are available to your users.\n* `AGE` displays the amount of time that the application has been running.\n\nNotice how the number of desired replicas is 3 according to `.spec.replicas` field.\n To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.\n\nThe output is similar to:\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\ndeployment \"nginx-deployment\" successfully rolled out\n```\n Run the `kubectl get deployments` again a few seconds later.\nThe output is similar to this:\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           18s\n```\nNotice that the Deployment has created all three replicas, and all replicas are up-to-date (they contain the latest Pod template) and available.\n To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-75675f5897   3         3         3       18s\n```\nReplicaSet output shows the following fields:\n\n* `NAME` lists the names",
      "position": 360,
      "windowSize": 280
    },
    {
      "id": "w_75",
      "type": "window",
      "content": "up-to-date (they contain the latest Pod template) and available.\n To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-75675f5897   3         3         3       18s\n```\nReplicaSet output shows the following fields:\n\n* `NAME` lists the names of the ReplicaSets in the namespace.\n* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_.\n* `CURRENT` displays how many replicas are currently running.\n* `READY` displays how many replicas of the application are available to your users.\n* `AGE` displays the amount of time that the application has been running.\n\nNotice that the name of the ReplicaSet is always formatted as\n`[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods\nwhich are created.\n\nThe `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.\n To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.\nThe output is similar to:\n```\nNAME                                READY     STATUS    RESTARTS   AGE       LABELS\nnginx-deployment-75675f5897-7ci7o   1/1       Running   0   ",
      "position": 540,
      "windowSize": 280
    },
    {
      "id": "w_76",
      "type": "window",
      "content": "Pods\nwhich are created.\n\nThe `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.\n To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.\nThe output is similar to:\n```\nNAME                                READY     STATUS    RESTARTS   AGE       LABELS\nnginx-deployment-75675f5897-7ci7o   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\nnginx-deployment-75675f5897-kzszj   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\nnginx-deployment-75675f5897-qqcnn   1/1       Running   0          18s       app=nginx,pod-template-hash=75675f5897\n```\nThe created ReplicaSet ensures that there are three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.\n{{< /note >}}",
      "position": 720,
      "windowSize": 238
    },
    {
      "id": "w_77",
      "type": "window",
      "content": "three `nginx` Pods. {{< note >}}\nYou must specify an appropriate selector and Pod template labels in a Deployment\n(in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.\n{{< /note >}}",
      "position": 900,
      "windowSize": 58
    },
    {
      "id": "sw_78",
      "type": "sentence_window",
      "content": "The following is an example of a Deployment. It creates a ReplicaSet to bring up three `nginx` Pods: {{% code_sample file=\"controllers/nginx-deployment.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_79",
      "type": "sentence_window",
      "content": "It creates a ReplicaSet to bring up three `nginx` Pods: {{% code_sample file=\"controllers/nginx-deployment. In this example:",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_80",
      "type": "sentence_window",
      "content": "{{% code_sample file=\"controllers/nginx-deployment. In this example: A Deployment named `nginx-deployment` is created, indicated by the `.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_81",
      "type": "sentence_window",
      "content": "In this example: A Deployment named `nginx-deployment` is created, indicated by the `. name` field.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_82",
      "type": "sentence_window",
      "content": "A Deployment named `nginx-deployment` is created, indicated by the `. name` field. This name will become the basis for the ReplicaSets and Pods which are created later.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_83",
      "type": "sentence_window",
      "content": "name` field. This name will become the basis for the ReplicaSets and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_84",
      "type": "sentence_window",
      "content": "This name will become the basis for the ReplicaSets and Pods which are created later. See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details. The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_85",
      "type": "sentence_window",
      "content": "See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details. The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. replicas` field.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_86",
      "type": "sentence_window",
      "content": "The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `. replicas` field. selector` field defines how the created ReplicaSet finds which Pods to manage.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_87",
      "type": "sentence_window",
      "content": "replicas` field. selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`).",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_88",
      "type": "sentence_window",
      "content": "selector` field defines how the created ReplicaSet finds which Pods to manage. In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_89",
      "type": "sentence_window",
      "content": "In this case, you select a label that is defined in the Pod template (`app: nginx`). However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule. {{< note >}} The `.",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_90",
      "type": "sentence_window",
      "content": "However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule. {{< note >}} The `. matchLabels` field is a map of {key,value} pairs.",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_91",
      "type": "sentence_window",
      "content": "{{< note >}} The `. matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_92",
      "type": "sentence_window",
      "content": "matchLabels` field is a map of {key,value} pairs. A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to",
      "position": 14,
      "sentenceCount": 3
    },
    {
      "id": "sw_93",
      "type": "sentence_window",
      "content": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\". All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}} The `.",
      "position": 15,
      "sentenceCount": 3
    },
    {
      "id": "sw_94",
      "type": "sentence_window",
      "content": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match. {{< /note >}} The `. template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `.",
      "position": 16,
      "sentenceCount": 3
    },
    {
      "id": "sw_95",
      "type": "sentence_window",
      "content": "{{< /note >}} The `. template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `. labels` field.",
      "position": 17,
      "sentenceCount": 3
    },
    {
      "id": "sw_96",
      "type": "sentence_window",
      "content": "template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `. labels` field. * The Pod template's specification, or `.",
      "position": 18,
      "sentenceCount": 3
    },
    {
      "id": "sw_97",
      "type": "sentence_window",
      "content": "labels` field. * The Pod template's specification, or `. spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14.",
      "position": 19,
      "sentenceCount": 3
    },
    {
      "id": "sw_98",
      "type": "sentence_window",
      "content": "* The Pod template's specification, or `. spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14. * Create one container and name it `nginx` using the `.",
      "position": 20,
      "sentenceCount": 3
    },
    {
      "id": "sw_99",
      "type": "sentence_window",
      "content": "spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14. * Create one container and name it `nginx` using the `. containers[0].",
      "position": 21,
      "sentenceCount": 3
    },
    {
      "id": "sw_100",
      "type": "sentence_window",
      "content": "* Create one container and name it `nginx` using the `. containers[0]. name` field.",
      "position": 22,
      "sentenceCount": 3
    },
    {
      "id": "sw_101",
      "type": "sentence_window",
      "content": "containers[0]. name` field. Before you begin, make sure your Kubernetes cluster is up and running.",
      "position": 23,
      "sentenceCount": 3
    },
    {
      "id": "sw_102",
      "type": "sentence_window",
      "content": "name` field. Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment:",
      "position": 24,
      "sentenceCount": 3
    },
    {
      "id": "sw_103",
      "type": "sentence_window",
      "content": "Before you begin, make sure your Kubernetes cluster is up and running. Follow the steps given below to create the above Deployment: Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created.",
      "position": 25,
      "sentenceCount": 3
    },
    {
      "id": "sw_104",
      "type": "sentence_window",
      "content": "Follow the steps given below to create the above Deployment: Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the",
      "position": 26,
      "sentenceCount": 3
    },
    {
      "id": "sw_105",
      "type": "sentence_window",
      "content": "Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created. If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE",
      "position": 27,
      "sentenceCount": 3
    },
    {
      "id": "sw_106",
      "type": "sentence_window",
      "content": "If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the names of the Deployments in the namespace. * `READY` displays how many replicas of the",
      "position": 28,
      "sentenceCount": 3
    },
    {
      "id": "sw_107",
      "type": "sentence_window",
      "content": "* `READY` displays how many replicas of the application are available to your users. It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
      "position": 29,
      "sentenceCount": 3
    },
    {
      "id": "sw_108",
      "type": "sentence_window",
      "content": "It follows the pattern ready/desired. * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users.",
      "position": 30,
      "sentenceCount": 3
    },
    {
      "id": "sw_109",
      "type": "sentence_window",
      "content": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state. * `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
      "position": 31,
      "sentenceCount": 3
    },
    {
      "id": "sw_110",
      "type": "sentence_window",
      "content": "* `AVAILABLE` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `.",
      "position": 32,
      "sentenceCount": 3
    },
    {
      "id": "sw_111",
      "type": "sentence_window",
      "content": "* `AGE` displays the amount of time that the application has been running. Notice how the number of desired replicas is 3 according to `. replicas` field.",
      "position": 33,
      "sentenceCount": 3
    },
    {
      "id": "sw_112",
      "type": "sentence_window",
      "content": "Notice how the number of desired replicas is 3 according to `. replicas` field. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
      "position": 34,
      "sentenceCount": 3
    },
    {
      "id": "sw_113",
      "type": "sentence_window",
      "content": "replicas` field. To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
      "position": 35,
      "sentenceCount": 3
    },
    {
      "id": "sw_114",
      "type": "sentence_window",
      "content": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`. The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later.",
      "position": 36,
      "sentenceCount": 3
    },
    {
      "id": "sw_115",
      "type": "sentence_window",
      "content": "The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the",
      "position": 37,
      "sentenceCount": 3
    },
    {
      "id": "sw_116",
      "type": "sentence_window",
      "content": "deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas and all replicas are up-to-date (they contain the latest Pod",
      "position": 38,
      "sentenceCount": 3
    },
    {
      "id": "sw_117",
      "type": "sentence_window",
      "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas and all replicas are up-to-date (they contain the latest Pod template) and available. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
      "position": 39,
      "sentenceCount": 3
    },
    {
      "id": "sw_118",
      "type": "sentence_window",
      "content": "and all replicas are up-to-date (they contain the latest Pod template) and available. To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of",
      "position": 40,
      "sentenceCount": 3
    },
    {
      "id": "sw_119",
      "type": "sentence_window",
      "content": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`. The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_",
      "position": 41,
      "sentenceCount": 3
    },
    {
      "id": "sw_120",
      "type": "sentence_window",
      "content": "The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace. * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is",
      "position": 42,
      "sentenceCount": 3
    },
    {
      "id": "sw_121",
      "type": "sentence_window",
      "content": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment. This is the _desired state_. * `CURRENT` displays how many replicas are currently running.",
      "position": 43,
      "sentenceCount": 3
    },
    {
      "id": "sw_122",
      "type": "sentence_window",
      "content": "This is the _desired state_. * `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users.",
      "position": 44,
      "sentenceCount": 3
    },
    {
      "id": "sw_123",
      "type": "sentence_window",
      "content": "* `CURRENT` displays how many replicas are currently running. * `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running.",
      "position": 45,
      "sentenceCount": 3
    },
    {
      "id": "sw_124",
      "type": "sentence_window",
      "content": "* `READY` displays how many replicas of the application are available to your users. * `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`.",
      "position": 46,
      "sentenceCount": 3
    },
    {
      "id": "sw_125",
      "type": "sentence_window",
      "content": "* `AGE` displays the amount of time that the application has been running. Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods which are created.",
      "position": 47,
      "sentenceCount": 3
    },
    {
      "id": "sw_126",
      "type": "sentence_window",
      "content": "Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`. This name will become the basis for the Pods which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
      "position": 48,
      "sentenceCount": 3
    },
    {
      "id": "sw_127",
      "type": "sentence_window",
      "content": "This name will become the basis for the Pods which are created. The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
      "position": 49,
      "sentenceCount": 3
    },
    {
      "id": "sw_128",
      "type": "sentence_window",
      "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet. To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897",
      "position": 50,
      "sentenceCount": 3
    },
    {
      "id": "sw_129",
      "type": "sentence_window",
      "content": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`. The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897",
      "position": 51,
      "sentenceCount": 3
    },
    {
      "id": "sw_130",
      "type": "sentence_window",
      "content": "The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-qqcnn 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 ``` The",
      "position": 52,
      "sentenceCount": 3
    },
    {
      "id": "sw_131",
      "type": "sentence_window",
      "content": "{{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`). Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers",
      "position": 53,
      "sentenceCount": 3
    },
    {
      "id": "sw_132",
      "type": "sentence_window",
      "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets). Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}",
      "position": 54,
      "sentenceCount": 3
    },
    {
      "id": "sw_133",
      "type": "sentence_window",
      "content": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly. {{< /note >}}",
      "position": 55,
      "sentenceCount": 2
    },
    {
      "id": "sc_134",
      "type": "sentence_context",
      "content": "[Creating a Deployment] The following is an example of a Deployment.",
      "position": 0
    },
    {
      "id": "sc_135",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The following is an example of a Deployment....] It creates a ReplicaSet to bring up three `nginx` Pods:",
      "position": 1
    },
    {
      "id": "sc_136",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: It creates a ReplicaSet to bring up three `nginx` ...] {{% code_sample file=\"controllers/nginx-deployment.",
      "position": 2
    },
    {
      "id": "sc_137",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: {{% code_sample file=\"controllers/nginx-deployment...] In this example:",
      "position": 3
    },
    {
      "id": "sc_138",
      "type": "sentence_context",
      "content": "[Creating a Deployment] A Deployment named `nginx-deployment` is created, indicated by the `.",
      "position": 4
    },
    {
      "id": "sc_139",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: A Deployment named `nginx-deployment` is created, ...] name` field.",
      "position": 5
    },
    {
      "id": "sc_140",
      "type": "sentence_context",
      "content": "[Creating a Deployment] This name will become the basis for the ReplicaSets and Pods which are created later.",
      "position": 6
    },
    {
      "id": "sc_141",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: This name will become the basis for the ReplicaSet...] See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details.",
      "position": 7
    },
    {
      "id": "sc_142",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: See [Writing a Deployment Spec](#writing-a-deploym...] The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
      "position": 8
    },
    {
      "id": "sc_143",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The Deployment creates a ReplicaSet that creates t...] replicas` field.",
      "position": 9
    },
    {
      "id": "sc_144",
      "type": "sentence_context",
      "content": "[Creating a Deployment] selector` field defines how the created ReplicaSet finds which Pods to manage.",
      "position": 10
    },
    {
      "id": "sc_145",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: selector` field defines how the created ReplicaSet...] In this case, you select a label that is defined in the Pod template (`app: nginx`).",
      "position": 11
    },
    {
      "id": "sc_146",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: In this case, you select a label that is defined i...] However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.",
      "position": 12
    },
    {
      "id": "sc_147",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: However, more sophisticated selection rules are po...] {{< note >}} The `.",
      "position": 13
    },
    {
      "id": "sc_148",
      "type": "sentence_context",
      "content": "[Creating a Deployment] matchLabels` field is a map of {key,value} pairs.",
      "position": 14
    },
    {
      "id": "sc_149",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: matchLabels` field is a map of {key,value} pairs....] A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
      "position": 15
    },
    {
      "id": "sc_150",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: A single {key,value} in the `matchLabels` map is e...] All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
      "position": 16
    },
    {
      "id": "sc_151",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: All of the requirements, from both `matchLabels` a...] {{< /note >}} The `.",
      "position": 17
    },
    {
      "id": "sc_152",
      "type": "sentence_context",
      "content": "[Creating a Deployment] template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `.",
      "position": 18
    },
    {
      "id": "sc_153",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: template` field contains the following sub-fields:...] labels` field.",
      "position": 19
    },
    {
      "id": "sc_154",
      "type": "sentence_context",
      "content": "[Creating a Deployment] * The Pod template's specification, or `.",
      "position": 20
    },
    {
      "id": "sc_155",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * The Pod template's specification, or `....] spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14.",
      "position": 21
    },
    {
      "id": "sc_156",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: spec` field, indicates that the Pods run one conta...] * Create one container and name it `nginx` using the `.",
      "position": 22
    },
    {
      "id": "sc_157",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * Create one container and name it `nginx` using t...] containers[0].",
      "position": 23
    },
    {
      "id": "sc_158",
      "type": "sentence_context",
      "content": "[Creating a Deployment] name` field.",
      "position": 24
    },
    {
      "id": "sc_159",
      "type": "sentence_context",
      "content": "[Creating a Deployment] Before you begin, make sure your Kubernetes cluster is up and running.",
      "position": 25
    },
    {
      "id": "sc_160",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Before you begin, make sure your Kubernetes cluste...] Follow the steps given below to create the above Deployment:",
      "position": 26
    },
    {
      "id": "sc_161",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Follow the steps given below to create the above D...] Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created.",
      "position": 27
    },
    {
      "id": "sc_162",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Create the Deployment by running the following com...] If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the",
      "position": 28
    },
    {
      "id": "sc_163",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: If the Deployment is still being created, the outp...] * `READY` displays how many replicas of the application are available to your users.",
      "position": 29
    },
    {
      "id": "sc_164",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `READY` displays how many replicas of the applic...] It follows the pattern ready/desired.",
      "position": 30
    },
    {
      "id": "sc_165",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: It follows the pattern ready/desired....] * `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
      "position": 31
    },
    {
      "id": "sc_166",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `UP-TO-DATE` displays the number of replicas tha...] * `AVAILABLE` displays how many replicas of the application are available to your users.",
      "position": 32
    },
    {
      "id": "sc_167",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `AVAILABLE` displays how many replicas of the ap...] * `AGE` displays the amount of time that the application has been running.",
      "position": 33
    },
    {
      "id": "sc_168",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `AGE` displays the amount of time that the appli...] Notice how the number of desired replicas is 3 according to `.",
      "position": 34
    },
    {
      "id": "sc_169",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Notice how the number of desired replicas is 3 acc...] replicas` field.",
      "position": 35
    },
    {
      "id": "sc_170",
      "type": "sentence_context",
      "content": "[Creating a Deployment] To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
      "position": 36
    },
    {
      "id": "sc_171",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: To see the Deployment rollout status, run `kubectl...] The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
      "position": 37
    },
    {
      "id": "sc_172",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The output is similar to: ``` Waiting for rollout ...] deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later.",
      "position": 38
    },
    {
      "id": "sc_173",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: deployment \"nginx-deployment\" successfully rolled ...] The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas",
      "position": 39
    },
    {
      "id": "sc_174",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The output is similar to this: ``` NAME READY UP-T...] and all replicas are up-to-date (they contain the latest Pod template) and available.",
      "position": 40
    },
    {
      "id": "sc_175",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: and all replicas are up-to-date (they contain the ...] To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
      "position": 41
    },
    {
      "id": "sc_176",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: To see the ReplicaSet (`rs`) created by the Deploy...] The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace.",
      "position": 42
    },
    {
      "id": "sc_177",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The output is similar to this: ``` NAME DESIRED CU...] * `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
      "position": 43
    },
    {
      "id": "sc_178",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `DESIRED` displays the desired number of _replic...] This is the _desired state_.",
      "position": 44
    },
    {
      "id": "sc_179",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: This is the _desired state_....] * `CURRENT` displays how many replicas are currently running.",
      "position": 45
    },
    {
      "id": "sc_180",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `CURRENT` displays how many replicas are current...] * `READY` displays how many replicas of the application are available to your users.",
      "position": 46
    },
    {
      "id": "sc_181",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `READY` displays how many replicas of the applic...] * `AGE` displays the amount of time that the application has been running.",
      "position": 47
    },
    {
      "id": "sc_182",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: * `AGE` displays the amount of time that the appli...] Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`.",
      "position": 48
    },
    {
      "id": "sc_183",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Notice that the name of the ReplicaSet is always f...] This name will become the basis for the Pods which are created.",
      "position": 49
    },
    {
      "id": "sc_184",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: This name will become the basis for the Pods which...] The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
      "position": 50
    },
    {
      "id": "sc_185",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The `HASH` string is the same as the `pod-template...] To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
      "position": 51
    },
    {
      "id": "sc_186",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: To see the labels automatically generated for each...] The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897",
      "position": 52
    },
    {
      "id": "sc_187",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: The output is similar to: ``` NAME READY STATUS RE...] {{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`).",
      "position": 53
    },
    {
      "id": "sc_188",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: {{< note >}} You must specify an appropriate selec...] Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
      "position": 54
    },
    {
      "id": "sc_189",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Do not overlap labels or selectors with other cont...] Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
      "position": 55
    },
    {
      "id": "sc_190",
      "type": "sentence_context",
      "content": "[Creating a Deployment] [Previous: Kubernetes doesn't stop you from overlapping, and ...] {{< /note >}}",
      "position": 56
    },
    {
      "id": "s_191",
      "type": "sentence",
      "content": "The following is an example of a Deployment.",
      "position": 0
    },
    {
      "id": "s_192",
      "type": "sentence",
      "content": "It creates a ReplicaSet to bring up three `nginx` Pods:",
      "position": 1
    },
    {
      "id": "s_193",
      "type": "sentence",
      "content": "{{% code_sample file=\"controllers/nginx-deployment.",
      "position": 2
    },
    {
      "id": "s_194",
      "type": "sentence",
      "content": "In this example:",
      "position": 3
    },
    {
      "id": "s_195",
      "type": "sentence",
      "content": "A Deployment named `nginx-deployment` is created, indicated by the `.",
      "position": 4
    },
    {
      "id": "s_196",
      "type": "sentence",
      "content": "name` field.",
      "position": 5
    },
    {
      "id": "s_197",
      "type": "sentence",
      "content": "This name will become the basis for the ReplicaSets and Pods which are created later.",
      "position": 6
    },
    {
      "id": "s_198",
      "type": "sentence",
      "content": "See [Writing a Deployment Spec](#writing-a-deployment-spec) for more details.",
      "position": 7
    },
    {
      "id": "s_199",
      "type": "sentence",
      "content": "The Deployment creates a ReplicaSet that creates three replicated Pods, indicated by the `.",
      "position": 8
    },
    {
      "id": "s_200",
      "type": "sentence",
      "content": "replicas` field.",
      "position": 9
    },
    {
      "id": "s_201",
      "type": "sentence",
      "content": "selector` field defines how the created ReplicaSet finds which Pods to manage.",
      "position": 10
    },
    {
      "id": "s_202",
      "type": "sentence",
      "content": "In this case, you select a label that is defined in the Pod template (`app: nginx`).",
      "position": 11
    },
    {
      "id": "s_203",
      "type": "sentence",
      "content": "However, more sophisticated selection rules are possible, as long as the Pod template itself satisfies the rule.",
      "position": 12
    },
    {
      "id": "s_204",
      "type": "sentence",
      "content": "{{< note >}} The `.",
      "position": 13
    },
    {
      "id": "s_205",
      "type": "sentence",
      "content": "matchLabels` field is a map of {key,value} pairs.",
      "position": 14
    },
    {
      "id": "s_206",
      "type": "sentence",
      "content": "A single {key,value} in the `matchLabels` map is equivalent to an element of `matchExpressions`, whose `key` field is \"key\", the `operator` is \"In\", and the `values` array contains only \"value\".",
      "position": 15
    },
    {
      "id": "s_207",
      "type": "sentence",
      "content": "All of the requirements, from both `matchLabels` and `matchExpressions`, must be satisfied in order to match.",
      "position": 16
    },
    {
      "id": "s_208",
      "type": "sentence",
      "content": "{{< /note >}} The `.",
      "position": 17
    },
    {
      "id": "s_209",
      "type": "sentence",
      "content": "template` field contains the following sub-fields: * The Pods are labeled `app: nginx`using the `.",
      "position": 18
    },
    {
      "id": "s_210",
      "type": "sentence",
      "content": "labels` field.",
      "position": 19
    },
    {
      "id": "s_211",
      "type": "sentence",
      "content": "* The Pod template's specification, or `.",
      "position": 20
    },
    {
      "id": "s_212",
      "type": "sentence",
      "content": "spec` field, indicates that the Pods run one container, `nginx`, which runs the `nginx` [Docker Hub](https://hub.docker.com/) image at version 1.14.",
      "position": 21
    },
    {
      "id": "s_213",
      "type": "sentence",
      "content": "* Create one container and name it `nginx` using the `.",
      "position": 22
    },
    {
      "id": "s_214",
      "type": "sentence",
      "content": "containers[0].",
      "position": 23
    },
    {
      "id": "s_215",
      "type": "sentence",
      "content": "name` field.",
      "position": 24
    },
    {
      "id": "s_216",
      "type": "sentence",
      "content": "Before you begin, make sure your Kubernetes cluster is up and running.",
      "position": 25
    },
    {
      "id": "s_217",
      "type": "sentence",
      "content": "Follow the steps given below to create the above Deployment:",
      "position": 26
    },
    {
      "id": "s_218",
      "type": "sentence",
      "content": "Create the Deployment by running the following command: ```shell kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml ``` Run `kubectl get deployments` to check if the Deployment was created.",
      "position": 27
    },
    {
      "id": "s_219",
      "type": "sentence",
      "content": "If the Deployment is still being created, the output is similar to the following: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 0/3 0 0 1s ``` When you inspect the Deployments in your cluster, the following fields are displayed: * `NAME` lists the names of the Deployments in the namespace.",
      "position": 28
    },
    {
      "id": "s_220",
      "type": "sentence",
      "content": "* `READY` displays how many replicas of the application are available to your users.",
      "position": 29
    },
    {
      "id": "s_221",
      "type": "sentence",
      "content": "It follows the pattern ready/desired.",
      "position": 30
    },
    {
      "id": "s_222",
      "type": "sentence",
      "content": "* `UP-TO-DATE` displays the number of replicas that have been updated to achieve the desired state.",
      "position": 31
    },
    {
      "id": "s_223",
      "type": "sentence",
      "content": "* `AVAILABLE` displays how many replicas of the application are available to your users.",
      "position": 32
    },
    {
      "id": "s_224",
      "type": "sentence",
      "content": "* `AGE` displays the amount of time that the application has been running.",
      "position": 33
    },
    {
      "id": "s_225",
      "type": "sentence",
      "content": "Notice how the number of desired replicas is 3 according to `.",
      "position": 34
    },
    {
      "id": "s_226",
      "type": "sentence",
      "content": "replicas` field.",
      "position": 35
    },
    {
      "id": "s_227",
      "type": "sentence",
      "content": "To see the Deployment rollout status, run `kubectl rollout status deployment/nginx-deployment`.",
      "position": 36
    },
    {
      "id": "s_228",
      "type": "sentence",
      "content": "The output is similar to: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
      "position": 37
    },
    {
      "id": "s_229",
      "type": "sentence",
      "content": "deployment \"nginx-deployment\" successfully rolled out ``` Run the `kubectl get deployments` again a few seconds later.",
      "position": 38
    },
    {
      "id": "s_230",
      "type": "sentence",
      "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 18s ``` Notice that the Deployment has created all three replicas",
      "position": 39
    },
    {
      "id": "s_231",
      "type": "sentence",
      "content": "and all replicas are up-to-date (they contain the latest Pod template) and available.",
      "position": 40
    },
    {
      "id": "s_232",
      "type": "sentence",
      "content": "To see the ReplicaSet (`rs`) created by the Deployment, run `kubectl get rs`.",
      "position": 41
    },
    {
      "id": "s_233",
      "type": "sentence",
      "content": "The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-75675f5897 3 3 3 18s ``` ReplicaSet output shows the following fields: * `NAME` lists the names of the ReplicaSets in the namespace.",
      "position": 42
    },
    {
      "id": "s_234",
      "type": "sentence",
      "content": "* `DESIRED` displays the desired number of _replicas_ of the application, which you define when you create the Deployment.",
      "position": 43
    },
    {
      "id": "s_235",
      "type": "sentence",
      "content": "This is the _desired state_.",
      "position": 44
    },
    {
      "id": "s_236",
      "type": "sentence",
      "content": "* `CURRENT` displays how many replicas are currently running.",
      "position": 45
    },
    {
      "id": "s_237",
      "type": "sentence",
      "content": "* `READY` displays how many replicas of the application are available to your users.",
      "position": 46
    },
    {
      "id": "s_238",
      "type": "sentence",
      "content": "* `AGE` displays the amount of time that the application has been running.",
      "position": 47
    },
    {
      "id": "s_239",
      "type": "sentence",
      "content": "Notice that the name of the ReplicaSet is always formatted as `[DEPLOYMENT-NAME]-[HASH]`.",
      "position": 48
    },
    {
      "id": "s_240",
      "type": "sentence",
      "content": "This name will become the basis for the Pods which are created.",
      "position": 49
    },
    {
      "id": "s_241",
      "type": "sentence",
      "content": "The `HASH` string is the same as the `pod-template-hash` label on the ReplicaSet.",
      "position": 50
    },
    {
      "id": "s_242",
      "type": "sentence",
      "content": "To see the labels automatically generated for each Pod, run `kubectl get pods --show-labels`.",
      "position": 51
    },
    {
      "id": "s_243",
      "type": "sentence",
      "content": "The output is similar to: ``` NAME READY STATUS RESTARTS AGE LABELS nginx-deployment-75675f5897-7ci7o 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-kzszj 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 nginx-deployment-75675f5897-qqcnn 1/1 Running 0 18s app=nginx,pod-template-hash=75675f5897 ``` The created ReplicaSet ensures that there are three `nginx` Pods.",
      "position": 52
    },
    {
      "id": "s_244",
      "type": "sentence",
      "content": "{{< note >}} You must specify an appropriate selector and Pod template labels in a Deployment (in this case, `app: nginx`).",
      "position": 53
    },
    {
      "id": "s_245",
      "type": "sentence",
      "content": "Do not overlap labels or selectors with other controllers (including other Deployments and StatefulSets).",
      "position": 54
    },
    {
      "id": "s_246",
      "type": "sentence",
      "content": "Kubernetes doesn't stop you from overlapping, and if multiple controllers have overlapping selectors those controllers might conflict and behave unexpectedly.",
      "position": 55
    },
    {
      "id": "s_247",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 56
    },
    {
      "id": "w_248",
      "type": "window",
      "content": "{{< caution >}}\nDo not change this label.\n{{< /caution >}} The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels,\nand in any existing Pods that the ReplicaSet might have.",
      "position": 0,
      "windowSize": 77
    },
    {
      "id": "sw_249",
      "type": "sentence_window",
      "content": "{{< caution >}} Do not change this label. {{< /caution >}} The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_250",
      "type": "sentence_window",
      "content": "{{< /caution >}} The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_251",
      "type": "sentence_window",
      "content": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts. This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_252",
      "type": "sentence_window",
      "content": "This label ensures that child ReplicaSets of a Deployment do not overlap. It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels and in any existing Pods that the ReplicaSet might have.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_253",
      "type": "sentence_window",
      "content": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels and in any existing Pods that the ReplicaSet might have.",
      "position": 4,
      "sentenceCount": 2
    },
    {
      "id": "sc_254",
      "type": "sentence_context",
      "content": "[Pod-template-hash label] {{< caution >}} Do not change this label.",
      "position": 0
    },
    {
      "id": "sc_255",
      "type": "sentence_context",
      "content": "[Pod-template-hash label] [Previous: {{< caution >}} Do not change this label....] {{< /caution >}}",
      "position": 1
    },
    {
      "id": "sc_256",
      "type": "sentence_context",
      "content": "[Pod-template-hash label] The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
      "position": 2
    },
    {
      "id": "sc_257",
      "type": "sentence_context",
      "content": "[Pod-template-hash label] [Previous: The `pod-template-hash` label is added by the Depl...] This label ensures that child ReplicaSets of a Deployment do not overlap.",
      "position": 3
    },
    {
      "id": "sc_258",
      "type": "sentence_context",
      "content": "[Pod-template-hash label] [Previous: This label ensures that child ReplicaSets of a Dep...] It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels",
      "position": 4
    },
    {
      "id": "sc_259",
      "type": "sentence_context",
      "content": "[Pod-template-hash label] [Previous: It is generated by hashing the `PodTemplate` of th...] and in any existing Pods that the ReplicaSet might have.",
      "position": 5
    },
    {
      "id": "s_260",
      "type": "sentence",
      "content": "{{< caution >}} Do not change this label.",
      "position": 0
    },
    {
      "id": "s_261",
      "type": "sentence",
      "content": "{{< /caution >}}",
      "position": 1
    },
    {
      "id": "s_262",
      "type": "sentence",
      "content": "The `pod-template-hash` label is added by the Deployment controller to every ReplicaSet that a Deployment creates or adopts.",
      "position": 2
    },
    {
      "id": "s_263",
      "type": "sentence",
      "content": "This label ensures that child ReplicaSets of a Deployment do not overlap.",
      "position": 3
    },
    {
      "id": "s_264",
      "type": "sentence",
      "content": "It is generated by hashing the `PodTemplate` of the ReplicaSet and using the resulting hash as the label value that is added to the ReplicaSet selector, Pod template labels",
      "position": 4
    },
    {
      "id": "s_265",
      "type": "sentence",
      "content": "and in any existing Pods that the ReplicaSet might have.",
      "position": 5
    },
    {
      "id": "w_266",
      "type": "window",
      "content": "{{< note >}}\nA Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.spec.template`)\nis changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.\n{{< /note >}} Follow the steps given below to update your Deployment: Let's update the nginx Pods to use the `nginx:1.16.1` image instead of the `nginx:1.14.2` image.\n\n```shell\nkubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.16.1\n```\n\nor use the following command:\n\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n```\nwhere `deployment/nginx-deployment` indicates the Deployment,\n`nginx` indicates the Container the update will take place and\n`nginx:1.16.1` indicates the new image and its tag.\n\n\nThe output is similar to:\n\n```\ndeployment.apps/nginx-deployment image updated\n```\n\nAlternatively, you can `edit` the Deployment and change `.spec.template.spec.containers[0].image` from `nginx:1.14.2` to `nginx:1.16.1`:\n\n```shell\nkubectl edit deployment/nginx-deployment\n```\n\nThe output is similar to:\n\n```\ndeployment.apps/nginx-deployment edited\n```\n To see the rollout status, run:\n\n```shell\nkubectl rollout status deployment/nginx-deployment\n```\n\nThe output is similar to this:\n\n```\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\n```\n\nor\n\n```\ndeployment \"nginx-deployment\" successfully rolled out\n``` Get more details on your updated Deployment: After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.\nThe output is similar to this:\n\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           36s\n```\n Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_267",
      "type": "window",
      "content": "is similar to this:\n\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           36s\n```\n Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it\nup to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-1564180365   3         3         3       6s\nnginx-deployment-2035384211   0         0         0       36s\n```\n Running `get pods` should now show only the new Pods:\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS    RESTARTS   AGE\nnginx-deployment-1564180365-khku8   1/1       Running   0          14s\nnginx-deployment-1564180365-nacti   1/1  ",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_268",
      "type": "window",
      "content": "   0       36s\n```\n Running `get pods` should now show only the new Pods:\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS    RESTARTS   AGE\nnginx-deployment-1564180365-khku8   1/1       Running   0          14s\nnginx-deployment-1564180365-nacti   1/1       Running   0          14s\nnginx-deployment-1564180365-z9gth   1/1       Running   0          14s\n```\n\nNext time you want to update these Pods, you only need to update the Deployment's Pod template again.\n\nDeployment ensures that only a certain number of Pods are down while they are being updated. By default,\nit ensures that at least 75% of the desired number of Pods are up (25% max unavailable).\n\nDeployment also ensures that only a certain number of Pods are created above the desired number of Pods.\nBy default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).\n\nFor example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\nthen deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\nnew Pods have come up, and does not create new Pods until a sufficient number of",
      "position": 360,
      "windowSize": 280
    },
    {
      "id": "w_269",
      "type": "window",
      "content": "of the desired number of Pods are up (25% max unavailable).\n\nDeployment also ensures that only a certain number of Pods are created above the desired number of Pods.\nBy default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).\n\nFor example, if you look at the above Deployment closely, you will see that it first creates a new Pod,\nthen deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of\nnew Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.\nIt makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of\na Deployment with 4 replicas, the number of Pods would be between 3 and 5.\n Get details of your Deployment:\n```shell\nkubectl describe deployments\n```\nThe output is similar to this:\n```\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=2\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:",
      "position": 540,
      "windowSize": 280
    },
    {
      "id": "w_270",
      "type": "window",
      "content": "     default\nCreationTimestamp:      Thu, 30 Nov 2017 10:56:25 +0000\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=2\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n   Containers:\n    nginx:\n      Image:        nginx:1.16.1\n      Port:         80/TCP\n      Environment:  <none>\n      Mounts:       <none>\n    Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    NewReplicaSetAvailable\n  OldReplicaSets:  <none>\n  NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n  Events:\n    Type    Reason       ",
      "position": 720,
      "windowSize": 280
    },
    {
      "id": "w_271",
      "type": "window",
      "content": "Volumes:        <none>\n  Conditions:\n    Type           Status  Reason\n    ----           ------  ------\n    Available      True    MinimumReplicasAvailable\n    Progressing    True    NewReplicaSetAvailable\n  OldReplicaSets:  <none>\n  NewReplicaSet:   nginx-deployment-1564180365 (3/3 replicas created)\n  Events:\n    Type    Reason             Age   From                   Message\n    ----    ------             ----  ----                   -------\n    Normal  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n    Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up",
      "position": 900,
      "windowSize": 280
    },
    {
      "id": "w_272",
      "type": "window",
      "content": " deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3\n    Normal  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2\n    Normal  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1\n    Normal  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3\n    Normal  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0\n```\nHere you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211)\nand scaled it up to 3 replicas directly. When you updated the Deployment, it created a new ReplicaSet\n(nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet\nto 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.\nIt then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.\nFinally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total",
      "position": 1080,
      "windowSize": 280
    },
    {
      "id": "w_273",
      "type": "window",
      "content": "new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.\nIt then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.\nFinally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}}\nKubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between\n`replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than\nexpected during a rollout, and that the total resources consumed by the Deployment is more than `replicas + maxSurge`\nuntil the `terminationGracePeriodSeconds` of the terminating Pods expires.\n{{< /note >}}",
      "position": 1260,
      "windowSize": 120
    },
    {
      "id": "sw_274",
      "type": "sentence_window",
      "content": "{{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `. template`) is changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_275",
      "type": "sentence_window",
      "content": "template`) is changed, for example if the labels or container images of the template are updated. Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}}",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_276",
      "type": "sentence_window",
      "content": "Other updates, such as scaling the Deployment, do not trigger a rollout. {{< /note >}} Follow the steps given below to update your Deployment:",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_277",
      "type": "sentence_window",
      "content": "{{< /note >}} Follow the steps given below to update your Deployment: Let's update the nginx Pods to use the `nginx:1.16.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_278",
      "type": "sentence_window",
      "content": "Follow the steps given below to update your Deployment: Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_279",
      "type": "sentence_window",
      "content": "Let's update the nginx Pods to use the `nginx:1.16. 1` image instead of the `nginx:1.14. ```shell kubectl set image deployment.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_280",
      "type": "sentence_window",
      "content": "1` image instead of the `nginx:1.14. ```shell kubectl set image deployment. apps/nginx-deployment nginx=nginx:1.16.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_281",
      "type": "sentence_window",
      "content": "```shell kubectl set image deployment. apps/nginx-deployment nginx=nginx:1.16. 1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_282",
      "type": "sentence_window",
      "content": "apps/nginx-deployment nginx=nginx:1.16. 1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_283",
      "type": "sentence_window",
      "content": "1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16. 1` indicates the new image and its tag.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_284",
      "type": "sentence_window",
      "content": "1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16. 1` indicates the new image and its tag. The output is similar to: ``` deployment.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_285",
      "type": "sentence_window",
      "content": "1` indicates the new image and its tag. The output is similar to: ``` deployment. apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `.",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_286",
      "type": "sentence_window",
      "content": "The output is similar to: ``` deployment. apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `. containers[0].",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_287",
      "type": "sentence_window",
      "content": "apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `. containers[0]. image` from `nginx:1.14.",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_288",
      "type": "sentence_window",
      "content": "containers[0]. image` from `nginx:1.14. 2` to `nginx:1.16.",
      "position": 14,
      "sentenceCount": 3
    },
    {
      "id": "sw_289",
      "type": "sentence_window",
      "content": "image` from `nginx:1.14. 2` to `nginx:1.16. 1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment.",
      "position": 15,
      "sentenceCount": 3
    },
    {
      "id": "sw_290",
      "type": "sentence_window",
      "content": "2` to `nginx:1.16. 1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment. apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been",
      "position": 16,
      "sentenceCount": 3
    },
    {
      "id": "sw_291",
      "type": "sentence_window",
      "content": "1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment. apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ``` or",
      "position": 17,
      "sentenceCount": 3
    },
    {
      "id": "sw_292",
      "type": "sentence_window",
      "content": "apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated... ``` or ``` deployment \"nginx-deployment\" successfully rolled out ``` Get more details on your updated",
      "position": 18,
      "sentenceCount": 3
    },
    {
      "id": "sw_293",
      "type": "sentence_window",
      "content": "``` or ``` deployment \"nginx-deployment\" successfully rolled out ``` Get more details on your updated Deployment: After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
      "position": 19,
      "sentenceCount": 3
    },
    {
      "id": "sw_294",
      "type": "sentence_window",
      "content": "Get more details on your updated Deployment: After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling",
      "position": 20,
      "sentenceCount": 3
    },
    {
      "id": "sw_295",
      "type": "sentence_window",
      "content": "After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`. The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down",
      "position": 21,
      "sentenceCount": 3
    },
    {
      "id": "sw_296",
      "type": "sentence_window",
      "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas. ```shell kubectl get rs ``` The output is similar to this:",
      "position": 22,
      "sentenceCount": 3
    },
    {
      "id": "sw_297",
      "type": "sentence_window",
      "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE",
      "position": 23,
      "sentenceCount": 3
    },
    {
      "id": "sw_298",
      "type": "sentence_window",
      "content": "Deployment ensures that only a certain number of Pods are down while they are being updated. By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
      "position": 24,
      "sentenceCount": 3
    },
    {
      "id": "sw_299",
      "type": "sentence_window",
      "content": "By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable). Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
      "position": 25,
      "sentenceCount": 3
    },
    {
      "id": "sw_300",
      "type": "sentence_window",
      "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods. By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another",
      "position": 26,
      "sentenceCount": 3
    },
    {
      "id": "sw_301",
      "type": "sentence_window",
      "content": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge). For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of new Pods have come up, and does not",
      "position": 27,
      "sentenceCount": 3
    },
    {
      "id": "sw_302",
      "type": "sentence_window",
      "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one. It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least",
      "position": 28,
      "sentenceCount": 3
    },
    {
      "id": "sw_303",
      "type": "sentence_window",
      "content": "It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed. It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
      "position": 29,
      "sentenceCount": 3
    },
    {
      "id": "sw_304",
      "type": "sentence_window",
      "content": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available. In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5. Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default",
      "position": 30,
      "sentenceCount": 3
    },
    {
      "id": "sw_305",
      "type": "sentence_window",
      "content": "In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5. Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment. kubernetes.",
      "position": 31,
      "sentenceCount": 3
    },
    {
      "id": "sw_306",
      "type": "sentence_window",
      "content": "Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment. kubernetes. io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available |",
      "position": 32,
      "sentenceCount": 3
    },
    {
      "id": "sw_307",
      "type": "sentence_window",
      "content": "kubernetes. io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP Environment: <none> Mounts: <none>",
      "position": 33,
      "sentenceCount": 3
    },
    {
      "id": "sw_308",
      "type": "sentence_window",
      "content": "io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none>",
      "position": 34,
      "sentenceCount": 3
    },
    {
      "id": "sw_309",
      "type": "sentence_window",
      "content": "1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-1564180365 (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ----",
      "position": 35,
      "sentenceCount": 3
    },
    {
      "id": "sw_310",
      "type": "sentence_window",
      "content": "When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up. Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down",
      "position": 36,
      "sentenceCount": 3
    },
    {
      "id": "sw_311",
      "type": "sentence_window",
      "content": "Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times. It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the",
      "position": 37,
      "sentenceCount": 3
    },
    {
      "id": "sw_312",
      "type": "sentence_window",
      "content": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy. Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between",
      "position": 38,
      "sentenceCount": 3
    },
    {
      "id": "sw_313",
      "type": "sentence_window",
      "content": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0. {{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods",
      "position": 39,
      "sentenceCount": 3
    },
    {
      "id": "sw_314",
      "type": "sentence_window",
      "content": "{{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`. As a result, you might notice that there are more Pods than expected during a rollout and that the total resources consumed by the Deployment is more than `replicas",
      "position": 40,
      "sentenceCount": 3
    },
    {
      "id": "sw_315",
      "type": "sentence_window",
      "content": "As a result, you might notice that there are more Pods than expected during a rollout and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}",
      "position": 41,
      "sentenceCount": 3
    },
    {
      "id": "sw_316",
      "type": "sentence_window",
      "content": "and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires. {{< /note >}}",
      "position": 42,
      "sentenceCount": 2
    },
    {
      "id": "sc_317",
      "type": "sentence_context",
      "content": "[Updating a Deployment] {{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
      "position": 0
    },
    {
      "id": "sc_318",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: {{< note >}} A Deployment's rollout is triggered i...] template`) is changed, for example if the labels or container images of the template are updated.",
      "position": 1
    },
    {
      "id": "sc_319",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: template`) is changed, for example if the labels o...] Other updates, such as scaling the Deployment, do not trigger a rollout.",
      "position": 2
    },
    {
      "id": "sc_320",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Other updates, such as scaling the Deployment, do ...] {{< /note >}}",
      "position": 3
    },
    {
      "id": "sc_321",
      "type": "sentence_context",
      "content": "[Updating a Deployment] Follow the steps given below to update your Deployment:",
      "position": 4
    },
    {
      "id": "sc_322",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Follow the steps given below to update your Deploy...] Let's update the nginx Pods to use the `nginx:1.16.",
      "position": 5
    },
    {
      "id": "sc_323",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Let's update the nginx Pods to use the `nginx:1.16...] 1` image instead of the `nginx:1.14.",
      "position": 6
    },
    {
      "id": "sc_324",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: 1` image instead of the `nginx:1.14....] ```shell kubectl set image deployment.",
      "position": 7
    },
    {
      "id": "sc_325",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: ```shell kubectl set image deployment....] apps/nginx-deployment nginx=nginx:1.16.",
      "position": 8
    },
    {
      "id": "sc_326",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: apps/nginx-deployment nginx=nginx:1.16....] 1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 9
    },
    {
      "id": "sc_327",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: 1 ``` or use the following command: ```shell kubec...] 1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16.",
      "position": 10
    },
    {
      "id": "sc_328",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: 1 ``` where `deployment/nginx-deployment` indicate...] 1` indicates the new image and its tag.",
      "position": 11
    },
    {
      "id": "sc_329",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: 1` indicates the new image and its tag....] The output is similar to: ``` deployment.",
      "position": 12
    },
    {
      "id": "sc_330",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: The output is similar to: ``` deployment....] apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `.",
      "position": 13
    },
    {
      "id": "sc_331",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: apps/nginx-deployment image updated ``` Alternativ...] containers[0].",
      "position": 14
    },
    {
      "id": "sc_332",
      "type": "sentence_context",
      "content": "[Updating a Deployment] image` from `nginx:1.14.",
      "position": 15
    },
    {
      "id": "sc_333",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: image` from `nginx:1.14....] 2` to `nginx:1.16.",
      "position": 16
    },
    {
      "id": "sc_334",
      "type": "sentence_context",
      "content": "[Updating a Deployment] 1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment.",
      "position": 17
    },
    {
      "id": "sc_335",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: 1`: ```shell kubectl edit deployment/nginx-deploym...] apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
      "position": 18
    },
    {
      "id": "sc_336",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: apps/nginx-deployment edited ``` To see the rollou...] ``` or ``` deployment \"nginx-deployment\" successfully rolled out ```",
      "position": 19
    },
    {
      "id": "sc_337",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: ``` or ``` deployment \"nginx-deployment\" successfu...] Get more details on your updated Deployment:",
      "position": 20
    },
    {
      "id": "sc_338",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Get more details on your updated Deployment:...] After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
      "position": 21
    },
    {
      "id": "sc_339",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: After the rollout succeeds, you can view the Deplo...] The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the",
      "position": 22
    },
    {
      "id": "sc_340",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: The output is similar to this: ``` NAME READY UP-T...] ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ```",
      "position": 23
    },
    {
      "id": "sc_341",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: ```shell kubectl get rs ``` The output is similar ...] Deployment ensures that only a certain number of Pods are down while they are being updated.",
      "position": 24
    },
    {
      "id": "sc_342",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Deployment ensures that only a certain number of P...] By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
      "position": 25
    },
    {
      "id": "sc_343",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: By default, it ensures that at least 75% of the de...] Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
      "position": 26
    },
    {
      "id": "sc_344",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Deployment also ensures that only a certain number...] By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
      "position": 27
    },
    {
      "id": "sc_345",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: By default, it ensures that at most 125% of the de...] For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one.",
      "position": 28
    },
    {
      "id": "sc_346",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: For example, if you look at the above Deployment c...] It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
      "position": 29
    },
    {
      "id": "sc_347",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: It does not kill old Pods until a sufficient numbe...] It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
      "position": 30
    },
    {
      "id": "sc_348",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: It makes sure that at least 3 Pods are available a...] In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
      "position": 31
    },
    {
      "id": "sc_349",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: In case of a Deployment with 4 replicas, the numbe...] Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment.",
      "position": 32
    },
    {
      "id": "sc_350",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Get details of your Deployment: ```shell kubectl d...] kubernetes.",
      "position": 33
    },
    {
      "id": "sc_351",
      "type": "sentence_context",
      "content": "[Updating a Deployment] io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
      "position": 34
    },
    {
      "id": "sc_352",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: io/revision=2 Selector: app=nginx Replicas: 3 desi...] 1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet:",
      "position": 35
    },
    {
      "id": "sc_353",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: 1 Port: 80/TCP Environment: <none> Mounts: <none> ...] When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
      "position": 36
    },
    {
      "id": "sc_354",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: When you updated the Deployment, it created a new ...] Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
      "position": 37
    },
    {
      "id": "sc_355",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Then it scaled down the old ReplicaSet to 2 and sc...] It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
      "position": 38
    },
    {
      "id": "sc_356",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: It then continued scaling up and down the new and ...] Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
      "position": 39
    },
    {
      "id": "sc_357",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: Finally, you'll have 3 available replicas in the n...] {{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`.",
      "position": 40
    },
    {
      "id": "sc_358",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: {{< note >}} Kubernetes doesn't count terminating ...] As a result, you might notice that there are more Pods than expected during a rollout",
      "position": 41
    },
    {
      "id": "sc_359",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: As a result, you might notice that there are more ...] and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires.",
      "position": 42
    },
    {
      "id": "sc_360",
      "type": "sentence_context",
      "content": "[Updating a Deployment] [Previous: and that the total resources consumed by the Deplo...] {{< /note >}}",
      "position": 43
    },
    {
      "id": "s_361",
      "type": "sentence",
      "content": "{{< note >}} A Deployment's rollout is triggered if and only if the Deployment's Pod template (that is, `.",
      "position": 0
    },
    {
      "id": "s_362",
      "type": "sentence",
      "content": "template`) is changed, for example if the labels or container images of the template are updated.",
      "position": 1
    },
    {
      "id": "s_363",
      "type": "sentence",
      "content": "Other updates, such as scaling the Deployment, do not trigger a rollout.",
      "position": 2
    },
    {
      "id": "s_364",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 3
    },
    {
      "id": "s_365",
      "type": "sentence",
      "content": "Follow the steps given below to update your Deployment:",
      "position": 4
    },
    {
      "id": "s_366",
      "type": "sentence",
      "content": "Let's update the nginx Pods to use the `nginx:1.16.",
      "position": 5
    },
    {
      "id": "s_367",
      "type": "sentence",
      "content": "1` image instead of the `nginx:1.14.",
      "position": 6
    },
    {
      "id": "s_368",
      "type": "sentence",
      "content": "```shell kubectl set image deployment.",
      "position": 7
    },
    {
      "id": "s_369",
      "type": "sentence",
      "content": "apps/nginx-deployment nginx=nginx:1.16.",
      "position": 8
    },
    {
      "id": "s_370",
      "type": "sentence",
      "content": "1 ``` or use the following command: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 9
    },
    {
      "id": "s_371",
      "type": "sentence",
      "content": "1 ``` where `deployment/nginx-deployment` indicates the Deployment, `nginx` indicates the Container the update will take place and `nginx:1.16.",
      "position": 10
    },
    {
      "id": "s_372",
      "type": "sentence",
      "content": "1` indicates the new image and its tag.",
      "position": 11
    },
    {
      "id": "s_373",
      "type": "sentence",
      "content": "The output is similar to: ``` deployment.",
      "position": 12
    },
    {
      "id": "s_374",
      "type": "sentence",
      "content": "apps/nginx-deployment image updated ``` Alternatively, you can `edit` the Deployment and change `.",
      "position": 13
    },
    {
      "id": "s_375",
      "type": "sentence",
      "content": "containers[0].",
      "position": 14
    },
    {
      "id": "s_376",
      "type": "sentence",
      "content": "image` from `nginx:1.14.",
      "position": 15
    },
    {
      "id": "s_377",
      "type": "sentence",
      "content": "2` to `nginx:1.16.",
      "position": 16
    },
    {
      "id": "s_378",
      "type": "sentence",
      "content": "1`: ```shell kubectl edit deployment/nginx-deployment ``` The output is similar to: ``` deployment.",
      "position": 17
    },
    {
      "id": "s_379",
      "type": "sentence",
      "content": "apps/nginx-deployment edited ``` To see the rollout status, run: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 2 out of 3 new replicas have been updated...",
      "position": 18
    },
    {
      "id": "s_380",
      "type": "sentence",
      "content": "``` or ``` deployment \"nginx-deployment\" successfully rolled out ```",
      "position": 19
    },
    {
      "id": "s_381",
      "type": "sentence",
      "content": "Get more details on your updated Deployment:",
      "position": 20
    },
    {
      "id": "s_382",
      "type": "sentence",
      "content": "After the rollout succeeds, you can view the Deployment by running `kubectl get deployments`.",
      "position": 21
    },
    {
      "id": "s_383",
      "type": "sentence",
      "content": "The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 36s ``` Run `kubectl get rs` to see that the Deployment updated the Pods by creating a new ReplicaSet and scaling it up to 3 replicas, as well as scaling down the old ReplicaSet to 0 replicas.",
      "position": 22
    },
    {
      "id": "s_384",
      "type": "sentence",
      "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 6s nginx-deployment-2035384211 0 0 0 36s ``` Running `get pods` should now show only the new Pods: ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-khku8 1/1 Running 0 14s nginx-deployment-1564180365-nacti 1/1 Running 0 14s nginx-deployment-1564180365-z9gth 1/1 Running 0 14s ``` Next time you want to update these Pods, you only need to update the Deployment's Pod template again.",
      "position": 23
    },
    {
      "id": "s_385",
      "type": "sentence",
      "content": "Deployment ensures that only a certain number of Pods are down while they are being updated.",
      "position": 24
    },
    {
      "id": "s_386",
      "type": "sentence",
      "content": "By default, it ensures that at least 75% of the desired number of Pods are up (25% max unavailable).",
      "position": 25
    },
    {
      "id": "s_387",
      "type": "sentence",
      "content": "Deployment also ensures that only a certain number of Pods are created above the desired number of Pods.",
      "position": 26
    },
    {
      "id": "s_388",
      "type": "sentence",
      "content": "By default, it ensures that at most 125% of the desired number of Pods are up (25% max surge).",
      "position": 27
    },
    {
      "id": "s_389",
      "type": "sentence",
      "content": "For example, if you look at the above Deployment closely, you will see that it first creates a new Pod, then deletes an old Pod, and creates another new one.",
      "position": 28
    },
    {
      "id": "s_390",
      "type": "sentence",
      "content": "It does not kill old Pods until a sufficient number of new Pods have come up, and does not create new Pods until a sufficient number of old Pods have been killed.",
      "position": 29
    },
    {
      "id": "s_391",
      "type": "sentence",
      "content": "It makes sure that at least 3 Pods are available and that at max 4 Pods in total are available.",
      "position": 30
    },
    {
      "id": "s_392",
      "type": "sentence",
      "content": "In case of a Deployment with 4 replicas, the number of Pods would be between 3 and 5.",
      "position": 31
    },
    {
      "id": "s_393",
      "type": "sentence",
      "content": "Get details of your Deployment: ```shell kubectl describe deployments ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Thu, 30 Nov 2017 10:56:25 +0000 Labels: app=nginx Annotations: deployment.",
      "position": 32
    },
    {
      "id": "s_394",
      "type": "sentence",
      "content": "kubernetes.",
      "position": 33
    },
    {
      "id": "s_395",
      "type": "sentence",
      "content": "io/revision=2 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
      "position": 34
    },
    {
      "id": "s_396",
      "type": "sentence",
      "content": "1 Port: 80/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-1564180365 (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-deployment-2035384211 to 3 Normal ScalingReplicaSet 24s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 1 Normal ScalingReplicaSet 22s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 2 Normal ScalingReplicaSet 22s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 2 Normal ScalingReplicaSet 19s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 1 Normal ScalingReplicaSet 19s deployment-controller Scaled up replica set nginx-deployment-1564180365 to 3 Normal ScalingReplicaSet 14s deployment-controller Scaled down replica set nginx-deployment-2035384211 to 0 ``` Here you see that when you first created the Deployment, it created a ReplicaSet (nginx-deployment-2035384211) and scaled it up to 3 replicas directly.",
      "position": 35
    },
    {
      "id": "s_397",
      "type": "sentence",
      "content": "When you updated the Deployment, it created a new ReplicaSet (nginx-deployment-1564180365) and scaled it up to 1 and waited for it to come up.",
      "position": 36
    },
    {
      "id": "s_398",
      "type": "sentence",
      "content": "Then it scaled down the old ReplicaSet to 2 and scaled up the new ReplicaSet to 2 so that at least 3 Pods were available and at most 4 Pods were created at all times.",
      "position": 37
    },
    {
      "id": "s_399",
      "type": "sentence",
      "content": "It then continued scaling up and down the new and the old ReplicaSet, with the same rolling update strategy.",
      "position": 38
    },
    {
      "id": "s_400",
      "type": "sentence",
      "content": "Finally, you'll have 3 available replicas in the new ReplicaSet, and the old ReplicaSet is scaled down to 0.",
      "position": 39
    },
    {
      "id": "s_401",
      "type": "sentence",
      "content": "{{< note >}} Kubernetes doesn't count terminating Pods when calculating the number of `availableReplicas`, which must be between `replicas - maxUnavailable` and `replicas + maxSurge`.",
      "position": 40
    },
    {
      "id": "s_402",
      "type": "sentence",
      "content": "As a result, you might notice that there are more Pods than expected during a rollout",
      "position": 41
    },
    {
      "id": "s_403",
      "type": "sentence",
      "content": "and that the total resources consumed by the Deployment is more than `replicas + maxSurge` until the `terminationGracePeriodSeconds` of the terminating Pods expires.",
      "position": 42
    },
    {
      "id": "s_404",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 43
    },
    {
      "id": "w_405",
      "type": "window",
      "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up\nthe desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels\nmatch `.spec.selector` but whose template does not match `.spec.template` are scaled down. Eventually, the new\nReplicaSet is scaled to `.spec.replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet\nas per the update and start scaling that up, and rolls over the ReplicaSet that it was scaling up previously\n-- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.2`,\nbut then update the Deployment to create 5 replicas of `nginx:1.16.1`, when only 3\nreplicas of `nginx:1.14.2` had been created. In that case, the Deployment immediately starts\nkilling the 3 `nginx:1.14.2` Pods that it had created, and starts creating\n`nginx:1.16.1` Pods. It does not wait for the 5 replicas of `nginx:1.14.2` to be created\nbefore changing course.",
      "position": 0,
      "windowSize": 176
    },
    {
      "id": "sw_406",
      "type": "sentence_window",
      "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods. If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `. selector` but whose template does not match `.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_407",
      "type": "sentence_window",
      "content": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `. selector` but whose template does not match `. template` are scaled down.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_408",
      "type": "sentence_window",
      "content": "selector` but whose template does not match `. template` are scaled down. Eventually, the new ReplicaSet is scaled to `.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_409",
      "type": "sentence_window",
      "content": "template` are scaled down. Eventually, the new ReplicaSet is scaled to `. replicas` and all old ReplicaSets is scaled to 0.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_410",
      "type": "sentence_window",
      "content": "Eventually, the new ReplicaSet is scaled to `. replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_411",
      "type": "sentence_window",
      "content": "replicas` and all old ReplicaSets is scaled to 0. If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_412",
      "type": "sentence_window",
      "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_413",
      "type": "sentence_window",
      "content": "and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down. For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`, but then update the Deployment to create 5 replicas of `nginx:1.16.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_414",
      "type": "sentence_window",
      "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14. 2`, but then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3 replicas of `nginx:1.14.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_415",
      "type": "sentence_window",
      "content": "2`, but then update the Deployment to create 5 replicas of `nginx:1.16. 1`, when only 3 replicas of `nginx:1.14. 2` had been created.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_416",
      "type": "sentence_window",
      "content": "1`, when only 3 replicas of `nginx:1.14. 2` had been created. In that case, the Deployment immediately starts killing the 3 `nginx:1.14.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_417",
      "type": "sentence_window",
      "content": "2` had been created. In that case, the Deployment immediately starts killing the 3 `nginx:1.14. 2` Pods that it had created, and starts creating `nginx:1.16.",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_418",
      "type": "sentence_window",
      "content": "In that case, the Deployment immediately starts killing the 3 `nginx:1.14. 2` Pods that it had created, and starts creating `nginx:1.16. It does not wait for the 5 replicas of `nginx:1.14.",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_419",
      "type": "sentence_window",
      "content": "2` Pods that it had created, and starts creating `nginx:1.16. It does not wait for the 5 replicas of `nginx:1.14. 2` to be created before changing course.",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_420",
      "type": "sentence_window",
      "content": "It does not wait for the 5 replicas of `nginx:1.14. 2` to be created before changing course.",
      "position": 14,
      "sentenceCount": 2
    },
    {
      "id": "sc_421",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods.",
      "position": 0
    },
    {
      "id": "sc_422",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: Each time a new Deployment is observed by the Depl...] If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `.",
      "position": 1
    },
    {
      "id": "sc_423",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: If the Deployment is updated, the existing Replica...] selector` but whose template does not match `.",
      "position": 2
    },
    {
      "id": "sc_424",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: selector` but whose template does not match `....] template` are scaled down.",
      "position": 3
    },
    {
      "id": "sc_425",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: template` are scaled down....] Eventually, the new ReplicaSet is scaled to `.",
      "position": 4
    },
    {
      "id": "sc_426",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: Eventually, the new ReplicaSet is scaled to `....] replicas` and all old ReplicaSets is scaled to 0.",
      "position": 5
    },
    {
      "id": "sc_427",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: replicas` and all old ReplicaSets is scaled to 0....] If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up",
      "position": 6
    },
    {
      "id": "sc_428",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: If you update a Deployment while an existing rollo...] and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.",
      "position": 7
    },
    {
      "id": "sc_429",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: and rolls over the ReplicaSet that it was scaling ...] For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
      "position": 8
    },
    {
      "id": "sc_430",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: For example, suppose you create a Deployment to cr...] 2`, but then update the Deployment to create 5 replicas of `nginx:1.16.",
      "position": 9
    },
    {
      "id": "sc_431",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: 2`, but then update the Deployment to create 5 rep...] 1`, when only 3 replicas of `nginx:1.14.",
      "position": 10
    },
    {
      "id": "sc_432",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: 1`, when only 3 replicas of `nginx:1.14....] 2` had been created.",
      "position": 11
    },
    {
      "id": "sc_433",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] In that case, the Deployment immediately starts killing the 3 `nginx:1.14.",
      "position": 12
    },
    {
      "id": "sc_434",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: In that case, the Deployment immediately starts ki...] 2` Pods that it had created, and starts creating `nginx:1.16.",
      "position": 13
    },
    {
      "id": "sc_435",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: 2` Pods that it had created, and starts creating `...] It does not wait for the 5 replicas of `nginx:1.14.",
      "position": 14
    },
    {
      "id": "sc_436",
      "type": "sentence_context",
      "content": "[Rollover (aka multiple updates in-flight)] [Previous: It does not wait for the 5 replicas of `nginx:1.14...] 2` to be created before changing course.",
      "position": 15
    },
    {
      "id": "s_437",
      "type": "sentence",
      "content": "Each time a new Deployment is observed by the Deployment controller, a ReplicaSet is created to bring up the desired Pods.",
      "position": 0
    },
    {
      "id": "s_438",
      "type": "sentence",
      "content": "If the Deployment is updated, the existing ReplicaSet that controls Pods whose labels match `.",
      "position": 1
    },
    {
      "id": "s_439",
      "type": "sentence",
      "content": "selector` but whose template does not match `.",
      "position": 2
    },
    {
      "id": "s_440",
      "type": "sentence",
      "content": "template` are scaled down.",
      "position": 3
    },
    {
      "id": "s_441",
      "type": "sentence",
      "content": "Eventually, the new ReplicaSet is scaled to `.",
      "position": 4
    },
    {
      "id": "s_442",
      "type": "sentence",
      "content": "replicas` and all old ReplicaSets is scaled to 0.",
      "position": 5
    },
    {
      "id": "s_443",
      "type": "sentence",
      "content": "If you update a Deployment while an existing rollout is in progress, the Deployment creates a new ReplicaSet as per the update and start scaling that up",
      "position": 6
    },
    {
      "id": "s_444",
      "type": "sentence",
      "content": "and rolls over the ReplicaSet that it was scaling up previously -- it will add it to its list of old ReplicaSets and start scaling it down.",
      "position": 7
    },
    {
      "id": "s_445",
      "type": "sentence",
      "content": "For example, suppose you create a Deployment to create 5 replicas of `nginx:1.14.",
      "position": 8
    },
    {
      "id": "s_446",
      "type": "sentence",
      "content": "2`, but then update the Deployment to create 5 replicas of `nginx:1.16.",
      "position": 9
    },
    {
      "id": "s_447",
      "type": "sentence",
      "content": "1`, when only 3 replicas of `nginx:1.14.",
      "position": 10
    },
    {
      "id": "s_448",
      "type": "sentence",
      "content": "2` had been created.",
      "position": 11
    },
    {
      "id": "s_449",
      "type": "sentence",
      "content": "In that case, the Deployment immediately starts killing the 3 `nginx:1.14.",
      "position": 12
    },
    {
      "id": "s_450",
      "type": "sentence",
      "content": "2` Pods that it had created, and starts creating `nginx:1.16.",
      "position": 13
    },
    {
      "id": "s_451",
      "type": "sentence",
      "content": "It does not wait for the 5 replicas of `nginx:1.14.",
      "position": 14
    },
    {
      "id": "s_452",
      "type": "sentence",
      "content": "2` to be created before changing course.",
      "position": 15
    },
    {
      "id": "w_453",
      "type": "window",
      "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.\nIn any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped\nall of the implications. {{< note >}}\nIn API version `apps/v1`, a Deployment's label selector is immutable after it gets created.\n{{< /note >}} Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too,\notherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does\nnot select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and\ncreating a new ReplicaSet. Selector updates changes the existing value in a selector key -- result in the same behavior as additions. Selector removals removes an existing key from the Deployment selector -- do not require any changes in the\nPod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the\nremoved label still exists in any existing Pods and ReplicaSets.",
      "position": 0,
      "windowSize": 178
    },
    {
      "id": "sw_454",
      "type": "sentence_window",
      "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front. In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications. {{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_455",
      "type": "sentence_window",
      "content": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications. {{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}}",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_456",
      "type": "sentence_window",
      "content": "{{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created. {{< /note >}} Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_457",
      "type": "sentence_window",
      "content": "{{< /note >}} Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_458",
      "type": "sentence_window",
      "content": "Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned. This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_459",
      "type": "sentence_window",
      "content": "This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet. Selector updates changes the existing value in a selector key -- result in the same behavior as additions. Selector removals removes an",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_460",
      "type": "sentence_window",
      "content": "Selector updates changes the existing value in a selector key -- result in the same behavior as additions. Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_461",
      "type": "sentence_window",
      "content": "Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels. Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.",
      "position": 7,
      "sentenceCount": 2
    },
    {
      "id": "sc_462",
      "type": "sentence_context",
      "content": "[Label selector updates] It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
      "position": 0
    },
    {
      "id": "sc_463",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: It is generally discouraged to make label selector...] In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications.",
      "position": 1
    },
    {
      "id": "sc_464",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: In any case, if you need to perform a label select...] {{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
      "position": 2
    },
    {
      "id": "sc_465",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: {{< note >}} In API version `apps/v1`, a Deploymen...] {{< /note >}}",
      "position": 3
    },
    {
      "id": "sc_466",
      "type": "sentence_context",
      "content": "[Label selector updates] Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned.",
      "position": 4
    },
    {
      "id": "sc_467",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: Selector additions require the Pod template labels...] This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet.",
      "position": 5
    },
    {
      "id": "sc_468",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: This change is a non-overlapping one, meaning that...] Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
      "position": 6
    },
    {
      "id": "sc_469",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: Selector updates changes the existing value in a s...] Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels.",
      "position": 7
    },
    {
      "id": "sc_470",
      "type": "sentence_context",
      "content": "[Label selector updates] [Previous: Selector removals removes an existing key from the...] Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.",
      "position": 8
    },
    {
      "id": "s_471",
      "type": "sentence",
      "content": "It is generally discouraged to make label selector updates and it is suggested to plan your selectors up front.",
      "position": 0
    },
    {
      "id": "s_472",
      "type": "sentence",
      "content": "In any case, if you need to perform a label selector update, exercise great caution and make sure you have grasped all of the implications.",
      "position": 1
    },
    {
      "id": "s_473",
      "type": "sentence",
      "content": "{{< note >}} In API version `apps/v1`, a Deployment's label selector is immutable after it gets created.",
      "position": 2
    },
    {
      "id": "s_474",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 3
    },
    {
      "id": "s_475",
      "type": "sentence",
      "content": "Selector additions require the Pod template labels in the Deployment spec to be updated with the new label too, otherwise a validation error is returned.",
      "position": 4
    },
    {
      "id": "s_476",
      "type": "sentence",
      "content": "This change is a non-overlapping one, meaning that the new selector does not select ReplicaSets and Pods created with the old selector, resulting in orphaning all old ReplicaSets and creating a new ReplicaSet.",
      "position": 5
    },
    {
      "id": "s_477",
      "type": "sentence",
      "content": "Selector updates changes the existing value in a selector key -- result in the same behavior as additions.",
      "position": 6
    },
    {
      "id": "s_478",
      "type": "sentence",
      "content": "Selector removals removes an existing key from the Deployment selector -- do not require any changes in the Pod template labels.",
      "position": 7
    },
    {
      "id": "s_479",
      "type": "sentence",
      "content": "Existing ReplicaSets are not orphaned, and a new ReplicaSet is not created, but note that the removed label still exists in any existing Pods and ReplicaSets.",
      "position": 8
    },
    {
      "id": "w_480",
      "type": "window",
      "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.\nBy default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want\n(you can change that by modifying revision history limit). {{< note >}}\nA Deployment's revision is created when a Deployment's rollout is triggered. This means that the\nnew revision is created if and only if the Deployment's Pod template (`.spec.template`) is changed,\nfor example if you update the labels or container images of the template. Other updates, such as scaling the Deployment,\ndo not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.\nThis means that when you roll back to an earlier revision, only the Deployment's Pod template part is\nrolled back.\n{{< /note >}} Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.1`:\n\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.161\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n The rollout gets stuck. You can verify it by checking the rollout status:\n\n```shell\nkubectl rollout status deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\nWaiting for rollout to finish: 1 out of 3 new replicas have been updated...\n```\n Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).\n You see that the number of old replicas (adding the replica count from\n`nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\nnew replicas (from `nginx-deployment-3066724191`) is 1.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY ",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_481",
      "type": "window",
      "content": "is similar to this:\n```\nWaiting for rollout to finish: 1 out of 3 new replicas have been updated...\n```\n Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts,\n[read more here](#deployment-status).\n You see that the number of old replicas (adding the replica count from\n`nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3, and the number of\nnew replicas (from `nginx-deployment-3066724191`) is 1.\n\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-1564180365   3         3         3       25s\nnginx-deployment-2035384211   0         0         0       36s\nnginx-deployment-3066724191   1         1         0       6s\n```\n Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS             RESTARTS   AGE\nnginx-deployment-1564180365-70iae   1/1       Running   ",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_482",
      "type": "window",
      "content": "     6s\n```\n Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.\n\n```shell\nkubectl get pods\n```\n\nThe output is similar to this:\n```\nNAME                                READY     STATUS             RESTARTS   AGE\nnginx-deployment-1564180365-70iae   1/1       Running            0          25s\nnginx-deployment-1564180365-jbqqo   1/1       Running            0          25s\nnginx-deployment-1564180365-hysrc   1/1       Running            0          25s\nnginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n```\n\n{{< note >}}\nThe Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.\n{{< /note >}}\n Get the description of the Deployment:\n```shell\nkubectl describe deployment\n```\n\nThe output is similar to this:\n```\nName:           nginx-deployment\nNamespace:      default\nCreationTimestamp:  Tue, 15 Mar 2016 14:48:04",
      "position": 360,
      "windowSize": 280
    },
    {
      "id": "w_483",
      "type": "window",
      "content": "  25s\nnginx-deployment-3066724191-08mng   0/1       ImagePullBackOff   0          6s\n```\n\n{{< note >}}\nThe Deployment controller stops the bad rollout automatically, and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.\n{{< /note >}}\n Get the description of the Deployment:\n```shell\nkubectl describe deployment\n```\n\nThe output is similar to this:\n```\nName:           nginx-deployment\nNamespace:      default\nCreationTimestamp:  Tue, 15 Mar 2016 14:48:04 -0700\nLabels:         app=nginx\nSelector:       app=nginx\nReplicas:       3 desired | 1 updated | 4 total | 3 available | 1 unavailable\nStrategyType:       RollingUpdate\nMinReadySeconds:    0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.161\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    ReplicaSetUpdated\nOldReplicaSets:  ",
      "position": 540,
      "windowSize": 280
    },
    {
      "id": "w_484",
      "type": "window",
      "content": "Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    ReplicaSetUpdated\nOldReplicaSets:     nginx-deployment-1564180365 (3/3 replicas created)\nNewReplicaSet:      nginx-deployment-3066724191 (1/1 replicas created)\nEvents:\n  FirstSeen LastSeen    Count   From                    SubObjectPath   Type        Reason              Message\n  --------- --------    -----   ----                    -------------   --------    ------              -------\n  1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n",
      "position": 720,
      "windowSize": 280
    },
    {
      "id": "w_485",
      "type": "window",
      "content": "                   -------------   --------    ------              -------\n  1m        1m          1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-2035384211 to 3\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 1\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n  21s       21s",
      "position": 900,
      "windowSize": 280
    },
    {
      "id": "w_486",
      "type": "window",
      "content": " {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 2\n  22s       22s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 2\n  21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 1\n  21s       21s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n  13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n  13s       13s         1",
      "position": 1080,
      "windowSize": 280
    },
    {
      "id": "w_487",
      "type": "window",
      "content": "         Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-1564180365 to 3\n  13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled down replica set nginx-deployment-2035384211 to 0\n  13s       13s         1       {deployment-controller }                Normal      ScalingReplicaSet   Scaled up replica set nginx-deployment-3066724191 to 1\n```\n\nTo fix this, you need to rollback to a previous revision of Deployment that is stable.",
      "position": 1260,
      "windowSize": 154
    },
    {
      "id": "sw_488",
      "type": "sentence_window",
      "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping. By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit). {{< note >}} A Deployment's revision is created when",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_489",
      "type": "sentence_window",
      "content": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit). {{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered. This means that the new revision is created if and only if the Deployment's Pod",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_490",
      "type": "sentence_window",
      "content": "{{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered. This means that the new revision is created if and only if the Deployment's Pod template (`. template`) is changed, for example if you update the labels or container images of the template.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_491",
      "type": "sentence_window",
      "content": "This means that the new revision is created if and only if the Deployment's Pod template (`. template`) is changed, for example if you update the labels or container images of the template. Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_492",
      "type": "sentence_window",
      "content": "template`) is changed, for example if you update the labels or container images of the template. Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_493",
      "type": "sentence_window",
      "content": "Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling. This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back. {{< /note >}}",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_494",
      "type": "sentence_window",
      "content": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back. {{< /note >}} Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_495",
      "type": "sentence_window",
      "content": "{{< /note >}} Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_496",
      "type": "sentence_window",
      "content": "Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16. 1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` The rollout gets stuck.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_497",
      "type": "sentence_window",
      "content": "1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` The rollout gets stuck. You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_498",
      "type": "sentence_window",
      "content": "apps/nginx-deployment image updated ``` The rollout gets stuck. You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ``` Press Ctrl-C to stop the above rollout status watch.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_499",
      "type": "sentence_window",
      "content": "You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated... ``` Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts, [read more",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_500",
      "type": "sentence_window",
      "content": "``` Press Ctrl-C to stop the above rollout status watch. For more information on stuck rollouts, [read more here](#deployment-status). You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_501",
      "type": "sentence_window",
      "content": "For more information on stuck rollouts, [read more here](#deployment-status). You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3 and the number of new replicas (from `nginx-deployment-3066724191`) is 1.",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_502",
      "type": "sentence_window",
      "content": "You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3 and the number of new replicas (from `nginx-deployment-3066724191`) is 1. ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s",
      "position": 14,
      "sentenceCount": 3
    },
    {
      "id": "sw_503",
      "type": "sentence_window",
      "content": "and the number of new replicas (from `nginx-deployment-3066724191`) is 1. ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new",
      "position": 15,
      "sentenceCount": 3
    },
    {
      "id": "sw_504",
      "type": "sentence_window",
      "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop. ```shell kubectl get pods ```",
      "position": 16,
      "sentenceCount": 3
    },
    {
      "id": "sw_505",
      "type": "sentence_window",
      "content": "```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s nginx-deployment-3066724191-08mng 0/1 ImagePullBackOff 0 6s ``` {{< note >}} The Deployment",
      "position": 17,
      "sentenceCount": 3
    },
    {
      "id": "sw_506",
      "type": "sentence_window",
      "content": "and stops scaling up the new ReplicaSet. This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%.",
      "position": 18,
      "sentenceCount": 3
    },
    {
      "id": "sw_507",
      "type": "sentence_window",
      "content": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified. Kubernetes by default sets the value to 25%. {{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar",
      "position": 19,
      "sentenceCount": 3
    },
    {
      "id": "sw_508",
      "type": "sentence_window",
      "content": "Kubernetes by default sets the value to 25%. {{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx Replicas: 3 desired | 1 updated | 4 total |",
      "position": 20,
      "sentenceCount": 2
    },
    {
      "id": "sc_509",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
      "position": 0
    },
    {
      "id": "sc_510",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: Sometimes, you may want to rollback a Deployment; ...] By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit).",
      "position": 1
    },
    {
      "id": "sc_511",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: By default, all of the Deployment's rollout histor...] {{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered.",
      "position": 2
    },
    {
      "id": "sc_512",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: {{< note >}} A Deployment's revision is created wh...] This means that the new revision is created if and only if the Deployment's Pod template (`.",
      "position": 3
    },
    {
      "id": "sc_513",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: This means that the new revision is created if and...] template`) is changed, for example if you update the labels or container images of the template.",
      "position": 4
    },
    {
      "id": "sc_514",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: template`) is changed, for example if you update t...] Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
      "position": 5
    },
    {
      "id": "sc_515",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: Other updates, such as scaling the Deployment, do ...] This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back.",
      "position": 6
    },
    {
      "id": "sc_516",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: This means that when you roll back to an earlier r...] {{< /note >}}",
      "position": 7
    },
    {
      "id": "sc_517",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
      "position": 8
    },
    {
      "id": "sc_518",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: Suppose that you made a typo while updating the De...] 1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment.",
      "position": 9
    },
    {
      "id": "sc_519",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: 1`: ```shell kubectl set image deployment/nginx-de...] apps/nginx-deployment image updated ``` The rollout gets stuck.",
      "position": 10
    },
    {
      "id": "sc_520",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: apps/nginx-deployment image updated ``` The rollou...] You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
      "position": 11
    },
    {
      "id": "sc_521",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: You can verify it by checking the rollout status: ...] ``` Press Ctrl-C to stop the above rollout status watch.",
      "position": 12
    },
    {
      "id": "sc_522",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: ``` Press Ctrl-C to stop the above rollout status ...] For more information on stuck rollouts, [read more here](#deployment-status).",
      "position": 13
    },
    {
      "id": "sc_523",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: For more information on stuck rollouts, [read more...] You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3",
      "position": 14
    },
    {
      "id": "sc_524",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: You see that the number of old replicas (adding th...] and the number of new replicas (from `nginx-deployment-3066724191`) is 1.",
      "position": 15
    },
    {
      "id": "sc_525",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: and the number of new replicas (from `nginx-deploy...] ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1",
      "position": 16
    },
    {
      "id": "sc_526",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: ```shell kubectl get rs ``` The output is similar ...] ```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s",
      "position": 17
    },
    {
      "id": "sc_527",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: ```shell kubectl get pods ``` The output is simila...] and stops scaling up the new ReplicaSet.",
      "position": 18
    },
    {
      "id": "sc_528",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: and stops scaling up the new ReplicaSet....] This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
      "position": 19
    },
    {
      "id": "sc_529",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: This depends on the rollingUpdate parameters (`max...] Kubernetes by default sets the value to 25%.",
      "position": 20
    },
    {
      "id": "sc_530",
      "type": "sentence_context",
      "content": "[Rolling Back a Deployment] [Previous: Kubernetes by default sets the value to 25%....] {{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx",
      "position": 21
    },
    {
      "id": "s_531",
      "type": "sentence",
      "content": "Sometimes, you may want to rollback a Deployment; for example, when the Deployment is not stable, such as crash looping.",
      "position": 0
    },
    {
      "id": "s_532",
      "type": "sentence",
      "content": "By default, all of the Deployment's rollout history is kept in the system so that you can rollback anytime you want (you can change that by modifying revision history limit).",
      "position": 1
    },
    {
      "id": "s_533",
      "type": "sentence",
      "content": "{{< note >}} A Deployment's revision is created when a Deployment's rollout is triggered.",
      "position": 2
    },
    {
      "id": "s_534",
      "type": "sentence",
      "content": "This means that the new revision is created if and only if the Deployment's Pod template (`.",
      "position": 3
    },
    {
      "id": "s_535",
      "type": "sentence",
      "content": "template`) is changed, for example if you update the labels or container images of the template.",
      "position": 4
    },
    {
      "id": "s_536",
      "type": "sentence",
      "content": "Other updates, such as scaling the Deployment, do not create a Deployment revision, so that you can facilitate simultaneous manual- or auto-scaling.",
      "position": 5
    },
    {
      "id": "s_537",
      "type": "sentence",
      "content": "This means that when you roll back to an earlier revision, only the Deployment's Pod template part is rolled back.",
      "position": 6
    },
    {
      "id": "s_538",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 7
    },
    {
      "id": "s_539",
      "type": "sentence",
      "content": "Suppose that you made a typo while updating the Deployment, by putting the image name as `nginx:1.161` instead of `nginx:1.16.",
      "position": 8
    },
    {
      "id": "s_540",
      "type": "sentence",
      "content": "1`: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` The output is similar to this: ``` deployment.",
      "position": 9
    },
    {
      "id": "s_541",
      "type": "sentence",
      "content": "apps/nginx-deployment image updated ``` The rollout gets stuck.",
      "position": 10
    },
    {
      "id": "s_542",
      "type": "sentence",
      "content": "You can verify it by checking the rollout status: ```shell kubectl rollout status deployment/nginx-deployment ``` The output is similar to this: ``` Waiting for rollout to finish: 1 out of 3 new replicas have been updated...",
      "position": 11
    },
    {
      "id": "s_543",
      "type": "sentence",
      "content": "``` Press Ctrl-C to stop the above rollout status watch.",
      "position": 12
    },
    {
      "id": "s_544",
      "type": "sentence",
      "content": "For more information on stuck rollouts, [read more here](#deployment-status).",
      "position": 13
    },
    {
      "id": "s_545",
      "type": "sentence",
      "content": "You see that the number of old replicas (adding the replica count from `nginx-deployment-1564180365` and `nginx-deployment-2035384211`) is 3",
      "position": 14
    },
    {
      "id": "s_546",
      "type": "sentence",
      "content": "and the number of new replicas (from `nginx-deployment-3066724191`) is 1.",
      "position": 15
    },
    {
      "id": "s_547",
      "type": "sentence",
      "content": "```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1564180365 3 3 3 25s nginx-deployment-2035384211 0 0 0 36s nginx-deployment-3066724191 1 1 0 6s ``` Looking at the Pods created, you see that 1 Pod created by new ReplicaSet is stuck in an image pull loop.",
      "position": 16
    },
    {
      "id": "s_548",
      "type": "sentence",
      "content": "```shell kubectl get pods ``` The output is similar to this: ``` NAME READY STATUS RESTARTS AGE nginx-deployment-1564180365-70iae 1/1 Running 0 25s nginx-deployment-1564180365-jbqqo 1/1 Running 0 25s nginx-deployment-1564180365-hysrc 1/1 Running 0 25s nginx-deployment-3066724191-08mng 0/1 ImagePullBackOff 0 6s ``` {{< note >}} The Deployment controller stops the bad rollout automatically",
      "position": 17
    },
    {
      "id": "s_549",
      "type": "sentence",
      "content": "and stops scaling up the new ReplicaSet.",
      "position": 18
    },
    {
      "id": "s_550",
      "type": "sentence",
      "content": "This depends on the rollingUpdate parameters (`maxUnavailable` specifically) that you have specified.",
      "position": 19
    },
    {
      "id": "s_551",
      "type": "sentence",
      "content": "Kubernetes by default sets the value to 25%.",
      "position": 20
    },
    {
      "id": "s_552",
      "type": "sentence",
      "content": "{{< /note >}} Get the description of the Deployment: ```shell kubectl describe deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Tue, 15 Mar 2016 14:48:04 -0700 Labels: app=nginx Selector: app=nginx Replicas: 3 desired | 1 updated | 4 total | 3 available | 1 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.161 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True ReplicaSetUpdated OldReplicaSets: nginx-deployment-1564180365 (3/3 replicas created) NewReplicaSet: nginx-deployment-3066724191 (1/1 replicas created) Events: FirstSeen LastSeen Count From SubObjectPath Type Reason Message --------- -------- ----- ---- ------------- -------- ------ ------- 1m 1m 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-2035384211 to 3 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 1 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 2 22s 22s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 2 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 1 21s 21s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-1564180365 to 3 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled down replica set nginx-deployment-2035384211 to 0 13s 13s 1 {deployment-controller } Normal ScalingReplicaSet Scaled up replica set nginx-deployment-3066724191 to 1 ``` To fix this, you need to rollback to a previous revision of Deployment that is stable.",
      "position": 21
    },
    {
      "id": "w_553",
      "type": "window",
      "content": "Follow the steps given below to check the rollout history: First, check the revisions of this Deployment:\n```shell\nkubectl rollout history deployment/nginx-deployment\n```\nThe output is similar to this:\n```\ndeployments \"nginx-deployment\"\nREVISION    CHANGE-CAUSE\n1           kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml\n2           kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n3           kubectl set image deployment/nginx-deployment nginx=nginx:1.161\n```\n\n`CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by:\n\n* Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.io/change-cause=\"image updated to 1.16.1\"`\n* Manually editing the manifest of the resource.\n To see the details of each revision, run:\n```shell\nkubectl rollout history deployment/nginx-deployment --revision=2\n```\n\nThe output is similar to this:\n```\ndeployments \"nginx-deployment\" revision 2\n  Labels:       app=nginx\n          pod-template-hash=1159050644\n  Annotations:  kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n  Containers:\n   nginx:\n    Image:      nginx:1.16.1\n    Port:       80/TCP\n     QoS Tier:\n        cpu:      BestEffort\n        memory:   BestEffort\n    Environment Variables:      <none>\n  No volumes.\n```",
      "position": 0,
      "windowSize": 227
    },
    {
      "id": "w_554",
      "type": "window",
      "content": " 80/TCP\n     QoS Tier:\n        cpu:      BestEffort\n        memory:   BestEffort\n    Environment Variables:      <none>\n  No volumes.\n```",
      "position": 180,
      "windowSize": 47
    },
    {
      "id": "sw_555",
      "type": "sentence_window",
      "content": "Follow the steps given below to check the rollout history: First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_556",
      "type": "sentence_window",
      "content": "First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2 kubectl set image deployment/nginx-deployment",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_557",
      "type": "sentence_window",
      "content": "1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes. io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_558",
      "type": "sentence_window",
      "content": "io/change-cause` to its revisions upon creation. You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_559",
      "type": "sentence_window",
      "content": "You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes. io/change-cause=\"image updated to 1.16. 1\"` * Manually editing the manifest of the resource.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_560",
      "type": "sentence_window",
      "content": "io/change-cause=\"image updated to 1.16. 1\"` * Manually editing the manifest of the resource. To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_561",
      "type": "sentence_window",
      "content": "1\"` * Manually editing the manifest of the resource. To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes. io/change-cause=kubectl",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_562",
      "type": "sentence_window",
      "content": "To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_563",
      "type": "sentence_window",
      "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_564",
      "type": "sentence_window",
      "content": "1 Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
      "position": 9,
      "sentenceCount": 2
    },
    {
      "id": "sc_565",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] Follow the steps given below to check the rollout history:",
      "position": 0
    },
    {
      "id": "sc_566",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: Follow the steps given below to check the rollout ...] First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply",
      "position": 1
    },
    {
      "id": "sc_567",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: First, check the revisions of this Deployment: ```...] 1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
      "position": 2
    },
    {
      "id": "sc_568",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: 1 3 kubectl set image deployment/nginx-deployment ...] io/change-cause` to its revisions upon creation.",
      "position": 3
    },
    {
      "id": "sc_569",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: io/change-cause` to its revisions upon creation....] You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
      "position": 4
    },
    {
      "id": "sc_570",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: You can specify the`CHANGE-CAUSE` message by: * An...] io/change-cause=\"image updated to 1.16.",
      "position": 5
    },
    {
      "id": "sc_571",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: io/change-cause=\"image updated to 1.16....] 1\"` * Manually editing the manifest of the resource.",
      "position": 6
    },
    {
      "id": "sc_572",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: 1\"` * Manually editing the manifest of the resourc...] To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx",
      "position": 7
    },
    {
      "id": "sc_573",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: To see the details of each revision, run: ```shell...] io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 8
    },
    {
      "id": "sc_574",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: io/change-cause=kubectl set image deployment/nginx...] 1 Containers: nginx: Image: nginx:1.16.",
      "position": 9
    },
    {
      "id": "sc_575",
      "type": "sentence_context",
      "content": "[Checking Rollout History of a Deployment] [Previous: 1 Containers: nginx: Image: nginx:1.16....] 1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
      "position": 10
    },
    {
      "id": "s_576",
      "type": "sentence",
      "content": "Follow the steps given below to check the rollout history:",
      "position": 0
    },
    {
      "id": "s_577",
      "type": "sentence",
      "content": "First, check the revisions of this Deployment: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx-deployment\" REVISION CHANGE-CAUSE 1 kubectl apply --filename=https://k8s.io/examples/controllers/nginx-deployment.yaml 2 kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 1
    },
    {
      "id": "s_578",
      "type": "sentence",
      "content": "1 3 kubectl set image deployment/nginx-deployment nginx=nginx:1.161 ``` `CHANGE-CAUSE` is copied from the Deployment annotation `kubernetes.",
      "position": 2
    },
    {
      "id": "s_579",
      "type": "sentence",
      "content": "io/change-cause` to its revisions upon creation.",
      "position": 3
    },
    {
      "id": "s_580",
      "type": "sentence",
      "content": "You can specify the`CHANGE-CAUSE` message by: * Annotating the Deployment with `kubectl annotate deployment/nginx-deployment kubernetes.",
      "position": 4
    },
    {
      "id": "s_581",
      "type": "sentence",
      "content": "io/change-cause=\"image updated to 1.16.",
      "position": 5
    },
    {
      "id": "s_582",
      "type": "sentence",
      "content": "1\"` * Manually editing the manifest of the resource.",
      "position": 6
    },
    {
      "id": "s_583",
      "type": "sentence",
      "content": "To see the details of each revision, run: ```shell kubectl rollout history deployment/nginx-deployment --revision=2 ``` The output is similar to this: ``` deployments \"nginx-deployment\" revision 2 Labels: app=nginx pod-template-hash=1159050644 Annotations: kubernetes.",
      "position": 7
    },
    {
      "id": "s_584",
      "type": "sentence",
      "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 8
    },
    {
      "id": "s_585",
      "type": "sentence",
      "content": "1 Containers: nginx: Image: nginx:1.16.",
      "position": 9
    },
    {
      "id": "s_586",
      "type": "sentence",
      "content": "1 Port: 80/TCP QoS Tier: cpu: BestEffort memory: BestEffort Environment Variables: <none> No volumes.",
      "position": 10
    },
    {
      "id": "w_587",
      "type": "window",
      "content": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. Now you've decided to undo the current rollout and rollback to the previous revision:\n```shell\nkubectl rollout undo deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment rolled back\n```\nAlternatively, you can rollback to a specific revision by specifying it with `--to-revision`:\n\n```shell\nkubectl rollout undo deployment/nginx-deployment --to-revision=2\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment rolled back\n```\n\nFor more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).\n\nThe Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event\nfor rolling back to revision 2 is generated from Deployment controller.\n Check if the rollback was successful and the Deployment is running as expected, run:\n```shell\nkubectl get deployment nginx-deployment\n```\n\nThe output is similar to this:\n```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           30m\n``` Get the description of the Deployment:\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=4\n            ",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_588",
      "type": "window",
      "content": "30m\n``` Get the description of the Deployment:\n```shell\nkubectl describe deployment nginx-deployment\n```\nThe output is similar to this:\n```\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Sun, 02 Sep 2018 18:17:55 -0500\nLabels:                 app=nginx\nAnnotations:            deployment.kubernetes.io/revision=4\n                        kubernetes.io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\nSelector:               app=nginx\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.16.1\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----       ",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_589",
      "type": "window",
      "content": "max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.16.1\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   nginx-deployment-c4747d96c (3/3 replicas created)\nEvents:\n  Type    Reason              Age   From                   Message\n  ----    ------              ----  ----                   -------\n  Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n  Normal  ScalingReplicaSet   11m",
      "position": 360,
      "windowSize": 280
    },
    {
      "id": "w_590",
      "type": "window",
      "content": "   ------              ----  ----                   -------\n  Normal  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0\n  Normal  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1\n  Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n  Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n```",
      "position": 540,
      "windowSize": 218
    },
    {
      "id": "w_591",
      "type": "window",
      "content": "nginx-deployment-595696685f to 1\n  Normal  DeploymentRollback  15s   deployment-controller  Rolled back deployment \"nginx-deployment\" to revision 2\n  Normal  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment-595696685f to 0\n```",
      "position": 720,
      "windowSize": 38
    },
    {
      "id": "sw_592",
      "type": "sentence_window",
      "content": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2. Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_593",
      "type": "sentence_window",
      "content": "Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_594",
      "type": "sentence_window",
      "content": "apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ``` deployment. apps/nginx-deployment rolled back ``` For more details about rollout related commands, read",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_595",
      "type": "sentence_window",
      "content": "apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout). The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_596",
      "type": "sentence_window",
      "content": "The Deployment is now rolled back to a previous stable revision. As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller. Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_597",
      "type": "sentence_window",
      "content": "As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller. Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_598",
      "type": "sentence_window",
      "content": "Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ``` Get the description of the Deployment: ```shell kubectl describe deployment nginx-deployment ``` The",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_599",
      "type": "sentence_window",
      "content": "kubernetes. io/revision=4 kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_600",
      "type": "sentence_window",
      "content": "io/revision=4 kubernetes. io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers:",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_601",
      "type": "sentence_window",
      "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_602",
      "type": "sentence_window",
      "content": "1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16. 1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes:",
      "position": 10,
      "sentenceCount": 2
    },
    {
      "id": "sc_603",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
      "position": 0
    },
    {
      "id": "sc_604",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: Follow the steps given below to rollback the Deplo...] Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
      "position": 1
    },
    {
      "id": "sc_605",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: Now you've decided to undo the current rollout and...] apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ```",
      "position": 2
    },
    {
      "id": "sc_606",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: apps/nginx-deployment rolled back ``` Alternativel...] apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
      "position": 3
    },
    {
      "id": "sc_607",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: apps/nginx-deployment rolled back ``` For more det...] The Deployment is now rolled back to a previous stable revision.",
      "position": 4
    },
    {
      "id": "sc_608",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: The Deployment is now rolled back to a previous st...] As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller.",
      "position": 5
    },
    {
      "id": "sc_609",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: As you can see, a `DeploymentRollback` event for r...] Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ```",
      "position": 6
    },
    {
      "id": "sc_610",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: Check if the rollback was successful and the Deplo...] kubernetes.",
      "position": 7
    },
    {
      "id": "sc_611",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] io/revision=4 kubernetes.",
      "position": 8
    },
    {
      "id": "sc_612",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: io/revision=4 kubernetes....] io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 9
    },
    {
      "id": "sc_613",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: io/change-cause=kubectl set image deployment/nginx...] 1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers:",
      "position": 10
    },
    {
      "id": "sc_614",
      "type": "sentence_context",
      "content": "[Rolling Back to a Previous Revision] [Previous: 1 Selector: app=nginx Replicas: 3 desired | 3 upda...] 1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none>",
      "position": 11
    },
    {
      "id": "s_615",
      "type": "sentence",
      "content": "Follow the steps given below to rollback the Deployment from the current version to the previous version, which is version 2.",
      "position": 0
    },
    {
      "id": "s_616",
      "type": "sentence",
      "content": "Now you've decided to undo the current rollout and rollback to the previous revision: ```shell kubectl rollout undo deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
      "position": 1
    },
    {
      "id": "s_617",
      "type": "sentence",
      "content": "apps/nginx-deployment rolled back ``` Alternatively, you can rollback to a specific revision by specifying it with `--to-revision`: ```shell kubectl rollout undo deployment/nginx-deployment --to-revision=2 ``` The output is similar to this: ``` deployment.",
      "position": 2
    },
    {
      "id": "s_618",
      "type": "sentence",
      "content": "apps/nginx-deployment rolled back ``` For more details about rollout related commands, read [`kubectl rollout`](/docs/reference/generated/kubectl/kubectl-commands#rollout).",
      "position": 3
    },
    {
      "id": "s_619",
      "type": "sentence",
      "content": "The Deployment is now rolled back to a previous stable revision.",
      "position": 4
    },
    {
      "id": "s_620",
      "type": "sentence",
      "content": "As you can see, a `DeploymentRollback` event for rolling back to revision 2 is generated from Deployment controller.",
      "position": 5
    },
    {
      "id": "s_621",
      "type": "sentence",
      "content": "Check if the rollback was successful and the Deployment is running as expected, run: ```shell kubectl get deployment nginx-deployment ``` The output is similar to this: ``` NAME READY UP-TO-DATE AVAILABLE AGE nginx-deployment 3/3 3 3 30m ``` Get the description of the Deployment: ```shell kubectl describe deployment nginx-deployment ``` The output is similar to this: ``` Name: nginx-deployment Namespace: default CreationTimestamp: Sun, 02 Sep 2018 18:17:55 -0500 Labels: app=nginx Annotations: deployment.",
      "position": 6
    },
    {
      "id": "s_622",
      "type": "sentence",
      "content": "kubernetes.",
      "position": 7
    },
    {
      "id": "s_623",
      "type": "sentence",
      "content": "io/revision=4 kubernetes.",
      "position": 8
    },
    {
      "id": "s_624",
      "type": "sentence",
      "content": "io/change-cause=kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 9
    },
    {
      "id": "s_625",
      "type": "sentence",
      "content": "1 Selector: app=nginx Replicas: 3 desired | 3 updated | 3 total | 3 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: app=nginx Containers: nginx: Image: nginx:1.16.",
      "position": 10
    },
    {
      "id": "s_626",
      "type": "sentence",
      "content": "1 Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Conditions: Type Status Reason ---- ------ ------ Available True MinimumReplicasAvailable Progressing True NewReplicaSetAvailable OldReplicaSets: <none> NewReplicaSet: nginx-deployment-c4747d96c (3/3 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 12m deployment-controller Scaled up replica set nginx-deployment-75675f5897 to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 2 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 1 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-c4747d96c to 3 Normal ScalingReplicaSet 11m deployment-controller Scaled down replica set nginx-deployment-75675f5897 to 0 Normal ScalingReplicaSet 11m deployment-controller Scaled up replica set nginx-deployment-595696685f to 1 Normal DeploymentRollback 15s deployment-controller Rolled back deployment \"nginx-deployment\" to revision 2 Normal ScalingReplicaSet 15s deployment-controller Scaled down replica set nginx-deployment-595696685f to 0 ```",
      "position": 11
    },
    {
      "id": "w_627",
      "type": "window",
      "content": "You can scale a Deployment by using the following command: The output is similar to this: Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled\nin your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of\nPods you want to run based on the CPU utilization of your existing Pods. The output is similar to this:",
      "position": 0,
      "windowSize": 60
    },
    {
      "id": "sw_628",
      "type": "sentence_window",
      "content": "You can scale a Deployment by using the following command: The output is similar to this: Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_629",
      "type": "sentence_window",
      "content": "The output is similar to this: Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods. The output is",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_630",
      "type": "sentence_window",
      "content": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods. The output is similar to this:",
      "position": 2,
      "sentenceCount": 2
    },
    {
      "id": "sc_631",
      "type": "sentence_context",
      "content": "[Scaling a Deployment] You can scale a Deployment by using the following command:",
      "position": 0
    },
    {
      "id": "sc_632",
      "type": "sentence_context",
      "content": "[Scaling a Deployment] [Previous: You can scale a Deployment by using the following ...] The output is similar to this:",
      "position": 1
    },
    {
      "id": "sc_633",
      "type": "sentence_context",
      "content": "[Scaling a Deployment] [Previous: The output is similar to this:...] Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of",
      "position": 2
    },
    {
      "id": "sc_634",
      "type": "sentence_context",
      "content": "[Scaling a Deployment] [Previous: Assuming [horizontal Pod autoscaling](/docs/tasks/...] The output is similar to this:",
      "position": 3
    },
    {
      "id": "s_635",
      "type": "sentence",
      "content": "You can scale a Deployment by using the following command:",
      "position": 0
    },
    {
      "id": "s_636",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 1
    },
    {
      "id": "s_637",
      "type": "sentence",
      "content": "Assuming [horizontal Pod autoscaling](/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/) is enabled in your cluster, you can set up an autoscaler for your Deployment and choose the minimum and maximum number of Pods you want to run based on the CPU utilization of your existing Pods.",
      "position": 2
    },
    {
      "id": "s_638",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 3
    },
    {
      "id": "w_639",
      "type": "window",
      "content": "RollingUpdate Deployments support running multiple versions of an application at the same time. When you\nor an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress\nor paused), the Deployment controller balances the additional replicas in the existing active\nReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. Ensure that the 10 replicas in your Deployment are running.\n```shell\nkubectl get deploy\n```\nThe output is similar to this:\n\n```\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment     10        10        10           10          50s\n```\n You update to a new image which happens to be unresolvable from inside the cluster.\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:sometag\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n```shell\nkubectl get rs\n```\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   5         5         0     ",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_640",
      "type": "window",
      "content": "to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191, but it's blocked due to the\n`maxUnavailable` requirement that you mentioned above. Check out the rollout status:\n```shell\nkubectl get rs\n```\nThe output is similar to this:\n```\nNAME                          DESIRED   CURRENT   READY     AGE\nnginx-deployment-1989198191   5         5         0         9s\nnginx-deployment-618515232    8         8         8         1m\n```\n Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas\nto 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using\nproportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run: The output is similar to this: The rollout status confirms how the",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_641",
      "type": "window",
      "content": "ReplicaSet. With proportional scaling, you\nspread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the\nmost replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the\nReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the\nnew ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming\nthe new replicas become healthy. To confirm this, run: The output is similar to this: The rollout status confirms how the replicas were added to each ReplicaSet. The output is similar to this:",
      "position": 360,
      "windowSize": 112
    },
    {
      "id": "sw_642",
      "type": "sentence_window",
      "content": "RollingUpdate Deployments support running multiple versions of an application at the same time. When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_643",
      "type": "sentence_window",
      "content": "When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk. This is called *proportional scaling*. For example, you are running a",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_644",
      "type": "sentence_window",
      "content": "This is called *proportional scaling*. For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. Ensure that the 10 replicas in your Deployment are running.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_645",
      "type": "sentence_window",
      "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2. Ensure that the 10 replicas in your Deployment are running. ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_646",
      "type": "sentence_window",
      "content": "Ensure that the 10 replicas in your Deployment are running. ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster. ```shell kubectl set image deployment/nginx-deployment",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_647",
      "type": "sentence_window",
      "content": "```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster. ```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ```",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_648",
      "type": "sentence_window",
      "content": "```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191 but it's blocked due to the `maxUnavailable` requirement that you mentioned above.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_649",
      "type": "sentence_window",
      "content": "apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191 but it's blocked due to the `maxUnavailable` requirement that you mentioned above. Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_650",
      "type": "sentence_window",
      "content": "but it's blocked due to the `maxUnavailable` requirement that you mentioned above. Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along. The",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_651",
      "type": "sentence_window",
      "content": "Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along. The autoscaler increments the Deployment replicas to 15. The Deployment controller needs",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_652",
      "type": "sentence_window",
      "content": "The autoscaler increments the Deployment replicas to 15. The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_653",
      "type": "sentence_window",
      "content": "The Deployment controller needs to decide where to add these new 5 replicas. If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you spread the additional replicas across all ReplicaSets.",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_654",
      "type": "sentence_window",
      "content": "If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet. With proportional scaling, you spread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas.",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_655",
      "type": "sentence_window",
      "content": "With proportional scaling, you spread the additional replicas across all ReplicaSets. Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the ReplicaSet with the most replicas.",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_656",
      "type": "sentence_window",
      "content": "Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas. Any leftovers are added to the ReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up.",
      "position": 14,
      "sentenceCount": 3
    },
    {
      "id": "sw_657",
      "type": "sentence_window",
      "content": "Any leftovers are added to the ReplicaSet with the most replicas. ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet.",
      "position": 15,
      "sentenceCount": 3
    },
    {
      "id": "sw_658",
      "type": "sentence_window",
      "content": "ReplicaSets with zero replicas are not scaled up. In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy.",
      "position": 16,
      "sentenceCount": 3
    },
    {
      "id": "sw_659",
      "type": "sentence_window",
      "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet. The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy. To confirm this, run:",
      "position": 17,
      "sentenceCount": 3
    },
    {
      "id": "sw_660",
      "type": "sentence_window",
      "content": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy. To confirm this, run: The output is similar to this:",
      "position": 18,
      "sentenceCount": 3
    },
    {
      "id": "sw_661",
      "type": "sentence_window",
      "content": "To confirm this, run: The output is similar to this: The rollout status confirms how the replicas were added to each ReplicaSet.",
      "position": 19,
      "sentenceCount": 3
    },
    {
      "id": "sw_662",
      "type": "sentence_window",
      "content": "The output is similar to this: The rollout status confirms how the replicas were added to each ReplicaSet. The output is similar to this:",
      "position": 20,
      "sentenceCount": 3
    },
    {
      "id": "sw_663",
      "type": "sentence_window",
      "content": "The rollout status confirms how the replicas were added to each ReplicaSet. The output is similar to this:",
      "position": 21,
      "sentenceCount": 2
    },
    {
      "id": "sc_664",
      "type": "sentence_context",
      "content": "[Proportional scaling] RollingUpdate Deployments support running multiple versions of an application at the same time.",
      "position": 0
    },
    {
      "id": "sc_665",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: RollingUpdate Deployments support running multiple...] When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to",
      "position": 1
    },
    {
      "id": "sc_666",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: When you or an autoscaler scales a RollingUpdate D...] This is called *proportional scaling*.",
      "position": 2
    },
    {
      "id": "sc_667",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: This is called *proportional scaling*....] For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
      "position": 3
    },
    {
      "id": "sc_668",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: For example, you are running a Deployment with 10 ...] Ensure that the 10 replicas in your Deployment are running.",
      "position": 4
    },
    {
      "id": "sc_669",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: Ensure that the 10 replicas in your Deployment are...] ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster.",
      "position": 5
    },
    {
      "id": "sc_670",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: ```shell kubectl get deploy ``` The output is simi...] ```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment.",
      "position": 6
    },
    {
      "id": "sc_671",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: ```shell kubectl set image deployment/nginx-deploy...] apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191",
      "position": 7
    },
    {
      "id": "sc_672",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: apps/nginx-deployment image updated ``` The image ...] but it's blocked due to the `maxUnavailable` requirement that you mentioned above.",
      "position": 8
    },
    {
      "id": "sc_673",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: but it's blocked due to the `maxUnavailable` requi...] Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along.",
      "position": 9
    },
    {
      "id": "sc_674",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: Check out the rollout status: ```shell kubectl get...] The autoscaler increments the Deployment replicas to 15.",
      "position": 10
    },
    {
      "id": "sc_675",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: The autoscaler increments the Deployment replicas ...] The Deployment controller needs to decide where to add these new 5 replicas.",
      "position": 11
    },
    {
      "id": "sc_676",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: The Deployment controller needs to decide where to...] If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet.",
      "position": 12
    },
    {
      "id": "sc_677",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: If you weren't using proportional scaling, all 5 o...] With proportional scaling, you spread the additional replicas across all ReplicaSets.",
      "position": 13
    },
    {
      "id": "sc_678",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: With proportional scaling, you spread the addition...] Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas.",
      "position": 14
    },
    {
      "id": "sc_679",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: Bigger proportions go to the ReplicaSets with the ...] Any leftovers are added to the ReplicaSet with the most replicas.",
      "position": 15
    },
    {
      "id": "sc_680",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: Any leftovers are added to the ReplicaSet with the...] ReplicaSets with zero replicas are not scaled up.",
      "position": 16
    },
    {
      "id": "sc_681",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: ReplicaSets with zero replicas are not scaled up....] In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet.",
      "position": 17
    },
    {
      "id": "sc_682",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: In our example above, 3 replicas are added to the ...] The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy.",
      "position": 18
    },
    {
      "id": "sc_683",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: The rollout process should eventually move all rep...] To confirm this, run:",
      "position": 19
    },
    {
      "id": "sc_684",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: To confirm this, run:...] The output is similar to this:",
      "position": 20
    },
    {
      "id": "sc_685",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: The output is similar to this:...] The rollout status confirms how the replicas were added to each ReplicaSet.",
      "position": 21
    },
    {
      "id": "sc_686",
      "type": "sentence_context",
      "content": "[Proportional scaling] [Previous: The rollout status confirms how the replicas were ...] The output is similar to this:",
      "position": 22
    },
    {
      "id": "s_687",
      "type": "sentence",
      "content": "RollingUpdate Deployments support running multiple versions of an application at the same time.",
      "position": 0
    },
    {
      "id": "s_688",
      "type": "sentence",
      "content": "When you or an autoscaler scales a RollingUpdate Deployment that is in the middle of a rollout (either in progress or paused), the Deployment controller balances the additional replicas in the existing active ReplicaSets (ReplicaSets with Pods) in order to mitigate risk.",
      "position": 1
    },
    {
      "id": "s_689",
      "type": "sentence",
      "content": "This is called *proportional scaling*.",
      "position": 2
    },
    {
      "id": "s_690",
      "type": "sentence",
      "content": "For example, you are running a Deployment with 10 replicas, [maxSurge](#max-surge)=3, and [maxUnavailable](#max-unavailable)=2.",
      "position": 3
    },
    {
      "id": "s_691",
      "type": "sentence",
      "content": "Ensure that the 10 replicas in your Deployment are running.",
      "position": 4
    },
    {
      "id": "s_692",
      "type": "sentence",
      "content": "```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx-deployment 10 10 10 10 50s ``` You update to a new image which happens to be unresolvable from inside the cluster.",
      "position": 5
    },
    {
      "id": "s_693",
      "type": "sentence",
      "content": "```shell kubectl set image deployment/nginx-deployment nginx=nginx:sometag ``` The output is similar to this: ``` deployment.",
      "position": 6
    },
    {
      "id": "s_694",
      "type": "sentence",
      "content": "apps/nginx-deployment image updated ``` The image update starts a new rollout with ReplicaSet nginx-deployment-1989198191",
      "position": 7
    },
    {
      "id": "s_695",
      "type": "sentence",
      "content": "but it's blocked due to the `maxUnavailable` requirement that you mentioned above.",
      "position": 8
    },
    {
      "id": "s_696",
      "type": "sentence",
      "content": "Check out the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-deployment-1989198191 5 5 0 9s nginx-deployment-618515232 8 8 8 1m ``` Then a new scaling request for the Deployment comes along.",
      "position": 9
    },
    {
      "id": "s_697",
      "type": "sentence",
      "content": "The autoscaler increments the Deployment replicas to 15.",
      "position": 10
    },
    {
      "id": "s_698",
      "type": "sentence",
      "content": "The Deployment controller needs to decide where to add these new 5 replicas.",
      "position": 11
    },
    {
      "id": "s_699",
      "type": "sentence",
      "content": "If you weren't using proportional scaling, all 5 of them would be added in the new ReplicaSet.",
      "position": 12
    },
    {
      "id": "s_700",
      "type": "sentence",
      "content": "With proportional scaling, you spread the additional replicas across all ReplicaSets.",
      "position": 13
    },
    {
      "id": "s_701",
      "type": "sentence",
      "content": "Bigger proportions go to the ReplicaSets with the most replicas and lower proportions go to ReplicaSets with less replicas.",
      "position": 14
    },
    {
      "id": "s_702",
      "type": "sentence",
      "content": "Any leftovers are added to the ReplicaSet with the most replicas.",
      "position": 15
    },
    {
      "id": "s_703",
      "type": "sentence",
      "content": "ReplicaSets with zero replicas are not scaled up.",
      "position": 16
    },
    {
      "id": "s_704",
      "type": "sentence",
      "content": "In our example above, 3 replicas are added to the old ReplicaSet and 2 replicas are added to the new ReplicaSet.",
      "position": 17
    },
    {
      "id": "s_705",
      "type": "sentence",
      "content": "The rollout process should eventually move all replicas to the new ReplicaSet, assuming the new replicas become healthy.",
      "position": 18
    },
    {
      "id": "s_706",
      "type": "sentence",
      "content": "To confirm this, run:",
      "position": 19
    },
    {
      "id": "s_707",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 20
    },
    {
      "id": "s_708",
      "type": "sentence",
      "content": "The rollout status confirms how the replicas were added to each ReplicaSet.",
      "position": 21
    },
    {
      "id": "s_709",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 22
    },
    {
      "id": "w_710",
      "type": "window",
      "content": "When you update a Deployment, or plan to, you can pause rollouts\nfor that Deployment before you trigger one or more updates. When\nyou're ready to apply those changes, you resume rollouts for the\nDeployment. This approach allows you to\napply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. For example, with a Deployment that was created:\n\nGet the Deployment details:\n```shell\nkubectl get deploy\n```\nThe output is similar to this:\n```\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx     3         3         3            3           1m\n```\nGet the rollout status:\n```shell\nkubectl get rs\n```\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   3         3         3         1m\n```\n Pause by running the following command:\n```shell\nkubectl rollout pause deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment paused\n```\n Then update the image of the Deployment:\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n Notice that no new rollout started:\n```shell\nkubectl rollout history deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployments \"nginx\"\nREVISION  CHANGE-CAUSE\n1   <none>\n``` Get the rollout status to verify that the existing ReplicaSet has not changed:\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME           ",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_711",
      "type": "window",
      "content": "      3         1m\n```\n Pause by running the following command:\n```shell\nkubectl rollout pause deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment paused\n```\n Then update the image of the Deployment:\n```shell\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment image updated\n```\n Notice that no new rollout started:\n```shell\nkubectl rollout history deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployments \"nginx\"\nREVISION  CHANGE-CAUSE\n1   <none>\n``` Get the rollout status to verify that the existing ReplicaSet has not changed:\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   3         3         3         2m\n```\n You can make as many updates as you wish, for example, update the resources that will be used:\n```shell\nkubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment resource requirements updated\n```\n\nThe initial state of the Deployment prior to pausing its rollout will continue its function, but new updates to\nthe Deployment will not have any effect as long as the Deployment rollout is paused.\n Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n```shell\nkubectl rollout resume deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment resumed\n``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.\n```shell\nkubectl get rs --watch\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY    ",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_712",
      "type": "window",
      "content": "Deployment prior to pausing its rollout will continue its function, but new updates to\nthe Deployment will not have any effect as long as the Deployment rollout is paused.\n Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates:\n```shell\nkubectl rollout resume deployment/nginx-deployment\n```\n\nThe output is similar to this:\n```\ndeployment.apps/nginx-deployment resumed\n``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.\n```shell\nkubectl get rs --watch\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   2         2         2         2m\nnginx-3926361531   2         2         0         6s\nnginx-3926361531   2         2         1         18s\nnginx-2142116321   1         2         2         2m\nnginx-2142116321   1         2         2         2m\nnginx-3926361531   3         2         1        ",
      "position": 360,
      "windowSize": 280
    },
    {
      "id": "w_713",
      "type": "window",
      "content": " 1         18s\nnginx-2142116321   1         2         2         2m\nnginx-2142116321   1         2         2         2m\nnginx-3926361531   3         2         1         18s\nnginx-3926361531   3         2         1         18s\nnginx-2142116321   1         1         1         2m\nnginx-3926361531   3         3         1         18s\nnginx-3926361531   3         3         2         19s\nnginx-2142116321   0         1         1         2m\nnginx-2142116321   0         1         1        ",
      "position": 540,
      "windowSize": 280
    },
    {
      "id": "w_714",
      "type": "window",
      "content": " 1         18s\nnginx-3926361531   3         3         2         19s\nnginx-2142116321   0         1         1         2m\nnginx-2142116321   0         1         1         2m\nnginx-2142116321   0         0         0         2m\nnginx-3926361531   3         3         3         20s\n``` Get the status of the latest rollout:\n```shell\nkubectl get rs\n```\n\nThe output is similar to this:\n```\nNAME               DESIRED   CURRENT   READY     AGE\nnginx-2142116321   0         0         0         2m\nnginx-3926361531   3         3         3         28s\n``` {{< note >}}\nYou cannot rollback a paused Deployment until you resume it.\n{{< /note >}}",
      "position": 720,
      "windowSize": 275
    },
    {
      "id": "w_715",
      "type": "window",
      "content": "         DESIRED   CURRENT   READY     AGE\nnginx-2142116321   0         0         0         2m\nnginx-3926361531   3         3         3         28s\n``` {{< note >}}\nYou cannot rollback a paused Deployment until you resume it.\n{{< /note >}}",
      "position": 900,
      "windowSize": 95
    },
    {
      "id": "sw_716",
      "type": "sentence_window",
      "content": "When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates. When you're ready to apply those changes, you resume rollouts for the Deployment. This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_717",
      "type": "sentence_window",
      "content": "When you're ready to apply those changes, you resume rollouts for the Deployment. This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ```",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_718",
      "type": "sentence_window",
      "content": "This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts. For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_719",
      "type": "sentence_window",
      "content": "For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_720",
      "type": "sentence_window",
      "content": "apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16. 1 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_721",
      "type": "sentence_window",
      "content": "1 ``` The output is similar to this: ``` deployment. apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_722",
      "type": "sentence_window",
      "content": "apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet has not changed: ```shell kubectl get rs ``` The output",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_723",
      "type": "sentence_window",
      "content": "for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ``` deployment. apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_724",
      "type": "sentence_window",
      "content": "apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused. Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_725",
      "type": "sentence_window",
      "content": "but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused. Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_726",
      "type": "sentence_window",
      "content": "Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment. apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_727",
      "type": "sentence_window",
      "content": "apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done. ```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_728",
      "type": "sentence_window",
      "content": "```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m nginx-2142116321 1 2 2 2m nginx-3926361531 3 2 1 18s nginx-3926361531 3 2 1 18s nginx-2142116321 1 1 1 2m nginx-3926361531 3 3 1 18s",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_729",
      "type": "sentence_window",
      "content": "{{< note >}} You cannot rollback a paused Deployment until you resume it. {{< /note >}}",
      "position": 13,
      "sentenceCount": 2
    },
    {
      "id": "sc_730",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates.",
      "position": 0
    },
    {
      "id": "sc_731",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: When you update a Deployment, or plan to, you can ...] When you're ready to apply those changes, you resume rollouts for the Deployment.",
      "position": 1
    },
    {
      "id": "sc_732",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: When you're ready to apply those changes, you resu...] This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
      "position": 2
    },
    {
      "id": "sc_733",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: This approach allows you to apply multiple fixes i...] For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx",
      "position": 3
    },
    {
      "id": "sc_734",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: For example, with a Deployment that was created: G...] apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 4
    },
    {
      "id": "sc_735",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment paused ``` Then update the i...] 1 ``` The output is similar to this: ``` deployment.",
      "position": 5
    },
    {
      "id": "sc_736",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: 1 ``` The output is similar to this: ``` deploymen...] apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\"",
      "position": 6
    },
    {
      "id": "sc_737",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment image updated ``` Notice tha...] for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ```",
      "position": 7
    },
    {
      "id": "sc_738",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: for example, update the resources that will be use...] apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function",
      "position": 8
    },
    {
      "id": "sc_739",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment resource requirements update...] but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused.",
      "position": 9
    },
    {
      "id": "sc_740",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: but new updates to the Deployment will not have an...] Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to",
      "position": 10
    },
    {
      "id": "sc_741",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: Eventually, resume the Deployment rollout and obse...] apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
      "position": 11
    },
    {
      "id": "sc_742",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: apps/nginx-deployment resumed ``` {{< glossary_too...] ```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s",
      "position": 12
    },
    {
      "id": "sc_743",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: ```shell kubectl get rs --watch ``` The output is ...] {{< note >}} You cannot rollback a paused Deployment until you resume it.",
      "position": 13
    },
    {
      "id": "sc_744",
      "type": "sentence_context",
      "content": "[Pausing and Resuming a rollout of a Deployment {#pausing-and-resuming-a-deployment}] [Previous: {{< note >}} You cannot rollback a paused Deployme...] {{< /note >}}",
      "position": 14
    },
    {
      "id": "s_745",
      "type": "sentence",
      "content": "When you update a Deployment, or plan to, you can pause rollouts for that Deployment before you trigger one or more updates.",
      "position": 0
    },
    {
      "id": "s_746",
      "type": "sentence",
      "content": "When you're ready to apply those changes, you resume rollouts for the Deployment.",
      "position": 1
    },
    {
      "id": "s_747",
      "type": "sentence",
      "content": "This approach allows you to apply multiple fixes in between pausing and resuming without triggering unnecessary rollouts.",
      "position": 2
    },
    {
      "id": "s_748",
      "type": "sentence",
      "content": "For example, with a Deployment that was created: Get the Deployment details: ```shell kubectl get deploy ``` The output is similar to this: ``` NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 1m ``` Get the rollout status: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 1m ``` Pause by running the following command: ```shell kubectl rollout pause deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
      "position": 3
    },
    {
      "id": "s_749",
      "type": "sentence",
      "content": "apps/nginx-deployment paused ``` Then update the image of the Deployment: ```shell kubectl set image deployment/nginx-deployment nginx=nginx:1.16.",
      "position": 4
    },
    {
      "id": "s_750",
      "type": "sentence",
      "content": "1 ``` The output is similar to this: ``` deployment.",
      "position": 5
    },
    {
      "id": "s_751",
      "type": "sentence",
      "content": "apps/nginx-deployment image updated ``` Notice that no new rollout started: ```shell kubectl rollout history deployment/nginx-deployment ``` The output is similar to this: ``` deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> ``` Get the rollout status to verify that the existing ReplicaSet has not changed: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 3 3 3 2m ``` You can make as many updates as you wish",
      "position": 6
    },
    {
      "id": "s_752",
      "type": "sentence",
      "content": "for example, update the resources that will be used: ```shell kubectl set resources deployment/nginx-deployment -c=nginx --limits=cpu=200m,memory=512Mi ``` The output is similar to this: ``` deployment.",
      "position": 7
    },
    {
      "id": "s_753",
      "type": "sentence",
      "content": "apps/nginx-deployment resource requirements updated ``` The initial state of the Deployment prior to pausing its rollout will continue its function",
      "position": 8
    },
    {
      "id": "s_754",
      "type": "sentence",
      "content": "but new updates to the Deployment will not have any effect as long as the Deployment rollout is paused.",
      "position": 9
    },
    {
      "id": "s_755",
      "type": "sentence",
      "content": "Eventually, resume the Deployment rollout and observe a new ReplicaSet coming up with all the new updates: ```shell kubectl rollout resume deployment/nginx-deployment ``` The output is similar to this: ``` deployment.",
      "position": 10
    },
    {
      "id": "s_756",
      "type": "sentence",
      "content": "apps/nginx-deployment resumed ``` {{< glossary_tooltip text=\"Watch\" term_id=\"watch\" >}} the status of the rollout until it's done.",
      "position": 11
    },
    {
      "id": "s_757",
      "type": "sentence",
      "content": "```shell kubectl get rs --watch ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 2 2 2 2m nginx-3926361531 2 2 0 6s nginx-3926361531 2 2 1 18s nginx-2142116321 1 2 2 2m nginx-2142116321 1 2 2 2m nginx-3926361531 3 2 1 18s nginx-3926361531 3 2 1 18s nginx-2142116321 1 1 1 2m nginx-3926361531 3 3 1 18s nginx-3926361531 3 3 2 19s nginx-2142116321 0 1 1 2m nginx-2142116321 0 1 1 2m nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 20s ``` Get the status of the latest rollout: ```shell kubectl get rs ``` The output is similar to this: ``` NAME DESIRED CURRENT READY AGE nginx-2142116321 0 0 0 2m nginx-3926361531 3 3 3 28s ```",
      "position": 12
    },
    {
      "id": "s_758",
      "type": "sentence",
      "content": "{{< note >}} You cannot rollback a paused Deployment until you resume it.",
      "position": 13
    },
    {
      "id": "s_759",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 14
    },
    {
      "id": "w_760",
      "type": "window",
      "content": "A Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while\nrolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
      "position": 0,
      "windowSize": 27
    },
    {
      "id": "sw_761",
      "type": "sentence_window",
      "content": "A Deployment enters various states during its lifecycle. It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
      "position": 0,
      "sentenceCount": 2
    },
    {
      "id": "sc_762",
      "type": "sentence_context",
      "content": "[Deployment status] A Deployment enters various states during its lifecycle.",
      "position": 0
    },
    {
      "id": "sc_763",
      "type": "sentence_context",
      "content": "[Deployment status] [Previous: A Deployment enters various states during its life...] It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
      "position": 1
    },
    {
      "id": "s_764",
      "type": "sentence",
      "content": "A Deployment enters various states during its lifecycle.",
      "position": 0
    },
    {
      "id": "s_765",
      "type": "sentence",
      "content": "It can be [progressing](#progressing-deployment) while rolling out a new ReplicaSet, it can be [complete](#complete-deployment), or it can [fail to progress](#failed-deployment).",
      "position": 1
    },
    {
      "id": "w_766",
      "type": "window",
      "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed: The Deployment creates a new ReplicaSet. The Deployment is scaling up its newest ReplicaSet. The Deployment is scaling down its older ReplicaSet(s). New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following\nattributes to the Deployment's `.status.conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated` You can monitor the progress for a Deployment by using `kubectl rollout status`.",
      "position": 0,
      "windowSize": 90
    },
    {
      "id": "sw_767",
      "type": "sentence_window",
      "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed: The Deployment creates a new ReplicaSet. The Deployment is scaling up its newest ReplicaSet.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_768",
      "type": "sentence_window",
      "content": "The Deployment creates a new ReplicaSet. The Deployment is scaling up its newest ReplicaSet. The Deployment is scaling down its older ReplicaSet(s).",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_769",
      "type": "sentence_window",
      "content": "The Deployment is scaling up its newest ReplicaSet. The Deployment is scaling down its older ReplicaSet(s). New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_770",
      "type": "sentence_window",
      "content": "The Deployment is scaling down its older ReplicaSet(s). New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_771",
      "type": "sentence_window",
      "content": "New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)). When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `. conditions`:",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_772",
      "type": "sentence_window",
      "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `. conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_773",
      "type": "sentence_window",
      "content": "conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated` You can monitor the progress for a Deployment by using `kubectl rollout status`.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_774",
      "type": "sentence_window",
      "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated` You can monitor the progress for a Deployment by using `kubectl rollout status`.",
      "position": 7,
      "sentenceCount": 2
    },
    {
      "id": "sc_775",
      "type": "sentence_context",
      "content": "[Progressing Deployment] Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:",
      "position": 0
    },
    {
      "id": "sc_776",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: Kubernetes marks a Deployment as _progressing_ whe...] The Deployment creates a new ReplicaSet.",
      "position": 1
    },
    {
      "id": "sc_777",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: The Deployment creates a new ReplicaSet....] The Deployment is scaling up its newest ReplicaSet.",
      "position": 2
    },
    {
      "id": "sc_778",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: The Deployment is scaling up its newest ReplicaSet...] The Deployment is scaling down its older ReplicaSet(s).",
      "position": 3
    },
    {
      "id": "sc_779",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: The Deployment is scaling down its older ReplicaSe...] New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
      "position": 4
    },
    {
      "id": "sc_780",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: New Pods become ready or available (ready for at l...] When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `.",
      "position": 5
    },
    {
      "id": "sc_781",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: When the rollout becomes “progressing”, the Deploy...] conditions`:",
      "position": 6
    },
    {
      "id": "sc_782",
      "type": "sentence_context",
      "content": "[Progressing Deployment] `type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
      "position": 7
    },
    {
      "id": "sc_783",
      "type": "sentence_context",
      "content": "[Progressing Deployment] [Previous: `type: Progressing` `status: \"True\"` `reason: NewR...] You can monitor the progress for a Deployment by using `kubectl rollout status`.",
      "position": 8
    },
    {
      "id": "s_784",
      "type": "sentence",
      "content": "Kubernetes marks a Deployment as _progressing_ when one of the following tasks is performed:",
      "position": 0
    },
    {
      "id": "s_785",
      "type": "sentence",
      "content": "The Deployment creates a new ReplicaSet.",
      "position": 1
    },
    {
      "id": "s_786",
      "type": "sentence",
      "content": "The Deployment is scaling up its newest ReplicaSet.",
      "position": 2
    },
    {
      "id": "s_787",
      "type": "sentence",
      "content": "The Deployment is scaling down its older ReplicaSet(s).",
      "position": 3
    },
    {
      "id": "s_788",
      "type": "sentence",
      "content": "New Pods become ready or available (ready for at least [MinReadySeconds](#min-ready-seconds)).",
      "position": 4
    },
    {
      "id": "s_789",
      "type": "sentence",
      "content": "When the rollout becomes “progressing”, the Deployment controller adds a condition with the following attributes to the Deployment's `.",
      "position": 5
    },
    {
      "id": "s_790",
      "type": "sentence",
      "content": "conditions`:",
      "position": 6
    },
    {
      "id": "s_791",
      "type": "sentence",
      "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetCreated` | `reason: FoundNewReplicaSet` | `reason: ReplicaSetUpdated`",
      "position": 7
    },
    {
      "id": "s_792",
      "type": "sentence",
      "content": "You can monitor the progress for a Deployment by using `kubectl rollout status`.",
      "position": 8
    },
    {
      "id": "w_793",
      "type": "window",
      "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics: All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any\nupdates you've requested have been completed. All of the replicas associated with the Deployment are available. No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following\nattributes to the Deployment's `.status.conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable` This `Progressing` condition will retain a status value of `\"True\"` until a new rollout\nis initiated. The condition holds even when availability of replicas changes (which\ndoes instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed\nsuccessfully, `kubectl rollout status` returns a zero exit code. The output is similar to this: and the exit status from `kubectl rollout` is 0 (success):",
      "position": 0,
      "windowSize": 149
    },
    {
      "id": "sw_794",
      "type": "sentence_window",
      "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics: All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed. All of the replicas associated with the Deployment are available.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_795",
      "type": "sentence_window",
      "content": "All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed. All of the replicas associated with the Deployment are available. No old replicas for the Deployment are running.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_796",
      "type": "sentence_window",
      "content": "All of the replicas associated with the Deployment are available. No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_797",
      "type": "sentence_window",
      "content": "No old replicas for the Deployment are running. When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `. conditions`:",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_798",
      "type": "sentence_window",
      "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `. conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_799",
      "type": "sentence_window",
      "content": "conditions`: `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable` This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_800",
      "type": "sentence_window",
      "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable` This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated. The condition holds even when availability of replicas changes (which does instead affect the `Available` condition).",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_801",
      "type": "sentence_window",
      "content": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated. The condition holds even when availability of replicas changes (which does instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_802",
      "type": "sentence_window",
      "content": "The condition holds even when availability of replicas changes (which does instead affect the `Available` condition). You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed successfully, `kubectl rollout status` returns a zero exit code.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_803",
      "type": "sentence_window",
      "content": "You can check if a Deployment has completed by using `kubectl rollout status`. If the rollout completed successfully, `kubectl rollout status` returns a zero exit code. The output is similar to this:",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_804",
      "type": "sentence_window",
      "content": "If the rollout completed successfully, `kubectl rollout status` returns a zero exit code. The output is similar to this: and the exit status from `kubectl rollout` is 0 (success):",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_805",
      "type": "sentence_window",
      "content": "The output is similar to this: and the exit status from `kubectl rollout` is 0 (success):",
      "position": 11,
      "sentenceCount": 2
    },
    {
      "id": "sc_806",
      "type": "sentence_context",
      "content": "[Complete Deployment] Kubernetes marks a Deployment as _complete_ when it has the following characteristics:",
      "position": 0
    },
    {
      "id": "sc_807",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: Kubernetes marks a Deployment as _complete_ when i...] All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed.",
      "position": 1
    },
    {
      "id": "sc_808",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: All of the replicas associated with the Deployment...] All of the replicas associated with the Deployment are available.",
      "position": 2
    },
    {
      "id": "sc_809",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: All of the replicas associated with the Deployment...] No old replicas for the Deployment are running.",
      "position": 3
    },
    {
      "id": "sc_810",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: No old replicas for the Deployment are running....] When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `.",
      "position": 4
    },
    {
      "id": "sc_811",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: When the rollout becomes “complete”, the Deploymen...] conditions`:",
      "position": 5
    },
    {
      "id": "sc_812",
      "type": "sentence_context",
      "content": "[Complete Deployment] `type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`",
      "position": 6
    },
    {
      "id": "sc_813",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: `type: Progressing` `status: \"True\"` `reason: NewR...] This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated.",
      "position": 7
    },
    {
      "id": "sc_814",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: This `Progressing` condition will retain a status ...] The condition holds even when availability of replicas changes (which does instead affect the `Available` condition).",
      "position": 8
    },
    {
      "id": "sc_815",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: The condition holds even when availability of repl...] You can check if a Deployment has completed by using `kubectl rollout status`.",
      "position": 9
    },
    {
      "id": "sc_816",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: You can check if a Deployment has completed by usi...] If the rollout completed successfully, `kubectl rollout status` returns a zero exit code.",
      "position": 10
    },
    {
      "id": "sc_817",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: If the rollout completed successfully, `kubectl ro...] The output is similar to this:",
      "position": 11
    },
    {
      "id": "sc_818",
      "type": "sentence_context",
      "content": "[Complete Deployment] [Previous: The output is similar to this:...] and the exit status from `kubectl rollout` is 0 (success):",
      "position": 12
    },
    {
      "id": "s_819",
      "type": "sentence",
      "content": "Kubernetes marks a Deployment as _complete_ when it has the following characteristics:",
      "position": 0
    },
    {
      "id": "s_820",
      "type": "sentence",
      "content": "All of the replicas associated with the Deployment have been updated to the latest version you've specified, meaning any updates you've requested have been completed.",
      "position": 1
    },
    {
      "id": "s_821",
      "type": "sentence",
      "content": "All of the replicas associated with the Deployment are available.",
      "position": 2
    },
    {
      "id": "s_822",
      "type": "sentence",
      "content": "No old replicas for the Deployment are running.",
      "position": 3
    },
    {
      "id": "s_823",
      "type": "sentence",
      "content": "When the rollout becomes “complete”, the Deployment controller sets a condition with the following attributes to the Deployment's `.",
      "position": 4
    },
    {
      "id": "s_824",
      "type": "sentence",
      "content": "conditions`:",
      "position": 5
    },
    {
      "id": "s_825",
      "type": "sentence",
      "content": "`type: Progressing` `status: \"True\"` `reason: NewReplicaSetAvailable`",
      "position": 6
    },
    {
      "id": "s_826",
      "type": "sentence",
      "content": "This `Progressing` condition will retain a status value of `\"True\"` until a new rollout is initiated.",
      "position": 7
    },
    {
      "id": "s_827",
      "type": "sentence",
      "content": "The condition holds even when availability of replicas changes (which does instead affect the `Available` condition).",
      "position": 8
    },
    {
      "id": "s_828",
      "type": "sentence",
      "content": "You can check if a Deployment has completed by using `kubectl rollout status`.",
      "position": 9
    },
    {
      "id": "s_829",
      "type": "sentence",
      "content": "If the rollout completed successfully, `kubectl rollout status` returns a zero exit code.",
      "position": 10
    },
    {
      "id": "s_830",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 11
    },
    {
      "id": "s_831",
      "type": "sentence",
      "content": "and the exit status from `kubectl rollout` is 0 (success):",
      "position": 12
    },
    {
      "id": "w_832",
      "type": "window",
      "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur\ndue to some of the following factors: Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration One way you can detect this condition is to specify a deadline parameter in your Deployment spec:\n([`.spec.progressDeadlineSeconds`](#progress-deadline-seconds)). `.spec.progressDeadlineSeconds` denotes the\nnumber of seconds the Deployment controller waits before indicating (in the Deployment status) that the\nDeployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report\nlack of progress of a rollout for a Deployment after 10 minutes: The output is similar to this: Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following\nattributes to the Deployment's `.status.conditions`: `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded` This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.\nAlso, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}}\nKubernetes takes no action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.\n{{< /note >}} {{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.\nYou can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.\n{{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error",
      "position": 0,
      "windowSize": 280
    },
    {
      "id": "w_833",
      "type": "window",
      "content": "action on a stalled Deployment other than to report a status condition with\n`reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for\nexample, rollback the Deployment to its previous version.\n{{< /note >}} {{< note >}}\nIf you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.\nYou can safely pause a Deployment rollout in the middle of a rollout and resume without triggering\nthe condition for exceeding the deadline.\n{{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or\ndue to any other kind of error that can be treated as transient. For example, let's suppose you have\ninsufficient quota. If you describe the Deployment you will notice the following section: The output is similar to this: If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this: Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the\nreason for the Progressing condition: You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). `type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the",
      "position": 180,
      "windowSize": 280
    },
    {
      "id": "w_834",
      "type": "window",
      "content": "other\ncontrollers you may be running, or by increasing quota in your namespace. If you satisfy the quota\nconditions and the Deployment controller then completes the Deployment rollout, you'll see the\nDeployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). `type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated\nby the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment\nis either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum\nrequired new replicas are available (see the Reason of the condition for the particulars - in our case\n`reason: NewReplicaSetAvailable` means that the Deployment is complete). You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status`\nreturns a non-zero exit code if the Deployment has exceeded the progression deadline. The output is similar to this: and the exit status from `kubectl rollout` is 1 (indicating an error):",
      "position": 360,
      "windowSize": 166
    },
    {
      "id": "sw_835",
      "type": "sentence_window",
      "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing. This can occur due to some of the following factors: Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_836",
      "type": "sentence_window",
      "content": "This can occur due to some of the following factors: Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_837",
      "type": "sentence_window",
      "content": "Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`. progressDeadlineSeconds`](#progress-deadline-seconds)).",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_838",
      "type": "sentence_window",
      "content": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`. progressDeadlineSeconds`](#progress-deadline-seconds)). progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_839",
      "type": "sentence_window",
      "content": "progressDeadlineSeconds`](#progress-deadline-seconds)). progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_840",
      "type": "sentence_window",
      "content": "progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled. The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_841",
      "type": "sentence_window",
      "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes: The output is similar to this: Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_842",
      "type": "sentence_window",
      "content": "The output is similar to this: Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `. conditions`:",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_843",
      "type": "sentence_window",
      "content": "Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `. conditions`: `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_844",
      "type": "sentence_window",
      "content": "conditions`: `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded` This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_845",
      "type": "sentence_window",
      "content": "`type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded` This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_846",
      "type": "sentence_window",
      "content": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`. Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_847",
      "type": "sentence_window",
      "content": "Also, the deadline is not taken into account anymore once the Deployment rollout completes. See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}} Kubernetes takes no action on a stalled Deployment",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_848",
      "type": "sentence_window",
      "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions. {{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`. Higher level",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_849",
      "type": "sentence_window",
      "content": "{{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`. Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version. {{< /note >}}",
      "position": 14,
      "sentenceCount": 3
    },
    {
      "id": "sw_850",
      "type": "sentence_window",
      "content": "Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version. {{< /note >}} {{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
      "position": 15,
      "sentenceCount": 3
    },
    {
      "id": "sw_851",
      "type": "sentence_window",
      "content": "{{< /note >}} {{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.",
      "position": 16,
      "sentenceCount": 3
    },
    {
      "id": "sw_852",
      "type": "sentence_window",
      "content": "{{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline. You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline. {{< /note >}}",
      "position": 17,
      "sentenceCount": 3
    },
    {
      "id": "sw_853",
      "type": "sentence_window",
      "content": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline. {{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient.",
      "position": 18,
      "sentenceCount": 3
    },
    {
      "id": "sw_854",
      "type": "sentence_window",
      "content": "{{< /note >}} You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient. For example, let's suppose you have insufficient quota.",
      "position": 19,
      "sentenceCount": 3
    },
    {
      "id": "sw_855",
      "type": "sentence_window",
      "content": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient. For example, let's suppose you have insufficient quota. If you describe the Deployment you will notice the following section:",
      "position": 20,
      "sentenceCount": 3
    },
    {
      "id": "sw_856",
      "type": "sentence_window",
      "content": "For example, let's suppose you have insufficient quota. If you describe the Deployment you will notice the following section: The output is similar to this:",
      "position": 21,
      "sentenceCount": 3
    },
    {
      "id": "sw_857",
      "type": "sentence_window",
      "content": "If you describe the Deployment you will notice the following section: The output is similar to this: If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
      "position": 22,
      "sentenceCount": 3
    },
    {
      "id": "sw_858",
      "type": "sentence_window",
      "content": "The output is similar to this: If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this: Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:",
      "position": 23,
      "sentenceCount": 3
    },
    {
      "id": "sw_859",
      "type": "sentence_window",
      "content": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this: Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition: You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other",
      "position": 24,
      "sentenceCount": 3
    },
    {
      "id": "sw_860",
      "type": "sentence_window",
      "content": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition: You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace. If you satisfy the quota",
      "position": 25,
      "sentenceCount": 3
    },
    {
      "id": "sw_861",
      "type": "sentence_window",
      "content": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace. If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful",
      "position": 26,
      "sentenceCount": 3
    },
    {
      "id": "sw_862",
      "type": "sentence_window",
      "content": "If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`). `type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is",
      "position": 27,
      "sentenceCount": 3
    },
    {
      "id": "sw_863",
      "type": "sentence_window",
      "content": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability. Minimum availability is dictated by the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed",
      "position": 28,
      "sentenceCount": 3
    },
    {
      "id": "sw_864",
      "type": "sentence_window",
      "content": "Minimum availability is dictated by the parameters specified in the deployment strategy. `type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the",
      "position": 29,
      "sentenceCount": 3
    },
    {
      "id": "sw_865",
      "type": "sentence_window",
      "content": "`type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case `reason: NewReplicaSetAvailable` means that the",
      "position": 30,
      "sentenceCount": 3
    },
    {
      "id": "sw_866",
      "type": "sentence_window",
      "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`. `kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline. The output is similar to this:",
      "position": 31,
      "sentenceCount": 3
    },
    {
      "id": "sw_867",
      "type": "sentence_window",
      "content": "`kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline. The output is similar to this: and the exit status from `kubectl rollout` is 1 (indicating an error):",
      "position": 32,
      "sentenceCount": 3
    },
    {
      "id": "sw_868",
      "type": "sentence_window",
      "content": "The output is similar to this: and the exit status from `kubectl rollout` is 1 (indicating an error):",
      "position": 33,
      "sentenceCount": 2
    },
    {
      "id": "sc_869",
      "type": "sentence_context",
      "content": "[Failed Deployment] Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
      "position": 0
    },
    {
      "id": "sc_870",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Your Deployment may get stuck trying to deploy its...] This can occur due to some of the following factors:",
      "position": 1
    },
    {
      "id": "sc_871",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: This can occur due to some of the following factor...] Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration",
      "position": 2
    },
    {
      "id": "sc_872",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Insufficient quota Readiness probe failures Image ...] One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`.",
      "position": 3
    },
    {
      "id": "sc_873",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: One way you can detect this condition is to specif...] progressDeadlineSeconds`](#progress-deadline-seconds)).",
      "position": 4
    },
    {
      "id": "sc_874",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: progressDeadlineSeconds`](#progress-deadline-secon...] progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.",
      "position": 5
    },
    {
      "id": "sc_875",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: progressDeadlineSeconds` denotes the number of sec...] The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:",
      "position": 6
    },
    {
      "id": "sc_876",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: The following `kubectl` command sets the spec with...] The output is similar to this:",
      "position": 7
    },
    {
      "id": "sc_877",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: The output is similar to this:...] Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `.",
      "position": 8
    },
    {
      "id": "sc_878",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Once the deadline has been exceeded, the Deploymen...] conditions`:",
      "position": 9
    },
    {
      "id": "sc_879",
      "type": "sentence_context",
      "content": "[Failed Deployment] `type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`",
      "position": 10
    },
    {
      "id": "sc_880",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: `type: Progressing` `status: \"False\"` `reason: Pro...] This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
      "position": 11
    },
    {
      "id": "sc_881",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: This condition can also fail early and is then set...] Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
      "position": 12
    },
    {
      "id": "sc_882",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Also, the deadline is not taken into account anymo...] See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
      "position": 13
    },
    {
      "id": "sc_883",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: See the [Kubernetes API conventions](https://git.k...] {{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`.",
      "position": 14
    },
    {
      "id": "sc_884",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: {{< note >}} Kubernetes takes no action on a stall...] Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.",
      "position": 15
    },
    {
      "id": "sc_885",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Higher level orchestrators can take advantage of i...] {{< /note >}}",
      "position": 16
    },
    {
      "id": "sc_886",
      "type": "sentence_context",
      "content": "[Failed Deployment] {{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
      "position": 17
    },
    {
      "id": "sc_887",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: {{< note >}} If you pause a Deployment rollout, Ku...] You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.",
      "position": 18
    },
    {
      "id": "sc_888",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: You can safely pause a Deployment rollout in the m...] {{< /note >}}",
      "position": 19
    },
    {
      "id": "sc_889",
      "type": "sentence_context",
      "content": "[Failed Deployment] You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient.",
      "position": 20
    },
    {
      "id": "sc_890",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: You may experience transient errors with your Depl...] For example, let's suppose you have insufficient quota.",
      "position": 21
    },
    {
      "id": "sc_891",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: For example, let's suppose you have insufficient q...] If you describe the Deployment you will notice the following section:",
      "position": 22
    },
    {
      "id": "sc_892",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: If you describe the Deployment you will notice the...] The output is similar to this:",
      "position": 23
    },
    {
      "id": "sc_893",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: The output is similar to this:...] If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
      "position": 24
    },
    {
      "id": "sc_894",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: If you run `kubectl get deployment nginx-deploymen...] Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:",
      "position": 25
    },
    {
      "id": "sc_895",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Eventually, once the Deployment progress deadline ...] You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace.",
      "position": 26
    },
    {
      "id": "sc_896",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: You can address an issue of insufficient quota by ...] If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
      "position": 27
    },
    {
      "id": "sc_897",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: If you satisfy the quota conditions and the Deploy...] `type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
      "position": 28
    },
    {
      "id": "sc_898",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: `type: Available` with `status: \"True\"` means that...] Minimum availability is dictated by the parameters specified in the deployment strategy.",
      "position": 29
    },
    {
      "id": "sc_899",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: Minimum availability is dictated by the parameters...] `type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the",
      "position": 30
    },
    {
      "id": "sc_900",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: `type: Progressing` with `status: \"True\"` means th...] You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
      "position": 31
    },
    {
      "id": "sc_901",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: You can check if a Deployment has failed to progre...] `kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline.",
      "position": 32
    },
    {
      "id": "sc_902",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: `kubectl rollout status` returns a non-zero exit c...] The output is similar to this:",
      "position": 33
    },
    {
      "id": "sc_903",
      "type": "sentence_context",
      "content": "[Failed Deployment] [Previous: The output is similar to this:...] and the exit status from `kubectl rollout` is 1 (indicating an error):",
      "position": 34
    },
    {
      "id": "s_904",
      "type": "sentence",
      "content": "Your Deployment may get stuck trying to deploy its newest ReplicaSet without ever completing.",
      "position": 0
    },
    {
      "id": "s_905",
      "type": "sentence",
      "content": "This can occur due to some of the following factors:",
      "position": 1
    },
    {
      "id": "s_906",
      "type": "sentence",
      "content": "Insufficient quota Readiness probe failures Image pull errors Insufficient permissions Limit ranges Application runtime misconfiguration",
      "position": 2
    },
    {
      "id": "s_907",
      "type": "sentence",
      "content": "One way you can detect this condition is to specify a deadline parameter in your Deployment spec: ([`.",
      "position": 3
    },
    {
      "id": "s_908",
      "type": "sentence",
      "content": "progressDeadlineSeconds`](#progress-deadline-seconds)).",
      "position": 4
    },
    {
      "id": "s_909",
      "type": "sentence",
      "content": "progressDeadlineSeconds` denotes the number of seconds the Deployment controller waits before indicating (in the Deployment status) that the Deployment progress has stalled.",
      "position": 5
    },
    {
      "id": "s_910",
      "type": "sentence",
      "content": "The following `kubectl` command sets the spec with `progressDeadlineSeconds` to make the controller report lack of progress of a rollout for a Deployment after 10 minutes:",
      "position": 6
    },
    {
      "id": "s_911",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 7
    },
    {
      "id": "s_912",
      "type": "sentence",
      "content": "Once the deadline has been exceeded, the Deployment controller adds a DeploymentCondition with the following attributes to the Deployment's `.",
      "position": 8
    },
    {
      "id": "s_913",
      "type": "sentence",
      "content": "conditions`:",
      "position": 9
    },
    {
      "id": "s_914",
      "type": "sentence",
      "content": "`type: Progressing` `status: \"False\"` `reason: ProgressDeadlineExceeded`",
      "position": 10
    },
    {
      "id": "s_915",
      "type": "sentence",
      "content": "This condition can also fail early and is then set to status value of `\"False\"` due to reasons as `ReplicaSetCreateError`.",
      "position": 11
    },
    {
      "id": "s_916",
      "type": "sentence",
      "content": "Also, the deadline is not taken into account anymore once the Deployment rollout completes.",
      "position": 12
    },
    {
      "id": "s_917",
      "type": "sentence",
      "content": "See the [Kubernetes API conventions](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties) for more information on status conditions.",
      "position": 13
    },
    {
      "id": "s_918",
      "type": "sentence",
      "content": "{{< note >}} Kubernetes takes no action on a stalled Deployment other than to report a status condition with `reason: ProgressDeadlineExceeded`.",
      "position": 14
    },
    {
      "id": "s_919",
      "type": "sentence",
      "content": "Higher level orchestrators can take advantage of it and act accordingly, for example, rollback the Deployment to its previous version.",
      "position": 15
    },
    {
      "id": "s_920",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 16
    },
    {
      "id": "s_921",
      "type": "sentence",
      "content": "{{< note >}} If you pause a Deployment rollout, Kubernetes does not check progress against your specified deadline.",
      "position": 17
    },
    {
      "id": "s_922",
      "type": "sentence",
      "content": "You can safely pause a Deployment rollout in the middle of a rollout and resume without triggering the condition for exceeding the deadline.",
      "position": 18
    },
    {
      "id": "s_923",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 19
    },
    {
      "id": "s_924",
      "type": "sentence",
      "content": "You may experience transient errors with your Deployments, either due to a low timeout that you have set or due to any other kind of error that can be treated as transient.",
      "position": 20
    },
    {
      "id": "s_925",
      "type": "sentence",
      "content": "For example, let's suppose you have insufficient quota.",
      "position": 21
    },
    {
      "id": "s_926",
      "type": "sentence",
      "content": "If you describe the Deployment you will notice the following section:",
      "position": 22
    },
    {
      "id": "s_927",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 23
    },
    {
      "id": "s_928",
      "type": "sentence",
      "content": "If you run `kubectl get deployment nginx-deployment -o yaml`, the Deployment status is similar to this:",
      "position": 24
    },
    {
      "id": "s_929",
      "type": "sentence",
      "content": "Eventually, once the Deployment progress deadline is exceeded, Kubernetes updates the status and the reason for the Progressing condition:",
      "position": 25
    },
    {
      "id": "s_930",
      "type": "sentence",
      "content": "You can address an issue of insufficient quota by scaling down your Deployment, by scaling down other controllers you may be running, or by increasing quota in your namespace.",
      "position": 26
    },
    {
      "id": "s_931",
      "type": "sentence",
      "content": "If you satisfy the quota conditions and the Deployment controller then completes the Deployment rollout, you'll see the Deployment's status update with a successful condition (`status: \"True\"` and `reason: NewReplicaSetAvailable`).",
      "position": 27
    },
    {
      "id": "s_932",
      "type": "sentence",
      "content": "`type: Available` with `status: \"True\"` means that your Deployment has minimum availability.",
      "position": 28
    },
    {
      "id": "s_933",
      "type": "sentence",
      "content": "Minimum availability is dictated by the parameters specified in the deployment strategy.",
      "position": 29
    },
    {
      "id": "s_934",
      "type": "sentence",
      "content": "`type: Progressing` with `status: \"True\"` means that your Deployment is either in the middle of a rollout and it is progressing or that it has successfully completed its progress and the minimum required new replicas are available (see the Reason of the condition for the particulars - in our case `reason: NewReplicaSetAvailable` means that the Deployment is complete).",
      "position": 30
    },
    {
      "id": "s_935",
      "type": "sentence",
      "content": "You can check if a Deployment has failed to progress by using `kubectl rollout status`.",
      "position": 31
    },
    {
      "id": "s_936",
      "type": "sentence",
      "content": "`kubectl rollout status` returns a non-zero exit code if the Deployment has exceeded the progression deadline.",
      "position": 32
    },
    {
      "id": "s_937",
      "type": "sentence",
      "content": "The output is similar to this:",
      "position": 33
    },
    {
      "id": "s_938",
      "type": "sentence",
      "content": "and the exit status from `kubectl rollout` is 1 (indicating an error):",
      "position": 34
    },
    {
      "id": "w_939",
      "type": "window",
      "content": "All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back\nto a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
      "position": 0,
      "windowSize": 40
    },
    {
      "id": "sw_940",
      "type": "sentence_window",
      "content": "All actions that apply to a complete Deployment also apply to a failed Deployment. You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
      "position": 0,
      "sentenceCount": 2
    },
    {
      "id": "sc_941",
      "type": "sentence_context",
      "content": "[Operating on a failed deployment] All actions that apply to a complete Deployment also apply to a failed Deployment.",
      "position": 0
    },
    {
      "id": "sc_942",
      "type": "sentence_context",
      "content": "[Operating on a failed deployment] [Previous: All actions that apply to a complete Deployment al...] You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
      "position": 1
    },
    {
      "id": "s_943",
      "type": "sentence",
      "content": "All actions that apply to a complete Deployment also apply to a failed Deployment.",
      "position": 0
    },
    {
      "id": "s_944",
      "type": "sentence",
      "content": "You can scale it up/down, roll back to a previous revision, or even pause it if you need to apply multiple tweaks in the Deployment Pod template.",
      "position": 1
    },
    {
      "id": "w_945",
      "type": "window",
      "content": "You can set `.spec.revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for\nthis Deployment you want to retain. The rest will be garbage-collected in the background. By default,\nit is 10. {{< note >}}\nExplicitly setting this field to 0, will result in cleaning up all the history of your Deployment\nthus that Deployment will not be able to roll back.\n{{< /note >}} The cleanup only starts **after** a Deployment reaches a \n[complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).\nIf you set `.spec.revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new\nReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit\nyou configure. For example, if pods are crash looping, and there are multiple rolling updates\nevents triggered over time, you might end up with more ReplicaSets than the \n`.spec.revisionHistoryLimit` because the Deployment never reaches a complete state.",
      "position": 0,
      "windowSize": 142
    },
    {
      "id": "sw_946",
      "type": "sentence_window",
      "content": "You can set `. revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain. The rest will be garbage-collected in the background.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_947",
      "type": "sentence_window",
      "content": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain. The rest will be garbage-collected in the background. By default, it is 10.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_948",
      "type": "sentence_window",
      "content": "The rest will be garbage-collected in the background. By default, it is 10. {{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_949",
      "type": "sentence_window",
      "content": "By default, it is 10. {{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back. {{< /note >}}",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_950",
      "type": "sentence_window",
      "content": "{{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back. {{< /note >}} The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_951",
      "type": "sentence_window",
      "content": "{{< /note >}} The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_952",
      "type": "sentence_window",
      "content": "The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment). If you set `. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_953",
      "type": "sentence_window",
      "content": "If you set `. revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_954",
      "type": "sentence_window",
      "content": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one. Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure. For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_955",
      "type": "sentence_window",
      "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure. For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `. revisionHistoryLimit` because the Deployment never reaches a complete state.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_956",
      "type": "sentence_window",
      "content": "For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `. revisionHistoryLimit` because the Deployment never reaches a complete state.",
      "position": 10,
      "sentenceCount": 2
    },
    {
      "id": "sc_957",
      "type": "sentence_context",
      "content": "[Clean up Policy] You can set `.",
      "position": 0
    },
    {
      "id": "sc_958",
      "type": "sentence_context",
      "content": "[Clean up Policy] revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain.",
      "position": 1
    },
    {
      "id": "sc_959",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: revisionHistoryLimit` field in a Deployment to spe...] The rest will be garbage-collected in the background.",
      "position": 2
    },
    {
      "id": "sc_960",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: The rest will be garbage-collected in the backgrou...] By default, it is 10.",
      "position": 3
    },
    {
      "id": "sc_961",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: By default, it is 10....] {{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.",
      "position": 4
    },
    {
      "id": "sc_962",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: {{< note >}} Explicitly setting this field to 0, w...] {{< /note >}}",
      "position": 5
    },
    {
      "id": "sc_963",
      "type": "sentence_context",
      "content": "[Clean up Policy] The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
      "position": 6
    },
    {
      "id": "sc_964",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: The cleanup only starts **after** a Deployment rea...] If you set `.",
      "position": 7
    },
    {
      "id": "sc_965",
      "type": "sentence_context",
      "content": "[Clean up Policy] revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one.",
      "position": 8
    },
    {
      "id": "sc_966",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: revisionHistoryLimit` to 0, any rollout nonetheles...] Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure.",
      "position": 9
    },
    {
      "id": "sc_967",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: Even with a non-zero revision history limit, you c...] For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `.",
      "position": 10
    },
    {
      "id": "sc_968",
      "type": "sentence_context",
      "content": "[Clean up Policy] [Previous: For example, if pods are crash looping, and there ...] revisionHistoryLimit` because the Deployment never reaches a complete state.",
      "position": 11
    },
    {
      "id": "s_969",
      "type": "sentence",
      "content": "You can set `.",
      "position": 0
    },
    {
      "id": "s_970",
      "type": "sentence",
      "content": "revisionHistoryLimit` field in a Deployment to specify how many old ReplicaSets for this Deployment you want to retain.",
      "position": 1
    },
    {
      "id": "s_971",
      "type": "sentence",
      "content": "The rest will be garbage-collected in the background.",
      "position": 2
    },
    {
      "id": "s_972",
      "type": "sentence",
      "content": "By default, it is 10.",
      "position": 3
    },
    {
      "id": "s_973",
      "type": "sentence",
      "content": "{{< note >}} Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment thus that Deployment will not be able to roll back.",
      "position": 4
    },
    {
      "id": "s_974",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 5
    },
    {
      "id": "s_975",
      "type": "sentence",
      "content": "The cleanup only starts **after** a Deployment reaches a [complete state](/docs/concepts/workloads/controllers/deployment/#complete-deployment).",
      "position": 6
    },
    {
      "id": "s_976",
      "type": "sentence",
      "content": "If you set `.",
      "position": 7
    },
    {
      "id": "s_977",
      "type": "sentence",
      "content": "revisionHistoryLimit` to 0, any rollout nonetheless triggers creation of a new ReplicaSet before Kubernetes removes the old one.",
      "position": 8
    },
    {
      "id": "s_978",
      "type": "sentence",
      "content": "Even with a non-zero revision history limit, you can have more ReplicaSets than the limit you configure.",
      "position": 9
    },
    {
      "id": "s_979",
      "type": "sentence",
      "content": "For example, if pods are crash looping, and there are multiple rolling updates events triggered over time, you might end up with more ReplicaSets than the `.",
      "position": 10
    },
    {
      "id": "s_980",
      "type": "sentence",
      "content": "revisionHistoryLimit` because the Deployment never reaches a complete state.",
      "position": 11
    },
    {
      "id": "w_981",
      "type": "window",
      "content": "If you want to roll out releases to a subset of users or servers using the Deployment, you\ncan create multiple Deployments, one for each release, following the canary pattern described in\n[managing resources](/docs/concepts/workloads/management/#canary-deployments).",
      "position": 0,
      "windowSize": 32
    },
    {
      "id": "sc_982",
      "type": "sentence_context",
      "content": "[Canary Deployment] If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in [managing resources](/docs/concepts/workloads/management/#canary-deployments).",
      "position": 0
    },
    {
      "id": "s_983",
      "type": "sentence",
      "content": "If you want to roll out releases to a subset of users or servers using the Deployment, you can create multiple Deployments, one for each release, following the canary pattern described in [managing resources](/docs/concepts/workloads/management/#canary-deployments).",
      "position": 0
    },
    {
      "id": "w_984",
      "type": "window",
      "content": "As with all other Kubernetes configs, a Deployment needs `.apiVersion`, `.kind`, and `.metadata` fields.\nFor general information about working with config files, see\n[deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/),\nconfiguring containers, and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `.metadata.name` of the\nDeployment is part of the basis for naming those Pods. The name of a Deployment must be a valid\n[DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names)\nvalue, but this can produce unexpected results for the Pod hostnames. For best compatibility,\nthe name should follow the more restrictive rules for a\n[DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`.spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
      "position": 0,
      "windowSize": 94
    },
    {
      "id": "sw_985",
      "type": "sentence_window",
      "content": "As with all other Kubernetes configs, a Deployment needs `. apiVersion`, `. kind`, and `.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_986",
      "type": "sentence_window",
      "content": "apiVersion`, `. kind`, and `. metadata` fields.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_987",
      "type": "sentence_window",
      "content": "kind`, and `. metadata` fields. For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_988",
      "type": "sentence_window",
      "content": "metadata` fields. For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_989",
      "type": "sentence_window",
      "content": "For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_990",
      "type": "sentence_window",
      "content": "and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents. When the control plane creates new Pods for a Deployment, the `. name` of the Deployment is part of the basis for naming those Pods.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_991",
      "type": "sentence_window",
      "content": "When the control plane creates new Pods for a Deployment, the `. name` of the Deployment is part of the basis for naming those Pods. The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_992",
      "type": "sentence_window",
      "content": "name` of the Deployment is part of the basis for naming those Pods. The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames. For best compatibility, the name should follow the more restrictive rules for a",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_993",
      "type": "sentence_window",
      "content": "The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames. For best compatibility, the name should follow the more restrictive rules for a [DNS",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_994",
      "type": "sentence_window",
      "content": "For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names). A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_995",
      "type": "sentence_window",
      "content": "A Deployment also needs a [`. spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
      "position": 10,
      "sentenceCount": 2
    },
    {
      "id": "sc_996",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] As with all other Kubernetes configs, a Deployment needs `.",
      "position": 0
    },
    {
      "id": "sc_997",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: As with all other Kubernetes configs, a Deployment...] apiVersion`, `.",
      "position": 1
    },
    {
      "id": "sc_998",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] kind`, and `.",
      "position": 2
    },
    {
      "id": "sc_999",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] metadata` fields.",
      "position": 3
    },
    {
      "id": "sc_1000",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers",
      "position": 4
    },
    {
      "id": "sc_1001",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: For general information about working with config ...] and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
      "position": 5
    },
    {
      "id": "sc_1002",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: and [using kubectl to manage resources](/docs/conc...] When the control plane creates new Pods for a Deployment, the `.",
      "position": 6
    },
    {
      "id": "sc_1003",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: When the control plane creates new Pods for a Depl...] name` of the Deployment is part of the basis for naming those Pods.",
      "position": 7
    },
    {
      "id": "sc_1004",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: name` of the Deployment is part of the basis for n...] The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames.",
      "position": 8
    },
    {
      "id": "sc_1005",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: The name of a Deployment must be a valid [DNS subd...] For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
      "position": 9
    },
    {
      "id": "sc_1006",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: For best compatibility, the name should follow the...] A Deployment also needs a [`.",
      "position": 10
    },
    {
      "id": "sc_1007",
      "type": "sentence_context",
      "content": "[Writing a Deployment Spec] [Previous: A Deployment also needs a [`....] spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
      "position": 11
    },
    {
      "id": "s_1008",
      "type": "sentence",
      "content": "As with all other Kubernetes configs, a Deployment needs `.",
      "position": 0
    },
    {
      "id": "s_1009",
      "type": "sentence",
      "content": "apiVersion`, `.",
      "position": 1
    },
    {
      "id": "s_1010",
      "type": "sentence",
      "content": "kind`, and `.",
      "position": 2
    },
    {
      "id": "s_1011",
      "type": "sentence",
      "content": "metadata` fields.",
      "position": 3
    },
    {
      "id": "s_1012",
      "type": "sentence",
      "content": "For general information about working with config files, see [deploying applications](/docs/tasks/run-application/run-stateless-application-deployment/), configuring containers",
      "position": 4
    },
    {
      "id": "s_1013",
      "type": "sentence",
      "content": "and [using kubectl to manage resources](/docs/concepts/overview/working-with-objects/object-management/) documents.",
      "position": 5
    },
    {
      "id": "s_1014",
      "type": "sentence",
      "content": "When the control plane creates new Pods for a Deployment, the `.",
      "position": 6
    },
    {
      "id": "s_1015",
      "type": "sentence",
      "content": "name` of the Deployment is part of the basis for naming those Pods.",
      "position": 7
    },
    {
      "id": "s_1016",
      "type": "sentence",
      "content": "The name of a Deployment must be a valid [DNS subdomain](/docs/concepts/overview/working-with-objects/names#dns-subdomain-names) value, but this can produce unexpected results for the Pod hostnames.",
      "position": 8
    },
    {
      "id": "s_1017",
      "type": "sentence",
      "content": "For best compatibility, the name should follow the more restrictive rules for a [DNS label](/docs/concepts/overview/working-with-objects/names#dns-label-names).",
      "position": 9
    },
    {
      "id": "s_1018",
      "type": "sentence",
      "content": "A Deployment also needs a [`.",
      "position": 10
    },
    {
      "id": "s_1019",
      "type": "sentence",
      "content": "spec` section](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status).",
      "position": 11
    },
    {
      "id": "w_1020",
      "type": "window",
      "content": "The `.spec.template` and `.spec.selector` are the only required fields of the `.spec`. The `.spec.template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate\nlabels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector). Only a [`.spec.template.spec.restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is\nallowed, which is the default if not specified.",
      "position": 0,
      "windowSize": 91
    },
    {
      "id": "sw_1021",
      "type": "sentence_window",
      "content": "template` and `. selector` are the only required fields of the `. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1022",
      "type": "sentence_window",
      "content": "selector` are the only required fields of the `. template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1023",
      "type": "sentence_window",
      "content": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates). It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1024",
      "type": "sentence_window",
      "content": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`. In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy. For labels, make sure not to overlap with other",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1025",
      "type": "sentence_window",
      "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy. For labels, make sure not to overlap with other controllers. See [selector](#selector).",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1026",
      "type": "sentence_window",
      "content": "For labels, make sure not to overlap with other controllers. See [selector](#selector). restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_1027",
      "type": "sentence_window",
      "content": "See [selector](#selector). restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
      "position": 6,
      "sentenceCount": 2
    },
    {
      "id": "sc_1028",
      "type": "sentence_context",
      "content": "[Pod Template] template` and `.",
      "position": 0
    },
    {
      "id": "sc_1029",
      "type": "sentence_context",
      "content": "[Pod Template] selector` are the only required fields of the `.",
      "position": 1
    },
    {
      "id": "sc_1030",
      "type": "sentence_context",
      "content": "[Pod Template] [Previous: selector` are the only required fields of the `....] template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
      "position": 2
    },
    {
      "id": "sc_1031",
      "type": "sentence_context",
      "content": "[Pod Template] [Previous: template` is a [Pod template](/docs/concepts/workl...] It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
      "position": 3
    },
    {
      "id": "sc_1032",
      "type": "sentence_context",
      "content": "[Pod Template] [Previous: It has exactly the same schema as a {{< glossary_t...] In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy.",
      "position": 4
    },
    {
      "id": "sc_1033",
      "type": "sentence_context",
      "content": "[Pod Template] [Previous: In addition to required fields for a Pod, a Pod te...] For labels, make sure not to overlap with other controllers.",
      "position": 5
    },
    {
      "id": "sc_1034",
      "type": "sentence_context",
      "content": "[Pod Template] [Previous: For labels, make sure not to overlap with other co...] See [selector](#selector).",
      "position": 6
    },
    {
      "id": "sc_1035",
      "type": "sentence_context",
      "content": "[Pod Template] [Previous: See [selector](#selector)....] restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
      "position": 7
    },
    {
      "id": "s_1036",
      "type": "sentence",
      "content": "template` and `.",
      "position": 0
    },
    {
      "id": "s_1037",
      "type": "sentence",
      "content": "selector` are the only required fields of the `.",
      "position": 1
    },
    {
      "id": "s_1038",
      "type": "sentence",
      "content": "template` is a [Pod template](/docs/concepts/workloads/pods/#pod-templates).",
      "position": 2
    },
    {
      "id": "s_1039",
      "type": "sentence",
      "content": "It has exactly the same schema as a {{< glossary_tooltip text=\"Pod\" term_id=\"pod\" >}}, except it is nested and does not have an `apiVersion` or `kind`.",
      "position": 3
    },
    {
      "id": "s_1040",
      "type": "sentence",
      "content": "In addition to required fields for a Pod, a Pod template in a Deployment must specify appropriate labels and an appropriate restart policy.",
      "position": 4
    },
    {
      "id": "s_1041",
      "type": "sentence",
      "content": "For labels, make sure not to overlap with other controllers.",
      "position": 5
    },
    {
      "id": "s_1042",
      "type": "sentence",
      "content": "See [selector](#selector).",
      "position": 6
    },
    {
      "id": "s_1043",
      "type": "sentence",
      "content": "restartPolicy`](/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy) equal to `Always` is allowed, which is the default if not specified.",
      "position": 7
    },
    {
      "id": "w_1044",
      "type": "window",
      "content": "`.spec.replicas` is an optional field that specifies the number of desired Pods. It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment\ndeployment --replicas=X`, and then you update that Deployment based on a manifest\n(for example: by running `kubectl apply -f deployment.yaml`),\nthen applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any\nsimilar API for horizontal scaling) is managing scaling for a Deployment, don't set `.spec.replicas`. Instead, allow the Kubernetes\n{{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the\n`.spec.replicas` field automatically.",
      "position": 0,
      "windowSize": 88
    },
    {
      "id": "sw_1045",
      "type": "sentence_window",
      "content": "replicas` is an optional field that specifies the number of desired Pods. It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1046",
      "type": "sentence_window",
      "content": "It defaults to 1. Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X` and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1047",
      "type": "sentence_window",
      "content": "Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X` and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment. yaml`), then applying that manifest overwrites the manual scaling that you previously did.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1048",
      "type": "sentence_window",
      "content": "and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment. yaml`), then applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1049",
      "type": "sentence_window",
      "content": "yaml`), then applying that manifest overwrites the manual scaling that you previously did. If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `. Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\"",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1050",
      "type": "sentence_window",
      "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `. Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `. replicas` field automatically.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_1051",
      "type": "sentence_window",
      "content": "Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `. replicas` field automatically.",
      "position": 6,
      "sentenceCount": 2
    },
    {
      "id": "sc_1052",
      "type": "sentence_context",
      "content": "[Replicas] replicas` is an optional field that specifies the number of desired Pods.",
      "position": 0
    },
    {
      "id": "sc_1053",
      "type": "sentence_context",
      "content": "[Replicas] [Previous: replicas` is an optional field that specifies the ...] It defaults to 1.",
      "position": 1
    },
    {
      "id": "sc_1054",
      "type": "sentence_context",
      "content": "[Replicas] Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`",
      "position": 2
    },
    {
      "id": "sc_1055",
      "type": "sentence_context",
      "content": "[Replicas] [Previous: Should you manually scale a Deployment, example vi...] and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment.",
      "position": 3
    },
    {
      "id": "sc_1056",
      "type": "sentence_context",
      "content": "[Replicas] [Previous: and then you update that Deployment based on a man...] yaml`), then applying that manifest overwrites the manual scaling that you previously did.",
      "position": 4
    },
    {
      "id": "sc_1057",
      "type": "sentence_context",
      "content": "[Replicas] [Previous: yaml`), then applying that manifest overwrites the...] If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
      "position": 5
    },
    {
      "id": "sc_1058",
      "type": "sentence_context",
      "content": "[Replicas] [Previous: If a [HorizontalPodAutoscaler](/docs/tasks/run-app...] Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `.",
      "position": 6
    },
    {
      "id": "sc_1059",
      "type": "sentence_context",
      "content": "[Replicas] [Previous: Instead, allow the Kubernetes {{< glossary_tooltip...] replicas` field automatically.",
      "position": 7
    },
    {
      "id": "s_1060",
      "type": "sentence",
      "content": "replicas` is an optional field that specifies the number of desired Pods.",
      "position": 0
    },
    {
      "id": "s_1061",
      "type": "sentence",
      "content": "It defaults to 1.",
      "position": 1
    },
    {
      "id": "s_1062",
      "type": "sentence",
      "content": "Should you manually scale a Deployment, example via `kubectl scale deployment deployment --replicas=X`",
      "position": 2
    },
    {
      "id": "s_1063",
      "type": "sentence",
      "content": "and then you update that Deployment based on a manifest (for example: by running `kubectl apply -f deployment.",
      "position": 3
    },
    {
      "id": "s_1064",
      "type": "sentence",
      "content": "yaml`), then applying that manifest overwrites the manual scaling that you previously did.",
      "position": 4
    },
    {
      "id": "s_1065",
      "type": "sentence",
      "content": "If a [HorizontalPodAutoscaler](/docs/tasks/run-application/horizontal-pod-autoscale/) (or any similar API for horizontal scaling) is managing scaling for a Deployment, don't set `.",
      "position": 5
    },
    {
      "id": "s_1066",
      "type": "sentence",
      "content": "Instead, allow the Kubernetes {{< glossary_tooltip text=\"control plane\" term_id=\"control-plane\" >}} to manage the `.",
      "position": 6
    },
    {
      "id": "s_1067",
      "type": "sentence",
      "content": "replicas` field automatically.",
      "position": 7
    },
    {
      "id": "w_1068",
      "type": "window",
      "content": "`.spec.selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/)\nfor the Pods targeted by this Deployment. `.spec.selector` must match `.spec.template.metadata.labels`, or it will be rejected by the API. In API version `apps/v1`, `.spec.selector` and `.metadata.labels` do not default to `.spec.template.metadata.labels` if not set. So they must be set explicitly. Also note that `.spec.selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different\nfrom `.spec.template` or if the total number of such Pods exceeds `.spec.replicas`. It brings up new\nPods with `.spec.template` if the number of Pods is less than the desired number. {{< note >}}\nYou should not create other Pods whose labels match this selector, either directly, by creating\nanother Deployment, or by creating another controller such as a ReplicaSet or a ReplicationController. If you\ndo so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.\n{{< /note >}} If you have multiple controllers that have overlapping selectors, the controllers will fight with each\nother and won't behave correctly.",
      "position": 0,
      "windowSize": 177
    },
    {
      "id": "sw_1069",
      "type": "sentence_window",
      "content": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment. selector` must match `. labels`, or it will be rejected by the API.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1070",
      "type": "sentence_window",
      "content": "selector` must match `. labels`, or it will be rejected by the API. In API version `apps/v1`, `.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1071",
      "type": "sentence_window",
      "content": "labels`, or it will be rejected by the API. In API version `apps/v1`, `. selector` and `.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1072",
      "type": "sentence_window",
      "content": "In API version `apps/v1`, `. selector` and `. labels` do not default to `.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1073",
      "type": "sentence_window",
      "content": "selector` and `. labels` do not default to `. labels` if not set.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1074",
      "type": "sentence_window",
      "content": "labels` do not default to `. labels` if not set. So they must be set explicitly.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_1075",
      "type": "sentence_window",
      "content": "labels` if not set. So they must be set explicitly. Also note that `.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_1076",
      "type": "sentence_window",
      "content": "So they must be set explicitly. Also note that `. selector` is immutable after creation of the Deployment in `apps/v1`.",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_1077",
      "type": "sentence_window",
      "content": "Also note that `. selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different from `.",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_1078",
      "type": "sentence_window",
      "content": "selector` is immutable after creation of the Deployment in `apps/v1`. A Deployment may terminate Pods whose labels match the selector if their template is different from `. template` or if the total number of such Pods exceeds `.",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_1079",
      "type": "sentence_window",
      "content": "A Deployment may terminate Pods whose labels match the selector if their template is different from `. template` or if the total number of such Pods exceeds `. It brings up new Pods with `.",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_1080",
      "type": "sentence_window",
      "content": "template` or if the total number of such Pods exceeds `. It brings up new Pods with `. template` if the number of Pods is less than the desired number.",
      "position": 11,
      "sentenceCount": 3
    },
    {
      "id": "sw_1081",
      "type": "sentence_window",
      "content": "It brings up new Pods with `. template` if the number of Pods is less than the desired number. {{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment",
      "position": 12,
      "sentenceCount": 3
    },
    {
      "id": "sw_1082",
      "type": "sentence_window",
      "content": "template` if the number of Pods is less than the desired number. {{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment or by creating another controller such as a ReplicaSet or a ReplicationController.",
      "position": 13,
      "sentenceCount": 3
    },
    {
      "id": "sw_1083",
      "type": "sentence_window",
      "content": "{{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment or by creating another controller such as a ReplicaSet or a ReplicationController. If you do so, the first Deployment thinks that it created these other Pods.",
      "position": 14,
      "sentenceCount": 3
    },
    {
      "id": "sw_1084",
      "type": "sentence_window",
      "content": "or by creating another controller such as a ReplicaSet or a ReplicationController. If you do so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this.",
      "position": 15,
      "sentenceCount": 3
    },
    {
      "id": "sw_1085",
      "type": "sentence_window",
      "content": "If you do so, the first Deployment thinks that it created these other Pods. Kubernetes does not stop you from doing this. {{< /note >}}",
      "position": 16,
      "sentenceCount": 3
    },
    {
      "id": "sw_1086",
      "type": "sentence_window",
      "content": "Kubernetes does not stop you from doing this. {{< /note >}} If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
      "position": 17,
      "sentenceCount": 3
    },
    {
      "id": "sw_1087",
      "type": "sentence_window",
      "content": "{{< /note >}} If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
      "position": 18,
      "sentenceCount": 2
    },
    {
      "id": "sc_1088",
      "type": "sentence_context",
      "content": "[Selector] selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment.",
      "position": 0
    },
    {
      "id": "sc_1089",
      "type": "sentence_context",
      "content": "[Selector] [Previous: selector` is a required field that specifies a [la...] selector` must match `.",
      "position": 1
    },
    {
      "id": "sc_1090",
      "type": "sentence_context",
      "content": "[Selector] [Previous: selector` must match `....] labels`, or it will be rejected by the API.",
      "position": 2
    },
    {
      "id": "sc_1091",
      "type": "sentence_context",
      "content": "[Selector] [Previous: labels`, or it will be rejected by the API....] In API version `apps/v1`, `.",
      "position": 3
    },
    {
      "id": "sc_1092",
      "type": "sentence_context",
      "content": "[Selector] [Previous: In API version `apps/v1`, `....] selector` and `.",
      "position": 4
    },
    {
      "id": "sc_1093",
      "type": "sentence_context",
      "content": "[Selector] labels` do not default to `.",
      "position": 5
    },
    {
      "id": "sc_1094",
      "type": "sentence_context",
      "content": "[Selector] [Previous: labels` do not default to `....] labels` if not set.",
      "position": 6
    },
    {
      "id": "sc_1095",
      "type": "sentence_context",
      "content": "[Selector] So they must be set explicitly.",
      "position": 7
    },
    {
      "id": "sc_1096",
      "type": "sentence_context",
      "content": "[Selector] [Previous: So they must be set explicitly....] Also note that `.",
      "position": 8
    },
    {
      "id": "sc_1097",
      "type": "sentence_context",
      "content": "[Selector] selector` is immutable after creation of the Deployment in `apps/v1`.",
      "position": 9
    },
    {
      "id": "sc_1098",
      "type": "sentence_context",
      "content": "[Selector] [Previous: selector` is immutable after creation of the Deplo...] A Deployment may terminate Pods whose labels match the selector if their template is different from `.",
      "position": 10
    },
    {
      "id": "sc_1099",
      "type": "sentence_context",
      "content": "[Selector] [Previous: A Deployment may terminate Pods whose labels match...] template` or if the total number of such Pods exceeds `.",
      "position": 11
    },
    {
      "id": "sc_1100",
      "type": "sentence_context",
      "content": "[Selector] [Previous: template` or if the total number of such Pods exce...] It brings up new Pods with `.",
      "position": 12
    },
    {
      "id": "sc_1101",
      "type": "sentence_context",
      "content": "[Selector] [Previous: It brings up new Pods with `....] template` if the number of Pods is less than the desired number.",
      "position": 13
    },
    {
      "id": "sc_1102",
      "type": "sentence_context",
      "content": "[Selector] [Previous: template` if the number of Pods is less than the d...] {{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment",
      "position": 14
    },
    {
      "id": "sc_1103",
      "type": "sentence_context",
      "content": "[Selector] [Previous: {{< note >}} You should not create other Pods whos...] or by creating another controller such as a ReplicaSet or a ReplicationController.",
      "position": 15
    },
    {
      "id": "sc_1104",
      "type": "sentence_context",
      "content": "[Selector] [Previous: or by creating another controller such as a Replic...] If you do so, the first Deployment thinks that it created these other Pods.",
      "position": 16
    },
    {
      "id": "sc_1105",
      "type": "sentence_context",
      "content": "[Selector] [Previous: If you do so, the first Deployment thinks that it ...] Kubernetes does not stop you from doing this.",
      "position": 17
    },
    {
      "id": "sc_1106",
      "type": "sentence_context",
      "content": "[Selector] [Previous: Kubernetes does not stop you from doing this....] {{< /note >}}",
      "position": 18
    },
    {
      "id": "sc_1107",
      "type": "sentence_context",
      "content": "[Selector] If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
      "position": 19
    },
    {
      "id": "s_1108",
      "type": "sentence",
      "content": "selector` is a required field that specifies a [label selector](/docs/concepts/overview/working-with-objects/labels/) for the Pods targeted by this Deployment.",
      "position": 0
    },
    {
      "id": "s_1109",
      "type": "sentence",
      "content": "selector` must match `.",
      "position": 1
    },
    {
      "id": "s_1110",
      "type": "sentence",
      "content": "labels`, or it will be rejected by the API.",
      "position": 2
    },
    {
      "id": "s_1111",
      "type": "sentence",
      "content": "In API version `apps/v1`, `.",
      "position": 3
    },
    {
      "id": "s_1112",
      "type": "sentence",
      "content": "selector` and `.",
      "position": 4
    },
    {
      "id": "s_1113",
      "type": "sentence",
      "content": "labels` do not default to `.",
      "position": 5
    },
    {
      "id": "s_1114",
      "type": "sentence",
      "content": "labels` if not set.",
      "position": 6
    },
    {
      "id": "s_1115",
      "type": "sentence",
      "content": "So they must be set explicitly.",
      "position": 7
    },
    {
      "id": "s_1116",
      "type": "sentence",
      "content": "Also note that `.",
      "position": 8
    },
    {
      "id": "s_1117",
      "type": "sentence",
      "content": "selector` is immutable after creation of the Deployment in `apps/v1`.",
      "position": 9
    },
    {
      "id": "s_1118",
      "type": "sentence",
      "content": "A Deployment may terminate Pods whose labels match the selector if their template is different from `.",
      "position": 10
    },
    {
      "id": "s_1119",
      "type": "sentence",
      "content": "template` or if the total number of such Pods exceeds `.",
      "position": 11
    },
    {
      "id": "s_1120",
      "type": "sentence",
      "content": "It brings up new Pods with `.",
      "position": 12
    },
    {
      "id": "s_1121",
      "type": "sentence",
      "content": "template` if the number of Pods is less than the desired number.",
      "position": 13
    },
    {
      "id": "s_1122",
      "type": "sentence",
      "content": "{{< note >}} You should not create other Pods whose labels match this selector, either directly, by creating another Deployment",
      "position": 14
    },
    {
      "id": "s_1123",
      "type": "sentence",
      "content": "or by creating another controller such as a ReplicaSet or a ReplicationController.",
      "position": 15
    },
    {
      "id": "s_1124",
      "type": "sentence",
      "content": "If you do so, the first Deployment thinks that it created these other Pods.",
      "position": 16
    },
    {
      "id": "s_1125",
      "type": "sentence",
      "content": "Kubernetes does not stop you from doing this.",
      "position": 17
    },
    {
      "id": "s_1126",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 18
    },
    {
      "id": "s_1127",
      "type": "sentence",
      "content": "If you have multiple controllers that have overlapping selectors, the controllers will fight with each other and won't behave correctly.",
      "position": 19
    },
    {
      "id": "w_1128",
      "type": "window",
      "content": "`.spec.strategy` specifies the strategy used to replace old Pods by new ones.\n`.spec.strategy.type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is\nthe default value.",
      "position": 0,
      "windowSize": 21
    },
    {
      "id": "sw_1129",
      "type": "sentence_window",
      "content": "strategy` specifies the strategy used to replace old Pods by new ones. type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is the default value.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1130",
      "type": "sentence_window",
      "content": "type` can be \"Recreate\" or \"RollingUpdate\". \"RollingUpdate\" is the default value.",
      "position": 1,
      "sentenceCount": 2
    },
    {
      "id": "sc_1131",
      "type": "sentence_context",
      "content": "[Strategy] strategy` specifies the strategy used to replace old Pods by new ones.",
      "position": 0
    },
    {
      "id": "sc_1132",
      "type": "sentence_context",
      "content": "[Strategy] [Previous: strategy` specifies the strategy used to replace o...] type` can be \"Recreate\" or \"RollingUpdate\".",
      "position": 1
    },
    {
      "id": "sc_1133",
      "type": "sentence_context",
      "content": "[Strategy] [Previous: type` can be \"Recreate\" or \"RollingUpdate\"....] \"RollingUpdate\" is the default value.",
      "position": 2
    },
    {
      "id": "s_1134",
      "type": "sentence",
      "content": "strategy` specifies the strategy used to replace old Pods by new ones.",
      "position": 0
    },
    {
      "id": "s_1135",
      "type": "sentence",
      "content": "type` can be \"Recreate\" or \"RollingUpdate\".",
      "position": 1
    },
    {
      "id": "s_1136",
      "type": "sentence",
      "content": "\"RollingUpdate\" is the default value.",
      "position": 2
    },
    {
      "id": "w_1137",
      "type": "window",
      "content": "All existing Pods are killed before new ones are created when `.spec.strategy.type==Recreate`. {{< note >}}\nThis will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods\nof the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new\nrevision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the\nreplacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an\n\"at most\" guarantee for your Pods, you should consider using a\n[StatefulSet](/docs/concepts/workloads/controllers/statefulset/).\n{{< /note >}}",
      "position": 0,
      "windowSize": 97
    },
    {
      "id": "sw_1138",
      "type": "sentence_window",
      "content": "All existing Pods are killed before new ones are created when `. type==Recreate`. {{< note >}} This will only guarantee Pod termination previous to creation for upgrades.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1139",
      "type": "sentence_window",
      "content": "type==Recreate`. {{< note >}} This will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods of the old revision will be terminated immediately.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1140",
      "type": "sentence_window",
      "content": "{{< note >}} This will only guarantee Pod termination previous to creation for upgrades. If you upgrade a Deployment, all Pods of the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new revision is created.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1141",
      "type": "sentence_window",
      "content": "If you upgrade a Deployment, all Pods of the old revision will be terminated immediately. Successful removal is awaited before any Pod of the new revision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state).",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1142",
      "type": "sentence_window",
      "content": "Successful removal is awaited before any Pod of the new revision is created. If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an \"at most\" guarantee for your Pods, you should consider using a",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1143",
      "type": "sentence_window",
      "content": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state). If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_1144",
      "type": "sentence_window",
      "content": "If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/). {{< /note >}}",
      "position": 6,
      "sentenceCount": 2
    },
    {
      "id": "sc_1145",
      "type": "sentence_context",
      "content": "[Recreate Deployment] All existing Pods are killed before new ones are created when `.",
      "position": 0
    },
    {
      "id": "sc_1146",
      "type": "sentence_context",
      "content": "[Recreate Deployment] [Previous: All existing Pods are killed before new ones are c...] type==Recreate`.",
      "position": 1
    },
    {
      "id": "sc_1147",
      "type": "sentence_context",
      "content": "[Recreate Deployment] {{< note >}} This will only guarantee Pod termination previous to creation for upgrades.",
      "position": 2
    },
    {
      "id": "sc_1148",
      "type": "sentence_context",
      "content": "[Recreate Deployment] [Previous: {{< note >}} This will only guarantee Pod terminat...] If you upgrade a Deployment, all Pods of the old revision will be terminated immediately.",
      "position": 3
    },
    {
      "id": "sc_1149",
      "type": "sentence_context",
      "content": "[Recreate Deployment] [Previous: If you upgrade a Deployment, all Pods of the old r...] Successful removal is awaited before any Pod of the new revision is created.",
      "position": 4
    },
    {
      "id": "sc_1150",
      "type": "sentence_context",
      "content": "[Recreate Deployment] [Previous: Successful removal is awaited before any Pod of th...] If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state).",
      "position": 5
    },
    {
      "id": "sc_1151",
      "type": "sentence_context",
      "content": "[Recreate Deployment] [Previous: If you manually delete a Pod, the lifecycle is con...] If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
      "position": 6
    },
    {
      "id": "sc_1152",
      "type": "sentence_context",
      "content": "[Recreate Deployment] [Previous: If you need an \"at most\" guarantee for your Pods, ...] {{< /note >}}",
      "position": 7
    },
    {
      "id": "s_1153",
      "type": "sentence",
      "content": "All existing Pods are killed before new ones are created when `.",
      "position": 0
    },
    {
      "id": "s_1154",
      "type": "sentence",
      "content": "type==Recreate`.",
      "position": 1
    },
    {
      "id": "s_1155",
      "type": "sentence",
      "content": "{{< note >}} This will only guarantee Pod termination previous to creation for upgrades.",
      "position": 2
    },
    {
      "id": "s_1156",
      "type": "sentence",
      "content": "If you upgrade a Deployment, all Pods of the old revision will be terminated immediately.",
      "position": 3
    },
    {
      "id": "s_1157",
      "type": "sentence",
      "content": "Successful removal is awaited before any Pod of the new revision is created.",
      "position": 4
    },
    {
      "id": "s_1158",
      "type": "sentence",
      "content": "If you manually delete a Pod, the lifecycle is controlled by the ReplicaSet and the replacement will be created immediately (even if the old Pod is still in a Terminating state).",
      "position": 5
    },
    {
      "id": "s_1159",
      "type": "sentence",
      "content": "If you need an \"at most\" guarantee for your Pods, you should consider using a [StatefulSet](/docs/concepts/workloads/controllers/statefulset/).",
      "position": 6
    },
    {
      "id": "s_1160",
      "type": "sentence",
      "content": "{{< /note >}}",
      "position": 7
    },
    {
      "id": "w_1161",
      "type": "window",
      "content": "The Deployment updates Pods in a rolling update\nfashion (gradually scale down the old ReplicaSets and scale up the new one) when `.spec.strategy.type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control\nthe rolling update process.",
      "position": 0,
      "windowSize": 33
    },
    {
      "id": "sw_1162",
      "type": "sentence_window",
      "content": "The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `. type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1163",
      "type": "sentence_window",
      "content": "type==RollingUpdate`. You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
      "position": 1,
      "sentenceCount": 2
    },
    {
      "id": "sc_1164",
      "type": "sentence_context",
      "content": "[Rolling Update Deployment] The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
      "position": 0
    },
    {
      "id": "sc_1165",
      "type": "sentence_context",
      "content": "[Rolling Update Deployment] [Previous: The Deployment updates Pods in a rolling update fa...] type==RollingUpdate`.",
      "position": 1
    },
    {
      "id": "sc_1166",
      "type": "sentence_context",
      "content": "[Rolling Update Deployment] [Previous: type==RollingUpdate`....] You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
      "position": 2
    },
    {
      "id": "s_1167",
      "type": "sentence",
      "content": "The Deployment updates Pods in a rolling update fashion (gradually scale down the old ReplicaSets and scale up the new one) when `.",
      "position": 0
    },
    {
      "id": "s_1168",
      "type": "sentence",
      "content": "type==RollingUpdate`.",
      "position": 1
    },
    {
      "id": "s_1169",
      "type": "sentence",
      "content": "You can specify `maxUnavailable` and `maxSurge` to control the rolling update process.",
      "position": 2
    },
    {
      "id": "w_1170",
      "type": "window",
      "content": "`.spec.strategy.rollingUpdate.maxUnavailable` is an optional field that specifies the maximum number\nof Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5)\nor a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by\nrounding down. The value cannot be 0 if `.spec.strategy.rollingUpdate.maxSurge` is 0. The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\nPods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled\ndown further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available\nat all times during the update is at least 70% of the desired Pods.",
      "position": 0,
      "windowSize": 125
    },
    {
      "id": "sw_1171",
      "type": "sentence_window",
      "content": "rollingUpdate. maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1172",
      "type": "sentence_window",
      "content": "maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by rounding down.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1173",
      "type": "sentence_window",
      "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The absolute number is calculated from percentage by rounding down. The value cannot be 0 if `.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1174",
      "type": "sentence_window",
      "content": "The absolute number is calculated from percentage by rounding down. The value cannot be 0 if `. rollingUpdate.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1175",
      "type": "sentence_window",
      "content": "The value cannot be 0 if `. rollingUpdate. maxSurge` is 0.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1176",
      "type": "sentence_window",
      "content": "rollingUpdate. maxSurge` is 0. The default value is 25%.",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_1177",
      "type": "sentence_window",
      "content": "maxSurge` is 0. The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts.",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_1178",
      "type": "sentence_window",
      "content": "The default value is 25%. For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_1179",
      "type": "sentence_window",
      "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts. Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at",
      "position": 8,
      "sentenceCount": 2
    },
    {
      "id": "sc_1180",
      "type": "sentence_context",
      "content": "[Max Unavailable] rollingUpdate.",
      "position": 0
    },
    {
      "id": "sc_1181",
      "type": "sentence_context",
      "content": "[Max Unavailable] maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process.",
      "position": 1
    },
    {
      "id": "sc_1182",
      "type": "sentence_context",
      "content": "[Max Unavailable] [Previous: maxUnavailable` is an optional field that specifie...] The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
      "position": 2
    },
    {
      "id": "sc_1183",
      "type": "sentence_context",
      "content": "[Max Unavailable] [Previous: The value can be an absolute number (for example, ...] The absolute number is calculated from percentage by rounding down.",
      "position": 3
    },
    {
      "id": "sc_1184",
      "type": "sentence_context",
      "content": "[Max Unavailable] [Previous: The absolute number is calculated from percentage ...] The value cannot be 0 if `.",
      "position": 4
    },
    {
      "id": "sc_1185",
      "type": "sentence_context",
      "content": "[Max Unavailable] [Previous: The value cannot be 0 if `....] rollingUpdate.",
      "position": 5
    },
    {
      "id": "sc_1186",
      "type": "sentence_context",
      "content": "[Max Unavailable] maxSurge` is 0.",
      "position": 6
    },
    {
      "id": "sc_1187",
      "type": "sentence_context",
      "content": "[Max Unavailable] The default value is 25%.",
      "position": 7
    },
    {
      "id": "sc_1188",
      "type": "sentence_context",
      "content": "[Max Unavailable] [Previous: The default value is 25%....] For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts.",
      "position": 8
    },
    {
      "id": "sc_1189",
      "type": "sentence_context",
      "content": "[Max Unavailable] [Previous: For example, when this value is set to 30%, the ol...] Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods.",
      "position": 9
    },
    {
      "id": "s_1190",
      "type": "sentence",
      "content": "rollingUpdate.",
      "position": 0
    },
    {
      "id": "s_1191",
      "type": "sentence",
      "content": "maxUnavailable` is an optional field that specifies the maximum number of Pods that can be unavailable during the update process.",
      "position": 1
    },
    {
      "id": "s_1192",
      "type": "sentence",
      "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
      "position": 2
    },
    {
      "id": "s_1193",
      "type": "sentence",
      "content": "The absolute number is calculated from percentage by rounding down.",
      "position": 3
    },
    {
      "id": "s_1194",
      "type": "sentence",
      "content": "The value cannot be 0 if `.",
      "position": 4
    },
    {
      "id": "s_1195",
      "type": "sentence",
      "content": "rollingUpdate.",
      "position": 5
    },
    {
      "id": "s_1196",
      "type": "sentence",
      "content": "maxSurge` is 0.",
      "position": 6
    },
    {
      "id": "s_1197",
      "type": "sentence",
      "content": "The default value is 25%.",
      "position": 7
    },
    {
      "id": "s_1198",
      "type": "sentence",
      "content": "For example, when this value is set to 30%, the old ReplicaSet can be scaled down to 70% of desired Pods immediately when the rolling update starts.",
      "position": 8
    },
    {
      "id": "s_1199",
      "type": "sentence",
      "content": "Once new Pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of Pods available at all times during the update is at least 70% of the desired Pods.",
      "position": 9
    },
    {
      "id": "w_1200",
      "type": "window",
      "content": "`.spec.strategy.rollingUpdate.maxSurge` is an optional field that specifies the maximum number of Pods\nthat can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a\npercentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number\nis calculated from the percentage by rounding up. The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the\nrolling update starts, such that the total number of old and new Pods does not exceed 130% of desired\nPods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the\ntotal number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`: {{< tabs name=\"tab_with_md\" >}}\n{{% tab name=\"Max Unavailable\" %}} {{% /tab %}}\n{{% tab name=\"Max Surge\" %}} {{% /tab %}}\n{{% tab name=\"Hybrid\" %}} {{% /tab %}}\n{{< /tabs >}}",
      "position": 0,
      "windowSize": 173
    },
    {
      "id": "sw_1201",
      "type": "sentence_window",
      "content": "rollingUpdate. maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1202",
      "type": "sentence_window",
      "content": "maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods. The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1203",
      "type": "sentence_window",
      "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%). The value cannot be 0 if `maxUnavailable` is 0. The absolute number is calculated from the percentage by rounding up.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1204",
      "type": "sentence_window",
      "content": "The value cannot be 0 if `maxUnavailable` is 0. The absolute number is calculated from the percentage by rounding up. The default value is 25%.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1205",
      "type": "sentence_window",
      "content": "The absolute number is calculated from the percentage by rounding up. The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1206",
      "type": "sentence_window",
      "content": "The default value is 25%. For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of",
      "position": 5,
      "sentenceCount": 3
    },
    {
      "id": "sw_1207",
      "type": "sentence_window",
      "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods. Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time",
      "position": 6,
      "sentenceCount": 3
    },
    {
      "id": "sw_1208",
      "type": "sentence_window",
      "content": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods. Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`: {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}",
      "position": 7,
      "sentenceCount": 3
    },
    {
      "id": "sw_1209",
      "type": "sentence_window",
      "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`: {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}} {{% /tab %}} {{% tab name=\"Max Surge\" %}}",
      "position": 8,
      "sentenceCount": 3
    },
    {
      "id": "sw_1210",
      "type": "sentence_window",
      "content": "{{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}} {{% /tab %}} {{% tab name=\"Max Surge\" %}} {{% /tab %}} {{% tab name=\"Hybrid\" %}}",
      "position": 9,
      "sentenceCount": 3
    },
    {
      "id": "sw_1211",
      "type": "sentence_window",
      "content": "{{% /tab %}} {{% tab name=\"Max Surge\" %}} {{% /tab %}} {{% tab name=\"Hybrid\" %}} {{% /tab %}} {{< /tabs >}}",
      "position": 10,
      "sentenceCount": 3
    },
    {
      "id": "sw_1212",
      "type": "sentence_window",
      "content": "{{% /tab %}} {{% tab name=\"Hybrid\" %}} {{% /tab %}} {{< /tabs >}}",
      "position": 11,
      "sentenceCount": 2
    },
    {
      "id": "sc_1213",
      "type": "sentence_context",
      "content": "[Max Surge] rollingUpdate.",
      "position": 0
    },
    {
      "id": "sc_1214",
      "type": "sentence_context",
      "content": "[Max Surge] maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods.",
      "position": 1
    },
    {
      "id": "sc_1215",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: maxSurge` is an optional field that specifies the ...] The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
      "position": 2
    },
    {
      "id": "sc_1216",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: The value can be an absolute number (for example, ...] The value cannot be 0 if `maxUnavailable` is 0.",
      "position": 3
    },
    {
      "id": "sc_1217",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: The value cannot be 0 if `maxUnavailable` is 0....] The absolute number is calculated from the percentage by rounding up.",
      "position": 4
    },
    {
      "id": "sc_1218",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: The absolute number is calculated from the percent...] The default value is 25%.",
      "position": 5
    },
    {
      "id": "sc_1219",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: The default value is 25%....] For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods.",
      "position": 6
    },
    {
      "id": "sc_1220",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: For example, when this value is set to 30%, the ne...] Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods.",
      "position": 7
    },
    {
      "id": "sc_1221",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: Once old Pods have been killed, the new ReplicaSet...] Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:",
      "position": 8
    },
    {
      "id": "sc_1222",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: Here are some Rolling Update Deployment examples t...] {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}",
      "position": 9
    },
    {
      "id": "sc_1223",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: {{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max ...] {{% /tab %}} {{% tab name=\"Max Surge\" %}}",
      "position": 10
    },
    {
      "id": "sc_1224",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: {{% /tab %}} {{% tab name=\"Max Surge\" %}}...] {{% /tab %}} {{% tab name=\"Hybrid\" %}}",
      "position": 11
    },
    {
      "id": "sc_1225",
      "type": "sentence_context",
      "content": "[Max Surge] [Previous: {{% /tab %}} {{% tab name=\"Hybrid\" %}}...] {{% /tab %}} {{< /tabs >}}",
      "position": 12
    },
    {
      "id": "s_1226",
      "type": "sentence",
      "content": "rollingUpdate.",
      "position": 0
    },
    {
      "id": "s_1227",
      "type": "sentence",
      "content": "maxSurge` is an optional field that specifies the maximum number of Pods that can be created over the desired number of Pods.",
      "position": 1
    },
    {
      "id": "s_1228",
      "type": "sentence",
      "content": "The value can be an absolute number (for example, 5) or a percentage of desired Pods (for example, 10%).",
      "position": 2
    },
    {
      "id": "s_1229",
      "type": "sentence",
      "content": "The value cannot be 0 if `maxUnavailable` is 0.",
      "position": 3
    },
    {
      "id": "s_1230",
      "type": "sentence",
      "content": "The absolute number is calculated from the percentage by rounding up.",
      "position": 4
    },
    {
      "id": "s_1231",
      "type": "sentence",
      "content": "The default value is 25%.",
      "position": 5
    },
    {
      "id": "s_1232",
      "type": "sentence",
      "content": "For example, when this value is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new Pods does not exceed 130% of desired Pods.",
      "position": 6
    },
    {
      "id": "s_1233",
      "type": "sentence",
      "content": "Once old Pods have been killed, the new ReplicaSet can be scaled up further, ensuring that the total number of Pods running at any time during the update is at most 130% of desired Pods.",
      "position": 7
    },
    {
      "id": "s_1234",
      "type": "sentence",
      "content": "Here are some Rolling Update Deployment examples that use the `maxUnavailable` and `maxSurge`:",
      "position": 8
    },
    {
      "id": "s_1235",
      "type": "sentence",
      "content": "{{< tabs name=\"tab_with_md\" >}} {{% tab name=\"Max Unavailable\" %}}",
      "position": 9
    },
    {
      "id": "s_1236",
      "type": "sentence",
      "content": "{{% /tab %}} {{% tab name=\"Max Surge\" %}}",
      "position": 10
    },
    {
      "id": "s_1237",
      "type": "sentence",
      "content": "{{% /tab %}} {{% tab name=\"Hybrid\" %}}",
      "position": 11
    },
    {
      "id": "s_1238",
      "type": "sentence",
      "content": "{{% /tab %}} {{< /tabs >}}",
      "position": 12
    },
    {
      "id": "w_1239",
      "type": "window",
      "content": "`.spec.progressDeadlineSeconds` is an optional field that specifies the number of seconds you want\nto wait for your Deployment to progress before the system reports back that the Deployment has\n[failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.\nand `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep\nretrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment\ncontroller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `.spec.minReadySeconds`.",
      "position": 0,
      "windowSize": 92
    },
    {
      "id": "sw_1240",
      "type": "sentence_window",
      "content": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`. and `reason: ProgressDeadlineExceeded` in the",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1241",
      "type": "sentence_window",
      "content": "and `reason: ProgressDeadlineExceeded` in the status of the resource. The Deployment controller will keep retrying the Deployment. This defaults to 600.",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1242",
      "type": "sentence_window",
      "content": "The Deployment controller will keep retrying the Deployment. This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1243",
      "type": "sentence_window",
      "content": "This defaults to 600. In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1244",
      "type": "sentence_window",
      "content": "In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition. If specified, this field needs to be greater than `. minReadySeconds`.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1245",
      "type": "sentence_window",
      "content": "If specified, this field needs to be greater than `. minReadySeconds`.",
      "position": 5,
      "sentenceCount": 2
    },
    {
      "id": "sc_1246",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
      "position": 0
    },
    {
      "id": "sc_1247",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] [Previous: progressDeadlineSeconds` is an optional field that...] and `reason: ProgressDeadlineExceeded` in the status of the resource.",
      "position": 1
    },
    {
      "id": "sc_1248",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] [Previous: and `reason: ProgressDeadlineExceeded` in the stat...] The Deployment controller will keep retrying the Deployment.",
      "position": 2
    },
    {
      "id": "sc_1249",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] [Previous: The Deployment controller will keep retrying the D...] This defaults to 600.",
      "position": 3
    },
    {
      "id": "sc_1250",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] [Previous: This defaults to 600....] In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.",
      "position": 4
    },
    {
      "id": "sc_1251",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] [Previous: In the future, once automatic rollback will be imp...] If specified, this field needs to be greater than `.",
      "position": 5
    },
    {
      "id": "sc_1252",
      "type": "sentence_context",
      "content": "[Progress Deadline Seconds] [Previous: If specified, this field needs to be greater than ...] minReadySeconds`.",
      "position": 6
    },
    {
      "id": "s_1253",
      "type": "sentence",
      "content": "progressDeadlineSeconds` is an optional field that specifies the number of seconds you want to wait for your Deployment to progress before the system reports back that the Deployment has [failed progressing](#failed-deployment) - surfaced as a condition with `type: Progressing`, `status: \"False\"`.",
      "position": 0
    },
    {
      "id": "s_1254",
      "type": "sentence",
      "content": "and `reason: ProgressDeadlineExceeded` in the status of the resource.",
      "position": 1
    },
    {
      "id": "s_1255",
      "type": "sentence",
      "content": "The Deployment controller will keep retrying the Deployment.",
      "position": 2
    },
    {
      "id": "s_1256",
      "type": "sentence",
      "content": "This defaults to 600.",
      "position": 3
    },
    {
      "id": "s_1257",
      "type": "sentence",
      "content": "In the future, once automatic rollback will be implemented, the Deployment controller will roll back a Deployment as soon as it observes such a condition.",
      "position": 4
    },
    {
      "id": "s_1258",
      "type": "sentence",
      "content": "If specified, this field needs to be greater than `.",
      "position": 5
    },
    {
      "id": "s_1259",
      "type": "sentence",
      "content": "minReadySeconds`.",
      "position": 6
    },
    {
      "id": "w_1260",
      "type": "window",
      "content": "`.spec.minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly\ncreated Pod should be ready without any of its containers crashing, for it to be considered available.\nThis defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when\na Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
      "position": 0,
      "windowSize": 59
    },
    {
      "id": "sw_1261",
      "type": "sentence_window",
      "content": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready).",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1262",
      "type": "sentence_window",
      "content": "for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1263",
      "type": "sentence_window",
      "content": "This defaults to 0 (the Pod will be considered available as soon as it is ready). To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
      "position": 2,
      "sentenceCount": 2
    },
    {
      "id": "sc_1264",
      "type": "sentence_context",
      "content": "[Min Ready Seconds] minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing",
      "position": 0
    },
    {
      "id": "sc_1265",
      "type": "sentence_context",
      "content": "[Min Ready Seconds] [Previous: minReadySeconds` is an optional field that specifi...] for it to be considered available.",
      "position": 1
    },
    {
      "id": "sc_1266",
      "type": "sentence_context",
      "content": "[Min Ready Seconds] [Previous: for it to be considered available....] This defaults to 0 (the Pod will be considered available as soon as it is ready).",
      "position": 2
    },
    {
      "id": "sc_1267",
      "type": "sentence_context",
      "content": "[Min Ready Seconds] [Previous: This defaults to 0 (the Pod will be considered ava...] To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
      "position": 3
    },
    {
      "id": "s_1268",
      "type": "sentence",
      "content": "minReadySeconds` is an optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing",
      "position": 0
    },
    {
      "id": "s_1269",
      "type": "sentence",
      "content": "for it to be considered available.",
      "position": 1
    },
    {
      "id": "s_1270",
      "type": "sentence",
      "content": "This defaults to 0 (the Pod will be considered available as soon as it is ready).",
      "position": 2
    },
    {
      "id": "s_1271",
      "type": "sentence",
      "content": "To learn more about when a Pod is considered ready, see [Container Probes](/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).",
      "position": 3
    },
    {
      "id": "w_1272",
      "type": "window",
      "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}} You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas`\n[feature gate](/docs/reference/command-line-tools-reference/feature-gates/)\non the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/)\nand on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/) Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume\nadditional resources during that period. As a result, the total number of all pods can temporarily exceed\n`.spec.replicas`. Terminating pods can be tracked using the `.status.terminatingReplicas` field of the Deployment.",
      "position": 0,
      "windowSize": 68
    },
    {
      "id": "sw_1273",
      "type": "sentence_window",
      "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}} You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1274",
      "type": "sentence_window",
      "content": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1275",
      "type": "sentence_window",
      "content": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period. As a result, the total number of all pods can temporarily exceed `. Terminating pods can be tracked using the `.",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1276",
      "type": "sentence_window",
      "content": "As a result, the total number of all pods can temporarily exceed `. Terminating pods can be tracked using the `. terminatingReplicas` field of the Deployment.",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1277",
      "type": "sentence_window",
      "content": "Terminating pods can be tracked using the `. terminatingReplicas` field of the Deployment.",
      "position": 4,
      "sentenceCount": 2
    },
    {
      "id": "sc_1278",
      "type": "sentence_context",
      "content": "[Terminating Pods] {{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}",
      "position": 0
    },
    {
      "id": "sc_1279",
      "type": "sentence_context",
      "content": "[Terminating Pods] [Previous: {{< feature-state feature_gate_name=\"DeploymentRep...] You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the",
      "position": 1
    },
    {
      "id": "sc_1280",
      "type": "sentence_context",
      "content": "[Terminating Pods] [Previous: You can enable this feature by setting the `Deploy...] Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period.",
      "position": 2
    },
    {
      "id": "sc_1281",
      "type": "sentence_context",
      "content": "[Terminating Pods] [Previous: Pods that become terminating due to deletion or sc...] As a result, the total number of all pods can temporarily exceed `.",
      "position": 3
    },
    {
      "id": "sc_1282",
      "type": "sentence_context",
      "content": "[Terminating Pods] [Previous: As a result, the total number of all pods can temp...] Terminating pods can be tracked using the `.",
      "position": 4
    },
    {
      "id": "sc_1283",
      "type": "sentence_context",
      "content": "[Terminating Pods] [Previous: Terminating pods can be tracked using the `....] terminatingReplicas` field of the Deployment.",
      "position": 5
    },
    {
      "id": "s_1284",
      "type": "sentence",
      "content": "{{< feature-state feature_gate_name=\"DeploymentReplicaSetTerminatingReplicas\" >}}",
      "position": 0
    },
    {
      "id": "s_1285",
      "type": "sentence",
      "content": "You can enable this feature by setting the `DeploymentReplicaSetTerminatingReplicas` [feature gate](/docs/reference/command-line-tools-reference/feature-gates/) on the [API server](/docs/reference/command-line-tools-reference/kube-apiserver/) and on the [kube-controller-manager](/docs/reference/command-line-tools-reference/kube-controller-manager/)",
      "position": 1
    },
    {
      "id": "s_1286",
      "type": "sentence",
      "content": "Pods that become terminating due to deletion or scale down may take a long time to terminate, and may consume additional resources during that period.",
      "position": 2
    },
    {
      "id": "s_1287",
      "type": "sentence",
      "content": "As a result, the total number of all pods can temporarily exceed `.",
      "position": 3
    },
    {
      "id": "s_1288",
      "type": "sentence",
      "content": "Terminating pods can be tracked using the `.",
      "position": 4
    },
    {
      "id": "s_1289",
      "type": "sentence",
      "content": "terminatingReplicas` field of the Deployment.",
      "position": 5
    },
    {
      "id": "w_1290",
      "type": "window",
      "content": "A Deployment's revision history is stored in the ReplicaSets it controls. `.spec.revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain\nto allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.\nIn this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
      "position": 0,
      "windowSize": 127
    },
    {
      "id": "sw_1291",
      "type": "sentence_window",
      "content": "A Deployment's revision history is stored in the ReplicaSets it controls. revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1292",
      "type": "sentence_window",
      "content": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback. These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1293",
      "type": "sentence_window",
      "content": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`. The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1294",
      "type": "sentence_window",
      "content": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment. By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this",
      "position": 3,
      "sentenceCount": 3
    },
    {
      "id": "sw_1295",
      "type": "sentence_window",
      "content": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments. More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
      "position": 4,
      "sentenceCount": 3
    },
    {
      "id": "sw_1296",
      "type": "sentence_window",
      "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up. In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
      "position": 5,
      "sentenceCount": 2
    },
    {
      "id": "sc_1297",
      "type": "sentence_context",
      "content": "[Revision History Limit] A Deployment's revision history is stored in the ReplicaSets it controls.",
      "position": 0
    },
    {
      "id": "sc_1298",
      "type": "sentence_context",
      "content": "[Revision History Limit] [Previous: A Deployment's revision history is stored in the R...] revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback.",
      "position": 1
    },
    {
      "id": "sc_1299",
      "type": "sentence_context",
      "content": "[Revision History Limit] [Previous: revisionHistoryLimit` is an optional field that sp...] These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
      "position": 2
    },
    {
      "id": "sc_1300",
      "type": "sentence_context",
      "content": "[Revision History Limit] [Previous: These old ReplicaSets consume resources in `etcd` ...] The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
      "position": 3
    },
    {
      "id": "sc_1301",
      "type": "sentence_context",
      "content": "[Revision History Limit] [Previous: The configuration of each Deployment revision is s...] By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
      "position": 4
    },
    {
      "id": "sc_1302",
      "type": "sentence_context",
      "content": "[Revision History Limit] [Previous: By default, 10 old ReplicaSets will be kept, howev...] More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
      "position": 5
    },
    {
      "id": "sc_1303",
      "type": "sentence_context",
      "content": "[Revision History Limit] [Previous: More specifically, setting this field to zero mean...] In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
      "position": 6
    },
    {
      "id": "s_1304",
      "type": "sentence",
      "content": "A Deployment's revision history is stored in the ReplicaSets it controls.",
      "position": 0
    },
    {
      "id": "s_1305",
      "type": "sentence",
      "content": "revisionHistoryLimit` is an optional field that specifies the number of old ReplicaSets to retain to allow rollback.",
      "position": 1
    },
    {
      "id": "s_1306",
      "type": "sentence",
      "content": "These old ReplicaSets consume resources in `etcd` and crowd the output of `kubectl get rs`.",
      "position": 2
    },
    {
      "id": "s_1307",
      "type": "sentence",
      "content": "The configuration of each Deployment revision is stored in its ReplicaSets; therefore, once an old ReplicaSet is deleted, you lose the ability to rollback to that revision of Deployment.",
      "position": 3
    },
    {
      "id": "s_1308",
      "type": "sentence",
      "content": "By default, 10 old ReplicaSets will be kept, however its ideal value depends on the frequency and stability of new Deployments.",
      "position": 4
    },
    {
      "id": "s_1309",
      "type": "sentence",
      "content": "More specifically, setting this field to zero means that all old ReplicaSets with 0 replicas will be cleaned up.",
      "position": 5
    },
    {
      "id": "s_1310",
      "type": "sentence",
      "content": "In this case, a new Deployment rollout cannot be undone, since its revision history is cleaned up.",
      "position": 6
    },
    {
      "id": "w_1311",
      "type": "window",
      "content": "`.spec.paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between\na paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused\nDeployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when\nit is created.",
      "position": 0,
      "windowSize": 55
    },
    {
      "id": "sw_1312",
      "type": "sentence_window",
      "content": "paused` is an optional boolean field for pausing and resuming a Deployment. The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when it is created.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1313",
      "type": "sentence_window",
      "content": "The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused. A Deployment is not paused by default when it is created.",
      "position": 1,
      "sentenceCount": 2
    },
    {
      "id": "sc_1314",
      "type": "sentence_context",
      "content": "[Paused] paused` is an optional boolean field for pausing and resuming a Deployment.",
      "position": 0
    },
    {
      "id": "sc_1315",
      "type": "sentence_context",
      "content": "[Paused] [Previous: paused` is an optional boolean field for pausing a...] The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused.",
      "position": 1
    },
    {
      "id": "sc_1316",
      "type": "sentence_context",
      "content": "[Paused] [Previous: The only difference between a paused Deployment an...] A Deployment is not paused by default when it is created.",
      "position": 2
    },
    {
      "id": "s_1317",
      "type": "sentence",
      "content": "paused` is an optional boolean field for pausing and resuming a Deployment.",
      "position": 0
    },
    {
      "id": "s_1318",
      "type": "sentence",
      "content": "The only difference between a paused Deployment and one that is not paused, is that any changes into the PodTemplateSpec of the paused Deployment will not trigger new rollouts as long as it is paused.",
      "position": 1
    },
    {
      "id": "s_1319",
      "type": "sentence",
      "content": "A Deployment is not paused by default when it is created.",
      "position": 2
    },
    {
      "id": "w_1320",
      "type": "window",
      "content": "Learn more about [Pods](/docs/concepts/workloads/pods). [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how\nyou can use it to manage application availability during disruptions. Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
      "position": 0,
      "windowSize": 42
    },
    {
      "id": "sw_1321",
      "type": "sentence_window",
      "content": "Learn more about [Pods](/docs/concepts/workloads/pods). [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
      "position": 0,
      "sentenceCount": 3
    },
    {
      "id": "sw_1322",
      "type": "sentence_window",
      "content": "[Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/). Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application",
      "position": 1,
      "sentenceCount": 3
    },
    {
      "id": "sw_1323",
      "type": "sentence_window",
      "content": "Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API. Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions. Use kubectl to [create a",
      "position": 2,
      "sentenceCount": 3
    },
    {
      "id": "sw_1324",
      "type": "sentence_window",
      "content": "Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions. Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
      "position": 3,
      "sentenceCount": 2
    },
    {
      "id": "sc_1325",
      "type": "sentence_context",
      "content": "[{{% heading \"whatsnext\" %}}] Learn more about [Pods](/docs/concepts/workloads/pods).",
      "position": 0
    },
    {
      "id": "sc_1326",
      "type": "sentence_context",
      "content": "[{{% heading \"whatsnext\" %}}] [Previous: Learn more about [Pods](/docs/concepts/workloads/p...] [Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
      "position": 1
    },
    {
      "id": "sc_1327",
      "type": "sentence_context",
      "content": "[{{% heading \"whatsnext\" %}}] [Previous: [Run a stateless application using a Deployment](/...] Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
      "position": 2
    },
    {
      "id": "sc_1328",
      "type": "sentence_context",
      "content": "[{{% heading \"whatsnext\" %}}] [Previous: Read the {{< api-reference page=\"workload-resource...] Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions.",
      "position": 3
    },
    {
      "id": "sc_1329",
      "type": "sentence_context",
      "content": "[{{% heading \"whatsnext\" %}}] [Previous: Read about [PodDisruptionBudget](/docs/concepts/wo...] Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
      "position": 4
    },
    {
      "id": "s_1330",
      "type": "sentence",
      "content": "Learn more about [Pods](/docs/concepts/workloads/pods).",
      "position": 0
    },
    {
      "id": "s_1331",
      "type": "sentence",
      "content": "[Run a stateless application using a Deployment](/docs/tasks/run-application/run-stateless-application-deployment/).",
      "position": 1
    },
    {
      "id": "s_1332",
      "type": "sentence",
      "content": "Read the {{< api-reference page=\"workload-resources/deployment-v1\" >}} to understand the Deployment API.",
      "position": 2
    },
    {
      "id": "s_1333",
      "type": "sentence",
      "content": "Read about [PodDisruptionBudget](/docs/concepts/workloads/pods/disruptions/) and how you can use it to manage application availability during disruptions.",
      "position": 3
    },
    {
      "id": "s_1334",
      "type": "sentence",
      "content": "Use kubectl to [create a Deployment](/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/).",
      "position": 4
    }
  ]
}