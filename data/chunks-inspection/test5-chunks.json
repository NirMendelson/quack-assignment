[
  {
    "type": "sentence",
    "content": "# File system\n\n<!",
    "originalSentence": "# File system\n\n<!",
    "position": 0,
    "id": "sentence_0"
  },
  {
    "type": "sentence",
    "content": "--introduced_in=v0.",
    "originalSentence": "--introduced_in=v0.",
    "position": 1,
    "id": "sentence_1"
  },
  {
    "type": "sentence",
    "content": "10.0-->\n\n> Stability: 2 - Stable\n\n<!",
    "originalSentence": "10.0-->\n\n> Stability: 2 - Stable\n\n<!",
    "position": 2,
    "id": "sentence_2"
  },
  {
    "type": "sentence",
    "content": "--name=fs-->\n\n<!",
    "originalSentence": "--name=fs-->\n\n<!",
    "position": 3,
    "id": "sentence_3"
  },
  {
    "type": "sentence",
    "content": "-- source_link=lib/fs.",
    "originalSentence": "-- source_link=lib/fs.",
    "position": 4,
    "id": "sentence_4"
  },
  {
    "type": "sentence",
    "content": "js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions.",
    "originalSentence": "js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions.",
    "position": 5,
    "id": "sentence_5"
  },
  {
    "type": "sentence",
    "content": "To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).",
    "originalSentence": "To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).",
    "position": 6,
    "id": "sentence_6"
  },
  {
    "type": "sentence",
    "content": "## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete.",
    "originalSentence": "## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete.",
    "position": 7,
    "id": "sentence_7"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console.",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console.",
    "position": 8,
    "id": "sentence_8"
  },
  {
    "type": "sentence",
    "content": "log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.",
    "position": 9,
    "id": "sentence_9"
  },
  {
    "type": "sentence",
    "content": "error('there was an error:', error.",
    "originalSentence": "error('there was an error:', error.",
    "position": 10,
    "id": "sentence_10"
  },
  {
    "type": "sentence",
    "content": "message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console.",
    "position": 11,
    "id": "sentence_11"
  },
  {
    "type": "sentence",
    "content": "log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.",
    "originalSentence": "log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.",
    "position": 12,
    "id": "sentence_12"
  },
  {
    "type": "sentence",
    "content": "error('there was an error:', error.",
    "originalSentence": "error('there was an error:', error.",
    "position": 13,
    "id": "sentence_13"
  },
  {
    "type": "sentence",
    "content": "message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously.",
    "originalSentence": "message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously.",
    "position": 14,
    "id": "sentence_14"
  },
  {
    "type": "sentence",
    "content": "The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception.",
    "originalSentence": "The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception.",
    "position": 15,
    "id": "sentence_15"
  },
  {
    "type": "sentence",
    "content": "If the operation is completed successfully, then\nthe first argument is `null` or `undefined`.",
    "originalSentence": "If the operation is completed successfully, then\nthe first argument is `null` or `undefined`.",
    "position": 16,
    "id": "sentence_16"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "position": 17,
    "id": "sentence_17"
  },
  {
    "type": "sentence",
    "content": "log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "position": 18,
    "id": "sentence_18"
  },
  {
    "type": "sentence",
    "content": "log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required.",
    "position": 19,
    "id": "sentence_19"
  },
  {
    "type": "sentence",
    "content": "## Synchronous example\n\nThe synchronous APIs block the Node.",
    "originalSentence": "## Synchronous example\n\nThe synchronous APIs block the Node.",
    "position": 20,
    "id": "sentence_20"
  },
  {
    "type": "sentence",
    "content": "js event loop and further JavaScript\nexecution until the operation is complete.",
    "originalSentence": "js event loop and further JavaScript\nexecution until the operation is complete.",
    "position": 21,
    "id": "sentence_21"
  },
  {
    "type": "sentence",
    "content": "Exceptions are thrown immediately\nand can be handled using `try…",
    "originalSentence": "Exceptions are thrown immediately\nand can be handled using `try…",
    "position": 22,
    "id": "sentence_22"
  },
  {
    "type": "sentence",
    "content": "catch`, or can be allowed to bubble up.",
    "originalSentence": "catch`, or can be allowed to bubble up.",
    "position": 23,
    "id": "sentence_23"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "originalSentence": "```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "position": 24,
    "id": "sentence_24"
  },
  {
    "type": "sentence",
    "content": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "position": 25,
    "id": "sentence_25"
  },
  {
    "type": "sentence",
    "content": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<!",
    "originalSentence": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<!",
    "position": 26,
    "id": "sentence_26"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 27,
    "id": "sentence_27"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v14.",
    "originalSentence": "0.0\nchanges:\n  - version: v14.",
    "position": 28,
    "id": "sentence_28"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`.",
    "position": 29,
    "id": "sentence_29"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v11.",
    "originalSentence": "- version:\n    - v11.",
    "position": 30,
    "id": "sentence_30"
  },
  {
    "type": "sentence",
    "content": "14.0\n    - v10.",
    "originalSentence": "14.0\n    - v10.",
    "position": 31,
    "id": "sentence_31"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental.",
    "position": 32,
    "id": "sentence_32"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 33,
    "id": "sentence_33"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs').",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs').",
    "position": 34,
    "id": "sentence_34"
  },
  {
    "type": "sentence",
    "content": "promises` only.",
    "originalSentence": "promises` only.",
    "position": 35,
    "id": "sentence_35"
  },
  {
    "type": "sentence",
    "content": "-->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises.",
    "originalSentence": "-->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises.",
    "position": 36,
    "id": "sentence_36"
  },
  {
    "type": "sentence",
    "content": "The promise APIs use the underlying Node.",
    "originalSentence": "The promise APIs use the underlying Node.",
    "position": 37,
    "id": "sentence_37"
  },
  {
    "type": "sentence",
    "content": "js threadpool to perform file\nsystem operations off the event loop thread.",
    "originalSentence": "js threadpool to perform file\nsystem operations off the event loop thread.",
    "position": 38,
    "id": "sentence_38"
  },
  {
    "type": "sentence",
    "content": "These operations are not\nsynchronized or threadsafe.",
    "originalSentence": "These operations are not\nsynchronized or threadsafe.",
    "position": 39,
    "id": "sentence_39"
  },
  {
    "type": "sentence",
    "content": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "originalSentence": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "position": 40,
    "id": "sentence_40"
  },
  {
    "type": "sentence",
    "content": "### Class: `FileHandle`\n\n<!",
    "originalSentence": "### Class: `FileHandle`\n\n<!",
    "position": 41,
    "id": "sentence_41"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 42,
    "id": "sentence_42"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor.",
    "originalSentence": "0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor.",
    "position": 43,
    "id": "sentence_43"
  },
  {
    "type": "sentence",
    "content": "Instances of the {FileHandle} object are created by the `fsPromises.",
    "originalSentence": "Instances of the {FileHandle} object are created by the `fsPromises.",
    "position": 44,
    "id": "sentence_44"
  },
  {
    "type": "sentence",
    "content": "open()`\nmethod.",
    "originalSentence": "open()`\nmethod.",
    "position": 45,
    "id": "sentence_45"
  },
  {
    "type": "sentence",
    "content": "All {FileHandle} objects are {EventEmitter}s.",
    "originalSentence": "All {FileHandle} objects are {EventEmitter}s.",
    "position": 46,
    "id": "sentence_46"
  },
  {
    "type": "sentence",
    "content": "If a {FileHandle} is not closed using the `filehandle.",
    "originalSentence": "If a {FileHandle} is not closed using the `filehandle.",
    "position": 47,
    "id": "sentence_47"
  },
  {
    "type": "sentence",
    "content": "close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks.",
    "originalSentence": "close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks.",
    "position": 48,
    "id": "sentence_48"
  },
  {
    "type": "sentence",
    "content": "Please do not rely on this behavior because\nit can be unreliable and the file may not be closed.",
    "originalSentence": "Please do not rely on this behavior because\nit can be unreliable and the file may not be closed.",
    "position": 49,
    "id": "sentence_49"
  },
  {
    "type": "sentence",
    "content": "Instead, always explicitly\nclose {FileHandle}s.",
    "originalSentence": "Instead, always explicitly\nclose {FileHandle}s.",
    "position": 50,
    "id": "sentence_50"
  },
  {
    "type": "sentence",
    "content": "js may change this behavior in the future.",
    "originalSentence": "js may change this behavior in the future.",
    "position": 51,
    "id": "sentence_51"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'close'`\n\n<!",
    "originalSentence": "#### Event: `'close'`\n\n<!",
    "position": 52,
    "id": "sentence_52"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v15.",
    "originalSentence": "-- YAML\nadded: v15.",
    "position": 53,
    "id": "sentence_53"
  },
  {
    "type": "sentence",
    "content": "4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used.",
    "originalSentence": "4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used.",
    "position": 54,
    "id": "sentence_54"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 55,
    "id": "sentence_55"
  },
  {
    "type": "sentence",
    "content": "appendFile(data[, options])`\n\n<!",
    "originalSentence": "appendFile(data[, options])`\n\n<!",
    "position": 56,
    "id": "sentence_56"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 57,
    "id": "sentence_57"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v21.",
    "position": 58,
    "id": "sentence_58"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v20.",
    "originalSentence": "1.0\n    - v20.",
    "position": 59,
    "id": "sentence_59"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 60,
    "id": "sentence_60"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 61,
    "id": "sentence_61"
  },
  {
    "type": "sentence",
    "content": "14.0\n      - v14.",
    "originalSentence": "14.0\n      - v14.",
    "position": 62,
    "id": "sentence_62"
  },
  {
    "type": "sentence",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "position": 63,
    "id": "sentence_63"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 64,
    "id": "sentence_64"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 65,
    "id": "sentence_65"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "originalSentence": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "position": 66,
    "id": "sentence_66"
  },
  {
    "type": "sentence",
    "content": "**Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "**Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 67,
    "id": "sentence_67"
  },
  {
    "type": "sentence",
    "content": "Alias of [`filehandle.",
    "originalSentence": "Alias of [`filehandle.",
    "position": 68,
    "id": "sentence_68"
  },
  {
    "type": "sentence",
    "content": "writeFile()`][].",
    "originalSentence": "writeFile()`][].",
    "position": 69,
    "id": "sentence_69"
  },
  {
    "type": "sentence",
    "content": "When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises.",
    "originalSentence": "When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises.",
    "position": 70,
    "id": "sentence_70"
  },
  {
    "type": "sentence",
    "content": "open()`][].",
    "originalSentence": "open()`][].",
    "position": 71,
    "id": "sentence_71"
  },
  {
    "type": "sentence",
    "content": "Therefore, this is equivalent to\n[`filehandle.",
    "originalSentence": "Therefore, this is equivalent to\n[`filehandle.",
    "position": 72,
    "id": "sentence_72"
  },
  {
    "type": "sentence",
    "content": "writeFile()`][].",
    "originalSentence": "writeFile()`][].",
    "position": 73,
    "id": "sentence_73"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 74,
    "id": "sentence_74"
  },
  {
    "type": "sentence",
    "content": "chmod(mode)`\n\n<!",
    "originalSentence": "chmod(mode)`\n\n<!",
    "position": 75,
    "id": "sentence_75"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 76,
    "id": "sentence_76"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `mode` {integer} the file mode bit mask.",
    "originalSentence": "0.0\n-->\n\n* `mode` {integer} the file mode bit mask.",
    "position": 77,
    "id": "sentence_77"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 78,
    "id": "sentence_78"
  },
  {
    "type": "sentence",
    "content": "Modifies the permissions on the file.",
    "originalSentence": "Modifies the permissions on the file.",
    "position": 79,
    "id": "sentence_79"
  },
  {
    "type": "sentence",
    "content": "See chmod(2).",
    "originalSentence": "See chmod(2).",
    "position": 80,
    "id": "sentence_80"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 81,
    "id": "sentence_81"
  },
  {
    "type": "sentence",
    "content": "chown(uid, gid)`\n\n<!",
    "originalSentence": "chown(uid, gid)`\n\n<!",
    "position": 82,
    "id": "sentence_82"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 83,
    "id": "sentence_83"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `uid` {integer} The file's new owner's user id.",
    "originalSentence": "0.0\n-->\n\n* `uid` {integer} The file's new owner's user id.",
    "position": 84,
    "id": "sentence_84"
  },
  {
    "type": "sentence",
    "content": "* `gid` {integer} The file's new group's group id.",
    "originalSentence": "* `gid` {integer} The file's new group's group id.",
    "position": 85,
    "id": "sentence_85"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 86,
    "id": "sentence_86"
  },
  {
    "type": "sentence",
    "content": "Changes the ownership of the file.",
    "originalSentence": "Changes the ownership of the file.",
    "position": 87,
    "id": "sentence_87"
  },
  {
    "type": "sentence",
    "content": "A wrapper for chown(2).",
    "originalSentence": "A wrapper for chown(2).",
    "position": 88,
    "id": "sentence_88"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 89,
    "id": "sentence_89"
  },
  {
    "type": "sentence",
    "content": "close()`\n\n<!",
    "originalSentence": "close()`\n\n<!",
    "position": 90,
    "id": "sentence_90"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 91,
    "id": "sentence_91"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 92,
    "id": "sentence_92"
  },
  {
    "type": "sentence",
    "content": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete.",
    "originalSentence": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete.",
    "position": 93,
    "id": "sentence_93"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.",
    "position": 94,
    "id": "sentence_94"
  },
  {
    "type": "sentence",
    "content": "txt', 'r');\n} finally {\n  await filehandle?.",
    "originalSentence": "txt', 'r');\n} finally {\n  await filehandle?.",
    "position": 95,
    "id": "sentence_95"
  },
  {
    "type": "sentence",
    "content": "close();\n}\n```\n\n#### `filehandle.",
    "originalSentence": "close();\n}\n```\n\n#### `filehandle.",
    "position": 96,
    "id": "sentence_96"
  },
  {
    "type": "sentence",
    "content": "createReadStream([options])`\n\n<!",
    "originalSentence": "createReadStream([options])`\n\n<!",
    "position": 97,
    "id": "sentence_97"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v16.",
    "originalSentence": "-- YAML\nadded: v16.",
    "position": 98,
    "id": "sentence_98"
  },
  {
    "type": "sentence",
    "content": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs.",
    "originalSentence": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs.",
    "position": 99,
    "id": "sentence_99"
  },
  {
    "type": "sentence",
    "content": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "originalSentence": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "position": 100,
    "id": "sentence_100"
  },
  {
    "type": "sentence",
    "content": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "position": 101,
    "id": "sentence_101"
  },
  {
    "type": "sentence",
    "content": "MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range.",
    "position": 102,
    "id": "sentence_102"
  },
  {
    "type": "sentence",
    "content": "If `start` is\nomitted or `undefined`, `filehandle.",
    "originalSentence": "If `start` is\nomitted or `undefined`, `filehandle.",
    "position": 103,
    "id": "sentence_103"
  },
  {
    "type": "sentence",
    "content": "createReadStream()` reads sequentially from\nthe current file position.",
    "originalSentence": "createReadStream()` reads sequentially from\nthe current file position.",
    "position": 104,
    "id": "sentence_104"
  },
  {
    "type": "sentence",
    "content": "The `encoding` can be any one of those accepted by\n{Buffer}.",
    "originalSentence": "The `encoding` can be any one of those accepted by\n{Buffer}.",
    "position": 105,
    "id": "sentence_105"
  },
  {
    "type": "sentence",
    "content": "If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available.",
    "originalSentence": "If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available.",
    "position": 106,
    "id": "sentence_106"
  },
  {
    "type": "sentence",
    "content": "This can prevent the process from exiting and the stream from\nclosing naturally.",
    "originalSentence": "This can prevent the process from exiting and the stream from\nclosing naturally.",
    "position": 107,
    "id": "sentence_107"
  },
  {
    "type": "sentence",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 108,
    "id": "sentence_108"
  },
  {
    "type": "sentence",
    "content": "Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior.",
    "position": 109,
    "id": "sentence_109"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.",
    "position": 110,
    "id": "sentence_110"
  },
  {
    "type": "sentence",
    "content": "const stream = fd.",
    "originalSentence": "const stream = fd.",
    "position": 111,
    "id": "sentence_111"
  },
  {
    "type": "sentence",
    "content": "createReadStream();\nsetTimeout(() => {\n  stream.",
    "originalSentence": "createReadStream();\nsetTimeout(() => {\n  stream.",
    "position": 112,
    "id": "sentence_112"
  },
  {
    "type": "sentence",
    "content": "close(); // This may not close the stream.",
    "originalSentence": "close(); // This may not close the stream.",
    "position": 113,
    "id": "sentence_113"
  },
  {
    "type": "sentence",
    "content": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "originalSentence": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "position": 114,
    "id": "sentence_114"
  },
  {
    "type": "sentence",
    "content": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "originalSentence": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "position": 115,
    "id": "sentence_115"
  },
  {
    "type": "sentence",
    "content": "push(null);\n  stream.",
    "originalSentence": "push(null);\n  stream.",
    "position": 116,
    "id": "sentence_116"
  },
  {
    "type": "sentence",
    "content": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "originalSentence": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "position": 117,
    "id": "sentence_117"
  },
  {
    "type": "sentence",
    "content": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "originalSentence": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "position": 118,
    "id": "sentence_118"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "originalSentence": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "position": 119,
    "id": "sentence_119"
  },
  {
    "type": "sentence",
    "content": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample.",
    "originalSentence": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample.",
    "position": 120,
    "id": "sentence_120"
  },
  {
    "type": "sentence",
    "content": "createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle.",
    "originalSentence": "createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle.",
    "position": 121,
    "id": "sentence_121"
  },
  {
    "type": "sentence",
    "content": "createWriteStream([options])`\n\n<!",
    "originalSentence": "createWriteStream([options])`\n\n<!",
    "position": 122,
    "id": "sentence_122"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v16.",
    "originalSentence": "-- YAML\nadded: v16.",
    "position": 123,
    "id": "sentence_123"
  },
  {
    "type": "sentence",
    "content": "11.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "11.0\nchanges:\n  - version:\n    - v21.",
    "position": 124,
    "id": "sentence_124"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v20.",
    "originalSentence": "0.0\n    - v20.",
    "position": 125,
    "id": "sentence_125"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "position": 126,
    "id": "sentence_126"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 127,
    "id": "sentence_127"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 128,
    "id": "sentence_128"
  },
  {
    "type": "sentence",
    "content": "* Returns: {fs.",
    "originalSentence": "* Returns: {fs.",
    "position": 129,
    "id": "sentence_129"
  },
  {
    "type": "sentence",
    "content": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "position": 130,
    "id": "sentence_130"
  },
  {
    "type": "sentence",
    "content": "MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range.",
    "position": 131,
    "id": "sentence_131"
  },
  {
    "type": "sentence",
    "content": "Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`.",
    "originalSentence": "Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`.",
    "position": 132,
    "id": "sentence_132"
  },
  {
    "type": "sentence",
    "content": "The `encoding` can be any one of those accepted by {Buffer}.",
    "originalSentence": "The `encoding` can be any one of those accepted by {Buffer}.",
    "position": 133,
    "id": "sentence_133"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "originalSentence": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "position": 134,
    "id": "sentence_134"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "originalSentence": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "position": 135,
    "id": "sentence_135"
  },
  {
    "type": "sentence",
    "content": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "originalSentence": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "position": 136,
    "id": "sentence_136"
  },
  {
    "type": "sentence",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 137,
    "id": "sentence_137"
  },
  {
    "type": "sentence",
    "content": "Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior.",
    "position": 138,
    "id": "sentence_138"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 139,
    "id": "sentence_139"
  },
  {
    "type": "sentence",
    "content": "datasync()`\n\n<!",
    "originalSentence": "datasync()`\n\n<!",
    "position": 140,
    "id": "sentence_140"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 141,
    "id": "sentence_141"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 142,
    "id": "sentence_142"
  },
  {
    "type": "sentence",
    "content": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "originalSentence": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "position": 143,
    "id": "sentence_143"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 144,
    "id": "sentence_144"
  },
  {
    "type": "sentence",
    "content": "Unlike `filehandle.",
    "originalSentence": "Unlike `filehandle.",
    "position": 145,
    "id": "sentence_145"
  },
  {
    "type": "sentence",
    "content": "sync` this method does not flush modified metadata.",
    "originalSentence": "sync` this method does not flush modified metadata.",
    "position": 146,
    "id": "sentence_146"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 147,
    "id": "sentence_147"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 148,
    "id": "sentence_148"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object.",
    "originalSentence": "0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object.",
    "position": 149,
    "id": "sentence_149"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 150,
    "id": "sentence_150"
  },
  {
    "type": "sentence",
    "content": "read(buffer, offset, length, position)`\n\n<!",
    "originalSentence": "read(buffer, offset, length, position)`\n\n<!",
    "position": 151,
    "id": "sentence_151"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 152,
    "id": "sentence_152"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v21.",
    "originalSentence": "0.0\nchanges:\n  - version: v21.",
    "position": 153,
    "id": "sentence_153"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "position": 154,
    "id": "sentence_154"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "originalSentence": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "position": 155,
    "id": "sentence_155"
  },
  {
    "type": "sentence",
    "content": "* `offset` {integer} The location in the buffer at which to start filling.",
    "originalSentence": "* `offset` {integer} The location in the buffer at which to start filling.",
    "position": 156,
    "id": "sentence_156"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`\n* `length` {integer} The number of bytes to read.",
    "originalSentence": "**Default:** `0`\n* `length` {integer} The number of bytes to read.",
    "position": 157,
    "id": "sentence_157"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n  `buffer.",
    "originalSentence": "**Default:**\n  `buffer.",
    "position": 158,
    "id": "sentence_158"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file.",
    "position": 159,
    "id": "sentence_159"
  },
  {
    "type": "sentence",
    "content": "If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated.",
    "originalSentence": "If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated.",
    "position": 160,
    "id": "sentence_160"
  },
  {
    "type": "sentence",
    "content": "If `position` is a non-negative\n  integer, the current file position will remain unchanged.",
    "originalSentence": "If `position` is a non-negative\n  integer, the current file position will remain unchanged.",
    "position": 161,
    "id": "sentence_161"
  },
  {
    "type": "sentence",
    "content": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 162,
    "id": "sentence_162"
  },
  {
    "type": "sentence",
    "content": "Reads data from the file and stores that in the given buffer.",
    "originalSentence": "Reads data from the file and stores that in the given buffer.",
    "position": 163,
    "id": "sentence_163"
  },
  {
    "type": "sentence",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 164,
    "id": "sentence_164"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 165,
    "id": "sentence_165"
  },
  {
    "type": "sentence",
    "content": "read([options])`\n\n<!",
    "originalSentence": "read([options])`\n\n<!",
    "position": 166,
    "id": "sentence_166"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13.",
    "position": 167,
    "id": "sentence_167"
  },
  {
    "type": "sentence",
    "content": "11.0\n - v12.",
    "originalSentence": "11.0\n - v12.",
    "position": 168,
    "id": "sentence_168"
  },
  {
    "type": "sentence",
    "content": "17.0\nchanges:\n  - version: v21.",
    "originalSentence": "17.0\nchanges:\n  - version: v21.",
    "position": 169,
    "id": "sentence_169"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "position": 170,
    "id": "sentence_170"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read.",
    "position": 171,
    "id": "sentence_171"
  },
  {
    "type": "sentence",
    "content": "**Default:** `Buffer.",
    "originalSentence": "**Default:** `Buffer.",
    "position": 172,
    "id": "sentence_172"
  },
  {
    "type": "sentence",
    "content": "alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "originalSentence": "alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "position": 173,
    "id": "sentence_173"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "originalSentence": "**Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "position": 174,
    "id": "sentence_174"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n    `buffer.",
    "originalSentence": "**Default:**\n    `buffer.",
    "position": 175,
    "id": "sentence_175"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "position": 176,
    "id": "sentence_176"
  },
  {
    "type": "sentence",
    "content": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "originalSentence": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "position": 177,
    "id": "sentence_177"
  },
  {
    "type": "sentence",
    "content": "If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "originalSentence": "If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "position": 178,
    "id": "sentence_178"
  },
  {
    "type": "sentence",
    "content": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 179,
    "id": "sentence_179"
  },
  {
    "type": "sentence",
    "content": "Reads data from the file and stores that in the given buffer.",
    "originalSentence": "Reads data from the file and stores that in the given buffer.",
    "position": 180,
    "id": "sentence_180"
  },
  {
    "type": "sentence",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 181,
    "id": "sentence_181"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 182,
    "id": "sentence_182"
  },
  {
    "type": "sentence",
    "content": "read(buffer[, options])`\n\n<!",
    "originalSentence": "read(buffer[, options])`\n\n<!",
    "position": 183,
    "id": "sentence_183"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v18.",
    "originalSentence": "-- YAML\nadded:\n  - v18.",
    "position": 184,
    "id": "sentence_184"
  },
  {
    "type": "sentence",
    "content": "2.0\n  - v16.",
    "originalSentence": "2.0\n  - v16.",
    "position": 185,
    "id": "sentence_185"
  },
  {
    "type": "sentence",
    "content": "17.0\nchanges:\n  - version: v21.",
    "originalSentence": "17.0\nchanges:\n  - version: v21.",
    "position": 186,
    "id": "sentence_186"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "position": 187,
    "id": "sentence_187"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "originalSentence": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "position": 188,
    "id": "sentence_188"
  },
  {
    "type": "sentence",
    "content": "* `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "originalSentence": "* `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "position": 189,
    "id": "sentence_189"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "originalSentence": "**Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "position": 190,
    "id": "sentence_190"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n    `buffer.",
    "originalSentence": "**Default:**\n    `buffer.",
    "position": 191,
    "id": "sentence_191"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "position": 192,
    "id": "sentence_192"
  },
  {
    "type": "sentence",
    "content": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "originalSentence": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "position": 193,
    "id": "sentence_193"
  },
  {
    "type": "sentence",
    "content": "If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "originalSentence": "If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "position": 194,
    "id": "sentence_194"
  },
  {
    "type": "sentence",
    "content": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 195,
    "id": "sentence_195"
  },
  {
    "type": "sentence",
    "content": "Reads data from the file and stores that in the given buffer.",
    "originalSentence": "Reads data from the file and stores that in the given buffer.",
    "position": 196,
    "id": "sentence_196"
  },
  {
    "type": "sentence",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 197,
    "id": "sentence_197"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 198,
    "id": "sentence_198"
  },
  {
    "type": "sentence",
    "content": "readableWebStream([options])`\n\n<!",
    "originalSentence": "readableWebStream([options])`\n\n<!",
    "position": 199,
    "id": "sentence_199"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v17.",
    "originalSentence": "-- YAML\nadded: v17.",
    "position": 200,
    "id": "sentence_200"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n\n  - version:\n      - v24.",
    "originalSentence": "0.0\nchanges:\n\n  - version:\n      - v24.",
    "position": 201,
    "id": "sentence_201"
  },
  {
    "type": "sentence",
    "content": "0.0\n      - v22.",
    "originalSentence": "0.0\n      - v22.",
    "position": 202,
    "id": "sentence_202"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 203,
    "id": "sentence_203"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v23.",
    "originalSentence": "- version:\n    - v23.",
    "position": 204,
    "id": "sentence_204"
  },
  {
    "type": "sentence",
    "content": "8.0\n    - v22.",
    "originalSentence": "8.0\n    - v22.",
    "position": 205,
    "id": "sentence_205"
  },
  {
    "type": "sentence",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream.",
    "position": 206,
    "id": "sentence_206"
  },
  {
    "type": "sentence",
    "content": "Streams are now always 'bytes' streams.",
    "originalSentence": "Streams are now always 'bytes' streams.",
    "position": 207,
    "id": "sentence_207"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v20.",
    "originalSentence": "- version:\n    - v20.",
    "position": 208,
    "id": "sentence_208"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v18.",
    "originalSentence": "0.0\n    - v18.",
    "position": 209,
    "id": "sentence_209"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream.",
    "position": 210,
    "id": "sentence_210"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed.",
    "position": 211,
    "id": "sentence_211"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents.",
    "originalSentence": "**Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents.",
    "position": 212,
    "id": "sentence_212"
  },
  {
    "type": "sentence",
    "content": "An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing.",
    "originalSentence": "An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing.",
    "position": 213,
    "id": "sentence_213"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('.",
    "originalSentence": "```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('.",
    "position": 214,
    "id": "sentence_214"
  },
  {
    "type": "sentence",
    "content": "/some/file/to/read');\n\nfor await (const chunk of file.",
    "originalSentence": "/some/file/to/read');\n\nfor await (const chunk of file.",
    "position": 215,
    "id": "sentence_215"
  },
  {
    "type": "sentence",
    "content": "readableWebStream())\n  console.",
    "originalSentence": "readableWebStream())\n  console.",
    "position": 216,
    "id": "sentence_216"
  },
  {
    "type": "sentence",
    "content": "log(chunk);\n\nawait file.",
    "originalSentence": "log(chunk);\n\nawait file.",
    "position": 217,
    "id": "sentence_217"
  },
  {
    "type": "sentence",
    "content": "close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "originalSentence": "close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "position": 218,
    "id": "sentence_218"
  },
  {
    "type": "sentence",
    "content": "/some/file/to/read');\n\n  for await (const chunk of file.",
    "originalSentence": "/some/file/to/read');\n\n  for await (const chunk of file.",
    "position": 219,
    "id": "sentence_219"
  },
  {
    "type": "sentence",
    "content": "readableWebStream())\n    console.",
    "originalSentence": "readableWebStream())\n    console.",
    "position": 220,
    "id": "sentence_220"
  },
  {
    "type": "sentence",
    "content": "log(chunk);\n\n  await file.",
    "originalSentence": "log(chunk);\n\n  await file.",
    "position": 221,
    "id": "sentence_221"
  },
  {
    "type": "sentence",
    "content": "close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically.",
    "originalSentence": "close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically.",
    "position": 222,
    "id": "sentence_222"
  },
  {
    "type": "sentence",
    "content": "User code must still call the\n`fileHandle.",
    "originalSentence": "User code must still call the\n`fileHandle.",
    "position": 223,
    "id": "sentence_223"
  },
  {
    "type": "sentence",
    "content": "close()` method unless the `autoClose` option is set to `true`.",
    "originalSentence": "close()` method unless the `autoClose` option is set to `true`.",
    "position": 224,
    "id": "sentence_224"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 225,
    "id": "sentence_225"
  },
  {
    "type": "sentence",
    "content": "readFile(options)`\n\n<!",
    "originalSentence": "readFile(options)`\n\n<!",
    "position": 226,
    "id": "sentence_226"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 227,
    "id": "sentence_227"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file.",
    "originalSentence": "0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file.",
    "position": 228,
    "id": "sentence_228"
  },
  {
    "type": "sentence",
    "content": "If no encoding is specified (using `options.",
    "originalSentence": "If no encoding is specified (using `options.",
    "position": 229,
    "id": "sentence_229"
  },
  {
    "type": "sentence",
    "content": "encoding`), the data is\n  returned as a {Buffer} object.",
    "originalSentence": "encoding`), the data is\n  returned as a {Buffer} object.",
    "position": 230,
    "id": "sentence_230"
  },
  {
    "type": "sentence",
    "content": "Otherwise, the data will be a string.",
    "originalSentence": "Otherwise, the data will be a string.",
    "position": 231,
    "id": "sentence_231"
  },
  {
    "type": "sentence",
    "content": "Asynchronously reads the entire contents of a file.",
    "originalSentence": "Asynchronously reads the entire contents of a file.",
    "position": 232,
    "id": "sentence_232"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`.",
    "position": 233,
    "id": "sentence_233"
  },
  {
    "type": "sentence",
    "content": "The {FileHandle} has to support reading.",
    "originalSentence": "The {FileHandle} has to support reading.",
    "position": 234,
    "id": "sentence_234"
  },
  {
    "type": "sentence",
    "content": "If one or more `filehandle.",
    "originalSentence": "If one or more `filehandle.",
    "position": 235,
    "id": "sentence_235"
  },
  {
    "type": "sentence",
    "content": "read()` calls are made on a file handle and then a\n`filehandle.",
    "originalSentence": "read()` calls are made on a file handle and then a\n`filehandle.",
    "position": 236,
    "id": "sentence_236"
  },
  {
    "type": "sentence",
    "content": "readFile()` call is made, the data will be read from the current\nposition till the end of the file.",
    "originalSentence": "readFile()` call is made, the data will be read from the current\nposition till the end of the file.",
    "position": 237,
    "id": "sentence_237"
  },
  {
    "type": "sentence",
    "content": "It doesn't always read from the beginning\nof the file.",
    "originalSentence": "It doesn't always read from the beginning\nof the file.",
    "position": 238,
    "id": "sentence_238"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 239,
    "id": "sentence_239"
  },
  {
    "type": "sentence",
    "content": "readLines([options])`\n\n<!",
    "originalSentence": "readLines([options])`\n\n<!",
    "position": 240,
    "id": "sentence_240"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v18.",
    "originalSentence": "-- YAML\nadded: v18.",
    "position": 241,
    "id": "sentence_241"
  },
  {
    "type": "sentence",
    "content": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline.",
    "originalSentence": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline.",
    "position": 242,
    "id": "sentence_242"
  },
  {
    "type": "sentence",
    "content": "InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file.",
    "originalSentence": "InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file.",
    "position": 243,
    "id": "sentence_243"
  },
  {
    "type": "sentence",
    "content": "See [`filehandle.",
    "originalSentence": "See [`filehandle.",
    "position": 244,
    "id": "sentence_244"
  },
  {
    "type": "sentence",
    "content": "createReadStream()`][] for the options.",
    "originalSentence": "createReadStream()`][] for the options.",
    "position": 245,
    "id": "sentence_245"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('.",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('.",
    "position": 246,
    "id": "sentence_246"
  },
  {
    "type": "sentence",
    "content": "/some/file/to/read');\n\nfor await (const line of file.",
    "originalSentence": "/some/file/to/read');\n\nfor await (const line of file.",
    "position": 247,
    "id": "sentence_247"
  },
  {
    "type": "sentence",
    "content": "readLines()) {\n  console.",
    "originalSentence": "readLines()) {\n  console.",
    "position": 248,
    "id": "sentence_248"
  },
  {
    "type": "sentence",
    "content": "log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "originalSentence": "log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "position": 249,
    "id": "sentence_249"
  },
  {
    "type": "sentence",
    "content": "/some/file/to/read');\n\n  for await (const line of file.",
    "originalSentence": "/some/file/to/read');\n\n  for await (const line of file.",
    "position": 250,
    "id": "sentence_250"
  },
  {
    "type": "sentence",
    "content": "readLines()) {\n    console.",
    "originalSentence": "readLines()) {\n    console.",
    "position": 251,
    "id": "sentence_251"
  },
  {
    "type": "sentence",
    "content": "log(line);\n  }\n})();\n```\n\n#### `filehandle.",
    "originalSentence": "log(line);\n  }\n})();\n```\n\n#### `filehandle.",
    "position": 252,
    "id": "sentence_252"
  },
  {
    "type": "sentence",
    "content": "readv(buffers[, position])`\n\n<!",
    "originalSentence": "readv(buffers[, position])`\n\n<!",
    "position": 253,
    "id": "sentence_253"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13.",
    "position": 254,
    "id": "sentence_254"
  },
  {
    "type": "sentence",
    "content": "13.0\n - v12.",
    "originalSentence": "13.0\n - v12.",
    "position": 255,
    "id": "sentence_255"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from.",
    "originalSentence": "17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from.",
    "position": 256,
    "id": "sentence_256"
  },
  {
    "type": "sentence",
    "content": "If `position` is not a `number`, the data will\n  be read from the current position.",
    "originalSentence": "If `position` is not a `number`, the data will\n  be read from the current position.",
    "position": 257,
    "id": "sentence_257"
  },
  {
    "type": "sentence",
    "content": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input.",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input.",
    "position": 258,
    "id": "sentence_258"
  },
  {
    "type": "sentence",
    "content": "Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle.",
    "originalSentence": "Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle.",
    "position": 259,
    "id": "sentence_259"
  },
  {
    "type": "sentence",
    "content": "stat([options])`\n\n<!",
    "originalSentence": "stat([options])`\n\n<!",
    "position": 260,
    "id": "sentence_260"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 261,
    "id": "sentence_261"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v10.",
    "originalSentence": "0.0\nchanges:\n  - version: v10.",
    "position": 262,
    "id": "sentence_262"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 263,
    "id": "sentence_263"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 264,
    "id": "sentence_264"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 265,
    "id": "sentence_265"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 266,
    "id": "sentence_266"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with an {fs.",
    "originalSentence": "* Returns: {Promise} Fulfills with an {fs.",
    "position": 267,
    "id": "sentence_267"
  },
  {
    "type": "sentence",
    "content": "Stats} for the file.",
    "originalSentence": "Stats} for the file.",
    "position": 268,
    "id": "sentence_268"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 269,
    "id": "sentence_269"
  },
  {
    "type": "sentence",
    "content": "sync()`\n\n<!",
    "originalSentence": "sync()`\n\n<!",
    "position": 270,
    "id": "sentence_270"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 271,
    "id": "sentence_271"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 272,
    "id": "sentence_272"
  },
  {
    "type": "sentence",
    "content": "Request that all data for the open file descriptor is flushed to the storage\ndevice.",
    "originalSentence": "Request that all data for the open file descriptor is flushed to the storage\ndevice.",
    "position": 273,
    "id": "sentence_273"
  },
  {
    "type": "sentence",
    "content": "The specific implementation is operating system and device specific.",
    "originalSentence": "The specific implementation is operating system and device specific.",
    "position": 274,
    "id": "sentence_274"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "Refer to the POSIX fsync(2) documentation for more detail.",
    "position": 275,
    "id": "sentence_275"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 276,
    "id": "sentence_276"
  },
  {
    "type": "sentence",
    "content": "truncate(len)`\n\n<!",
    "originalSentence": "truncate(len)`\n\n<!",
    "position": 277,
    "id": "sentence_277"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 278,
    "id": "sentence_278"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 279,
    "id": "sentence_279"
  },
  {
    "type": "sentence",
    "content": "Truncates the file.",
    "originalSentence": "Truncates the file.",
    "position": 280,
    "id": "sentence_280"
  },
  {
    "type": "sentence",
    "content": "If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file.",
    "originalSentence": "If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file.",
    "position": 281,
    "id": "sentence_281"
  },
  {
    "type": "sentence",
    "content": "The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.",
    "originalSentence": "The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.",
    "position": 282,
    "id": "sentence_282"
  },
  {
    "type": "sentence",
    "content": "txt', 'r+');\n  await filehandle.",
    "originalSentence": "txt', 'r+');\n  await filehandle.",
    "position": 283,
    "id": "sentence_283"
  },
  {
    "type": "sentence",
    "content": "truncate(4);\n} finally {\n  await filehandle?.",
    "originalSentence": "truncate(4);\n} finally {\n  await filehandle?.",
    "position": 284,
    "id": "sentence_284"
  },
  {
    "type": "sentence",
    "content": "close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "originalSentence": "close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "position": 285,
    "id": "sentence_285"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 286,
    "id": "sentence_286"
  },
  {
    "type": "sentence",
    "content": "utimes(atime, mtime)`\n\n<!",
    "originalSentence": "utimes(atime, mtime)`\n\n<!",
    "position": 287,
    "id": "sentence_287"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 288,
    "id": "sentence_288"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success.",
    "originalSentence": "0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success.",
    "position": 289,
    "id": "sentence_289"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 290,
    "id": "sentence_290"
  },
  {
    "type": "sentence",
    "content": "write(buffer, offset[, length[, position]])`\n\n<!",
    "originalSentence": "write(buffer, offset[, length[, position]])`\n\n<!",
    "position": 291,
    "id": "sentence_291"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 292,
    "id": "sentence_292"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v14.",
    "originalSentence": "0.0\nchanges:\n  - version: v14.",
    "position": 293,
    "id": "sentence_293"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore.",
    "position": 294,
    "id": "sentence_294"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins.",
    "originalSentence": "-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins.",
    "position": 295,
    "id": "sentence_295"
  },
  {
    "type": "sentence",
    "content": "* `length` {integer} The number of bytes from `buffer` to write.",
    "originalSentence": "* `length` {integer} The number of bytes from `buffer` to write.",
    "position": 296,
    "id": "sentence_296"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n  `buffer.",
    "originalSentence": "**Default:**\n  `buffer.",
    "position": 297,
    "id": "sentence_297"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written.",
    "position": 298,
    "id": "sentence_298"
  },
  {
    "type": "sentence",
    "content": "If `position` is not a `number`,\n  the data will be written at the current position.",
    "originalSentence": "If `position` is not a `number`,\n  the data will be written at the current position.",
    "position": 299,
    "id": "sentence_299"
  },
  {
    "type": "sentence",
    "content": "See the POSIX pwrite(2)\n  documentation for more detail.",
    "originalSentence": "See the POSIX pwrite(2)\n  documentation for more detail.",
    "position": 300,
    "id": "sentence_300"
  },
  {
    "type": "sentence",
    "content": "**Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "position": 301,
    "id": "sentence_301"
  },
  {
    "type": "sentence",
    "content": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written.",
    "originalSentence": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written.",
    "position": 302,
    "id": "sentence_302"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `filehandle.",
    "originalSentence": "It is unsafe to use `filehandle.",
    "position": 303,
    "id": "sentence_303"
  },
  {
    "type": "sentence",
    "content": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 304,
    "id": "sentence_304"
  },
  {
    "type": "sentence",
    "content": "For this\nscenario, use [`filehandle.",
    "originalSentence": "For this\nscenario, use [`filehandle.",
    "position": 305,
    "id": "sentence_305"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][].",
    "originalSentence": "createWriteStream()`][].",
    "position": 306,
    "id": "sentence_306"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes do not work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes do not work when the file is opened in append mode.",
    "position": 307,
    "id": "sentence_307"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 308,
    "id": "sentence_308"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 309,
    "id": "sentence_309"
  },
  {
    "type": "sentence",
    "content": "write(buffer[, options])`\n\n<!",
    "originalSentence": "write(buffer[, options])`\n\n<!",
    "position": 310,
    "id": "sentence_310"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v18.",
    "originalSentence": "-- YAML\nadded:\n  - v18.",
    "position": 311,
    "id": "sentence_311"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v16.",
    "originalSentence": "3.0\n  - v16.",
    "position": 312,
    "id": "sentence_312"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 313,
    "id": "sentence_313"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "position": 314,
    "id": "sentence_314"
  },
  {
    "type": "sentence",
    "content": "Similar to the above `filehandle.",
    "originalSentence": "Similar to the above `filehandle.",
    "position": 315,
    "id": "sentence_315"
  },
  {
    "type": "sentence",
    "content": "write` function, this version takes an\noptional `options` object.",
    "originalSentence": "write` function, this version takes an\noptional `options` object.",
    "position": 316,
    "id": "sentence_316"
  },
  {
    "type": "sentence",
    "content": "If no `options` object is specified, it will\ndefault with the above values.",
    "originalSentence": "If no `options` object is specified, it will\ndefault with the above values.",
    "position": 317,
    "id": "sentence_317"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 318,
    "id": "sentence_318"
  },
  {
    "type": "sentence",
    "content": "write(string[, position[, encoding]])`\n\n<!",
    "originalSentence": "write(string[, position[, encoding]])`\n\n<!",
    "position": 319,
    "id": "sentence_319"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 320,
    "id": "sentence_320"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v14.",
    "originalSentence": "0.0\nchanges:\n  - version: v14.",
    "position": 321,
    "id": "sentence_321"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 322,
    "id": "sentence_322"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written.",
    "originalSentence": "-->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written.",
    "position": 323,
    "id": "sentence_323"
  },
  {
    "type": "sentence",
    "content": "If `position` is not a `number` the\n  data will be written at the current position.",
    "originalSentence": "If `position` is not a `number` the\n  data will be written at the current position.",
    "position": 324,
    "id": "sentence_324"
  },
  {
    "type": "sentence",
    "content": "See the POSIX pwrite(2)\n  documentation for more detail.",
    "originalSentence": "See the POSIX pwrite(2)\n  documentation for more detail.",
    "position": 325,
    "id": "sentence_325"
  },
  {
    "type": "sentence",
    "content": "**Default:** `null`\n* `encoding` {string} The expected string encoding.",
    "originalSentence": "**Default:** `null`\n* `encoding` {string} The expected string encoding.",
    "position": 326,
    "id": "sentence_326"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file.",
    "originalSentence": "**Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file.",
    "position": 327,
    "id": "sentence_327"
  },
  {
    "type": "sentence",
    "content": "If `string` is not a string, the promise is\nrejected with an error.",
    "originalSentence": "If `string` is not a string, the promise is\nrejected with an error.",
    "position": 328,
    "id": "sentence_328"
  },
  {
    "type": "sentence",
    "content": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written.",
    "originalSentence": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written.",
    "position": 329,
    "id": "sentence_329"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `filehandle.",
    "originalSentence": "It is unsafe to use `filehandle.",
    "position": 330,
    "id": "sentence_330"
  },
  {
    "type": "sentence",
    "content": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 331,
    "id": "sentence_331"
  },
  {
    "type": "sentence",
    "content": "For this\nscenario, use [`filehandle.",
    "originalSentence": "For this\nscenario, use [`filehandle.",
    "position": 332,
    "id": "sentence_332"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][].",
    "originalSentence": "createWriteStream()`][].",
    "position": 333,
    "id": "sentence_333"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes do not work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes do not work when the file is opened in append mode.",
    "position": 334,
    "id": "sentence_334"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 335,
    "id": "sentence_335"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 336,
    "id": "sentence_336"
  },
  {
    "type": "sentence",
    "content": "writeFile(data, options)`\n\n<!",
    "originalSentence": "writeFile(data, options)`\n\n<!",
    "position": 337,
    "id": "sentence_337"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 338,
    "id": "sentence_338"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n      - v15.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v15.",
    "position": 339,
    "id": "sentence_339"
  },
  {
    "type": "sentence",
    "content": "14.0\n      - v14.",
    "originalSentence": "14.0\n      - v14.",
    "position": 340,
    "id": "sentence_340"
  },
  {
    "type": "sentence",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "position": 341,
    "id": "sentence_341"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 342,
    "id": "sentence_342"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 343,
    "id": "sentence_343"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string.",
    "originalSentence": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string.",
    "position": 344,
    "id": "sentence_344"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "originalSentence": "**Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "position": 345,
    "id": "sentence_345"
  },
  {
    "type": "sentence",
    "content": "**Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists.",
    "originalSentence": "**Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists.",
    "position": 346,
    "id": "sentence_346"
  },
  {
    "type": "sentence",
    "content": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "originalSentence": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "position": 347,
    "id": "sentence_347"
  },
  {
    "type": "sentence",
    "content": "The promise is fulfilled with no arguments upon success.",
    "originalSentence": "The promise is fulfilled with no arguments upon success.",
    "position": 348,
    "id": "sentence_348"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`.",
    "position": 349,
    "id": "sentence_349"
  },
  {
    "type": "sentence",
    "content": "The {FileHandle} has to support writing.",
    "originalSentence": "The {FileHandle} has to support writing.",
    "position": 350,
    "id": "sentence_350"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `filehandle.",
    "originalSentence": "It is unsafe to use `filehandle.",
    "position": 351,
    "id": "sentence_351"
  },
  {
    "type": "sentence",
    "content": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 352,
    "id": "sentence_352"
  },
  {
    "type": "sentence",
    "content": "If one or more `filehandle.",
    "originalSentence": "If one or more `filehandle.",
    "position": 353,
    "id": "sentence_353"
  },
  {
    "type": "sentence",
    "content": "write()` calls are made on a file handle and then a\n`filehandle.",
    "originalSentence": "write()` calls are made on a file handle and then a\n`filehandle.",
    "position": 354,
    "id": "sentence_354"
  },
  {
    "type": "sentence",
    "content": "writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file.",
    "originalSentence": "writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file.",
    "position": 355,
    "id": "sentence_355"
  },
  {
    "type": "sentence",
    "content": "It doesn't always write from the\nbeginning of the file.",
    "originalSentence": "It doesn't always write from the\nbeginning of the file.",
    "position": 356,
    "id": "sentence_356"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle.",
    "originalSentence": "#### `filehandle.",
    "position": 357,
    "id": "sentence_357"
  },
  {
    "type": "sentence",
    "content": "writev(buffers[, position])`\n\n<!",
    "originalSentence": "writev(buffers[, position])`\n\n<!",
    "position": 358,
    "id": "sentence_358"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 359,
    "id": "sentence_359"
  },
  {
    "type": "sentence",
    "content": "9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written.",
    "originalSentence": "9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written.",
    "position": 360,
    "id": "sentence_360"
  },
  {
    "type": "sentence",
    "content": "If `position` is not a `number`,\n  the data will be written at the current position.",
    "originalSentence": "If `position` is not a `number`,\n  the data will be written at the current position.",
    "position": 361,
    "id": "sentence_361"
  },
  {
    "type": "sentence",
    "content": "**Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file.",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file.",
    "position": 362,
    "id": "sentence_362"
  },
  {
    "type": "sentence",
    "content": "The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input.",
    "originalSentence": "The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input.",
    "position": 363,
    "id": "sentence_363"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected).",
    "originalSentence": "It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected).",
    "position": 364,
    "id": "sentence_364"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 365,
    "id": "sentence_365"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 366,
    "id": "sentence_366"
  },
  {
    "type": "sentence",
    "content": "#### `filehandle[Symbol.",
    "originalSentence": "#### `filehandle[Symbol.",
    "position": 367,
    "id": "sentence_367"
  },
  {
    "type": "sentence",
    "content": "asyncDispose]()`\n\n<!",
    "originalSentence": "asyncDispose]()`\n\n<!",
    "position": 368,
    "id": "sentence_368"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v20.",
    "originalSentence": "-- YAML\nadded:\n - v20.",
    "position": 369,
    "id": "sentence_369"
  },
  {
    "type": "sentence",
    "content": "4.0\n - v18.",
    "originalSentence": "4.0\n - v18.",
    "position": 370,
    "id": "sentence_370"
  },
  {
    "type": "sentence",
    "content": "18.0\nchanges:\n - version: v24.",
    "originalSentence": "18.0\nchanges:\n - version: v24.",
    "position": 371,
    "id": "sentence_371"
  },
  {
    "type": "sentence",
    "content": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "originalSentence": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "position": 372,
    "id": "sentence_372"
  },
  {
    "type": "sentence",
    "content": "-->\n\nCalls `filehandle.",
    "originalSentence": "-->\n\nCalls `filehandle.",
    "position": 373,
    "id": "sentence_373"
  },
  {
    "type": "sentence",
    "content": "close()` and returns a promise that fulfills when the\nfilehandle is closed.",
    "originalSentence": "close()` and returns a promise that fulfills when the\nfilehandle is closed.",
    "position": 374,
    "id": "sentence_374"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 375,
    "id": "sentence_375"
  },
  {
    "type": "sentence",
    "content": "access(path[, mode])`\n\n<!",
    "originalSentence": "access(path[, mode])`\n\n<!",
    "position": 376,
    "id": "sentence_376"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 377,
    "id": "sentence_377"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "position": 378,
    "id": "sentence_378"
  },
  {
    "type": "sentence",
    "content": "F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 379,
    "id": "sentence_379"
  },
  {
    "type": "sentence",
    "content": "Tests a user's permissions for the file or directory specified by `path`.",
    "originalSentence": "Tests a user's permissions for the file or directory specified by `path`.",
    "position": 380,
    "id": "sentence_380"
  },
  {
    "type": "sentence",
    "content": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "originalSentence": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "position": 381,
    "id": "sentence_381"
  },
  {
    "type": "sentence",
    "content": "`mode` should be either the value `fs.",
    "originalSentence": "`mode` should be either the value `fs.",
    "position": 382,
    "id": "sentence_382"
  },
  {
    "type": "sentence",
    "content": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "originalSentence": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "position": 383,
    "id": "sentence_383"
  },
  {
    "type": "sentence",
    "content": "R_OK`,\n`fs.",
    "originalSentence": "R_OK`,\n`fs.",
    "position": 384,
    "id": "sentence_384"
  },
  {
    "type": "sentence",
    "content": "W_OK`, and `fs.",
    "originalSentence": "W_OK`, and `fs.",
    "position": 385,
    "id": "sentence_385"
  },
  {
    "type": "sentence",
    "content": "Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "Check [File access constants][] for\npossible values of `mode`.",
    "position": 386,
    "id": "sentence_386"
  },
  {
    "type": "sentence",
    "content": "If the accessibility check is successful, the promise is fulfilled with no\nvalue.",
    "originalSentence": "If the accessibility check is successful, the promise is fulfilled with no\nvalue.",
    "position": 387,
    "id": "sentence_387"
  },
  {
    "type": "sentence",
    "content": "If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object.",
    "originalSentence": "If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object.",
    "position": 388,
    "id": "sentence_388"
  },
  {
    "type": "sentence",
    "content": "The following example checks if the file\n`/etc/passwd` can be read and written by the current process.",
    "originalSentence": "The following example checks if the file\n`/etc/passwd` can be read and written by the current process.",
    "position": 389,
    "id": "sentence_389"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants.",
    "originalSentence": "```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants.",
    "position": 390,
    "id": "sentence_390"
  },
  {
    "type": "sentence",
    "content": "R_OK | constants.",
    "originalSentence": "R_OK | constants.",
    "position": 391,
    "id": "sentence_391"
  },
  {
    "type": "sentence",
    "content": "W_OK);\n  console.",
    "originalSentence": "W_OK);\n  console.",
    "position": 392,
    "id": "sentence_392"
  },
  {
    "type": "sentence",
    "content": "log('can access');\n} catch {\n  console.",
    "originalSentence": "log('can access');\n} catch {\n  console.",
    "position": 393,
    "id": "sentence_393"
  },
  {
    "type": "sentence",
    "content": "error('cannot access');\n}\n```\n\nUsing `fsPromises.",
    "originalSentence": "error('cannot access');\n}\n```\n\nUsing `fsPromises.",
    "position": 394,
    "id": "sentence_394"
  },
  {
    "type": "sentence",
    "content": "access()` to check for the accessibility of a file before\ncalling `fsPromises.",
    "originalSentence": "access()` to check for the accessibility of a file before\ncalling `fsPromises.",
    "position": 395,
    "id": "sentence_395"
  },
  {
    "type": "sentence",
    "content": "open()` is not recommended.",
    "originalSentence": "open()` is not recommended.",
    "position": 396,
    "id": "sentence_396"
  },
  {
    "type": "sentence",
    "content": "Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls.",
    "originalSentence": "Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls.",
    "position": 397,
    "id": "sentence_397"
  },
  {
    "type": "sentence",
    "content": "Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible.",
    "originalSentence": "Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible.",
    "position": 398,
    "id": "sentence_398"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 399,
    "id": "sentence_399"
  },
  {
    "type": "sentence",
    "content": "appendFile(path, data[, options])`\n\n<!",
    "originalSentence": "appendFile(path, data[, options])`\n\n<!",
    "position": 400,
    "id": "sentence_400"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 401,
    "id": "sentence_401"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v21.",
    "position": 402,
    "id": "sentence_402"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v20.",
    "originalSentence": "1.0\n    - v20.",
    "position": 403,
    "id": "sentence_403"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 404,
    "id": "sentence_404"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 405,
    "id": "sentence_405"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'a'`.",
    "originalSentence": "**Default:** `'a'`.",
    "position": 406,
    "id": "sentence_406"
  },
  {
    "type": "sentence",
    "content": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 407,
    "id": "sentence_407"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 408,
    "id": "sentence_408"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 409,
    "id": "sentence_409"
  },
  {
    "type": "sentence",
    "content": "Asynchronously append data to a file, creating the file if it does not yet\nexist.",
    "originalSentence": "Asynchronously append data to a file, creating the file if it does not yet\nexist.",
    "position": 410,
    "id": "sentence_410"
  },
  {
    "type": "sentence",
    "content": "`data` can be a string or a {Buffer}.",
    "originalSentence": "`data` can be a string or a {Buffer}.",
    "position": 411,
    "id": "sentence_411"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`.",
    "position": 412,
    "id": "sentence_412"
  },
  {
    "type": "sentence",
    "content": "The `mode` option only affects the newly created file.",
    "originalSentence": "The `mode` option only affects the newly created file.",
    "position": 413,
    "id": "sentence_413"
  },
  {
    "type": "sentence",
    "content": "open()`][]\nfor more details.",
    "originalSentence": "open()`][]\nfor more details.",
    "position": 414,
    "id": "sentence_414"
  },
  {
    "type": "sentence",
    "content": "The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises.",
    "originalSentence": "The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises.",
    "position": 415,
    "id": "sentence_415"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 416,
    "id": "sentence_416"
  },
  {
    "type": "sentence",
    "content": "chmod(path, mode)`\n\n<!",
    "originalSentence": "chmod(path, mode)`\n\n<!",
    "position": 417,
    "id": "sentence_417"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 418,
    "id": "sentence_418"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 419,
    "id": "sentence_419"
  },
  {
    "type": "sentence",
    "content": "Changes the permissions of a file.",
    "originalSentence": "Changes the permissions of a file.",
    "position": 420,
    "id": "sentence_420"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 421,
    "id": "sentence_421"
  },
  {
    "type": "sentence",
    "content": "chown(path, uid, gid)`\n\n<!",
    "originalSentence": "chown(path, uid, gid)`\n\n<!",
    "position": 422,
    "id": "sentence_422"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 423,
    "id": "sentence_423"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 424,
    "id": "sentence_424"
  },
  {
    "type": "sentence",
    "content": "Changes the ownership of a file.",
    "originalSentence": "Changes the ownership of a file.",
    "position": 425,
    "id": "sentence_425"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 426,
    "id": "sentence_426"
  },
  {
    "type": "sentence",
    "content": "copyFile(src, dest[, mode])`\n\n<!",
    "originalSentence": "copyFile(src, dest[, mode])`\n\n<!",
    "position": 427,
    "id": "sentence_427"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 428,
    "id": "sentence_428"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v14.",
    "originalSentence": "0.0\nchanges:\n  - version: v14.",
    "position": 429,
    "id": "sentence_429"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "position": 430,
    "id": "sentence_430"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation.",
    "originalSentence": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation.",
    "position": 431,
    "id": "sentence_431"
  },
  {
    "type": "sentence",
    "content": "It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e.",
    "originalSentence": "It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e.",
    "position": 432,
    "id": "sentence_432"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL | fs.",
    "originalSentence": "COPYFILE_EXCL | fs.",
    "position": 433,
    "id": "sentence_433"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE`)\n  **Default:** `0`.",
    "originalSentence": "COPYFILE_FICLONE`)\n  **Default:** `0`.",
    "position": 434,
    "id": "sentence_434"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists.",
    "originalSentence": "COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists.",
    "position": 435,
    "id": "sentence_435"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink.",
    "originalSentence": "COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink.",
    "position": 436,
    "id": "sentence_436"
  },
  {
    "type": "sentence",
    "content": "If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used.",
    "originalSentence": "If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used.",
    "position": 437,
    "id": "sentence_437"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink.",
    "originalSentence": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink.",
    "position": 438,
    "id": "sentence_438"
  },
  {
    "type": "sentence",
    "content": "If the platform does not support\n    copy-on-write, then the operation will fail.",
    "originalSentence": "If the platform does not support\n    copy-on-write, then the operation will fail.",
    "position": 439,
    "id": "sentence_439"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 440,
    "id": "sentence_440"
  },
  {
    "type": "sentence",
    "content": "Asynchronously copies `src` to `dest`.",
    "originalSentence": "Asynchronously copies `src` to `dest`.",
    "position": 441,
    "id": "sentence_441"
  },
  {
    "type": "sentence",
    "content": "By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "By default, `dest` is overwritten if it\nalready exists.",
    "position": 442,
    "id": "sentence_442"
  },
  {
    "type": "sentence",
    "content": "No guarantees are made about the atomicity of the copy operation.",
    "originalSentence": "No guarantees are made about the atomicity of the copy operation.",
    "position": 443,
    "id": "sentence_443"
  },
  {
    "type": "sentence",
    "content": "If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.",
    "originalSentence": "If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.",
    "position": 444,
    "id": "sentence_444"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source.",
    "originalSentence": "```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source.",
    "position": 445,
    "id": "sentence_445"
  },
  {
    "type": "sentence",
    "content": "txt', 'destination.",
    "originalSentence": "txt', 'destination.",
    "position": 446,
    "id": "sentence_446"
  },
  {
    "type": "sentence",
    "content": "txt');\n  console.",
    "originalSentence": "txt');\n  console.",
    "position": 447,
    "id": "sentence_447"
  },
  {
    "type": "sentence",
    "content": "log('source.",
    "originalSentence": "log('source.",
    "position": 448,
    "id": "sentence_448"
  },
  {
    "type": "sentence",
    "content": "txt was copied to destination.",
    "originalSentence": "txt was copied to destination.",
    "position": 449,
    "id": "sentence_449"
  },
  {
    "type": "sentence",
    "content": "txt');\n} catch {\n  console.",
    "originalSentence": "txt');\n} catch {\n  console.",
    "position": 450,
    "id": "sentence_450"
  },
  {
    "type": "sentence",
    "content": "error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "originalSentence": "error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "position": 451,
    "id": "sentence_451"
  },
  {
    "type": "sentence",
    "content": "txt exists.",
    "originalSentence": "txt exists.",
    "position": 452,
    "id": "sentence_452"
  },
  {
    "type": "sentence",
    "content": "try {\n  await copyFile('source.",
    "originalSentence": "try {\n  await copyFile('source.",
    "position": 453,
    "id": "sentence_453"
  },
  {
    "type": "sentence",
    "content": "txt', 'destination.",
    "originalSentence": "txt', 'destination.",
    "position": 454,
    "id": "sentence_454"
  },
  {
    "type": "sentence",
    "content": "txt', constants.",
    "originalSentence": "txt', constants.",
    "position": 455,
    "id": "sentence_455"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL);\n  console.",
    "originalSentence": "COPYFILE_EXCL);\n  console.",
    "position": 456,
    "id": "sentence_456"
  },
  {
    "type": "sentence",
    "content": "log('source.",
    "originalSentence": "log('source.",
    "position": 457,
    "id": "sentence_457"
  },
  {
    "type": "sentence",
    "content": "txt was copied to destination.",
    "originalSentence": "txt was copied to destination.",
    "position": 458,
    "id": "sentence_458"
  },
  {
    "type": "sentence",
    "content": "txt');\n} catch {\n  console.",
    "originalSentence": "txt');\n} catch {\n  console.",
    "position": 459,
    "id": "sentence_459"
  },
  {
    "type": "sentence",
    "content": "error('The file could not be copied');\n}\n```\n\n### `fsPromises.",
    "originalSentence": "error('The file could not be copied');\n}\n```\n\n### `fsPromises.",
    "position": 460,
    "id": "sentence_460"
  },
  {
    "type": "sentence",
    "content": "cp(src, dest[, options])`\n\n<!",
    "originalSentence": "cp(src, dest[, options])`\n\n<!",
    "position": 461,
    "id": "sentence_461"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v16.",
    "originalSentence": "-- YAML\nadded: v16.",
    "position": 462,
    "id": "sentence_462"
  },
  {
    "type": "sentence",
    "content": "7.0\nchanges:\n  - version: v22.",
    "originalSentence": "7.0\nchanges:\n  - version: v22.",
    "position": 463,
    "id": "sentence_463"
  },
  {
    "type": "sentence",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "position": 464,
    "id": "sentence_464"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v20.",
    "originalSentence": "- version:\n    - v20.",
    "position": 465,
    "id": "sentence_465"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 466,
    "id": "sentence_466"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "position": 467,
    "id": "sentence_467"
  },
  {
    "type": "sentence",
    "content": "copyFile()`.",
    "originalSentence": "copyFile()`.",
    "position": 468,
    "id": "sentence_468"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v17.",
    "originalSentence": "- version:\n    - v17.",
    "position": 469,
    "id": "sentence_469"
  },
  {
    "type": "sentence",
    "content": "6.0\n    - v16.",
    "originalSentence": "6.0\n    - v16.",
    "position": 470,
    "id": "sentence_470"
  },
  {
    "type": "sentence",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "position": 471,
    "id": "sentence_471"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `src` {string|URL} source path to copy.",
    "originalSentence": "-->\n\n* `src` {string|URL} source path to copy.",
    "position": 472,
    "id": "sentence_472"
  },
  {
    "type": "sentence",
    "content": "* `dest` {string|URL} destination path to copy to.",
    "originalSentence": "* `dest` {string|URL} destination path to copy to.",
    "position": 473,
    "id": "sentence_473"
  },
  {
    "type": "sentence",
    "content": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "originalSentence": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "position": 474,
    "id": "sentence_474"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 475,
    "id": "sentence_475"
  },
  {
    "type": "sentence",
    "content": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "originalSentence": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "position": 476,
    "id": "sentence_476"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 477,
    "id": "sentence_477"
  },
  {
    "type": "sentence",
    "content": "* `filter` {Function} Function to filter copied files/directories.",
    "originalSentence": "* `filter` {Function} Function to filter copied files/directories.",
    "position": 478,
    "id": "sentence_478"
  },
  {
    "type": "sentence",
    "content": "Return\n    `true` to copy the item, `false` to ignore it.",
    "originalSentence": "Return\n    `true` to copy the item, `false` to ignore it.",
    "position": 479,
    "id": "sentence_479"
  },
  {
    "type": "sentence",
    "content": "When ignoring a directory,\n    all of its contents will be skipped as well.",
    "originalSentence": "When ignoring a directory,\n    all of its contents will be skipped as well.",
    "position": 480,
    "id": "sentence_480"
  },
  {
    "type": "sentence",
    "content": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "originalSentence": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "position": 481,
    "id": "sentence_481"
  },
  {
    "type": "sentence",
    "content": "* `src` {string} source path to copy.",
    "originalSentence": "* `src` {string} source path to copy.",
    "position": 482,
    "id": "sentence_482"
  },
  {
    "type": "sentence",
    "content": "* `dest` {string} destination path to copy to.",
    "originalSentence": "* `dest` {string} destination path to copy to.",
    "position": 483,
    "id": "sentence_483"
  },
  {
    "type": "sentence",
    "content": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "originalSentence": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "position": 484,
    "id": "sentence_484"
  },
  {
    "type": "sentence",
    "content": "* `force` {boolean} overwrite existing file or directory.",
    "originalSentence": "* `force` {boolean} overwrite existing file or directory.",
    "position": 485,
    "id": "sentence_485"
  },
  {
    "type": "sentence",
    "content": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "originalSentence": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "position": 486,
    "id": "sentence_486"
  },
  {
    "type": "sentence",
    "content": "Use the `errorOnExist` option to change this behavior.",
    "originalSentence": "Use the `errorOnExist` option to change this behavior.",
    "position": 487,
    "id": "sentence_487"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 488,
    "id": "sentence_488"
  },
  {
    "type": "sentence",
    "content": "* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "* `mode` {integer} modifiers for copy operation.",
    "position": 489,
    "id": "sentence_489"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 490,
    "id": "sentence_490"
  },
  {
    "type": "sentence",
    "content": "See `mode` flag of [`fsPromises.",
    "originalSentence": "See `mode` flag of [`fsPromises.",
    "position": 491,
    "id": "sentence_491"
  },
  {
    "type": "sentence",
    "content": "copyFile()`][].",
    "originalSentence": "copyFile()`][].",
    "position": 492,
    "id": "sentence_492"
  },
  {
    "type": "sentence",
    "content": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "originalSentence": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "position": 493,
    "id": "sentence_493"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 494,
    "id": "sentence_494"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "originalSentence": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "position": 495,
    "id": "sentence_495"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "**Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 496,
    "id": "sentence_496"
  },
  {
    "type": "sentence",
    "content": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 497,
    "id": "sentence_497"
  },
  {
    "type": "sentence",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 498,
    "id": "sentence_498"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 499,
    "id": "sentence_499"
  },
  {
    "type": "sentence",
    "content": "glob(pattern[, options])`\n\n<!",
    "originalSentence": "glob(pattern[, options])`\n\n<!",
    "position": 500,
    "id": "sentence_500"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v22.",
    "originalSentence": "-- YAML\nadded: v22.",
    "position": 501,
    "id": "sentence_501"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v24.",
    "position": 502,
    "id": "sentence_502"
  },
  {
    "type": "sentence",
    "content": "1.0\n      - v22.",
    "originalSentence": "1.0\n      - v22.",
    "position": 503,
    "id": "sentence_503"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "position": 504,
    "id": "sentence_504"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v24.",
    "originalSentence": "- version:\n      - v24.",
    "position": 505,
    "id": "sentence_505"
  },
  {
    "type": "sentence",
    "content": "0.0\n      - v22.",
    "originalSentence": "0.0\n      - v22.",
    "position": 506,
    "id": "sentence_506"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 507,
    "id": "sentence_507"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v23.",
    "originalSentence": "- version:\n    - v23.",
    "position": 508,
    "id": "sentence_508"
  },
  {
    "type": "sentence",
    "content": "7.0\n    - v22.",
    "originalSentence": "7.0\n    - v22.",
    "position": 509,
    "id": "sentence_509"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "position": 510,
    "id": "sentence_510"
  },
  {
    "type": "sentence",
    "content": "- version: v22.",
    "originalSentence": "- version: v22.",
    "position": 511,
    "id": "sentence_511"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "position": 512,
    "id": "sentence_512"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "originalSentence": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "position": 513,
    "id": "sentence_513"
  },
  {
    "type": "sentence",
    "content": "**Default:** `process.",
    "originalSentence": "**Default:** `process.",
    "position": 514,
    "id": "sentence_514"
  },
  {
    "type": "sentence",
    "content": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "originalSentence": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "position": 515,
    "id": "sentence_515"
  },
  {
    "type": "sentence",
    "content": "If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "originalSentence": "If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "position": 516,
    "id": "sentence_516"
  },
  {
    "type": "sentence",
    "content": "**Default:** `undefined`.",
    "originalSentence": "**Default:** `undefined`.",
    "position": 517,
    "id": "sentence_517"
  },
  {
    "type": "sentence",
    "content": "If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude.",
    "originalSentence": "If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude.",
    "position": 518,
    "id": "sentence_518"
  },
  {
    "type": "sentence",
    "content": "Note: Negation patterns (e.",
    "originalSentence": "Note: Negation patterns (e.",
    "position": 519,
    "id": "sentence_519"
  },
  {
    "type": "sentence",
    "content": "js') are\n    not supported.",
    "originalSentence": "js') are\n    not supported.",
    "position": 520,
    "id": "sentence_520"
  },
  {
    "type": "sentence",
    "content": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "originalSentence": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "position": 521,
    "id": "sentence_521"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 522,
    "id": "sentence_522"
  },
  {
    "type": "sentence",
    "content": "* Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern.",
    "originalSentence": "* Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern.",
    "position": 523,
    "id": "sentence_523"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*.",
    "originalSentence": "```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*.",
    "position": 524,
    "id": "sentence_524"
  },
  {
    "type": "sentence",
    "content": "js'))\n  console.",
    "originalSentence": "js'))\n  console.",
    "position": 525,
    "id": "sentence_525"
  },
  {
    "type": "sentence",
    "content": "log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*.",
    "originalSentence": "log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*.",
    "position": 526,
    "id": "sentence_526"
  },
  {
    "type": "sentence",
    "content": "js'))\n    console.",
    "originalSentence": "js'))\n    console.",
    "position": 527,
    "id": "sentence_527"
  },
  {
    "type": "sentence",
    "content": "log(entry);\n})();\n```\n\n### `fsPromises.",
    "originalSentence": "log(entry);\n})();\n```\n\n### `fsPromises.",
    "position": 528,
    "id": "sentence_528"
  },
  {
    "type": "sentence",
    "content": "lchmod(path, mode)`\n\n<!",
    "originalSentence": "lchmod(path, mode)`\n\n<!",
    "position": 529,
    "id": "sentence_529"
  },
  {
    "type": "sentence",
    "content": "-- YAML\ndeprecated: v10.",
    "originalSentence": "-- YAML\ndeprecated: v10.",
    "position": 530,
    "id": "sentence_530"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 531,
    "id": "sentence_531"
  },
  {
    "type": "sentence",
    "content": "Changes the permissions on a symbolic link.",
    "originalSentence": "Changes the permissions on a symbolic link.",
    "position": 532,
    "id": "sentence_532"
  },
  {
    "type": "sentence",
    "content": "This method is only implemented on macOS.",
    "originalSentence": "This method is only implemented on macOS.",
    "position": 533,
    "id": "sentence_533"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 534,
    "id": "sentence_534"
  },
  {
    "type": "sentence",
    "content": "lchown(path, uid, gid)`\n\n<!",
    "originalSentence": "lchown(path, uid, gid)`\n\n<!",
    "position": 535,
    "id": "sentence_535"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 536,
    "id": "sentence_536"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v10.",
    "originalSentence": "0.0\nchanges:\n  - version: v10.",
    "position": 537,
    "id": "sentence_537"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "position": 538,
    "id": "sentence_538"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 539,
    "id": "sentence_539"
  },
  {
    "type": "sentence",
    "content": "Changes the ownership on a symbolic link.",
    "originalSentence": "Changes the ownership on a symbolic link.",
    "position": 540,
    "id": "sentence_540"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 541,
    "id": "sentence_541"
  },
  {
    "type": "sentence",
    "content": "lutimes(path, atime, mtime)`\n\n<!",
    "originalSentence": "lutimes(path, atime, mtime)`\n\n<!",
    "position": 542,
    "id": "sentence_542"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 543,
    "id": "sentence_543"
  },
  {
    "type": "sentence",
    "content": "5.0\n  - v12.",
    "originalSentence": "5.0\n  - v12.",
    "position": 544,
    "id": "sentence_544"
  },
  {
    "type": "sentence",
    "content": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 545,
    "id": "sentence_545"
  },
  {
    "type": "sentence",
    "content": "Changes the access and modification times of a file in the same way as\n[`fsPromises.",
    "originalSentence": "Changes the access and modification times of a file in the same way as\n[`fsPromises.",
    "position": 546,
    "id": "sentence_546"
  },
  {
    "type": "sentence",
    "content": "utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed.",
    "originalSentence": "utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed.",
    "position": 547,
    "id": "sentence_547"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 548,
    "id": "sentence_548"
  },
  {
    "type": "sentence",
    "content": "link(existingPath, newPath)`\n\n<!",
    "originalSentence": "link(existingPath, newPath)`\n\n<!",
    "position": 549,
    "id": "sentence_549"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 550,
    "id": "sentence_550"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 551,
    "id": "sentence_551"
  },
  {
    "type": "sentence",
    "content": "Creates a new link from the `existingPath` to the `newPath`.",
    "originalSentence": "Creates a new link from the `existingPath` to the `newPath`.",
    "position": 552,
    "id": "sentence_552"
  },
  {
    "type": "sentence",
    "content": "See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "See the POSIX\nlink(2) documentation for more detail.",
    "position": 553,
    "id": "sentence_553"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 554,
    "id": "sentence_554"
  },
  {
    "type": "sentence",
    "content": "lstat(path[, options])`\n\n<!",
    "originalSentence": "lstat(path[, options])`\n\n<!",
    "position": 555,
    "id": "sentence_555"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 556,
    "id": "sentence_556"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v10.",
    "originalSentence": "0.0\nchanges:\n  - version: v10.",
    "position": 557,
    "id": "sentence_557"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 558,
    "id": "sentence_558"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 559,
    "id": "sentence_559"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 560,
    "id": "sentence_560"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 561,
    "id": "sentence_561"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise}  Fulfills with the {fs.",
    "originalSentence": "* Returns: {Promise}  Fulfills with the {fs.",
    "position": 562,
    "id": "sentence_562"
  },
  {
    "type": "sentence",
    "content": "Stats} object for the given\n  symbolic link `path`.",
    "originalSentence": "Stats} object for the given\n  symbolic link `path`.",
    "position": 563,
    "id": "sentence_563"
  },
  {
    "type": "sentence",
    "content": "Equivalent to [`fsPromises.",
    "originalSentence": "Equivalent to [`fsPromises.",
    "position": 564,
    "id": "sentence_564"
  },
  {
    "type": "sentence",
    "content": "stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.",
    "originalSentence": "stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.",
    "position": 565,
    "id": "sentence_565"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX lstat(2) document for more detail.",
    "originalSentence": "Refer to the POSIX lstat(2) document for more detail.",
    "position": 566,
    "id": "sentence_566"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 567,
    "id": "sentence_567"
  },
  {
    "type": "sentence",
    "content": "mkdir(path[, options])`\n\n<!",
    "originalSentence": "mkdir(path[, options])`\n\n<!",
    "position": 568,
    "id": "sentence_568"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 569,
    "id": "sentence_569"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "position": 570,
    "id": "sentence_570"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0o777`.",
    "originalSentence": "**Default:** `0o777`.",
    "position": 571,
    "id": "sentence_571"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`.",
    "originalSentence": "* Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`.",
    "position": 572,
    "id": "sentence_572"
  },
  {
    "type": "sentence",
    "content": "Asynchronously creates a directory.",
    "originalSentence": "Asynchronously creates a directory.",
    "position": 573,
    "id": "sentence_573"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "originalSentence": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "position": 574,
    "id": "sentence_574"
  },
  {
    "type": "sentence",
    "content": "Calling\n`fsPromises.",
    "originalSentence": "Calling\n`fsPromises.",
    "position": 575,
    "id": "sentence_575"
  },
  {
    "type": "sentence",
    "content": "mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false.",
    "originalSentence": "mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false.",
    "position": 576,
    "id": "sentence_576"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('.",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('.",
    "position": 577,
    "id": "sentence_577"
  },
  {
    "type": "sentence",
    "content": "/test/project/', import.",
    "originalSentence": "/test/project/', import.",
    "position": 578,
    "id": "sentence_578"
  },
  {
    "type": "sentence",
    "content": "url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "originalSentence": "url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "position": 579,
    "id": "sentence_579"
  },
  {
    "type": "sentence",
    "content": "log(`created ${createDir}`);\n} catch (err) {\n  console.",
    "originalSentence": "log(`created ${createDir}`);\n} catch (err) {\n  console.",
    "position": 580,
    "id": "sentence_580"
  },
  {
    "type": "sentence",
    "content": "message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "position": 581,
    "id": "sentence_581"
  },
  {
    "type": "sentence",
    "content": "log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory().",
    "originalSentence": "log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory().",
    "position": 582,
    "id": "sentence_582"
  },
  {
    "type": "sentence",
    "content": "catch(console.",
    "originalSentence": "catch(console.",
    "position": 583,
    "id": "sentence_583"
  },
  {
    "type": "sentence",
    "content": "error);\n```\n\n### `fsPromises.",
    "originalSentence": "error);\n```\n\n### `fsPromises.",
    "position": 584,
    "id": "sentence_584"
  },
  {
    "type": "sentence",
    "content": "mkdtemp(prefix[, options])`\n\n<!",
    "originalSentence": "mkdtemp(prefix[, options])`\n\n<!",
    "position": 585,
    "id": "sentence_585"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 586,
    "id": "sentence_586"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v20.",
    "position": 587,
    "id": "sentence_587"
  },
  {
    "type": "sentence",
    "content": "6.0\n    - v18.",
    "originalSentence": "6.0\n    - v18.",
    "position": 588,
    "id": "sentence_588"
  },
  {
    "type": "sentence",
    "content": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "originalSentence": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "position": 589,
    "id": "sentence_589"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v16.",
    "originalSentence": "- version:\n      - v16.",
    "position": 590,
    "id": "sentence_590"
  },
  {
    "type": "sentence",
    "content": "5.0\n      - v14.",
    "originalSentence": "5.0\n      - v14.",
    "position": 591,
    "id": "sentence_591"
  },
  {
    "type": "sentence",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "position": 592,
    "id": "sentence_592"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory.",
    "originalSentence": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory.",
    "position": 593,
    "id": "sentence_593"
  },
  {
    "type": "sentence",
    "content": "Creates a unique temporary directory.",
    "originalSentence": "Creates a unique temporary directory.",
    "position": 594,
    "id": "sentence_594"
  },
  {
    "type": "sentence",
    "content": "A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`.",
    "originalSentence": "A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`.",
    "position": 595,
    "id": "sentence_595"
  },
  {
    "type": "sentence",
    "content": "Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`.",
    "originalSentence": "Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`.",
    "position": 596,
    "id": "sentence_596"
  },
  {
    "type": "sentence",
    "content": "Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters.",
    "originalSentence": "Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters.",
    "position": 597,
    "id": "sentence_597"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 598,
    "id": "sentence_598"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.",
    "originalSentence": "```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.",
    "position": 599,
    "id": "sentence_599"
  },
  {
    "type": "sentence",
    "content": "error(err);\n}\n```\n\nThe `fsPromises.",
    "originalSentence": "error(err);\n}\n```\n\nThe `fsPromises.",
    "position": 600,
    "id": "sentence_600"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string.",
    "originalSentence": "mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string.",
    "position": 601,
    "id": "sentence_601"
  },
  {
    "type": "sentence",
    "content": "For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path').",
    "originalSentence": "For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path').",
    "position": 602,
    "id": "sentence_602"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 603,
    "id": "sentence_603"
  },
  {
    "type": "sentence",
    "content": "mkdtempDisposable(prefix[, options])`\n\n<!",
    "originalSentence": "mkdtempDisposable(prefix[, options])`\n\n<!",
    "position": 604,
    "id": "sentence_604"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v24.",
    "originalSentence": "-- YAML\nadded: v24.",
    "position": 605,
    "id": "sentence_605"
  },
  {
    "type": "sentence",
    "content": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory.",
    "originalSentence": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory.",
    "position": 606,
    "id": "sentence_606"
  },
  {
    "type": "sentence",
    "content": "* `remove` {AsyncFunction} A function which removes the created directory.",
    "originalSentence": "* `remove` {AsyncFunction} A function which removes the created directory.",
    "position": 607,
    "id": "sentence_607"
  },
  {
    "type": "sentence",
    "content": "* `[Symbol.",
    "originalSentence": "* `[Symbol.",
    "position": 608,
    "id": "sentence_608"
  },
  {
    "type": "sentence",
    "content": "asyncDispose]` {AsyncFunction} The same as `remove`.",
    "originalSentence": "asyncDispose]` {AsyncFunction} The same as `remove`.",
    "position": 609,
    "id": "sentence_609"
  },
  {
    "type": "sentence",
    "content": "The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path.",
    "originalSentence": "The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path.",
    "position": 610,
    "id": "sentence_610"
  },
  {
    "type": "sentence",
    "content": "When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists.",
    "originalSentence": "When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists.",
    "position": 611,
    "id": "sentence_611"
  },
  {
    "type": "sentence",
    "content": "If the\ndirectory cannot be deleted, disposal will throw an error.",
    "originalSentence": "If the\ndirectory cannot be deleted, disposal will throw an error.",
    "position": 612,
    "id": "sentence_612"
  },
  {
    "type": "sentence",
    "content": "The object has an\nasync `remove()` method which will perform the same task.",
    "originalSentence": "The object has an\nasync `remove()` method which will perform the same task.",
    "position": 613,
    "id": "sentence_613"
  },
  {
    "type": "sentence",
    "content": "Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises.",
    "originalSentence": "Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises.",
    "position": 614,
    "id": "sentence_614"
  },
  {
    "type": "sentence",
    "content": "mkdtempDisposable('prefix')`.",
    "originalSentence": "mkdtempDisposable('prefix')`.",
    "position": 615,
    "id": "sentence_615"
  },
  {
    "type": "sentence",
    "content": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises.",
    "originalSentence": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises.",
    "position": 616,
    "id": "sentence_616"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()`][].",
    "originalSentence": "mkdtemp()`][].",
    "position": 617,
    "id": "sentence_617"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 618,
    "id": "sentence_618"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 619,
    "id": "sentence_619"
  },
  {
    "type": "sentence",
    "content": "open(path, flags[, mode])`\n\n<!",
    "originalSentence": "open(path, flags[, mode])`\n\n<!",
    "position": 620,
    "id": "sentence_620"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 621,
    "id": "sentence_621"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v11.",
    "originalSentence": "0.0\nchanges:\n  - version: v11.",
    "position": 622,
    "id": "sentence_622"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "position": 623,
    "id": "sentence_623"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "position": 624,
    "id": "sentence_624"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'r'`.",
    "originalSentence": "**Default:** `'r'`.",
    "position": 625,
    "id": "sentence_625"
  },
  {
    "type": "sentence",
    "content": "* `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created.",
    "originalSentence": "* `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created.",
    "position": 626,
    "id": "sentence_626"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object.",
    "originalSentence": "**Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object.",
    "position": 627,
    "id": "sentence_627"
  },
  {
    "type": "sentence",
    "content": "Opens a {FileHandle}.",
    "originalSentence": "Opens a {FileHandle}.",
    "position": 628,
    "id": "sentence_628"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX open(2) documentation for more detail.",
    "originalSentence": "Refer to the POSIX open(2) documentation for more detail.",
    "position": 629,
    "id": "sentence_629"
  },
  {
    "type": "sentence",
    "content": "Some characters (`< > : \" / \\ | ?",
    "originalSentence": "Some characters (`< > : \" / \\ | ?",
    "position": 630,
    "id": "sentence_630"
  },
  {
    "type": "sentence",
    "content": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "originalSentence": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "position": 631,
    "id": "sentence_631"
  },
  {
    "type": "sentence",
    "content": "Under NTFS, if the filename contains\na colon, Node.",
    "originalSentence": "Under NTFS, if the filename contains\na colon, Node.",
    "position": 632,
    "id": "sentence_632"
  },
  {
    "type": "sentence",
    "content": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "originalSentence": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "position": 633,
    "id": "sentence_633"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 634,
    "id": "sentence_634"
  },
  {
    "type": "sentence",
    "content": "opendir(path[, options])`\n\n<!",
    "originalSentence": "opendir(path[, options])`\n\n<!",
    "position": 635,
    "id": "sentence_635"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 636,
    "id": "sentence_636"
  },
  {
    "type": "sentence",
    "content": "12.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "12.0\nchanges:\n  - version:\n    - v20.",
    "position": 637,
    "id": "sentence_637"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 638,
    "id": "sentence_638"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 639,
    "id": "sentence_639"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 640,
    "id": "sentence_640"
  },
  {
    "type": "sentence",
    "content": "1.0\n     - v12.",
    "originalSentence": "1.0\n     - v12.",
    "position": 641,
    "id": "sentence_641"
  },
  {
    "type": "sentence",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "position": 642,
    "id": "sentence_642"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "position": 643,
    "id": "sentence_643"
  },
  {
    "type": "sentence",
    "content": "Higher values lead to better\n    performance but higher memory usage.",
    "originalSentence": "Higher values lead to better\n    performance but higher memory usage.",
    "position": 644,
    "id": "sentence_644"
  },
  {
    "type": "sentence",
    "content": "**Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories.",
    "originalSentence": "**Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories.",
    "position": 645,
    "id": "sentence_645"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs.",
    "originalSentence": "**Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs.",
    "position": 646,
    "id": "sentence_646"
  },
  {
    "type": "sentence",
    "content": "Asynchronously open a directory for iterative scanning.",
    "originalSentence": "Asynchronously open a directory for iterative scanning.",
    "position": 647,
    "id": "sentence_647"
  },
  {
    "type": "sentence",
    "content": "See the POSIX\nopendir(3) documentation for more detail.",
    "originalSentence": "See the POSIX\nopendir(3) documentation for more detail.",
    "position": 648,
    "id": "sentence_648"
  },
  {
    "type": "sentence",
    "content": "Creates an {fs.",
    "originalSentence": "Creates an {fs.",
    "position": 649,
    "id": "sentence_649"
  },
  {
    "type": "sentence",
    "content": "Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 650,
    "id": "sentence_650"
  },
  {
    "type": "sentence",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 651,
    "id": "sentence_651"
  },
  {
    "type": "sentence",
    "content": "Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "originalSentence": "Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "position": 652,
    "id": "sentence_652"
  },
  {
    "type": "sentence",
    "content": "/');\n  for await (const dirent of dir)\n    console.",
    "originalSentence": "/');\n  for await (const dirent of dir)\n    console.",
    "position": 653,
    "id": "sentence_653"
  },
  {
    "type": "sentence",
    "content": "log(dirent.",
    "originalSentence": "log(dirent.",
    "position": 654,
    "id": "sentence_654"
  },
  {
    "type": "sentence",
    "content": "name);\n} catch (err) {\n  console.",
    "originalSentence": "name);\n} catch (err) {\n  console.",
    "position": 655,
    "id": "sentence_655"
  },
  {
    "type": "sentence",
    "content": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "originalSentence": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "position": 656,
    "id": "sentence_656"
  },
  {
    "type": "sentence",
    "content": "Dir} object will be automatically\nclosed after the iterator exits.",
    "originalSentence": "Dir} object will be automatically\nclosed after the iterator exits.",
    "position": 657,
    "id": "sentence_657"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 658,
    "id": "sentence_658"
  },
  {
    "type": "sentence",
    "content": "readdir(path[, options])`\n\n<!",
    "originalSentence": "readdir(path[, options])`\n\n<!",
    "position": 659,
    "id": "sentence_659"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 660,
    "id": "sentence_660"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v20.",
    "position": 661,
    "id": "sentence_661"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 662,
    "id": "sentence_662"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 663,
    "id": "sentence_663"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 664,
    "id": "sentence_664"
  },
  {
    "type": "sentence",
    "content": "11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "originalSentence": "11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "position": 665,
    "id": "sentence_665"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "position": 666,
    "id": "sentence_666"
  },
  {
    "type": "sentence",
    "content": "In recursive mode, it will list all files, sub files, and\n    directories.",
    "originalSentence": "In recursive mode, it will list all files, sub files, and\n    directories.",
    "position": 667,
    "id": "sentence_667"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 668,
    "id": "sentence_668"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.'",
    "originalSentence": "* Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.'",
    "position": 669,
    "id": "sentence_669"
  },
  {
    "type": "sentence",
    "content": "` and `'..'",
    "originalSentence": "` and `'..'",
    "position": 670,
    "id": "sentence_670"
  },
  {
    "type": "sentence",
    "content": "Reads the contents of a directory.",
    "originalSentence": "Reads the contents of a directory.",
    "position": 671,
    "id": "sentence_671"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames.",
    "position": 672,
    "id": "sentence_672"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects.",
    "originalSentence": "If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects.",
    "position": 673,
    "id": "sentence_673"
  },
  {
    "type": "sentence",
    "content": "If `options.",
    "originalSentence": "If `options.",
    "position": 674,
    "id": "sentence_674"
  },
  {
    "type": "sentence",
    "content": "withFileTypes` is set to `true`, the returned array will contain\n{fs.",
    "originalSentence": "withFileTypes` is set to `true`, the returned array will contain\n{fs.",
    "position": 675,
    "id": "sentence_675"
  },
  {
    "type": "sentence",
    "content": "Dirent} objects.",
    "originalSentence": "Dirent} objects.",
    "position": 676,
    "id": "sentence_676"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.",
    "originalSentence": "```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.",
    "position": 677,
    "id": "sentence_677"
  },
  {
    "type": "sentence",
    "content": "log(file);\n} catch (err) {\n  console.",
    "originalSentence": "log(file);\n} catch (err) {\n  console.",
    "position": 678,
    "id": "sentence_678"
  },
  {
    "type": "sentence",
    "content": "error(err);\n}\n```\n\n### `fsPromises.",
    "originalSentence": "error(err);\n}\n```\n\n### `fsPromises.",
    "position": 679,
    "id": "sentence_679"
  },
  {
    "type": "sentence",
    "content": "readFile(path[, options])`\n\n<!",
    "originalSentence": "readFile(path[, options])`\n\n<!",
    "position": 680,
    "id": "sentence_680"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 681,
    "id": "sentence_681"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n    - v15.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v15.",
    "position": 682,
    "id": "sentence_682"
  },
  {
    "type": "sentence",
    "content": "2.0\n    - v14.",
    "originalSentence": "2.0\n    - v14.",
    "position": 683,
    "id": "sentence_683"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "position": 684,
    "id": "sentence_684"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 685,
    "id": "sentence_685"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'r'`.",
    "originalSentence": "**Default:** `'r'`.",
    "position": 686,
    "id": "sentence_686"
  },
  {
    "type": "sentence",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file.",
    "position": 687,
    "id": "sentence_687"
  },
  {
    "type": "sentence",
    "content": "Asynchronously reads the entire contents of a file.",
    "originalSentence": "Asynchronously reads the entire contents of a file.",
    "position": 688,
    "id": "sentence_688"
  },
  {
    "type": "sentence",
    "content": "If no encoding is specified (using `options.",
    "originalSentence": "If no encoding is specified (using `options.",
    "position": 689,
    "id": "sentence_689"
  },
  {
    "type": "sentence",
    "content": "encoding`), the data is returned\nas a {Buffer} object.",
    "originalSentence": "encoding`), the data is returned\nas a {Buffer} object.",
    "position": 690,
    "id": "sentence_690"
  },
  {
    "type": "sentence",
    "content": "Otherwise, the data will be a string.",
    "originalSentence": "Otherwise, the data will be a string.",
    "position": 691,
    "id": "sentence_691"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 692,
    "id": "sentence_692"
  },
  {
    "type": "sentence",
    "content": "When the `path` is a directory, the behavior of `fsPromises.",
    "originalSentence": "When the `path` is a directory, the behavior of `fsPromises.",
    "position": 693,
    "id": "sentence_693"
  },
  {
    "type": "sentence",
    "content": "readFile()` is\nplatform-specific.",
    "originalSentence": "readFile()` is\nplatform-specific.",
    "position": 694,
    "id": "sentence_694"
  },
  {
    "type": "sentence",
    "content": "On macOS, Linux, and Windows, the promise will be rejected\nwith an error.",
    "originalSentence": "On macOS, Linux, and Windows, the promise will be rejected\nwith an error.",
    "position": 695,
    "id": "sentence_695"
  },
  {
    "type": "sentence",
    "content": "On FreeBSD, a representation of the directory's contents will be\nreturned.",
    "originalSentence": "On FreeBSD, a representation of the directory's contents will be\nreturned.",
    "position": 696,
    "id": "sentence_696"
  },
  {
    "type": "sentence",
    "content": "An example of reading a `package.",
    "originalSentence": "An example of reading a `package.",
    "position": 697,
    "id": "sentence_697"
  },
  {
    "type": "sentence",
    "content": "json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('.",
    "originalSentence": "json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('.",
    "position": 698,
    "id": "sentence_698"
  },
  {
    "type": "sentence",
    "content": "json', import.",
    "originalSentence": "json', import.",
    "position": 699,
    "id": "sentence_699"
  },
  {
    "type": "sentence",
    "content": "url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.",
    "originalSentence": "url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.",
    "position": 700,
    "id": "sentence_700"
  },
  {
    "type": "sentence",
    "content": "log(contents);\n} catch (err) {\n  console.",
    "originalSentence": "log(contents);\n} catch (err) {\n  console.",
    "position": 701,
    "id": "sentence_701"
  },
  {
    "type": "sentence",
    "content": "message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('.",
    "position": 702,
    "id": "sentence_702"
  },
  {
    "type": "sentence",
    "content": "json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.",
    "originalSentence": "json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.",
    "position": 703,
    "id": "sentence_703"
  },
  {
    "type": "sentence",
    "content": "log(contents);\n  } catch (err) {\n    console.",
    "originalSentence": "log(contents);\n  } catch (err) {\n    console.",
    "position": 704,
    "id": "sentence_704"
  },
  {
    "type": "sentence",
    "content": "message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}.",
    "originalSentence": "message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}.",
    "position": 705,
    "id": "sentence_705"
  },
  {
    "type": "sentence",
    "content": "If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.",
    "originalSentence": "If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.",
    "position": 706,
    "id": "sentence_706"
  },
  {
    "type": "sentence",
    "content": "controller.",
    "originalSentence": "controller.",
    "position": 707,
    "id": "sentence_707"
  },
  {
    "type": "sentence",
    "content": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "originalSentence": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "position": 708,
    "id": "sentence_708"
  },
  {
    "type": "sentence",
    "content": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 709,
    "id": "sentence_709"
  },
  {
    "type": "sentence",
    "content": "readFile` performs.",
    "originalSentence": "readFile` performs.",
    "position": 710,
    "id": "sentence_710"
  },
  {
    "type": "sentence",
    "content": "Any specified {FileHandle} has to support reading.",
    "originalSentence": "Any specified {FileHandle} has to support reading.",
    "position": 711,
    "id": "sentence_711"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 712,
    "id": "sentence_712"
  },
  {
    "type": "sentence",
    "content": "readlink(path[, options])`\n\n<!",
    "originalSentence": "readlink(path[, options])`\n\n<!",
    "position": 713,
    "id": "sentence_713"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 714,
    "id": "sentence_714"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success.",
    "position": 715,
    "id": "sentence_715"
  },
  {
    "type": "sentence",
    "content": "Reads the contents of the symbolic link referred to by `path`.",
    "originalSentence": "Reads the contents of the symbolic link referred to by `path`.",
    "position": 716,
    "id": "sentence_716"
  },
  {
    "type": "sentence",
    "content": "See the POSIX\nreadlink(2) documentation for more detail.",
    "originalSentence": "See the POSIX\nreadlink(2) documentation for more detail.",
    "position": 717,
    "id": "sentence_717"
  },
  {
    "type": "sentence",
    "content": "The promise is fulfilled with the\n`linkString` upon success.",
    "originalSentence": "The promise is fulfilled with the\n`linkString` upon success.",
    "position": 718,
    "id": "sentence_718"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "position": 719,
    "id": "sentence_719"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object.",
    "position": 720,
    "id": "sentence_720"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 721,
    "id": "sentence_721"
  },
  {
    "type": "sentence",
    "content": "realpath(path[, options])`\n\n<!",
    "originalSentence": "realpath(path[, options])`\n\n<!",
    "position": 722,
    "id": "sentence_722"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 723,
    "id": "sentence_723"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success.",
    "position": 724,
    "id": "sentence_724"
  },
  {
    "type": "sentence",
    "content": "Determines the actual location of `path` using the same semantics as the\n`fs.",
    "originalSentence": "Determines the actual location of `path` using the same semantics as the\n`fs.",
    "position": 725,
    "id": "sentence_725"
  },
  {
    "type": "sentence",
    "content": "native()` function.",
    "originalSentence": "native()` function.",
    "position": 726,
    "id": "sentence_726"
  },
  {
    "type": "sentence",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 727,
    "id": "sentence_727"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path.",
    "position": 728,
    "id": "sentence_728"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object.",
    "position": 729,
    "id": "sentence_729"
  },
  {
    "type": "sentence",
    "content": "On Linux, when Node.",
    "originalSentence": "On Linux, when Node.",
    "position": 730,
    "id": "sentence_730"
  },
  {
    "type": "sentence",
    "content": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "originalSentence": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "position": 731,
    "id": "sentence_731"
  },
  {
    "type": "sentence",
    "content": "Glibc does not have\nthis restriction.",
    "originalSentence": "Glibc does not have\nthis restriction.",
    "position": 732,
    "id": "sentence_732"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 733,
    "id": "sentence_733"
  },
  {
    "type": "sentence",
    "content": "rename(oldPath, newPath)`\n\n<!",
    "originalSentence": "rename(oldPath, newPath)`\n\n<!",
    "position": 734,
    "id": "sentence_734"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 735,
    "id": "sentence_735"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 736,
    "id": "sentence_736"
  },
  {
    "type": "sentence",
    "content": "Renames `oldPath` to `newPath`.",
    "originalSentence": "Renames `oldPath` to `newPath`.",
    "position": 737,
    "id": "sentence_737"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 738,
    "id": "sentence_738"
  },
  {
    "type": "sentence",
    "content": "rmdir(path[, options])`\n\n<!",
    "originalSentence": "rmdir(path[, options])`\n\n<!",
    "position": 739,
    "id": "sentence_739"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 740,
    "id": "sentence_740"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "originalSentence": "0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "position": 741,
    "id": "sentence_741"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 742,
    "id": "sentence_742"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "position": 743,
    "id": "sentence_743"
  },
  {
    "type": "sentence",
    "content": "rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "position": 744,
    "id": "sentence_744"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 745,
    "id": "sentence_745"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "position": 746,
    "id": "sentence_746"
  },
  {
    "type": "sentence",
    "content": "rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "position": 747,
    "id": "sentence_747"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 748,
    "id": "sentence_748"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "position": 749,
    "id": "sentence_749"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 750,
    "id": "sentence_750"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises.",
    "position": 751,
    "id": "sentence_751"
  },
  {
    "type": "sentence",
    "content": "rm` instead.",
    "originalSentence": "rm` instead.",
    "position": 752,
    "id": "sentence_752"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 753,
    "id": "sentence_753"
  },
  {
    "type": "sentence",
    "content": "3.0\n     - v12.",
    "originalSentence": "3.0\n     - v12.",
    "position": 754,
    "id": "sentence_754"
  },
  {
    "type": "sentence",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "position": 755,
    "id": "sentence_755"
  },
  {
    "type": "sentence",
    "content": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "originalSentence": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "position": 756,
    "id": "sentence_756"
  },
  {
    "type": "sentence",
    "content": "The\n                 `retryDelay` option is now supported.",
    "originalSentence": "The\n                 `retryDelay` option is now supported.",
    "position": 757,
    "id": "sentence_757"
  },
  {
    "type": "sentence",
    "content": "`ENFILE` errors are now\n                 retried.",
    "originalSentence": "`ENFILE` errors are now\n                 retried.",
    "position": 758,
    "id": "sentence_758"
  },
  {
    "type": "sentence",
    "content": "- version: v12.",
    "originalSentence": "- version: v12.",
    "position": 759,
    "id": "sentence_759"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported.",
    "position": 760,
    "id": "sentence_760"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "position": 761,
    "id": "sentence_761"
  },
  {
    "type": "sentence",
    "content": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "originalSentence": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "position": 762,
    "id": "sentence_762"
  },
  {
    "type": "sentence",
    "content": "The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 763,
    "id": "sentence_763"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 764,
    "id": "sentence_764"
  },
  {
    "type": "sentence",
    "content": "Removes the directory identified by `path`.",
    "originalSentence": "Removes the directory identified by `path`.",
    "position": 765,
    "id": "sentence_765"
  },
  {
    "type": "sentence",
    "content": "Using `fsPromises.",
    "originalSentence": "Using `fsPromises.",
    "position": 766,
    "id": "sentence_766"
  },
  {
    "type": "sentence",
    "content": "rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX.",
    "originalSentence": "rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX.",
    "position": 767,
    "id": "sentence_767"
  },
  {
    "type": "sentence",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises.",
    "position": 768,
    "id": "sentence_768"
  },
  {
    "type": "sentence",
    "content": "rm()`][] with options `{ recursive: true, force: true }`.",
    "originalSentence": "rm()`][] with options `{ recursive: true, force: true }`.",
    "position": 769,
    "id": "sentence_769"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 770,
    "id": "sentence_770"
  },
  {
    "type": "sentence",
    "content": "rm(path[, options])`\n\n<!",
    "originalSentence": "rm(path[, options])`\n\n<!",
    "position": 771,
    "id": "sentence_771"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v14.",
    "originalSentence": "-- YAML\nadded: v14.",
    "position": 772,
    "id": "sentence_772"
  },
  {
    "type": "sentence",
    "content": "14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "originalSentence": "14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "position": 773,
    "id": "sentence_773"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 774,
    "id": "sentence_774"
  },
  {
    "type": "sentence",
    "content": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "originalSentence": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "position": 775,
    "id": "sentence_775"
  },
  {
    "type": "sentence",
    "content": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "originalSentence": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "position": 776,
    "id": "sentence_776"
  },
  {
    "type": "sentence",
    "content": "This option\n    represents the number of retries.",
    "originalSentence": "This option\n    represents the number of retries.",
    "position": 777,
    "id": "sentence_777"
  },
  {
    "type": "sentence",
    "content": "This option is ignored if the `recursive`\n    option is not `true`.",
    "originalSentence": "This option is ignored if the `recursive`\n    option is not `true`.",
    "position": 778,
    "id": "sentence_778"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 779,
    "id": "sentence_779"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "originalSentence": "* `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "position": 780,
    "id": "sentence_780"
  },
  {
    "type": "sentence",
    "content": "In\n    recursive mode operations are retried on failure.",
    "originalSentence": "In\n    recursive mode operations are retried on failure.",
    "position": 781,
    "id": "sentence_781"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 782,
    "id": "sentence_782"
  },
  {
    "type": "sentence",
    "content": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "originalSentence": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "position": 783,
    "id": "sentence_783"
  },
  {
    "type": "sentence",
    "content": "This option is ignored if the `recursive` option is not `true`.",
    "originalSentence": "This option is ignored if the `recursive` option is not `true`.",
    "position": 784,
    "id": "sentence_784"
  },
  {
    "type": "sentence",
    "content": "**Default:** `100`.",
    "originalSentence": "**Default:** `100`.",
    "position": 785,
    "id": "sentence_785"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 786,
    "id": "sentence_786"
  },
  {
    "type": "sentence",
    "content": "Removes files and directories (modeled on the standard POSIX `rm` utility).",
    "originalSentence": "Removes files and directories (modeled on the standard POSIX `rm` utility).",
    "position": 787,
    "id": "sentence_787"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 788,
    "id": "sentence_788"
  },
  {
    "type": "sentence",
    "content": "stat(path[, options])`\n\n<!",
    "originalSentence": "stat(path[, options])`\n\n<!",
    "position": 789,
    "id": "sentence_789"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 790,
    "id": "sentence_790"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v10.",
    "originalSentence": "0.0\nchanges:\n  - version: v10.",
    "position": 791,
    "id": "sentence_791"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 792,
    "id": "sentence_792"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 793,
    "id": "sentence_793"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 794,
    "id": "sentence_794"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 795,
    "id": "sentence_795"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise}  Fulfills with the {fs.",
    "originalSentence": "* Returns: {Promise}  Fulfills with the {fs.",
    "position": 796,
    "id": "sentence_796"
  },
  {
    "type": "sentence",
    "content": "Stats} object for the\n  given `path`.",
    "originalSentence": "Stats} object for the\n  given `path`.",
    "position": 797,
    "id": "sentence_797"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 798,
    "id": "sentence_798"
  },
  {
    "type": "sentence",
    "content": "statfs(path[, options])`\n\n<!",
    "originalSentence": "statfs(path[, options])`\n\n<!",
    "position": 799,
    "id": "sentence_799"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 800,
    "id": "sentence_800"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 801,
    "id": "sentence_801"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 802,
    "id": "sentence_802"
  },
  {
    "type": "sentence",
    "content": "StatFs} object should be `bigint`.",
    "originalSentence": "StatFs} object should be `bigint`.",
    "position": 803,
    "id": "sentence_803"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 804,
    "id": "sentence_804"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with the {fs.",
    "originalSentence": "* Returns: {Promise} Fulfills with the {fs.",
    "position": 805,
    "id": "sentence_805"
  },
  {
    "type": "sentence",
    "content": "StatFs} object for the\n  given `path`.",
    "originalSentence": "StatFs} object for the\n  given `path`.",
    "position": 806,
    "id": "sentence_806"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 807,
    "id": "sentence_807"
  },
  {
    "type": "sentence",
    "content": "symlink(target, path[, type])`\n\n<!",
    "originalSentence": "symlink(target, path[, type])`\n\n<!",
    "position": 808,
    "id": "sentence_808"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 809,
    "id": "sentence_809"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v19.",
    "originalSentence": "0.0\nchanges:\n  - version: v19.",
    "position": 810,
    "id": "sentence_810"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node.",
    "position": 811,
    "id": "sentence_811"
  },
  {
    "type": "sentence",
    "content": "js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`.",
    "originalSentence": "js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`.",
    "position": 812,
    "id": "sentence_812"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 813,
    "id": "sentence_813"
  },
  {
    "type": "sentence",
    "content": "Creates a symbolic link.",
    "originalSentence": "Creates a symbolic link.",
    "position": 814,
    "id": "sentence_814"
  },
  {
    "type": "sentence",
    "content": "The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`.",
    "originalSentence": "The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`.",
    "position": 815,
    "id": "sentence_815"
  },
  {
    "type": "sentence",
    "content": "If the `type` argument is `null`, Node.",
    "originalSentence": "If the `type` argument is `null`, Node.",
    "position": 816,
    "id": "sentence_816"
  },
  {
    "type": "sentence",
    "content": "js will\nautodetect `target` type and use `'file'` or `'dir'`.",
    "originalSentence": "js will\nautodetect `target` type and use `'file'` or `'dir'`.",
    "position": 817,
    "id": "sentence_817"
  },
  {
    "type": "sentence",
    "content": "If the `target` does not\nexist, `'file'` will be used.",
    "originalSentence": "If the `target` does not\nexist, `'file'` will be used.",
    "position": 818,
    "id": "sentence_818"
  },
  {
    "type": "sentence",
    "content": "Windows junction points require the destination\npath to be absolute.",
    "originalSentence": "Windows junction points require the destination\npath to be absolute.",
    "position": 819,
    "id": "sentence_819"
  },
  {
    "type": "sentence",
    "content": "When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path.",
    "originalSentence": "When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path.",
    "position": 820,
    "id": "sentence_820"
  },
  {
    "type": "sentence",
    "content": "Junction points on NTFS volumes\ncan only point to directories.",
    "originalSentence": "Junction points on NTFS volumes\ncan only point to directories.",
    "position": 821,
    "id": "sentence_821"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 822,
    "id": "sentence_822"
  },
  {
    "type": "sentence",
    "content": "truncate(path[, len])`\n\n<!",
    "originalSentence": "truncate(path[, len])`\n\n<!",
    "position": 823,
    "id": "sentence_823"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 824,
    "id": "sentence_824"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 825,
    "id": "sentence_825"
  },
  {
    "type": "sentence",
    "content": "Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes.",
    "originalSentence": "Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes.",
    "position": 826,
    "id": "sentence_826"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 827,
    "id": "sentence_827"
  },
  {
    "type": "sentence",
    "content": "unlink(path)`\n\n<!",
    "originalSentence": "unlink(path)`\n\n<!",
    "position": 828,
    "id": "sentence_828"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 829,
    "id": "sentence_829"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 830,
    "id": "sentence_830"
  },
  {
    "type": "sentence",
    "content": "If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers.",
    "originalSentence": "If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers.",
    "position": 831,
    "id": "sentence_831"
  },
  {
    "type": "sentence",
    "content": "If the `path` refers to a file\npath that is not a symbolic link, the file is deleted.",
    "originalSentence": "If the `path` refers to a file\npath that is not a symbolic link, the file is deleted.",
    "position": 832,
    "id": "sentence_832"
  },
  {
    "type": "sentence",
    "content": "See the POSIX unlink(2)\ndocumentation for more detail.",
    "originalSentence": "See the POSIX unlink(2)\ndocumentation for more detail.",
    "position": 833,
    "id": "sentence_833"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 834,
    "id": "sentence_834"
  },
  {
    "type": "sentence",
    "content": "utimes(path, atime, mtime)`\n\n<!",
    "originalSentence": "utimes(path, atime, mtime)`\n\n<!",
    "position": 835,
    "id": "sentence_835"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 836,
    "id": "sentence_836"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 837,
    "id": "sentence_837"
  },
  {
    "type": "sentence",
    "content": "Change the file system timestamps of the object referenced by `path`.",
    "originalSentence": "Change the file system timestamps of the object referenced by `path`.",
    "position": 838,
    "id": "sentence_838"
  },
  {
    "type": "sentence",
    "content": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789.",
    "originalSentence": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789.",
    "position": 839,
    "id": "sentence_839"
  },
  {
    "type": "sentence",
    "content": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "originalSentence": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "position": 840,
    "id": "sentence_840"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 841,
    "id": "sentence_841"
  },
  {
    "type": "sentence",
    "content": "watch(filename[, options])`\n\n<!",
    "originalSentence": "watch(filename[, options])`\n\n<!",
    "position": 842,
    "id": "sentence_842"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v15.",
    "originalSentence": "-- YAML\nadded:\n  - v15.",
    "position": 843,
    "id": "sentence_843"
  },
  {
    "type": "sentence",
    "content": "9.0\n  - v14.",
    "originalSentence": "9.0\n  - v14.",
    "position": 844,
    "id": "sentence_844"
  },
  {
    "type": "sentence",
    "content": "18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "originalSentence": "18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "position": 845,
    "id": "sentence_845"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 846,
    "id": "sentence_846"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "originalSentence": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "position": 847,
    "id": "sentence_847"
  },
  {
    "type": "sentence",
    "content": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "originalSentence": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "position": 848,
    "id": "sentence_848"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n    `false`.",
    "originalSentence": "**Default:**\n    `false`.",
    "position": 849,
    "id": "sentence_849"
  },
  {
    "type": "sentence",
    "content": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "originalSentence": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "position": 850,
    "id": "sentence_850"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'utf8'`.",
    "originalSentence": "**Default:** `'utf8'`.",
    "position": 851,
    "id": "sentence_851"
  },
  {
    "type": "sentence",
    "content": "* `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop.",
    "originalSentence": "* `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop.",
    "position": 852,
    "id": "sentence_852"
  },
  {
    "type": "sentence",
    "content": "* `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned.",
    "originalSentence": "* `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned.",
    "position": 853,
    "id": "sentence_853"
  },
  {
    "type": "sentence",
    "content": "**Default:** `2048`.",
    "originalSentence": "**Default:** `2048`.",
    "position": 854,
    "id": "sentence_854"
  },
  {
    "type": "sentence",
    "content": "* `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows.",
    "originalSentence": "* `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows.",
    "position": 855,
    "id": "sentence_855"
  },
  {
    "type": "sentence",
    "content": "`'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception.",
    "originalSentence": "`'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception.",
    "position": 856,
    "id": "sentence_856"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'ignore'`.",
    "originalSentence": "**Default:** `'ignore'`.",
    "position": 857,
    "id": "sentence_857"
  },
  {
    "type": "sentence",
    "content": "* Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed.",
    "originalSentence": "* Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed.",
    "position": 858,
    "id": "sentence_858"
  },
  {
    "type": "sentence",
    "content": "Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory.",
    "originalSentence": "Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory.",
    "position": 859,
    "id": "sentence_859"
  },
  {
    "type": "sentence",
    "content": "```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.",
    "originalSentence": "```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.",
    "position": 860,
    "id": "sentence_860"
  },
  {
    "type": "sentence",
    "content": "abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.",
    "originalSentence": "abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.",
    "position": 861,
    "id": "sentence_861"
  },
  {
    "type": "sentence",
    "content": "log(event);\n  } catch (err) {\n    if (err.",
    "originalSentence": "log(event);\n  } catch (err) {\n    if (err.",
    "position": 862,
    "id": "sentence_862"
  },
  {
    "type": "sentence",
    "content": "name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "originalSentence": "name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "position": 863,
    "id": "sentence_863"
  },
  {
    "type": "sentence",
    "content": "All the [caveats][] for `fs.",
    "originalSentence": "All the [caveats][] for `fs.",
    "position": 864,
    "id": "sentence_864"
  },
  {
    "type": "sentence",
    "content": "watch()` also apply to `fsPromises.",
    "originalSentence": "watch()` also apply to `fsPromises.",
    "position": 865,
    "id": "sentence_865"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 866,
    "id": "sentence_866"
  },
  {
    "type": "sentence",
    "content": "writeFile(file, data[, options])`\n\n<!",
    "originalSentence": "writeFile(file, data[, options])`\n\n<!",
    "position": 867,
    "id": "sentence_867"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 868,
    "id": "sentence_868"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v21.",
    "position": 869,
    "id": "sentence_869"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v20.",
    "originalSentence": "0.0\n    - v20.",
    "position": 870,
    "id": "sentence_870"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "position": 871,
    "id": "sentence_871"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 872,
    "id": "sentence_872"
  },
  {
    "type": "sentence",
    "content": "14.0\n      - v14.",
    "originalSentence": "14.0\n      - v14.",
    "position": 873,
    "id": "sentence_873"
  },
  {
    "type": "sentence",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "position": 874,
    "id": "sentence_874"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 875,
    "id": "sentence_875"
  },
  {
    "type": "sentence",
    "content": "2.0\n      - v14.",
    "originalSentence": "2.0\n      - v14.",
    "position": 876,
    "id": "sentence_876"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "position": 877,
    "id": "sentence_877"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 878,
    "id": "sentence_878"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 879,
    "id": "sentence_879"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 880,
    "id": "sentence_880"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'w'`.",
    "originalSentence": "**Default:** `'w'`.",
    "position": 881,
    "id": "sentence_881"
  },
  {
    "type": "sentence",
    "content": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle.",
    "originalSentence": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle.",
    "position": 882,
    "id": "sentence_882"
  },
  {
    "type": "sentence",
    "content": "sync()` is used to flush the data.",
    "originalSentence": "sync()` is used to flush the data.",
    "position": 883,
    "id": "sentence_883"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 884,
    "id": "sentence_884"
  },
  {
    "type": "sentence",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 885,
    "id": "sentence_885"
  },
  {
    "type": "sentence",
    "content": "Asynchronously writes data to a file, replacing the file if it already exists.",
    "originalSentence": "Asynchronously writes data to a file, replacing the file if it already exists.",
    "position": 886,
    "id": "sentence_886"
  },
  {
    "type": "sentence",
    "content": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "originalSentence": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "position": 887,
    "id": "sentence_887"
  },
  {
    "type": "sentence",
    "content": "The `encoding` option is ignored if `data` is a buffer.",
    "originalSentence": "The `encoding` option is ignored if `data` is a buffer.",
    "position": 888,
    "id": "sentence_888"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 889,
    "id": "sentence_889"
  },
  {
    "type": "sentence",
    "content": "The `mode` option only affects the newly created file.",
    "originalSentence": "The `mode` option only affects the newly created file.",
    "position": 890,
    "id": "sentence_890"
  },
  {
    "type": "sentence",
    "content": "open()`][]\nfor more details.",
    "originalSentence": "open()`][]\nfor more details.",
    "position": 891,
    "id": "sentence_891"
  },
  {
    "type": "sentence",
    "content": "Any specified {FileHandle} has to support writing.",
    "originalSentence": "Any specified {FileHandle} has to support writing.",
    "position": 892,
    "id": "sentence_892"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `fsPromises.",
    "originalSentence": "It is unsafe to use `fsPromises.",
    "position": 893,
    "id": "sentence_893"
  },
  {
    "type": "sentence",
    "content": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled.",
    "originalSentence": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled.",
    "position": 894,
    "id": "sentence_894"
  },
  {
    "type": "sentence",
    "content": "Similarly to `fsPromises.",
    "originalSentence": "Similarly to `fsPromises.",
    "position": 895,
    "id": "sentence_895"
  },
  {
    "type": "sentence",
    "content": "readFile` - `fsPromises.",
    "originalSentence": "readFile` - `fsPromises.",
    "position": 896,
    "id": "sentence_896"
  },
  {
    "type": "sentence",
    "content": "writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it.",
    "originalSentence": "writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it.",
    "position": 897,
    "id": "sentence_897"
  },
  {
    "type": "sentence",
    "content": "For performance sensitive code consider using\n[`fs.",
    "originalSentence": "For performance sensitive code consider using\n[`fs.",
    "position": 898,
    "id": "sentence_898"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][] or [`filehandle.",
    "originalSentence": "createWriteStream()`][] or [`filehandle.",
    "position": 899,
    "id": "sentence_899"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][].",
    "originalSentence": "createWriteStream()`][].",
    "position": 900,
    "id": "sentence_900"
  },
  {
    "type": "sentence",
    "content": "It is possible to use an {AbortSignal} to cancel an `fsPromises.",
    "originalSentence": "It is possible to use an {AbortSignal} to cancel an `fsPromises.",
    "position": 901,
    "id": "sentence_901"
  },
  {
    "type": "sentence",
    "content": "writeFile()`.",
    "originalSentence": "writeFile()`.",
    "position": 902,
    "id": "sentence_902"
  },
  {
    "type": "sentence",
    "content": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "originalSentence": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "position": 903,
    "id": "sentence_903"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.",
    "position": 904,
    "id": "sentence_904"
  },
  {
    "type": "sentence",
    "content": "from('Hello Node.",
    "originalSentence": "from('Hello Node.",
    "position": 905,
    "id": "sentence_905"
  },
  {
    "type": "sentence",
    "content": "js'));\n  const promise = writeFile('message.",
    "originalSentence": "js'));\n  const promise = writeFile('message.",
    "position": 906,
    "id": "sentence_906"
  },
  {
    "type": "sentence",
    "content": "txt', data, { signal });\n\n  // Abort the request before the promise settles.",
    "originalSentence": "txt', data, { signal });\n\n  // Abort the request before the promise settles.",
    "position": 907,
    "id": "sentence_907"
  },
  {
    "type": "sentence",
    "content": "controller.",
    "originalSentence": "controller.",
    "position": 908,
    "id": "sentence_908"
  },
  {
    "type": "sentence",
    "content": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "originalSentence": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "position": 909,
    "id": "sentence_909"
  },
  {
    "type": "sentence",
    "content": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 910,
    "id": "sentence_910"
  },
  {
    "type": "sentence",
    "content": "writeFile` performs.",
    "originalSentence": "writeFile` performs.",
    "position": 911,
    "id": "sentence_911"
  },
  {
    "type": "sentence",
    "content": "### `fsPromises.",
    "originalSentence": "### `fsPromises.",
    "position": 912,
    "id": "sentence_912"
  },
  {
    "type": "sentence",
    "content": "constants`\n\n<!",
    "originalSentence": "constants`\n\n<!",
    "position": 913,
    "id": "sentence_913"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v18.",
    "originalSentence": "-- YAML\nadded:\n  - v18.",
    "position": 914,
    "id": "sentence_914"
  },
  {
    "type": "sentence",
    "content": "4.0\n  - v16.",
    "originalSentence": "4.0\n  - v16.",
    "position": 915,
    "id": "sentence_915"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "originalSentence": "17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "position": 916,
    "id": "sentence_916"
  },
  {
    "type": "sentence",
    "content": "The object is the same as `fs.",
    "originalSentence": "The object is the same as `fs.",
    "position": 917,
    "id": "sentence_917"
  },
  {
    "type": "sentence",
    "content": "constants`.",
    "originalSentence": "constants`.",
    "position": 918,
    "id": "sentence_918"
  },
  {
    "type": "sentence",
    "content": "See [FS constants][]\nfor more details.",
    "originalSentence": "See [FS constants][]\nfor more details.",
    "position": 919,
    "id": "sentence_919"
  },
  {
    "type": "sentence",
    "content": "## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error.",
    "originalSentence": "## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error.",
    "position": 920,
    "id": "sentence_920"
  },
  {
    "type": "sentence",
    "content": "The callback APIs use the underlying Node.",
    "originalSentence": "The callback APIs use the underlying Node.",
    "position": 921,
    "id": "sentence_921"
  },
  {
    "type": "sentence",
    "content": "js threadpool to perform file\nsystem operations off the event loop thread.",
    "originalSentence": "js threadpool to perform file\nsystem operations off the event loop thread.",
    "position": 922,
    "id": "sentence_922"
  },
  {
    "type": "sentence",
    "content": "These operations are not\nsynchronized or threadsafe.",
    "originalSentence": "These operations are not\nsynchronized or threadsafe.",
    "position": 923,
    "id": "sentence_923"
  },
  {
    "type": "sentence",
    "content": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "originalSentence": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "position": 924,
    "id": "sentence_924"
  },
  {
    "type": "sentence",
    "content": "access(path[, mode], callback)`\n\n<!",
    "originalSentence": "access(path[, mode], callback)`\n\n<!",
    "position": 925,
    "id": "sentence_925"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 926,
    "id": "sentence_926"
  },
  {
    "type": "sentence",
    "content": "11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs.",
    "originalSentence": "11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs.",
    "position": 927,
    "id": "sentence_927"
  },
  {
    "type": "sentence",
    "content": "F_OK`, `fs.",
    "originalSentence": "F_OK`, `fs.",
    "position": 928,
    "id": "sentence_928"
  },
  {
    "type": "sentence",
    "content": "R_OK`, `fs.",
    "originalSentence": "R_OK`, `fs.",
    "position": 929,
    "id": "sentence_929"
  },
  {
    "type": "sentence",
    "content": "W_OK` and `fs.",
    "originalSentence": "W_OK` and `fs.",
    "position": 930,
    "id": "sentence_930"
  },
  {
    "type": "sentence",
    "content": "X_OK`\n                 which were present directly on `fs` are removed.",
    "originalSentence": "X_OK`\n                 which were present directly on `fs` are removed.",
    "position": 931,
    "id": "sentence_931"
  },
  {
    "type": "sentence",
    "content": "- version: v20.",
    "originalSentence": "- version: v20.",
    "position": 932,
    "id": "sentence_932"
  },
  {
    "type": "sentence",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs.",
    "position": 933,
    "id": "sentence_933"
  },
  {
    "type": "sentence",
    "content": "F_OK`, `fs.",
    "originalSentence": "F_OK`, `fs.",
    "position": 934,
    "id": "sentence_934"
  },
  {
    "type": "sentence",
    "content": "R_OK`, `fs.",
    "originalSentence": "R_OK`, `fs.",
    "position": 935,
    "id": "sentence_935"
  },
  {
    "type": "sentence",
    "content": "W_OK` and `fs.",
    "originalSentence": "W_OK` and `fs.",
    "position": 936,
    "id": "sentence_936"
  },
  {
    "type": "sentence",
    "content": "X_OK`\n                 which were present directly on `fs` are deprecated.",
    "originalSentence": "X_OK`\n                 which were present directly on `fs` are deprecated.",
    "position": 937,
    "id": "sentence_937"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 938,
    "id": "sentence_938"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 939,
    "id": "sentence_939"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 940,
    "id": "sentence_940"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 941,
    "id": "sentence_941"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 942,
    "id": "sentence_942"
  },
  {
    "type": "sentence",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs.",
    "position": 943,
    "id": "sentence_943"
  },
  {
    "type": "sentence",
    "content": "R_OK`, etc which were present directly\n                 on `fs` were moved into `fs.",
    "originalSentence": "R_OK`, etc which were present directly\n                 on `fs` were moved into `fs.",
    "position": 944,
    "id": "sentence_944"
  },
  {
    "type": "sentence",
    "content": "constants` as a soft deprecation.",
    "originalSentence": "constants` as a soft deprecation.",
    "position": 945,
    "id": "sentence_945"
  },
  {
    "type": "sentence",
    "content": "Thus for Node.",
    "originalSentence": "Thus for Node.",
    "position": 946,
    "id": "sentence_946"
  },
  {
    "type": "sentence",
    "content": "3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs.",
    "originalSentence": "3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs.",
    "position": 947,
    "id": "sentence_947"
  },
  {
    "type": "sentence",
    "content": "constants || fs).",
    "originalSentence": "constants || fs).",
    "position": 948,
    "id": "sentence_948"
  },
  {
    "type": "sentence",
    "content": "R_OK` to work with all\n                 versions.",
    "originalSentence": "R_OK` to work with all\n                 versions.",
    "position": 949,
    "id": "sentence_949"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "position": 950,
    "id": "sentence_950"
  },
  {
    "type": "sentence",
    "content": "F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`.",
    "originalSentence": "F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`.",
    "position": 951,
    "id": "sentence_951"
  },
  {
    "type": "sentence",
    "content": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "originalSentence": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "position": 952,
    "id": "sentence_952"
  },
  {
    "type": "sentence",
    "content": "`mode` should be either the value `fs.",
    "originalSentence": "`mode` should be either the value `fs.",
    "position": 953,
    "id": "sentence_953"
  },
  {
    "type": "sentence",
    "content": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "originalSentence": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "position": 954,
    "id": "sentence_954"
  },
  {
    "type": "sentence",
    "content": "R_OK`,\n`fs.",
    "originalSentence": "R_OK`,\n`fs.",
    "position": 955,
    "id": "sentence_955"
  },
  {
    "type": "sentence",
    "content": "W_OK`, and `fs.",
    "originalSentence": "W_OK`, and `fs.",
    "position": 956,
    "id": "sentence_956"
  },
  {
    "type": "sentence",
    "content": "Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "Check [File access constants][] for\npossible values of `mode`.",
    "position": 957,
    "id": "sentence_957"
  },
  {
    "type": "sentence",
    "content": "The final argument, `callback`, is a callback function that is invoked with\na possible error argument.",
    "originalSentence": "The final argument, `callback`, is a callback function that is invoked with\na possible error argument.",
    "position": 958,
    "id": "sentence_958"
  },
  {
    "type": "sentence",
    "content": "If any of the accessibility checks fail, the error\nargument will be an `Error` object.",
    "originalSentence": "If any of the accessibility checks fail, the error\nargument will be an `Error` object.",
    "position": 959,
    "id": "sentence_959"
  },
  {
    "type": "sentence",
    "content": "The following examples check if\n`package.",
    "originalSentence": "The following examples check if\n`package.",
    "position": 960,
    "id": "sentence_960"
  },
  {
    "type": "sentence",
    "content": "json` exists, and if it is readable or writable.",
    "originalSentence": "json` exists, and if it is readable or writable.",
    "position": 961,
    "id": "sentence_961"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package.",
    "originalSentence": "```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package.",
    "position": 962,
    "id": "sentence_962"
  },
  {
    "type": "sentence",
    "content": "json';\n\n// Check if the file exists in the current directory.",
    "originalSentence": "json';\n\n// Check if the file exists in the current directory.",
    "position": 963,
    "id": "sentence_963"
  },
  {
    "type": "sentence",
    "content": "access(file, constants.",
    "originalSentence": "access(file, constants.",
    "position": 964,
    "id": "sentence_964"
  },
  {
    "type": "sentence",
    "content": "F_OK, (err) => {\n  console.",
    "originalSentence": "F_OK, (err) => {\n  console.",
    "position": 965,
    "id": "sentence_965"
  },
  {
    "type": "sentence",
    "content": "log(`${file} ${err ?",
    "originalSentence": "log(`${file} ${err ?",
    "position": 966,
    "id": "sentence_966"
  },
  {
    "type": "sentence",
    "content": "'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.",
    "originalSentence": "'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.",
    "position": 967,
    "id": "sentence_967"
  },
  {
    "type": "sentence",
    "content": "access(file, constants.",
    "originalSentence": "access(file, constants.",
    "position": 968,
    "id": "sentence_968"
  },
  {
    "type": "sentence",
    "content": "R_OK, (err) => {\n  console.",
    "originalSentence": "R_OK, (err) => {\n  console.",
    "position": 969,
    "id": "sentence_969"
  },
  {
    "type": "sentence",
    "content": "log(`${file} ${err ?",
    "originalSentence": "log(`${file} ${err ?",
    "position": 970,
    "id": "sentence_970"
  },
  {
    "type": "sentence",
    "content": "'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.",
    "originalSentence": "'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.",
    "position": 971,
    "id": "sentence_971"
  },
  {
    "type": "sentence",
    "content": "access(file, constants.",
    "originalSentence": "access(file, constants.",
    "position": 972,
    "id": "sentence_972"
  },
  {
    "type": "sentence",
    "content": "W_OK, (err) => {\n  console.",
    "originalSentence": "W_OK, (err) => {\n  console.",
    "position": 973,
    "id": "sentence_973"
  },
  {
    "type": "sentence",
    "content": "log(`${file} ${err ?",
    "originalSentence": "log(`${file} ${err ?",
    "position": 974,
    "id": "sentence_974"
  },
  {
    "type": "sentence",
    "content": "'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable.",
    "originalSentence": "'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable.",
    "position": 975,
    "id": "sentence_975"
  },
  {
    "type": "sentence",
    "content": "access(file, constants.",
    "originalSentence": "access(file, constants.",
    "position": 976,
    "id": "sentence_976"
  },
  {
    "type": "sentence",
    "content": "R_OK | constants.",
    "originalSentence": "R_OK | constants.",
    "position": 977,
    "id": "sentence_977"
  },
  {
    "type": "sentence",
    "content": "W_OK, (err) => {\n  console.",
    "originalSentence": "W_OK, (err) => {\n  console.",
    "position": 978,
    "id": "sentence_978"
  },
  {
    "type": "sentence",
    "content": "log(`${file} ${err ?",
    "originalSentence": "log(`${file} ${err ?",
    "position": 979,
    "id": "sentence_979"
  },
  {
    "type": "sentence",
    "content": "'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs.",
    "originalSentence": "'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs.",
    "position": 980,
    "id": "sentence_980"
  },
  {
    "type": "sentence",
    "content": "access()` to check for the accessibility of a file before calling\n`fs.",
    "originalSentence": "access()` to check for the accessibility of a file before calling\n`fs.",
    "position": 981,
    "id": "sentence_981"
  },
  {
    "type": "sentence",
    "content": "open()`, `fs.",
    "originalSentence": "open()`, `fs.",
    "position": 982,
    "id": "sentence_982"
  },
  {
    "type": "sentence",
    "content": "readFile()`, or `fs.",
    "originalSentence": "readFile()`, or `fs.",
    "position": 983,
    "id": "sentence_983"
  },
  {
    "type": "sentence",
    "content": "writeFile()`.",
    "originalSentence": "writeFile()`.",
    "position": 984,
    "id": "sentence_984"
  },
  {
    "type": "sentence",
    "content": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "originalSentence": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "position": 985,
    "id": "sentence_985"
  },
  {
    "type": "sentence",
    "content": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.",
    "originalSentence": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.",
    "position": 986,
    "id": "sentence_986"
  },
  {
    "type": "sentence",
    "content": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (!",
    "originalSentence": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (!",
    "position": 987,
    "id": "sentence_987"
  },
  {
    "type": "sentence",
    "content": "err) {\n    console.",
    "originalSentence": "err) {\n    console.",
    "position": 988,
    "id": "sentence_988"
  },
  {
    "type": "sentence",
    "content": "error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 989,
    "id": "sentence_989"
  },
  {
    "type": "sentence",
    "content": "code === 'EEXIST') {\n      console.",
    "originalSentence": "code === 'EEXIST') {\n      console.",
    "position": 990,
    "id": "sentence_990"
  },
  {
    "type": "sentence",
    "content": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.",
    "position": 991,
    "id": "sentence_991"
  },
  {
    "type": "sentence",
    "content": "code === 'ENOENT') {\n      console.",
    "originalSentence": "code === 'ENOENT') {\n      console.",
    "position": 992,
    "id": "sentence_992"
  },
  {
    "type": "sentence",
    "content": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 993,
    "id": "sentence_993"
  },
  {
    "type": "sentence",
    "content": "code === 'ENOENT') {\n      console.",
    "originalSentence": "code === 'ENOENT') {\n      console.",
    "position": 994,
    "id": "sentence_994"
  },
  {
    "type": "sentence",
    "content": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "originalSentence": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "position": 995,
    "id": "sentence_995"
  },
  {
    "type": "sentence",
    "content": "In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.",
    "originalSentence": "In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.",
    "position": 996,
    "id": "sentence_996"
  },
  {
    "type": "sentence",
    "content": "On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory.",
    "originalSentence": "On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory.",
    "position": 997,
    "id": "sentence_997"
  },
  {
    "type": "sentence",
    "content": "access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.",
    "originalSentence": "access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.",
    "position": 998,
    "id": "sentence_998"
  },
  {
    "type": "sentence",
    "content": "appendFile(path, data[, options], callback)`\n\n<!",
    "originalSentence": "appendFile(path, data[, options], callback)`\n\n<!",
    "position": 999,
    "id": "sentence_999"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1000,
    "id": "sentence_1000"
  },
  {
    "type": "sentence",
    "content": "6.7\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "6.7\nchanges:\n  - version:\n    - v21.",
    "position": 1001,
    "id": "sentence_1001"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v20.",
    "originalSentence": "1.0\n    - v20.",
    "position": 1002,
    "id": "sentence_1002"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 1003,
    "id": "sentence_1003"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 1004,
    "id": "sentence_1004"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1005,
    "id": "sentence_1005"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1006,
    "id": "sentence_1006"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1007,
    "id": "sentence_1007"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1008,
    "id": "sentence_1008"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1009,
    "id": "sentence_1009"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1010,
    "id": "sentence_1010"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1011,
    "id": "sentence_1011"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1012,
    "id": "sentence_1012"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 1013,
    "id": "sentence_1013"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 1014,
    "id": "sentence_1014"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 1015,
    "id": "sentence_1015"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 1016,
    "id": "sentence_1016"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'a'`.",
    "originalSentence": "**Default:** `'a'`.",
    "position": 1017,
    "id": "sentence_1017"
  },
  {
    "type": "sentence",
    "content": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 1018,
    "id": "sentence_1018"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1019,
    "id": "sentence_1019"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist.",
    "position": 1020,
    "id": "sentence_1020"
  },
  {
    "type": "sentence",
    "content": "`data` can be a string or a {Buffer}.",
    "originalSentence": "`data` can be a string or a {Buffer}.",
    "position": 1021,
    "id": "sentence_1021"
  },
  {
    "type": "sentence",
    "content": "The `mode` option only affects the newly created file.",
    "originalSentence": "The `mode` option only affects the newly created file.",
    "position": 1022,
    "id": "sentence_1022"
  },
  {
    "type": "sentence",
    "content": "open()`][]\nfor more details.",
    "originalSentence": "open()`][]\nfor more details.",
    "position": 1023,
    "id": "sentence_1023"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "originalSentence": "```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "position": 1024,
    "id": "sentence_1024"
  },
  {
    "type": "sentence",
    "content": "txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.",
    "position": 1025,
    "id": "sentence_1025"
  },
  {
    "type": "sentence",
    "content": "log('The \"data to append\" was appended to file!'",
    "originalSentence": "log('The \"data to append\" was appended to file!'",
    "position": 1026,
    "id": "sentence_1026"
  },
  {
    "type": "sentence",
    "content": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "originalSentence": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "position": 1027,
    "id": "sentence_1027"
  },
  {
    "type": "sentence",
    "content": "txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "originalSentence": "txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "position": 1028,
    "id": "sentence_1028"
  },
  {
    "type": "sentence",
    "content": "open()` or `fs.",
    "originalSentence": "open()` or `fs.",
    "position": 1029,
    "id": "sentence_1029"
  },
  {
    "type": "sentence",
    "content": "openSync()`).",
    "originalSentence": "openSync()`).",
    "position": 1030,
    "id": "sentence_1030"
  },
  {
    "type": "sentence",
    "content": "The file descriptor will\nnot be closed automatically.",
    "originalSentence": "The file descriptor will\nnot be closed automatically.",
    "position": 1031,
    "id": "sentence_1031"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message.",
    "originalSentence": "```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message.",
    "position": 1032,
    "id": "sentence_1032"
  },
  {
    "type": "sentence",
    "content": "txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs.",
    "originalSentence": "txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs.",
    "position": 1033,
    "id": "sentence_1033"
  },
  {
    "type": "sentence",
    "content": "chmod(path, mode, callback)`\n\n<!",
    "originalSentence": "chmod(path, mode, callback)`\n\n<!",
    "position": 1034,
    "id": "sentence_1034"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1035,
    "id": "sentence_1035"
  },
  {
    "type": "sentence",
    "content": "1.30\nchanges:\n  - version: v18.",
    "originalSentence": "1.30\nchanges:\n  - version: v18.",
    "position": 1036,
    "id": "sentence_1036"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1037,
    "id": "sentence_1037"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1038,
    "id": "sentence_1038"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1039,
    "id": "sentence_1039"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1040,
    "id": "sentence_1040"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1041,
    "id": "sentence_1041"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1042,
    "id": "sentence_1042"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1043,
    "id": "sentence_1043"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1044,
    "id": "sentence_1044"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1045,
    "id": "sentence_1045"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file.",
    "position": 1046,
    "id": "sentence_1046"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback.",
    "position": 1047,
    "id": "sentence_1047"
  },
  {
    "type": "sentence",
    "content": "See the POSIX chmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX chmod(2) documentation for more detail.",
    "position": 1048,
    "id": "sentence_1048"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file.",
    "originalSentence": "```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file.",
    "position": 1049,
    "id": "sentence_1049"
  },
  {
    "type": "sentence",
    "content": "txt', 0o775, (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', 0o775, (err) => {\n  if (err) throw err;\n  console.",
    "position": 1050,
    "id": "sentence_1050"
  },
  {
    "type": "sentence",
    "content": "log('The permissions for file \"my_file.",
    "originalSentence": "log('The permissions for file \"my_file.",
    "position": 1051,
    "id": "sentence_1051"
  },
  {
    "type": "sentence",
    "content": "txt\" have been changed!'",
    "originalSentence": "txt\" have been changed!'",
    "position": 1052,
    "id": "sentence_1052"
  },
  {
    "type": "sentence",
    "content": ");\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs.",
    "originalSentence": ");\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs.",
    "position": 1053,
    "id": "sentence_1053"
  },
  {
    "type": "sentence",
    "content": "chmod()` and `fs.",
    "originalSentence": "chmod()` and `fs.",
    "position": 1054,
    "id": "sentence_1054"
  },
  {
    "type": "sentence",
    "content": "chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs.",
    "originalSentence": "chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs.",
    "position": 1055,
    "id": "sentence_1055"
  },
  {
    "type": "sentence",
    "content": "S_IRUSR` | `0o400` | read by owner            |\n| `fs.",
    "originalSentence": "S_IRUSR` | `0o400` | read by owner            |\n| `fs.",
    "position": 1056,
    "id": "sentence_1056"
  },
  {
    "type": "sentence",
    "content": "S_IWUSR` | `0o200` | write by owner           |\n| `fs.",
    "originalSentence": "S_IWUSR` | `0o200` | write by owner           |\n| `fs.",
    "position": 1057,
    "id": "sentence_1057"
  },
  {
    "type": "sentence",
    "content": "S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs.",
    "originalSentence": "S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs.",
    "position": 1058,
    "id": "sentence_1058"
  },
  {
    "type": "sentence",
    "content": "S_IRGRP` | `0o40`  | read by group            |\n| `fs.",
    "originalSentence": "S_IRGRP` | `0o40`  | read by group            |\n| `fs.",
    "position": 1059,
    "id": "sentence_1059"
  },
  {
    "type": "sentence",
    "content": "S_IWGRP` | `0o20`  | write by group           |\n| `fs.",
    "originalSentence": "S_IWGRP` | `0o20`  | write by group           |\n| `fs.",
    "position": 1060,
    "id": "sentence_1060"
  },
  {
    "type": "sentence",
    "content": "S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs.",
    "originalSentence": "S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs.",
    "position": 1061,
    "id": "sentence_1061"
  },
  {
    "type": "sentence",
    "content": "S_IROTH` | `0o4`   | read by others           |\n| `fs.",
    "originalSentence": "S_IROTH` | `0o4`   | read by others           |\n| `fs.",
    "position": 1062,
    "id": "sentence_1062"
  },
  {
    "type": "sentence",
    "content": "S_IWOTH` | `0o2`   | write by others          |\n| `fs.",
    "originalSentence": "S_IWOTH` | `0o2`   | write by others          |\n| `fs.",
    "position": 1063,
    "id": "sentence_1063"
  },
  {
    "type": "sentence",
    "content": "S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e.",
    "originalSentence": "S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e.",
    "position": 1064,
    "id": "sentence_1064"
  },
  {
    "type": "sentence",
    "content": "The left-most digit (`7` in the example), specifies\nthe permissions for the file owner.",
    "originalSentence": "The left-most digit (`7` in the example), specifies\nthe permissions for the file owner.",
    "position": 1065,
    "id": "sentence_1065"
  },
  {
    "type": "sentence",
    "content": "The middle digit (`6` in the example),\nspecifies permissions for the group.",
    "originalSentence": "The middle digit (`6` in the example),\nspecifies permissions for the group.",
    "position": 1066,
    "id": "sentence_1066"
  },
  {
    "type": "sentence",
    "content": "The right-most digit (`5` in the example),\nspecifies the permissions for others.",
    "originalSentence": "The right-most digit (`5` in the example),\nspecifies the permissions for others.",
    "position": 1067,
    "id": "sentence_1067"
  },
  {
    "type": "sentence",
    "content": "| Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file.",
    "originalSentence": "| Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file.",
    "position": 1068,
    "id": "sentence_1068"
  },
  {
    "type": "sentence",
    "content": "* The group may read and write the file.",
    "originalSentence": "* The group may read and write the file.",
    "position": 1069,
    "id": "sentence_1069"
  },
  {
    "type": "sentence",
    "content": "* Others may read and execute the file.",
    "originalSentence": "* Others may read and execute the file.",
    "position": 1070,
    "id": "sentence_1070"
  },
  {
    "type": "sentence",
    "content": "When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently.",
    "originalSentence": "When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently.",
    "position": 1071,
    "id": "sentence_1071"
  },
  {
    "type": "sentence",
    "content": "Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs.",
    "originalSentence": "Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs.",
    "position": 1072,
    "id": "sentence_1072"
  },
  {
    "type": "sentence",
    "content": "constants`.",
    "originalSentence": "constants`.",
    "position": 1073,
    "id": "sentence_1073"
  },
  {
    "type": "sentence",
    "content": "Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented.",
    "originalSentence": "Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented.",
    "position": 1074,
    "id": "sentence_1074"
  },
  {
    "type": "sentence",
    "content": "chown(path, uid, gid, callback)`\n\n<!",
    "originalSentence": "chown(path, uid, gid, callback)`\n\n<!",
    "position": 1075,
    "id": "sentence_1075"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1076,
    "id": "sentence_1076"
  },
  {
    "type": "sentence",
    "content": "1.97\nchanges:\n  - version: v18.",
    "originalSentence": "1.97\nchanges:\n  - version: v18.",
    "position": 1077,
    "id": "sentence_1077"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1078,
    "id": "sentence_1078"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1079,
    "id": "sentence_1079"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1080,
    "id": "sentence_1080"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1081,
    "id": "sentence_1081"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1082,
    "id": "sentence_1082"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1083,
    "id": "sentence_1083"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1084,
    "id": "sentence_1084"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1085,
    "id": "sentence_1085"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1086,
    "id": "sentence_1086"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file.",
    "position": 1087,
    "id": "sentence_1087"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback.",
    "position": 1088,
    "id": "sentence_1088"
  },
  {
    "type": "sentence",
    "content": "See the POSIX chown(2) documentation for more detail.",
    "originalSentence": "See the POSIX chown(2) documentation for more detail.",
    "position": 1089,
    "id": "sentence_1089"
  },
  {
    "type": "sentence",
    "content": "close(fd[, callback])`\n\n<!",
    "originalSentence": "close(fd[, callback])`\n\n<!",
    "position": 1090,
    "id": "sentence_1090"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1091,
    "id": "sentence_1091"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 1092,
    "id": "sentence_1092"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1093,
    "id": "sentence_1093"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 1094,
    "id": "sentence_1094"
  },
  {
    "type": "sentence",
    "content": "9.0\n      - v14.",
    "originalSentence": "9.0\n      - v14.",
    "position": 1095,
    "id": "sentence_1095"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided.",
    "position": 1096,
    "id": "sentence_1096"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1097,
    "id": "sentence_1097"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1098,
    "id": "sentence_1098"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1099,
    "id": "sentence_1099"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1100,
    "id": "sentence_1100"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1101,
    "id": "sentence_1101"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1102,
    "id": "sentence_1102"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor.",
    "position": 1103,
    "id": "sentence_1103"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 1104,
    "id": "sentence_1104"
  },
  {
    "type": "sentence",
    "content": "Calling `fs.",
    "originalSentence": "Calling `fs.",
    "position": 1105,
    "id": "sentence_1105"
  },
  {
    "type": "sentence",
    "content": "close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "originalSentence": "close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "position": 1106,
    "id": "sentence_1106"
  },
  {
    "type": "sentence",
    "content": "See the POSIX close(2) documentation for more detail.",
    "originalSentence": "See the POSIX close(2) documentation for more detail.",
    "position": 1107,
    "id": "sentence_1107"
  },
  {
    "type": "sentence",
    "content": "copyFile(src, dest[, mode], callback)`\n\n<!",
    "originalSentence": "copyFile(src, dest[, mode], callback)`\n\n<!",
    "position": 1108,
    "id": "sentence_1108"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v8.",
    "originalSentence": "-- YAML\nadded: v8.",
    "position": 1109,
    "id": "sentence_1109"
  },
  {
    "type": "sentence",
    "content": "5.0\nchanges:\n  - version: v18.",
    "originalSentence": "5.0\nchanges:\n  - version: v18.",
    "position": 1110,
    "id": "sentence_1110"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1111,
    "id": "sentence_1111"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 1112,
    "id": "sentence_1112"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "position": 1113,
    "id": "sentence_1113"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "position": 1114,
    "id": "sentence_1114"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 1115,
    "id": "sentence_1115"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`.",
    "position": 1116,
    "id": "sentence_1116"
  },
  {
    "type": "sentence",
    "content": "By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "By default, `dest` is overwritten if it\nalready exists.",
    "position": 1117,
    "id": "sentence_1117"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are given to the\ncallback function.",
    "originalSentence": "No arguments other than a possible exception are given to the\ncallback function.",
    "position": 1118,
    "id": "sentence_1118"
  },
  {
    "type": "sentence",
    "content": "js makes no guarantees about the atomicity of the copy\noperation.",
    "originalSentence": "js makes no guarantees about the atomicity of the copy\noperation.",
    "position": 1119,
    "id": "sentence_1119"
  },
  {
    "type": "sentence",
    "content": "If an error occurs after the destination file has been opened for\nwriting, Node.",
    "originalSentence": "If an error occurs after the destination file has been opened for\nwriting, Node.",
    "position": 1120,
    "id": "sentence_1120"
  },
  {
    "type": "sentence",
    "content": "js will attempt to remove the destination.",
    "originalSentence": "js will attempt to remove the destination.",
    "position": 1121,
    "id": "sentence_1121"
  },
  {
    "type": "sentence",
    "content": "`mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "originalSentence": "`mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "position": 1122,
    "id": "sentence_1122"
  },
  {
    "type": "sentence",
    "content": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "originalSentence": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "position": 1123,
    "id": "sentence_1123"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL | fs.",
    "originalSentence": "COPYFILE_EXCL | fs.",
    "position": 1124,
    "id": "sentence_1124"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE`).",
    "originalSentence": "COPYFILE_FICLONE`).",
    "position": 1125,
    "id": "sentence_1125"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "originalSentence": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "position": 1126,
    "id": "sentence_1126"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "originalSentence": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "position": 1127,
    "id": "sentence_1127"
  },
  {
    "type": "sentence",
    "content": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "originalSentence": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "position": 1128,
    "id": "sentence_1128"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "originalSentence": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "position": 1129,
    "id": "sentence_1129"
  },
  {
    "type": "sentence",
    "content": "If the platform does not support\n  copy-on-write, then the operation will fail.",
    "originalSentence": "If the platform does not support\n  copy-on-write, then the operation will fail.",
    "position": 1130,
    "id": "sentence_1130"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console.",
    "originalSentence": "```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console.",
    "position": 1131,
    "id": "sentence_1131"
  },
  {
    "type": "sentence",
    "content": "log('source.",
    "originalSentence": "log('source.",
    "position": 1132,
    "id": "sentence_1132"
  },
  {
    "type": "sentence",
    "content": "txt was copied to destination.",
    "originalSentence": "txt was copied to destination.",
    "position": 1133,
    "id": "sentence_1133"
  },
  {
    "type": "sentence",
    "content": "txt');\n}\n\n// destination.",
    "originalSentence": "txt');\n}\n\n// destination.",
    "position": 1134,
    "id": "sentence_1134"
  },
  {
    "type": "sentence",
    "content": "txt will be created or overwritten by default.",
    "originalSentence": "txt will be created or overwritten by default.",
    "position": 1135,
    "id": "sentence_1135"
  },
  {
    "type": "sentence",
    "content": "copyFile('source.",
    "originalSentence": "copyFile('source.",
    "position": 1136,
    "id": "sentence_1136"
  },
  {
    "type": "sentence",
    "content": "txt', 'destination.",
    "originalSentence": "txt', 'destination.",
    "position": 1137,
    "id": "sentence_1137"
  },
  {
    "type": "sentence",
    "content": "txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "originalSentence": "txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "position": 1138,
    "id": "sentence_1138"
  },
  {
    "type": "sentence",
    "content": "txt exists.",
    "originalSentence": "txt exists.",
    "position": 1139,
    "id": "sentence_1139"
  },
  {
    "type": "sentence",
    "content": "copyFile('source.",
    "originalSentence": "copyFile('source.",
    "position": 1140,
    "id": "sentence_1140"
  },
  {
    "type": "sentence",
    "content": "txt', 'destination.",
    "originalSentence": "txt', 'destination.",
    "position": 1141,
    "id": "sentence_1141"
  },
  {
    "type": "sentence",
    "content": "txt', constants.",
    "originalSentence": "txt', constants.",
    "position": 1142,
    "id": "sentence_1142"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL, callback);\n```\n\n### `fs.",
    "originalSentence": "COPYFILE_EXCL, callback);\n```\n\n### `fs.",
    "position": 1143,
    "id": "sentence_1143"
  },
  {
    "type": "sentence",
    "content": "cp(src, dest[, options], callback)`\n\n<!",
    "originalSentence": "cp(src, dest[, options], callback)`\n\n<!",
    "position": 1144,
    "id": "sentence_1144"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v16.",
    "originalSentence": "-- YAML\nadded: v16.",
    "position": 1145,
    "id": "sentence_1145"
  },
  {
    "type": "sentence",
    "content": "7.0\nchanges:\n  - version: v22.",
    "originalSentence": "7.0\nchanges:\n  - version: v22.",
    "position": 1146,
    "id": "sentence_1146"
  },
  {
    "type": "sentence",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "position": 1147,
    "id": "sentence_1147"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v20.",
    "originalSentence": "- version:\n    - v20.",
    "position": 1148,
    "id": "sentence_1148"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 1149,
    "id": "sentence_1149"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "position": 1150,
    "id": "sentence_1150"
  },
  {
    "type": "sentence",
    "content": "copyFile()`.",
    "originalSentence": "copyFile()`.",
    "position": 1151,
    "id": "sentence_1151"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 1152,
    "id": "sentence_1152"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1153,
    "id": "sentence_1153"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v17.",
    "originalSentence": "- version:\n    - v17.",
    "position": 1154,
    "id": "sentence_1154"
  },
  {
    "type": "sentence",
    "content": "6.0\n    - v16.",
    "originalSentence": "6.0\n    - v16.",
    "position": 1155,
    "id": "sentence_1155"
  },
  {
    "type": "sentence",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "position": 1156,
    "id": "sentence_1156"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `src` {string|URL} source path to copy.",
    "originalSentence": "-->\n\n* `src` {string|URL} source path to copy.",
    "position": 1157,
    "id": "sentence_1157"
  },
  {
    "type": "sentence",
    "content": "* `dest` {string|URL} destination path to copy to.",
    "originalSentence": "* `dest` {string|URL} destination path to copy to.",
    "position": 1158,
    "id": "sentence_1158"
  },
  {
    "type": "sentence",
    "content": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "originalSentence": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "position": 1159,
    "id": "sentence_1159"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1160,
    "id": "sentence_1160"
  },
  {
    "type": "sentence",
    "content": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "originalSentence": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "position": 1161,
    "id": "sentence_1161"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1162,
    "id": "sentence_1162"
  },
  {
    "type": "sentence",
    "content": "* `filter` {Function} Function to filter copied files/directories.",
    "originalSentence": "* `filter` {Function} Function to filter copied files/directories.",
    "position": 1163,
    "id": "sentence_1163"
  },
  {
    "type": "sentence",
    "content": "Return\n    `true` to copy the item, `false` to ignore it.",
    "originalSentence": "Return\n    `true` to copy the item, `false` to ignore it.",
    "position": 1164,
    "id": "sentence_1164"
  },
  {
    "type": "sentence",
    "content": "When ignoring a directory,\n    all of its contents will be skipped as well.",
    "originalSentence": "When ignoring a directory,\n    all of its contents will be skipped as well.",
    "position": 1165,
    "id": "sentence_1165"
  },
  {
    "type": "sentence",
    "content": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "originalSentence": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "position": 1166,
    "id": "sentence_1166"
  },
  {
    "type": "sentence",
    "content": "* `src` {string} source path to copy.",
    "originalSentence": "* `src` {string} source path to copy.",
    "position": 1167,
    "id": "sentence_1167"
  },
  {
    "type": "sentence",
    "content": "* `dest` {string} destination path to copy to.",
    "originalSentence": "* `dest` {string} destination path to copy to.",
    "position": 1168,
    "id": "sentence_1168"
  },
  {
    "type": "sentence",
    "content": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "originalSentence": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "position": 1169,
    "id": "sentence_1169"
  },
  {
    "type": "sentence",
    "content": "* `force` {boolean} overwrite existing file or directory.",
    "originalSentence": "* `force` {boolean} overwrite existing file or directory.",
    "position": 1170,
    "id": "sentence_1170"
  },
  {
    "type": "sentence",
    "content": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "originalSentence": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "position": 1171,
    "id": "sentence_1171"
  },
  {
    "type": "sentence",
    "content": "Use the `errorOnExist` option to change this behavior.",
    "originalSentence": "Use the `errorOnExist` option to change this behavior.",
    "position": 1172,
    "id": "sentence_1172"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 1173,
    "id": "sentence_1173"
  },
  {
    "type": "sentence",
    "content": "* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "* `mode` {integer} modifiers for copy operation.",
    "position": 1174,
    "id": "sentence_1174"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 1175,
    "id": "sentence_1175"
  },
  {
    "type": "sentence",
    "content": "See `mode` flag of [`fs.",
    "originalSentence": "See `mode` flag of [`fs.",
    "position": 1176,
    "id": "sentence_1176"
  },
  {
    "type": "sentence",
    "content": "copyFile()`][].",
    "originalSentence": "copyFile()`][].",
    "position": 1177,
    "id": "sentence_1177"
  },
  {
    "type": "sentence",
    "content": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "originalSentence": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "position": 1178,
    "id": "sentence_1178"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1179,
    "id": "sentence_1179"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "originalSentence": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "position": 1180,
    "id": "sentence_1180"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "**Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 1181,
    "id": "sentence_1181"
  },
  {
    "type": "sentence",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 1182,
    "id": "sentence_1182"
  },
  {
    "type": "sentence",
    "content": "createReadStream(path[, options])`\n\n<!",
    "originalSentence": "createReadStream(path[, options])`\n\n<!",
    "position": 1183,
    "id": "sentence_1183"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1184,
    "id": "sentence_1184"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v16.",
    "originalSentence": "1.31\nchanges:\n  - version: v16.",
    "position": 1185,
    "id": "sentence_1185"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "position": 1186,
    "id": "sentence_1186"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1187,
    "id": "sentence_1187"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "position": 1188,
    "id": "sentence_1188"
  },
  {
    "type": "sentence",
    "content": "- version: v15.",
    "originalSentence": "- version: v15.",
    "position": 1189,
    "id": "sentence_1189"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "position": 1190,
    "id": "sentence_1190"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v15.",
    "originalSentence": "- version:\n     - v15.",
    "position": 1191,
    "id": "sentence_1191"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "position": 1192,
    "id": "sentence_1192"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 1193,
    "id": "sentence_1193"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "position": 1194,
    "id": "sentence_1194"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 1195,
    "id": "sentence_1195"
  },
  {
    "type": "sentence",
    "content": "6.0\n     - v12.",
    "originalSentence": "6.0\n     - v12.",
    "position": 1196,
    "id": "sentence_1196"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "position": 1197,
    "id": "sentence_1197"
  },
  {
    "type": "sentence",
    "content": "- version: v12.",
    "originalSentence": "- version: v12.",
    "position": 1198,
    "id": "sentence_1198"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "position": 1199,
    "id": "sentence_1199"
  },
  {
    "type": "sentence",
    "content": "- version: v11.",
    "originalSentence": "- version: v11.",
    "position": 1200,
    "id": "sentence_1200"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values.",
    "position": 1201,
    "id": "sentence_1201"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1202,
    "id": "sentence_1202"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 1203,
    "id": "sentence_1203"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1204,
    "id": "sentence_1204"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 1205,
    "id": "sentence_1205"
  },
  {
    "type": "sentence",
    "content": "- version: v2.",
    "originalSentence": "- version: v2.",
    "position": 1206,
    "id": "sentence_1206"
  },
  {
    "type": "sentence",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "position": 1207,
    "id": "sentence_1207"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "position": 1208,
    "id": "sentence_1208"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n    `'r'`.",
    "originalSentence": "**Default:**\n    `'r'`.",
    "position": 1209,
    "id": "sentence_1209"
  },
  {
    "type": "sentence",
    "content": "* `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs.",
    "originalSentence": "* `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs.",
    "position": 1210,
    "id": "sentence_1210"
  },
  {
    "type": "sentence",
    "content": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "originalSentence": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "position": 1211,
    "id": "sentence_1211"
  },
  {
    "type": "sentence",
    "content": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "position": 1212,
    "id": "sentence_1212"
  },
  {
    "type": "sentence",
    "content": "MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range.",
    "position": 1213,
    "id": "sentence_1213"
  },
  {
    "type": "sentence",
    "content": "If `fd` is specified and `start` is\nomitted or `undefined`, `fs.",
    "originalSentence": "If `fd` is specified and `start` is\nomitted or `undefined`, `fs.",
    "position": 1214,
    "id": "sentence_1214"
  },
  {
    "type": "sentence",
    "content": "createReadStream()` reads sequentially from the\ncurrent file position.",
    "originalSentence": "createReadStream()` reads sequentially from the\ncurrent file position.",
    "position": 1215,
    "id": "sentence_1215"
  },
  {
    "type": "sentence",
    "content": "The `encoding` can be any one of those accepted by\n{Buffer}.",
    "originalSentence": "The `encoding` can be any one of those accepted by\n{Buffer}.",
    "position": 1216,
    "id": "sentence_1216"
  },
  {
    "type": "sentence",
    "content": "If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor.",
    "originalSentence": "If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor.",
    "position": 1217,
    "id": "sentence_1217"
  },
  {
    "type": "sentence",
    "content": "This means that no `'open'` event will be\nemitted.",
    "originalSentence": "This means that no `'open'` event will be\nemitted.",
    "position": 1218,
    "id": "sentence_1218"
  },
  {
    "type": "sentence",
    "content": "`fd` should be blocking; non-blocking `fd`s should be passed to\n{net.",
    "originalSentence": "`fd` should be blocking; non-blocking `fd`s should be passed to\n{net.",
    "position": 1219,
    "id": "sentence_1219"
  },
  {
    "type": "sentence",
    "content": "If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable.",
    "originalSentence": "If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable.",
    "position": 1220,
    "id": "sentence_1220"
  },
  {
    "type": "sentence",
    "content": "This can prevent the process from exiting and the stream from\nclosing naturally.",
    "originalSentence": "This can prevent the process from exiting and the stream from\nclosing naturally.",
    "position": 1221,
    "id": "sentence_1221"
  },
  {
    "type": "sentence",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 1222,
    "id": "sentence_1222"
  },
  {
    "type": "sentence",
    "content": "Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior.",
    "position": 1223,
    "id": "sentence_1223"
  },
  {
    "type": "sentence",
    "content": "By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`.",
    "originalSentence": "By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`.",
    "position": 1224,
    "id": "sentence_1224"
  },
  {
    "type": "sentence",
    "content": "When providing the `fs` option,\nan override for `read` is required.",
    "originalSentence": "When providing the `fs` option,\nan override for `read` is required.",
    "position": 1225,
    "id": "sentence_1225"
  },
  {
    "type": "sentence",
    "content": "If no `fd` is provided, an override for\n`open` is also required.",
    "originalSentence": "If no `fd` is provided, an override for\n`open` is also required.",
    "position": 1226,
    "id": "sentence_1226"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is `true`, an override for `close` is\nalso required.",
    "originalSentence": "If `autoClose` is `true`, an override for `close` is\nalso required.",
    "position": 1227,
    "id": "sentence_1227"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device.",
    "originalSentence": "```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device.",
    "position": 1228,
    "id": "sentence_1228"
  },
  {
    "type": "sentence",
    "content": "const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.",
    "originalSentence": "const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.",
    "position": 1229,
    "id": "sentence_1229"
  },
  {
    "type": "sentence",
    "content": "close(); // This may not close the stream.",
    "originalSentence": "close(); // This may not close the stream.",
    "position": 1230,
    "id": "sentence_1230"
  },
  {
    "type": "sentence",
    "content": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "originalSentence": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "position": 1231,
    "id": "sentence_1231"
  },
  {
    "type": "sentence",
    "content": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "originalSentence": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "position": 1232,
    "id": "sentence_1232"
  },
  {
    "type": "sentence",
    "content": "push(null);\n  stream.",
    "originalSentence": "push(null);\n  stream.",
    "position": 1233,
    "id": "sentence_1233"
  },
  {
    "type": "sentence",
    "content": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "originalSentence": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "position": 1234,
    "id": "sentence_1234"
  },
  {
    "type": "sentence",
    "content": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "originalSentence": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "position": 1235,
    "id": "sentence_1235"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "originalSentence": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "position": 1236,
    "id": "sentence_1236"
  },
  {
    "type": "sentence",
    "content": "`mode` sets the file mode (permission and sticky bits), but only if the\nfile was created.",
    "originalSentence": "`mode` sets the file mode (permission and sticky bits), but only if the\nfile was created.",
    "position": 1237,
    "id": "sentence_1237"
  },
  {
    "type": "sentence",
    "content": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample.",
    "originalSentence": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample.",
    "position": 1238,
    "id": "sentence_1238"
  },
  {
    "type": "sentence",
    "content": "txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding.",
    "originalSentence": "txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding.",
    "position": 1239,
    "id": "sentence_1239"
  },
  {
    "type": "sentence",
    "content": "createWriteStream(path[, options])`\n\n<!",
    "originalSentence": "createWriteStream(path[, options])`\n\n<!",
    "position": 1240,
    "id": "sentence_1240"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1241,
    "id": "sentence_1241"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "1.31\nchanges:\n  - version:\n    - v21.",
    "position": 1242,
    "id": "sentence_1242"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v20.",
    "originalSentence": "0.0\n    - v20.",
    "position": 1243,
    "id": "sentence_1243"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "position": 1244,
    "id": "sentence_1244"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1245,
    "id": "sentence_1245"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "position": 1246,
    "id": "sentence_1246"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1247,
    "id": "sentence_1247"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "position": 1248,
    "id": "sentence_1248"
  },
  {
    "type": "sentence",
    "content": "- version: v15.",
    "originalSentence": "- version: v15.",
    "position": 1249,
    "id": "sentence_1249"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "position": 1250,
    "id": "sentence_1250"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v15.",
    "originalSentence": "- version:\n     - v15.",
    "position": 1251,
    "id": "sentence_1251"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "position": 1252,
    "id": "sentence_1252"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 1253,
    "id": "sentence_1253"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "position": 1254,
    "id": "sentence_1254"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 1255,
    "id": "sentence_1255"
  },
  {
    "type": "sentence",
    "content": "6.0\n     - v12.",
    "originalSentence": "6.0\n     - v12.",
    "position": 1256,
    "id": "sentence_1256"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "position": 1257,
    "id": "sentence_1257"
  },
  {
    "type": "sentence",
    "content": "- version: v12.",
    "originalSentence": "- version: v12.",
    "position": 1258,
    "id": "sentence_1258"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "position": 1259,
    "id": "sentence_1259"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1260,
    "id": "sentence_1260"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 1261,
    "id": "sentence_1261"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1262,
    "id": "sentence_1262"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 1263,
    "id": "sentence_1263"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 1264,
    "id": "sentence_1264"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now.",
    "position": 1265,
    "id": "sentence_1265"
  },
  {
    "type": "sentence",
    "content": "- version: v2.",
    "originalSentence": "- version: v2.",
    "position": 1266,
    "id": "sentence_1266"
  },
  {
    "type": "sentence",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "position": 1267,
    "id": "sentence_1267"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "position": 1268,
    "id": "sentence_1268"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n    `'w'`.",
    "originalSentence": "**Default:**\n    `'w'`.",
    "position": 1269,
    "id": "sentence_1269"
  },
  {
    "type": "sentence",
    "content": "* `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "* `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 1270,
    "id": "sentence_1270"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1271,
    "id": "sentence_1271"
  },
  {
    "type": "sentence",
    "content": "* Returns: {fs.",
    "originalSentence": "* Returns: {fs.",
    "position": 1272,
    "id": "sentence_1272"
  },
  {
    "type": "sentence",
    "content": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "position": 1273,
    "id": "sentence_1273"
  },
  {
    "type": "sentence",
    "content": "MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range.",
    "position": 1274,
    "id": "sentence_1274"
  },
  {
    "type": "sentence",
    "content": "Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`.",
    "originalSentence": "Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`.",
    "position": 1275,
    "id": "sentence_1275"
  },
  {
    "type": "sentence",
    "content": "The `encoding` can be any one of those accepted by {Buffer}.",
    "originalSentence": "The `encoding` can be any one of those accepted by {Buffer}.",
    "position": 1276,
    "id": "sentence_1276"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "originalSentence": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "position": 1277,
    "id": "sentence_1277"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "originalSentence": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "position": 1278,
    "id": "sentence_1278"
  },
  {
    "type": "sentence",
    "content": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "originalSentence": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "position": 1279,
    "id": "sentence_1279"
  },
  {
    "type": "sentence",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 1280,
    "id": "sentence_1280"
  },
  {
    "type": "sentence",
    "content": "Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior.",
    "position": 1281,
    "id": "sentence_1281"
  },
  {
    "type": "sentence",
    "content": "By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`.",
    "originalSentence": "By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`.",
    "position": 1282,
    "id": "sentence_1282"
  },
  {
    "type": "sentence",
    "content": "Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled.",
    "originalSentence": "Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled.",
    "position": 1283,
    "id": "sentence_1283"
  },
  {
    "type": "sentence",
    "content": "When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required.",
    "originalSentence": "When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required.",
    "position": 1284,
    "id": "sentence_1284"
  },
  {
    "type": "sentence",
    "content": "If no `fd` option is supplied, an override\nfor `open` is also required.",
    "originalSentence": "If no `fd` option is supplied, an override\nfor `open` is also required.",
    "position": 1285,
    "id": "sentence_1285"
  },
  {
    "type": "sentence",
    "content": "If `autoClose` is `true`, an override for `close`\nis also required.",
    "originalSentence": "If `autoClose` is `true`, an override for `close`\nis also required.",
    "position": 1286,
    "id": "sentence_1286"
  },
  {
    "type": "sentence",
    "content": "ReadStream}, if `fd` is specified, {fs.",
    "originalSentence": "ReadStream}, if `fd` is specified, {fs.",
    "position": 1287,
    "id": "sentence_1287"
  },
  {
    "type": "sentence",
    "content": "WriteStream} will ignore the\n`path` argument and will use the specified file descriptor.",
    "originalSentence": "WriteStream} will ignore the\n`path` argument and will use the specified file descriptor.",
    "position": 1288,
    "id": "sentence_1288"
  },
  {
    "type": "sentence",
    "content": "This means that no\n`'open'` event will be emitted.",
    "originalSentence": "This means that no\n`'open'` event will be emitted.",
    "position": 1289,
    "id": "sentence_1289"
  },
  {
    "type": "sentence",
    "content": "`fd` should be blocking; non-blocking `fd`s\nshould be passed to {net.",
    "originalSentence": "`fd` should be blocking; non-blocking `fd`s\nshould be passed to {net.",
    "position": 1290,
    "id": "sentence_1290"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 1291,
    "id": "sentence_1291"
  },
  {
    "type": "sentence",
    "content": "exists(path, callback)`\n\n<!",
    "originalSentence": "exists(path, callback)`\n\n<!",
    "position": 1292,
    "id": "sentence_1292"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1293,
    "id": "sentence_1293"
  },
  {
    "type": "sentence",
    "content": "0.2\ndeprecated: v1.",
    "originalSentence": "0.2\ndeprecated: v1.",
    "position": 1294,
    "id": "sentence_1294"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version: v18.",
    "originalSentence": "0.0\nchanges:\n  - version: v18.",
    "position": 1295,
    "id": "sentence_1295"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1296,
    "id": "sentence_1296"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1297,
    "id": "sentence_1297"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 1298,
    "id": "sentence_1298"
  },
  {
    "type": "sentence",
    "content": "-->\n\n> Stability: 0 - Deprecated: Use [`fs.",
    "originalSentence": "-->\n\n> Stability: 0 - Deprecated: Use [`fs.",
    "position": 1299,
    "id": "sentence_1299"
  },
  {
    "type": "sentence",
    "content": "stat()`][] or [`fs.",
    "originalSentence": "stat()`][] or [`fs.",
    "position": 1300,
    "id": "sentence_1300"
  },
  {
    "type": "sentence",
    "content": "access()`][] instead.",
    "originalSentence": "access()`][] instead.",
    "position": 1301,
    "id": "sentence_1301"
  },
  {
    "type": "sentence",
    "content": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system.",
    "position": 1302,
    "id": "sentence_1302"
  },
  {
    "type": "sentence",
    "content": "Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console.",
    "originalSentence": "Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console.",
    "position": 1303,
    "id": "sentence_1303"
  },
  {
    "type": "sentence",
    "content": "'it exists' : 'no passwd!'",
    "originalSentence": "'it exists' : 'no passwd!'",
    "position": 1304,
    "id": "sentence_1304"
  },
  {
    "type": "sentence",
    "content": ");\n});\n```\n\n**The parameters for this callback are not consistent with other Node.",
    "originalSentence": ");\n});\n```\n\n**The parameters for this callback are not consistent with other Node.",
    "position": 1305,
    "id": "sentence_1305"
  },
  {
    "type": "sentence",
    "content": "js\ncallbacks.",
    "originalSentence": "js\ncallbacks.",
    "position": 1306,
    "id": "sentence_1306"
  },
  {
    "type": "sentence",
    "content": "** Normally, the first parameter to a Node.",
    "originalSentence": "** Normally, the first parameter to a Node.",
    "position": 1307,
    "id": "sentence_1307"
  },
  {
    "type": "sentence",
    "content": "js callback is an `err`\nparameter, optionally followed by other parameters.",
    "originalSentence": "js callback is an `err`\nparameter, optionally followed by other parameters.",
    "position": 1308,
    "id": "sentence_1308"
  },
  {
    "type": "sentence",
    "content": "exists()` callback\nhas only one boolean parameter.",
    "originalSentence": "exists()` callback\nhas only one boolean parameter.",
    "position": 1309,
    "id": "sentence_1309"
  },
  {
    "type": "sentence",
    "content": "This is one reason `fs.",
    "originalSentence": "This is one reason `fs.",
    "position": 1310,
    "id": "sentence_1310"
  },
  {
    "type": "sentence",
    "content": "access()` is recommended\ninstead of `fs.",
    "originalSentence": "access()` is recommended\ninstead of `fs.",
    "position": 1311,
    "id": "sentence_1311"
  },
  {
    "type": "sentence",
    "content": "If `path` is a symbolic link, it is followed.",
    "originalSentence": "If `path` is a symbolic link, it is followed.",
    "position": 1312,
    "id": "sentence_1312"
  },
  {
    "type": "sentence",
    "content": "Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`.",
    "originalSentence": "Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`.",
    "position": 1313,
    "id": "sentence_1313"
  },
  {
    "type": "sentence",
    "content": "exists()` to check for the existence of a file before calling\n`fs.",
    "originalSentence": "exists()` to check for the existence of a file before calling\n`fs.",
    "position": 1314,
    "id": "sentence_1314"
  },
  {
    "type": "sentence",
    "content": "open()`, `fs.",
    "originalSentence": "open()`, `fs.",
    "position": 1315,
    "id": "sentence_1315"
  },
  {
    "type": "sentence",
    "content": "readFile()`, or `fs.",
    "originalSentence": "readFile()`, or `fs.",
    "position": 1316,
    "id": "sentence_1316"
  },
  {
    "type": "sentence",
    "content": "writeFile()` is not recommended.",
    "originalSentence": "writeFile()` is not recommended.",
    "position": 1317,
    "id": "sentence_1317"
  },
  {
    "type": "sentence",
    "content": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "originalSentence": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "position": 1318,
    "id": "sentence_1318"
  },
  {
    "type": "sentence",
    "content": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.",
    "originalSentence": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.",
    "position": 1319,
    "id": "sentence_1319"
  },
  {
    "type": "sentence",
    "content": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.",
    "originalSentence": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.",
    "position": 1320,
    "id": "sentence_1320"
  },
  {
    "type": "sentence",
    "content": "error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 1321,
    "id": "sentence_1321"
  },
  {
    "type": "sentence",
    "content": "code === 'EEXIST') {\n      console.",
    "originalSentence": "code === 'EEXIST') {\n      console.",
    "position": 1322,
    "id": "sentence_1322"
  },
  {
    "type": "sentence",
    "content": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.",
    "originalSentence": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.",
    "position": 1323,
    "id": "sentence_1323"
  },
  {
    "type": "sentence",
    "content": "error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 1324,
    "id": "sentence_1324"
  },
  {
    "type": "sentence",
    "content": "code === 'ENOENT') {\n      console.",
    "originalSentence": "code === 'ENOENT') {\n      console.",
    "position": 1325,
    "id": "sentence_1325"
  },
  {
    "type": "sentence",
    "content": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "originalSentence": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "position": 1326,
    "id": "sentence_1326"
  },
  {
    "type": "sentence",
    "content": "In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess.",
    "originalSentence": "In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess.",
    "position": 1327,
    "id": "sentence_1327"
  },
  {
    "type": "sentence",
    "content": "fchmod(fd, mode, callback)`\n\n<!",
    "originalSentence": "fchmod(fd, mode, callback)`\n\n<!",
    "position": 1328,
    "id": "sentence_1328"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1329,
    "id": "sentence_1329"
  },
  {
    "type": "sentence",
    "content": "4.7\nchanges:\n  - version: v18.",
    "originalSentence": "4.7\nchanges:\n  - version: v18.",
    "position": 1330,
    "id": "sentence_1330"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1331,
    "id": "sentence_1331"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1332,
    "id": "sentence_1332"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1333,
    "id": "sentence_1333"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1334,
    "id": "sentence_1334"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1335,
    "id": "sentence_1335"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1336,
    "id": "sentence_1336"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1337,
    "id": "sentence_1337"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file.",
    "position": 1338,
    "id": "sentence_1338"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception\nare given to the completion callback.",
    "originalSentence": "No arguments other than a possible exception\nare given to the completion callback.",
    "position": 1339,
    "id": "sentence_1339"
  },
  {
    "type": "sentence",
    "content": "See the POSIX fchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchmod(2) documentation for more detail.",
    "position": 1340,
    "id": "sentence_1340"
  },
  {
    "type": "sentence",
    "content": "fchown(fd, uid, gid, callback)`\n\n<!",
    "originalSentence": "fchown(fd, uid, gid, callback)`\n\n<!",
    "position": 1341,
    "id": "sentence_1341"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1342,
    "id": "sentence_1342"
  },
  {
    "type": "sentence",
    "content": "4.7\nchanges:\n  - version: v18.",
    "originalSentence": "4.7\nchanges:\n  - version: v18.",
    "position": 1343,
    "id": "sentence_1343"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1344,
    "id": "sentence_1344"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1345,
    "id": "sentence_1345"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1346,
    "id": "sentence_1346"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1347,
    "id": "sentence_1347"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1348,
    "id": "sentence_1348"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1349,
    "id": "sentence_1349"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1350,
    "id": "sentence_1350"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file.",
    "position": 1351,
    "id": "sentence_1351"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 1352,
    "id": "sentence_1352"
  },
  {
    "type": "sentence",
    "content": "See the POSIX fchown(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchown(2) documentation for more detail.",
    "position": 1353,
    "id": "sentence_1353"
  },
  {
    "type": "sentence",
    "content": "fdatasync(fd, callback)`\n\n<!",
    "originalSentence": "fdatasync(fd, callback)`\n\n<!",
    "position": 1354,
    "id": "sentence_1354"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1355,
    "id": "sentence_1355"
  },
  {
    "type": "sentence",
    "content": "1.96\nchanges:\n  - version: v18.",
    "originalSentence": "1.96\nchanges:\n  - version: v18.",
    "position": 1356,
    "id": "sentence_1356"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1357,
    "id": "sentence_1357"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1358,
    "id": "sentence_1358"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1359,
    "id": "sentence_1359"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1360,
    "id": "sentence_1360"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1361,
    "id": "sentence_1361"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1362,
    "id": "sentence_1362"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1363,
    "id": "sentence_1363"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "position": 1364,
    "id": "sentence_1364"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 1365,
    "id": "sentence_1365"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback.",
    "position": 1366,
    "id": "sentence_1366"
  },
  {
    "type": "sentence",
    "content": "fstat(fd[, options], callback)`\n\n<!",
    "originalSentence": "fstat(fd[, options], callback)`\n\n<!",
    "position": 1367,
    "id": "sentence_1367"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1368,
    "id": "sentence_1368"
  },
  {
    "type": "sentence",
    "content": "1.95\nchanges:\n  - version: v18.",
    "originalSentence": "1.95\nchanges:\n  - version: v18.",
    "position": 1369,
    "id": "sentence_1369"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1370,
    "id": "sentence_1370"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1371,
    "id": "sentence_1371"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 1372,
    "id": "sentence_1372"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1373,
    "id": "sentence_1373"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1374,
    "id": "sentence_1374"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1375,
    "id": "sentence_1375"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1376,
    "id": "sentence_1376"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1377,
    "id": "sentence_1377"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1378,
    "id": "sentence_1378"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 1379,
    "id": "sentence_1379"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 1380,
    "id": "sentence_1380"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1381,
    "id": "sentence_1381"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 1382,
    "id": "sentence_1382"
  },
  {
    "type": "sentence",
    "content": "Stats}\n\nInvokes the callback with the {fs.",
    "originalSentence": "Stats}\n\nInvokes the callback with the {fs.",
    "position": 1383,
    "id": "sentence_1383"
  },
  {
    "type": "sentence",
    "content": "Stats} for the file descriptor.",
    "originalSentence": "Stats} for the file descriptor.",
    "position": 1384,
    "id": "sentence_1384"
  },
  {
    "type": "sentence",
    "content": "See the POSIX fstat(2) documentation for more detail.",
    "originalSentence": "See the POSIX fstat(2) documentation for more detail.",
    "position": 1385,
    "id": "sentence_1385"
  },
  {
    "type": "sentence",
    "content": "fsync(fd, callback)`\n\n<!",
    "originalSentence": "fsync(fd, callback)`\n\n<!",
    "position": 1386,
    "id": "sentence_1386"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1387,
    "id": "sentence_1387"
  },
  {
    "type": "sentence",
    "content": "1.96\nchanges:\n  - version: v18.",
    "originalSentence": "1.96\nchanges:\n  - version: v18.",
    "position": 1388,
    "id": "sentence_1388"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1389,
    "id": "sentence_1389"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1390,
    "id": "sentence_1390"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1391,
    "id": "sentence_1391"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1392,
    "id": "sentence_1392"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1393,
    "id": "sentence_1393"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1394,
    "id": "sentence_1394"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1395,
    "id": "sentence_1395"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "position": 1396,
    "id": "sentence_1396"
  },
  {
    "type": "sentence",
    "content": "The specific implementation is operating system and device specific.",
    "originalSentence": "The specific implementation is operating system and device specific.",
    "position": 1397,
    "id": "sentence_1397"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "Refer to the POSIX fsync(2) documentation for more detail.",
    "position": 1398,
    "id": "sentence_1398"
  },
  {
    "type": "sentence",
    "content": "No arguments other\nthan a possible exception are given to the completion callback.",
    "originalSentence": "No arguments other\nthan a possible exception are given to the completion callback.",
    "position": 1399,
    "id": "sentence_1399"
  },
  {
    "type": "sentence",
    "content": "ftruncate(fd[, len], callback)`\n\n<!",
    "originalSentence": "ftruncate(fd[, len], callback)`\n\n<!",
    "position": 1400,
    "id": "sentence_1400"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1401,
    "id": "sentence_1401"
  },
  {
    "type": "sentence",
    "content": "8.6\nchanges:\n  - version: v18.",
    "originalSentence": "8.6\nchanges:\n  - version: v18.",
    "position": 1402,
    "id": "sentence_1402"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1403,
    "id": "sentence_1403"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1404,
    "id": "sentence_1404"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1405,
    "id": "sentence_1405"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1406,
    "id": "sentence_1406"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1407,
    "id": "sentence_1407"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1408,
    "id": "sentence_1408"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1409,
    "id": "sentence_1409"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor.",
    "position": 1410,
    "id": "sentence_1410"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 1411,
    "id": "sentence_1411"
  },
  {
    "type": "sentence",
    "content": "See the POSIX ftruncate(2) documentation for more detail.",
    "originalSentence": "See the POSIX ftruncate(2) documentation for more detail.",
    "position": 1412,
    "id": "sentence_1412"
  },
  {
    "type": "sentence",
    "content": "If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file.",
    "originalSentence": "If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file.",
    "position": 1413,
    "id": "sentence_1413"
  },
  {
    "type": "sentence",
    "content": "For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp.",
    "originalSentence": "For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp.",
    "position": 1414,
    "id": "sentence_1414"
  },
  {
    "type": "sentence",
    "content": "txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "originalSentence": "txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "position": 1415,
    "id": "sentence_1415"
  },
  {
    "type": "sentence",
    "content": "futimes(fd, atime, mtime, callback)`\n\n<!",
    "originalSentence": "futimes(fd, atime, mtime, callback)`\n\n<!",
    "position": 1416,
    "id": "sentence_1416"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1417,
    "id": "sentence_1417"
  },
  {
    "type": "sentence",
    "content": "4.2\nchanges:\n  - version: v18.",
    "originalSentence": "4.2\nchanges:\n  - version: v18.",
    "position": 1418,
    "id": "sentence_1418"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1419,
    "id": "sentence_1419"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1420,
    "id": "sentence_1420"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1421,
    "id": "sentence_1421"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1422,
    "id": "sentence_1422"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1423,
    "id": "sentence_1423"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1424,
    "id": "sentence_1424"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1425,
    "id": "sentence_1425"
  },
  {
    "type": "sentence",
    "content": "- version: v4.",
    "originalSentence": "- version: v4.",
    "position": 1426,
    "id": "sentence_1426"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 1427,
    "id": "sentence_1427"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor.",
    "position": 1428,
    "id": "sentence_1428"
  },
  {
    "type": "sentence",
    "content": "utimes()`][].",
    "originalSentence": "utimes()`][].",
    "position": 1429,
    "id": "sentence_1429"
  },
  {
    "type": "sentence",
    "content": "glob(pattern[, options], callback)`\n\n<!",
    "originalSentence": "glob(pattern[, options], callback)`\n\n<!",
    "position": 1430,
    "id": "sentence_1430"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v22.",
    "originalSentence": "-- YAML\nadded: v22.",
    "position": 1431,
    "id": "sentence_1431"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v24.",
    "position": 1432,
    "id": "sentence_1432"
  },
  {
    "type": "sentence",
    "content": "1.0\n      - v22.",
    "originalSentence": "1.0\n      - v22.",
    "position": 1433,
    "id": "sentence_1433"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "position": 1434,
    "id": "sentence_1434"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v24.",
    "originalSentence": "- version:\n      - v24.",
    "position": 1435,
    "id": "sentence_1435"
  },
  {
    "type": "sentence",
    "content": "0.0\n      - v22.",
    "originalSentence": "0.0\n      - v22.",
    "position": 1436,
    "id": "sentence_1436"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 1437,
    "id": "sentence_1437"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v23.",
    "originalSentence": "- version:\n    - v23.",
    "position": 1438,
    "id": "sentence_1438"
  },
  {
    "type": "sentence",
    "content": "7.0\n    - v22.",
    "originalSentence": "7.0\n    - v22.",
    "position": 1439,
    "id": "sentence_1439"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "position": 1440,
    "id": "sentence_1440"
  },
  {
    "type": "sentence",
    "content": "- version: v22.",
    "originalSentence": "- version: v22.",
    "position": 1441,
    "id": "sentence_1441"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "position": 1442,
    "id": "sentence_1442"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "originalSentence": "-->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "position": 1443,
    "id": "sentence_1443"
  },
  {
    "type": "sentence",
    "content": "**Default:** `process.",
    "originalSentence": "**Default:** `process.",
    "position": 1444,
    "id": "sentence_1444"
  },
  {
    "type": "sentence",
    "content": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "originalSentence": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "position": 1445,
    "id": "sentence_1445"
  },
  {
    "type": "sentence",
    "content": "If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "originalSentence": "If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "position": 1446,
    "id": "sentence_1446"
  },
  {
    "type": "sentence",
    "content": "**Default:** `undefined`.",
    "originalSentence": "**Default:** `undefined`.",
    "position": 1447,
    "id": "sentence_1447"
  },
  {
    "type": "sentence",
    "content": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "originalSentence": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "position": 1448,
    "id": "sentence_1448"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1449,
    "id": "sentence_1449"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern.",
    "position": 1450,
    "id": "sentence_1450"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*.",
    "originalSentence": "```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*.",
    "position": 1451,
    "id": "sentence_1451"
  },
  {
    "type": "sentence",
    "content": "js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "position": 1452,
    "id": "sentence_1452"
  },
  {
    "type": "sentence",
    "content": "log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*.",
    "originalSentence": "log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*.",
    "position": 1453,
    "id": "sentence_1453"
  },
  {
    "type": "sentence",
    "content": "js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "position": 1454,
    "id": "sentence_1454"
  },
  {
    "type": "sentence",
    "content": "log(matches);\n});\n```\n\n### `fs.",
    "originalSentence": "log(matches);\n});\n```\n\n### `fs.",
    "position": 1455,
    "id": "sentence_1455"
  },
  {
    "type": "sentence",
    "content": "lchmod(path, mode, callback)`\n\n<!",
    "originalSentence": "lchmod(path, mode, callback)`\n\n<!",
    "position": 1456,
    "id": "sentence_1456"
  },
  {
    "type": "sentence",
    "content": "-- YAML\ndeprecated: v0.",
    "originalSentence": "-- YAML\ndeprecated: v0.",
    "position": 1457,
    "id": "sentence_1457"
  },
  {
    "type": "sentence",
    "content": "4.7\nchanges:\n  - version: v18.",
    "originalSentence": "4.7\nchanges:\n  - version: v18.",
    "position": 1458,
    "id": "sentence_1458"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1459,
    "id": "sentence_1459"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1460,
    "id": "sentence_1460"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 1461,
    "id": "sentence_1461"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1462,
    "id": "sentence_1462"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1463,
    "id": "sentence_1463"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1464,
    "id": "sentence_1464"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1465,
    "id": "sentence_1465"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1466,
    "id": "sentence_1466"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1467,
    "id": "sentence_1467"
  },
  {
    "type": "sentence",
    "content": "-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link.",
    "originalSentence": "-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link.",
    "position": 1468,
    "id": "sentence_1468"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback.",
    "position": 1469,
    "id": "sentence_1469"
  },
  {
    "type": "sentence",
    "content": "This method is only implemented on macOS.",
    "originalSentence": "This method is only implemented on macOS.",
    "position": 1470,
    "id": "sentence_1470"
  },
  {
    "type": "sentence",
    "content": "See the POSIX lchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX lchmod(2) documentation for more detail.",
    "position": 1471,
    "id": "sentence_1471"
  },
  {
    "type": "sentence",
    "content": "lchown(path, uid, gid, callback)`\n\n<!",
    "originalSentence": "lchown(path, uid, gid, callback)`\n\n<!",
    "position": 1472,
    "id": "sentence_1472"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nchanges:\n  - version: v18.",
    "originalSentence": "-- YAML\nchanges:\n  - version: v18.",
    "position": 1473,
    "id": "sentence_1473"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1474,
    "id": "sentence_1474"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1475,
    "id": "sentence_1475"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "position": 1476,
    "id": "sentence_1476"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1477,
    "id": "sentence_1477"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1478,
    "id": "sentence_1478"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1479,
    "id": "sentence_1479"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1480,
    "id": "sentence_1480"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1481,
    "id": "sentence_1481"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1482,
    "id": "sentence_1482"
  },
  {
    "type": "sentence",
    "content": "- version: v0.",
    "originalSentence": "- version: v0.",
    "position": 1483,
    "id": "sentence_1483"
  },
  {
    "type": "sentence",
    "content": "4.7\n    description: Documentation-only deprecation.",
    "originalSentence": "4.7\n    description: Documentation-only deprecation.",
    "position": 1484,
    "id": "sentence_1484"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link.",
    "position": 1485,
    "id": "sentence_1485"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback.",
    "position": 1486,
    "id": "sentence_1486"
  },
  {
    "type": "sentence",
    "content": "See the POSIX lchown(2) documentation for more detail.",
    "originalSentence": "See the POSIX lchown(2) documentation for more detail.",
    "position": 1487,
    "id": "sentence_1487"
  },
  {
    "type": "sentence",
    "content": "lutimes(path, atime, mtime, callback)`\n\n<!",
    "originalSentence": "lutimes(path, atime, mtime, callback)`\n\n<!",
    "position": 1488,
    "id": "sentence_1488"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 1489,
    "id": "sentence_1489"
  },
  {
    "type": "sentence",
    "content": "5.0\n  - v12.",
    "originalSentence": "5.0\n  - v12.",
    "position": 1490,
    "id": "sentence_1490"
  },
  {
    "type": "sentence",
    "content": "19.0\nchanges:\n  - version: v18.",
    "originalSentence": "19.0\nchanges:\n  - version: v18.",
    "position": 1491,
    "id": "sentence_1491"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1492,
    "id": "sentence_1492"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs.",
    "position": 1493,
    "id": "sentence_1493"
  },
  {
    "type": "sentence",
    "content": "utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.",
    "originalSentence": "utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.",
    "position": 1494,
    "id": "sentence_1494"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are given to the completion\ncallback.",
    "originalSentence": "No arguments other than a possible exception are given to the completion\ncallback.",
    "position": 1495,
    "id": "sentence_1495"
  },
  {
    "type": "sentence",
    "content": "link(existingPath, newPath, callback)`\n\n<!",
    "originalSentence": "link(existingPath, newPath, callback)`\n\n<!",
    "position": 1496,
    "id": "sentence_1496"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1497,
    "id": "sentence_1497"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v18.",
    "originalSentence": "1.31\nchanges:\n  - version: v18.",
    "position": 1498,
    "id": "sentence_1498"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1499,
    "id": "sentence_1499"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1500,
    "id": "sentence_1500"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1501,
    "id": "sentence_1501"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1502,
    "id": "sentence_1502"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1503,
    "id": "sentence_1503"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "position": 1504,
    "id": "sentence_1504"
  },
  {
    "type": "sentence",
    "content": "Support is currently\n                 still *experimental*.",
    "originalSentence": "Support is currently\n                 still *experimental*.",
    "position": 1505,
    "id": "sentence_1505"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1506,
    "id": "sentence_1506"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1507,
    "id": "sentence_1507"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1508,
    "id": "sentence_1508"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "originalSentence": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "position": 1509,
    "id": "sentence_1509"
  },
  {
    "type": "sentence",
    "content": "See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "See the POSIX\nlink(2) documentation for more detail.",
    "position": 1510,
    "id": "sentence_1510"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback.",
    "position": 1511,
    "id": "sentence_1511"
  },
  {
    "type": "sentence",
    "content": "lstat(path[, options], callback)`\n\n<!",
    "originalSentence": "lstat(path[, options], callback)`\n\n<!",
    "position": 1512,
    "id": "sentence_1512"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1513,
    "id": "sentence_1513"
  },
  {
    "type": "sentence",
    "content": "1.30\nchanges:\n  - version: v18.",
    "originalSentence": "1.30\nchanges:\n  - version: v18.",
    "position": 1514,
    "id": "sentence_1514"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1515,
    "id": "sentence_1515"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1516,
    "id": "sentence_1516"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 1517,
    "id": "sentence_1517"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1518,
    "id": "sentence_1518"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1519,
    "id": "sentence_1519"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1520,
    "id": "sentence_1520"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1521,
    "id": "sentence_1521"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1522,
    "id": "sentence_1522"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1523,
    "id": "sentence_1523"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1524,
    "id": "sentence_1524"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1525,
    "id": "sentence_1525"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 1526,
    "id": "sentence_1526"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 1527,
    "id": "sentence_1527"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1528,
    "id": "sentence_1528"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 1529,
    "id": "sentence_1529"
  },
  {
    "type": "sentence",
    "content": "Stats}\n\nRetrieves the {fs.",
    "originalSentence": "Stats}\n\nRetrieves the {fs.",
    "position": 1530,
    "id": "sentence_1530"
  },
  {
    "type": "sentence",
    "content": "Stats} for the symbolic link referred to by the path.",
    "originalSentence": "Stats} for the symbolic link referred to by the path.",
    "position": 1531,
    "id": "sentence_1531"
  },
  {
    "type": "sentence",
    "content": "The callback gets two arguments `(err, stats)` where `stats` is a {fs.",
    "originalSentence": "The callback gets two arguments `(err, stats)` where `stats` is a {fs.",
    "position": 1532,
    "id": "sentence_1532"
  },
  {
    "type": "sentence",
    "content": "Stats}\nobject.",
    "originalSentence": "Stats}\nobject.",
    "position": 1533,
    "id": "sentence_1533"
  },
  {
    "type": "sentence",
    "content": "`lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to.",
    "originalSentence": "`lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to.",
    "position": 1534,
    "id": "sentence_1534"
  },
  {
    "type": "sentence",
    "content": "See the POSIX lstat(2) documentation for more details.",
    "originalSentence": "See the POSIX lstat(2) documentation for more details.",
    "position": 1535,
    "id": "sentence_1535"
  },
  {
    "type": "sentence",
    "content": "mkdir(path[, options], callback)`\n\n<!",
    "originalSentence": "mkdir(path[, options], callback)`\n\n<!",
    "position": 1536,
    "id": "sentence_1536"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1537,
    "id": "sentence_1537"
  },
  {
    "type": "sentence",
    "content": "1.8\nchanges:\n  - version: v18.",
    "originalSentence": "1.8\nchanges:\n  - version: v18.",
    "position": 1538,
    "id": "sentence_1538"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1539,
    "id": "sentence_1539"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 1540,
    "id": "sentence_1540"
  },
  {
    "type": "sentence",
    "content": "11.0\n     - v12.",
    "originalSentence": "11.0\n     - v12.",
    "position": 1541,
    "id": "sentence_1541"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument.",
    "position": 1542,
    "id": "sentence_1542"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1543,
    "id": "sentence_1543"
  },
  {
    "type": "sentence",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "position": 1544,
    "id": "sentence_1544"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1545,
    "id": "sentence_1545"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1546,
    "id": "sentence_1546"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1547,
    "id": "sentence_1547"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1548,
    "id": "sentence_1548"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1549,
    "id": "sentence_1549"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1550,
    "id": "sentence_1550"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1551,
    "id": "sentence_1551"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1552,
    "id": "sentence_1552"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "position": 1553,
    "id": "sentence_1553"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0o777`.",
    "originalSentence": "**Default:** `0o777`.",
    "position": 1554,
    "id": "sentence_1554"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`.",
    "position": 1555,
    "id": "sentence_1555"
  },
  {
    "type": "sentence",
    "content": "Asynchronously creates a directory.",
    "originalSentence": "Asynchronously creates a directory.",
    "position": 1556,
    "id": "sentence_1556"
  },
  {
    "type": "sentence",
    "content": "The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`.",
    "originalSentence": "The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`.",
    "position": 1557,
    "id": "sentence_1557"
  },
  {
    "type": "sentence",
    "content": "`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created).",
    "originalSentence": "`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created).",
    "position": 1558,
    "id": "sentence_1558"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "originalSentence": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "position": 1559,
    "id": "sentence_1559"
  },
  {
    "type": "sentence",
    "content": "Calling\n`fs.",
    "originalSentence": "Calling\n`fs.",
    "position": 1560,
    "id": "sentence_1560"
  },
  {
    "type": "sentence",
    "content": "mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false.",
    "originalSentence": "mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false.",
    "position": 1561,
    "id": "sentence_1561"
  },
  {
    "type": "sentence",
    "content": "If `recursive` is false and the directory exists,\nan `EEXIST` error occurs.",
    "originalSentence": "If `recursive` is false and the directory exists,\nan `EEXIST` error occurs.",
    "position": 1562,
    "id": "sentence_1562"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { mkdir } from 'node:fs';\n\n// Create .",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs';\n\n// Create .",
    "position": 1563,
    "id": "sentence_1563"
  },
  {
    "type": "sentence",
    "content": "/tmp/a/apple, regardless of whether .",
    "originalSentence": "/tmp/a/apple, regardless of whether .",
    "position": 1564,
    "id": "sentence_1564"
  },
  {
    "type": "sentence",
    "content": "/tmp/a exist.",
    "originalSentence": "/tmp/a exist.",
    "position": 1565,
    "id": "sentence_1565"
  },
  {
    "type": "sentence",
    "content": "/tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs.",
    "originalSentence": "/tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs.",
    "position": 1566,
    "id": "sentence_1566"
  },
  {
    "type": "sentence",
    "content": "mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details.",
    "originalSentence": "mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details.",
    "position": 1567,
    "id": "sentence_1567"
  },
  {
    "type": "sentence",
    "content": "mkdtemp(prefix[, options], callback)`\n\n<!",
    "originalSentence": "mkdtemp(prefix[, options], callback)`\n\n<!",
    "position": 1568,
    "id": "sentence_1568"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v5.",
    "originalSentence": "-- YAML\nadded: v5.",
    "position": 1569,
    "id": "sentence_1569"
  },
  {
    "type": "sentence",
    "content": "10.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "10.0\nchanges:\n  - version:\n    - v20.",
    "position": 1570,
    "id": "sentence_1570"
  },
  {
    "type": "sentence",
    "content": "6.0\n    - v18.",
    "originalSentence": "6.0\n    - v18.",
    "position": 1571,
    "id": "sentence_1571"
  },
  {
    "type": "sentence",
    "content": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "originalSentence": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "position": 1572,
    "id": "sentence_1572"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 1573,
    "id": "sentence_1573"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1574,
    "id": "sentence_1574"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v16.",
    "originalSentence": "- version:\n      - v16.",
    "position": 1575,
    "id": "sentence_1575"
  },
  {
    "type": "sentence",
    "content": "5.0\n      - v14.",
    "originalSentence": "5.0\n      - v14.",
    "position": 1576,
    "id": "sentence_1576"
  },
  {
    "type": "sentence",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "position": 1577,
    "id": "sentence_1577"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1578,
    "id": "sentence_1578"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1579,
    "id": "sentence_1579"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1580,
    "id": "sentence_1580"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1581,
    "id": "sentence_1581"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1582,
    "id": "sentence_1582"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1583,
    "id": "sentence_1583"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 1584,
    "id": "sentence_1584"
  },
  {
    "type": "sentence",
    "content": "2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now.",
    "originalSentence": "2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now.",
    "position": 1585,
    "id": "sentence_1585"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory.",
    "originalSentence": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory.",
    "position": 1586,
    "id": "sentence_1586"
  },
  {
    "type": "sentence",
    "content": "Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory.",
    "originalSentence": "Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory.",
    "position": 1587,
    "id": "sentence_1587"
  },
  {
    "type": "sentence",
    "content": "Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`.",
    "originalSentence": "Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`.",
    "position": 1588,
    "id": "sentence_1588"
  },
  {
    "type": "sentence",
    "content": "Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters.",
    "originalSentence": "Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters.",
    "position": 1589,
    "id": "sentence_1589"
  },
  {
    "type": "sentence",
    "content": "The created directory path is passed as a string to the callback's second\nparameter.",
    "originalSentence": "The created directory path is passed as a string to the callback's second\nparameter.",
    "position": 1590,
    "id": "sentence_1590"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 1591,
    "id": "sentence_1591"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.",
    "position": 1592,
    "id": "sentence_1592"
  },
  {
    "type": "sentence",
    "content": "log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...",
    "originalSentence": "log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...",
    "position": 1593,
    "id": "sentence_1593"
  },
  {
    "type": "sentence",
    "content": "\\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs.",
    "originalSentence": "\\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs.",
    "position": 1594,
    "id": "sentence_1594"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string.",
    "originalSentence": "mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string.",
    "position": 1595,
    "id": "sentence_1595"
  },
  {
    "type": "sentence",
    "content": "For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path').",
    "originalSentence": "For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path').",
    "position": 1596,
    "id": "sentence_1596"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.",
    "position": 1597,
    "id": "sentence_1597"
  },
  {
    "type": "sentence",
    "content": "log(directory);\n  // Will print something similar to `/tmpabc123`.",
    "originalSentence": "log(directory);\n  // Will print something similar to `/tmpabc123`.",
    "position": 1598,
    "id": "sentence_1598"
  },
  {
    "type": "sentence",
    "content": "// A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.",
    "originalSentence": "// A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.",
    "position": 1599,
    "id": "sentence_1599"
  },
  {
    "type": "sentence",
    "content": "});\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "});\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.",
    "position": 1600,
    "id": "sentence_1600"
  },
  {
    "type": "sentence",
    "content": "log(directory);\n  // Will print something similar to `/tmp/abc123`.",
    "originalSentence": "log(directory);\n  // Will print something similar to `/tmp/abc123`.",
    "position": 1601,
    "id": "sentence_1601"
  },
  {
    "type": "sentence",
    "content": "// A new temporary directory is created within\n  // the /tmp directory.",
    "originalSentence": "// A new temporary directory is created within\n  // the /tmp directory.",
    "position": 1602,
    "id": "sentence_1602"
  },
  {
    "type": "sentence",
    "content": "});\n```\n\n### `fs.",
    "originalSentence": "});\n```\n\n### `fs.",
    "position": 1603,
    "id": "sentence_1603"
  },
  {
    "type": "sentence",
    "content": "open(path[, flags[, mode]], callback)`\n\n<!",
    "originalSentence": "open(path[, flags[, mode]], callback)`\n\n<!",
    "position": 1604,
    "id": "sentence_1604"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1605,
    "id": "sentence_1605"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 1606,
    "id": "sentence_1606"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1607,
    "id": "sentence_1607"
  },
  {
    "type": "sentence",
    "content": "- version: v11.",
    "originalSentence": "- version: v11.",
    "position": 1608,
    "id": "sentence_1608"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "position": 1609,
    "id": "sentence_1609"
  },
  {
    "type": "sentence",
    "content": "- version: v9.",
    "originalSentence": "- version: v9.",
    "position": 1610,
    "id": "sentence_1610"
  },
  {
    "type": "sentence",
    "content": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "originalSentence": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "position": 1611,
    "id": "sentence_1611"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1612,
    "id": "sentence_1612"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1613,
    "id": "sentence_1613"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "position": 1614,
    "id": "sentence_1614"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'r'`.",
    "originalSentence": "**Default:** `'r'`.",
    "position": 1615,
    "id": "sentence_1615"
  },
  {
    "type": "sentence",
    "content": "* `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open.",
    "originalSentence": "* `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open.",
    "position": 1616,
    "id": "sentence_1616"
  },
  {
    "type": "sentence",
    "content": "See the POSIX open(2) documentation for more details.",
    "originalSentence": "See the POSIX open(2) documentation for more details.",
    "position": 1617,
    "id": "sentence_1617"
  },
  {
    "type": "sentence",
    "content": "`mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated.",
    "originalSentence": "`mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated.",
    "position": 1618,
    "id": "sentence_1618"
  },
  {
    "type": "sentence",
    "content": "On Windows, only the write permission can be manipulated; see\n[`fs.",
    "originalSentence": "On Windows, only the write permission can be manipulated; see\n[`fs.",
    "position": 1619,
    "id": "sentence_1619"
  },
  {
    "type": "sentence",
    "content": "chmod()`][].",
    "originalSentence": "chmod()`][].",
    "position": 1620,
    "id": "sentence_1620"
  },
  {
    "type": "sentence",
    "content": "The callback gets two arguments `(err, fd)`.",
    "originalSentence": "The callback gets two arguments `(err, fd)`.",
    "position": 1621,
    "id": "sentence_1621"
  },
  {
    "type": "sentence",
    "content": "Some characters (`< > : \" / \\ | ?",
    "originalSentence": "Some characters (`< > : \" / \\ | ?",
    "position": 1622,
    "id": "sentence_1622"
  },
  {
    "type": "sentence",
    "content": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "originalSentence": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "position": 1623,
    "id": "sentence_1623"
  },
  {
    "type": "sentence",
    "content": "Under NTFS, if the filename contains\na colon, Node.",
    "originalSentence": "Under NTFS, if the filename contains\na colon, Node.",
    "position": 1624,
    "id": "sentence_1624"
  },
  {
    "type": "sentence",
    "content": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "originalSentence": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "position": 1625,
    "id": "sentence_1625"
  },
  {
    "type": "sentence",
    "content": "Functions based on `fs.",
    "originalSentence": "Functions based on `fs.",
    "position": 1626,
    "id": "sentence_1626"
  },
  {
    "type": "sentence",
    "content": "open()` exhibit this behavior as well:\n`fs.",
    "originalSentence": "open()` exhibit this behavior as well:\n`fs.",
    "position": 1627,
    "id": "sentence_1627"
  },
  {
    "type": "sentence",
    "content": "writeFile()`, `fs.",
    "originalSentence": "writeFile()`, `fs.",
    "position": 1628,
    "id": "sentence_1628"
  },
  {
    "type": "sentence",
    "content": "readFile()`, etc.",
    "originalSentence": "readFile()`, etc.",
    "position": 1629,
    "id": "sentence_1629"
  },
  {
    "type": "sentence",
    "content": "openAsBlob(path[, options])`\n\n<!",
    "originalSentence": "openAsBlob(path[, options])`\n\n<!",
    "position": 1630,
    "id": "sentence_1630"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v19.",
    "originalSentence": "-- YAML\nadded: v19.",
    "position": 1631,
    "id": "sentence_1631"
  },
  {
    "type": "sentence",
    "content": "8.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "8.0\nchanges:\n  - version:\n      - v24.",
    "position": 1632,
    "id": "sentence_1632"
  },
  {
    "type": "sentence",
    "content": "0.0\n      - v22.",
    "originalSentence": "0.0\n      - v22.",
    "position": 1633,
    "id": "sentence_1633"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 1634,
    "id": "sentence_1634"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob.",
    "position": 1635,
    "id": "sentence_1635"
  },
  {
    "type": "sentence",
    "content": "* Returns: {Promise} Fulfills with a {Blob} upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with a {Blob} upon success.",
    "position": 1636,
    "id": "sentence_1636"
  },
  {
    "type": "sentence",
    "content": "Returns a {Blob} whose data is backed by the given file.",
    "originalSentence": "Returns a {Blob} whose data is backed by the given file.",
    "position": 1637,
    "id": "sentence_1637"
  },
  {
    "type": "sentence",
    "content": "The file must not be modified after the {Blob} is created.",
    "originalSentence": "The file must not be modified after the {Blob} is created.",
    "position": 1638,
    "id": "sentence_1638"
  },
  {
    "type": "sentence",
    "content": "Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error.",
    "originalSentence": "Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error.",
    "position": 1639,
    "id": "sentence_1639"
  },
  {
    "type": "sentence",
    "content": "Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk.",
    "originalSentence": "Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk.",
    "position": 1640,
    "id": "sentence_1640"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the.",
    "originalSentence": "```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the.",
    "position": 1641,
    "id": "sentence_1641"
  },
  {
    "type": "sentence",
    "content": "txt');\nconst ab = await blob.",
    "originalSentence": "txt');\nconst ab = await blob.",
    "position": 1642,
    "id": "sentence_1642"
  },
  {
    "type": "sentence",
    "content": "arrayBuffer();\nblob.",
    "originalSentence": "arrayBuffer();\nblob.",
    "position": 1643,
    "id": "sentence_1643"
  },
  {
    "type": "sentence",
    "content": "stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the.",
    "originalSentence": "stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the.",
    "position": 1644,
    "id": "sentence_1644"
  },
  {
    "type": "sentence",
    "content": "txt');\n  const ab = await blob.",
    "originalSentence": "txt');\n  const ab = await blob.",
    "position": 1645,
    "id": "sentence_1645"
  },
  {
    "type": "sentence",
    "content": "arrayBuffer();\n  blob.",
    "originalSentence": "arrayBuffer();\n  blob.",
    "position": 1646,
    "id": "sentence_1646"
  },
  {
    "type": "sentence",
    "content": "stream();\n})();\n```\n\n### `fs.",
    "originalSentence": "stream();\n})();\n```\n\n### `fs.",
    "position": 1647,
    "id": "sentence_1647"
  },
  {
    "type": "sentence",
    "content": "opendir(path[, options], callback)`\n\n<!",
    "originalSentence": "opendir(path[, options], callback)`\n\n<!",
    "position": 1648,
    "id": "sentence_1648"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 1649,
    "id": "sentence_1649"
  },
  {
    "type": "sentence",
    "content": "12.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "12.0\nchanges:\n  - version:\n    - v20.",
    "position": 1650,
    "id": "sentence_1650"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 1651,
    "id": "sentence_1651"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 1652,
    "id": "sentence_1652"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 1653,
    "id": "sentence_1653"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1654,
    "id": "sentence_1654"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 1655,
    "id": "sentence_1655"
  },
  {
    "type": "sentence",
    "content": "1.0\n     - v12.",
    "originalSentence": "1.0\n     - v12.",
    "position": 1656,
    "id": "sentence_1656"
  },
  {
    "type": "sentence",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "position": 1657,
    "id": "sentence_1657"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "position": 1658,
    "id": "sentence_1658"
  },
  {
    "type": "sentence",
    "content": "Higher values lead to better\n    performance but higher memory usage.",
    "originalSentence": "Higher values lead to better\n    performance but higher memory usage.",
    "position": 1659,
    "id": "sentence_1659"
  },
  {
    "type": "sentence",
    "content": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs.",
    "originalSentence": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs.",
    "position": 1660,
    "id": "sentence_1660"
  },
  {
    "type": "sentence",
    "content": "Dir}\n\nAsynchronously open a directory.",
    "originalSentence": "Dir}\n\nAsynchronously open a directory.",
    "position": 1661,
    "id": "sentence_1661"
  },
  {
    "type": "sentence",
    "content": "See the POSIX opendir(3) documentation for\nmore details.",
    "originalSentence": "See the POSIX opendir(3) documentation for\nmore details.",
    "position": 1662,
    "id": "sentence_1662"
  },
  {
    "type": "sentence",
    "content": "Creates an {fs.",
    "originalSentence": "Creates an {fs.",
    "position": 1663,
    "id": "sentence_1663"
  },
  {
    "type": "sentence",
    "content": "Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 1664,
    "id": "sentence_1664"
  },
  {
    "type": "sentence",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 1665,
    "id": "sentence_1665"
  },
  {
    "type": "sentence",
    "content": "read(fd, buffer, offset, length, position, callback)`\n\n<!",
    "originalSentence": "read(fd, buffer, offset, length, position, callback)`\n\n<!",
    "position": 1666,
    "id": "sentence_1666"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1667,
    "id": "sentence_1667"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 1668,
    "id": "sentence_1668"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1669,
    "id": "sentence_1669"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1670,
    "id": "sentence_1670"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`.",
    "position": 1671,
    "id": "sentence_1671"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1672,
    "id": "sentence_1672"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "position": 1673,
    "id": "sentence_1673"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 1674,
    "id": "sentence_1674"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "position": 1675,
    "id": "sentence_1675"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "position": 1676,
    "id": "sentence_1676"
  },
  {
    "type": "sentence",
    "content": "* `offset` {integer} The position in `buffer` to write the data to.",
    "originalSentence": "* `offset` {integer} The position in `buffer` to write the data to.",
    "position": 1677,
    "id": "sentence_1677"
  },
  {
    "type": "sentence",
    "content": "* `length` {integer} The number of bytes to read.",
    "originalSentence": "* `length` {integer} The number of bytes to read.",
    "position": 1678,
    "id": "sentence_1678"
  },
  {
    "type": "sentence",
    "content": "* `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file.",
    "originalSentence": "* `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file.",
    "position": 1679,
    "id": "sentence_1679"
  },
  {
    "type": "sentence",
    "content": "If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated.",
    "originalSentence": "If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated.",
    "position": 1680,
    "id": "sentence_1680"
  },
  {
    "type": "sentence",
    "content": "If `position` is\n  a non-negative integer, the file position will be unchanged.",
    "originalSentence": "If `position` is\n  a non-negative integer, the file position will be unchanged.",
    "position": 1681,
    "id": "sentence_1681"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`.",
    "position": 1682,
    "id": "sentence_1682"
  },
  {
    "type": "sentence",
    "content": "The callback is given the three arguments, `(err, bytesRead, buffer)`.",
    "originalSentence": "The callback is given the three arguments, `(err, bytesRead, buffer)`.",
    "position": 1683,
    "id": "sentence_1683"
  },
  {
    "type": "sentence",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 1684,
    "id": "sentence_1684"
  },
  {
    "type": "sentence",
    "content": "If this method is invoked as its [`util.",
    "originalSentence": "If this method is invoked as its [`util.",
    "position": 1685,
    "id": "sentence_1685"
  },
  {
    "type": "sentence",
    "content": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties.",
    "originalSentence": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties.",
    "position": 1686,
    "id": "sentence_1686"
  },
  {
    "type": "sentence",
    "content": "read()` method reads data from the file specified\nby the file descriptor (`fd`).",
    "originalSentence": "read()` method reads data from the file specified\nby the file descriptor (`fd`).",
    "position": 1687,
    "id": "sentence_1687"
  },
  {
    "type": "sentence",
    "content": "The `length` argument indicates the maximum number\nof bytes that Node.",
    "originalSentence": "The `length` argument indicates the maximum number\nof bytes that Node.",
    "position": 1688,
    "id": "sentence_1688"
  },
  {
    "type": "sentence",
    "content": "js\nwill attempt to read from the kernel.",
    "originalSentence": "js\nwill attempt to read from the kernel.",
    "position": 1689,
    "id": "sentence_1689"
  },
  {
    "type": "sentence",
    "content": "However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons.",
    "originalSentence": "However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons.",
    "position": 1690,
    "id": "sentence_1690"
  },
  {
    "type": "sentence",
    "content": "For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read.",
    "originalSentence": "For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read.",
    "position": 1691,
    "id": "sentence_1691"
  },
  {
    "type": "sentence",
    "content": "* If the file encounters EOF (End of File) before the buffer could\n  be filled, Node.",
    "originalSentence": "* If the file encounters EOF (End of File) before the buffer could\n  be filled, Node.",
    "position": 1692,
    "id": "sentence_1692"
  },
  {
    "type": "sentence",
    "content": "js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`.",
    "originalSentence": "js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`.",
    "position": 1693,
    "id": "sentence_1693"
  },
  {
    "type": "sentence",
    "content": "* If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`.",
    "originalSentence": "* If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`.",
    "position": 1694,
    "id": "sentence_1694"
  },
  {
    "type": "sentence",
    "content": "Therefore, when using `fs.",
    "originalSentence": "Therefore, when using `fs.",
    "position": 1695,
    "id": "sentence_1695"
  },
  {
    "type": "sentence",
    "content": "read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file.",
    "originalSentence": "read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file.",
    "position": 1696,
    "id": "sentence_1696"
  },
  {
    "type": "sentence",
    "content": "Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes.",
    "originalSentence": "Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes.",
    "position": 1697,
    "id": "sentence_1697"
  },
  {
    "type": "sentence",
    "content": "This behavior is similar to the POSIX `preadv2` function.",
    "originalSentence": "This behavior is similar to the POSIX `preadv2` function.",
    "position": 1698,
    "id": "sentence_1698"
  },
  {
    "type": "sentence",
    "content": "read(fd[, options], callback)`\n\n<!",
    "originalSentence": "read(fd[, options], callback)`\n\n<!",
    "position": 1699,
    "id": "sentence_1699"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13.",
    "position": 1700,
    "id": "sentence_1700"
  },
  {
    "type": "sentence",
    "content": "11.0\n - v12.",
    "originalSentence": "11.0\n - v12.",
    "position": 1701,
    "id": "sentence_1701"
  },
  {
    "type": "sentence",
    "content": "17.0\nchanges:\n  - version:\n     - v13.",
    "originalSentence": "17.0\nchanges:\n  - version:\n     - v13.",
    "position": 1702,
    "id": "sentence_1702"
  },
  {
    "type": "sentence",
    "content": "11.0\n     - v12.",
    "originalSentence": "11.0\n     - v12.",
    "position": 1703,
    "id": "sentence_1703"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional.",
    "position": 1704,
    "id": "sentence_1704"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer.",
    "position": 1705,
    "id": "sentence_1705"
  },
  {
    "type": "sentence",
    "content": "alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 1706,
    "id": "sentence_1706"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "position": 1707,
    "id": "sentence_1707"
  },
  {
    "type": "sentence",
    "content": "read()`][] function, this version takes an optional\n`options` object.",
    "originalSentence": "read()`][] function, this version takes an optional\n`options` object.",
    "position": 1708,
    "id": "sentence_1708"
  },
  {
    "type": "sentence",
    "content": "If no `options` object is specified, it will default with the\nabove values.",
    "originalSentence": "If no `options` object is specified, it will default with the\nabove values.",
    "position": 1709,
    "id": "sentence_1709"
  },
  {
    "type": "sentence",
    "content": "read(fd, buffer[, options], callback)`\n\n<!",
    "originalSentence": "read(fd, buffer[, options], callback)`\n\n<!",
    "position": 1710,
    "id": "sentence_1710"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v18.",
    "originalSentence": "-- YAML\nadded:\n  - v18.",
    "position": 1711,
    "id": "sentence_1711"
  },
  {
    "type": "sentence",
    "content": "2.0\n  - v16.",
    "originalSentence": "2.0\n  - v16.",
    "position": 1712,
    "id": "sentence_1712"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "position": 1713,
    "id": "sentence_1713"
  },
  {
    "type": "sentence",
    "content": "* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 1714,
    "id": "sentence_1714"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "position": 1715,
    "id": "sentence_1715"
  },
  {
    "type": "sentence",
    "content": "read()`][] function, this version takes an optional\n`options` object.",
    "originalSentence": "read()`][] function, this version takes an optional\n`options` object.",
    "position": 1716,
    "id": "sentence_1716"
  },
  {
    "type": "sentence",
    "content": "If no `options` object is specified, it will default with the\nabove values.",
    "originalSentence": "If no `options` object is specified, it will default with the\nabove values.",
    "position": 1717,
    "id": "sentence_1717"
  },
  {
    "type": "sentence",
    "content": "readdir(path[, options], callback)`\n\n<!",
    "originalSentence": "readdir(path[, options], callback)`\n\n<!",
    "position": 1718,
    "id": "sentence_1718"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1719,
    "id": "sentence_1719"
  },
  {
    "type": "sentence",
    "content": "1.8\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "1.8\nchanges:\n  - version:\n    - v20.",
    "position": 1720,
    "id": "sentence_1720"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 1721,
    "id": "sentence_1721"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 1722,
    "id": "sentence_1722"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 1723,
    "id": "sentence_1723"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1724,
    "id": "sentence_1724"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1725,
    "id": "sentence_1725"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "position": 1726,
    "id": "sentence_1726"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1727,
    "id": "sentence_1727"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1728,
    "id": "sentence_1728"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1729,
    "id": "sentence_1729"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1730,
    "id": "sentence_1730"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1731,
    "id": "sentence_1731"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1732,
    "id": "sentence_1732"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1733,
    "id": "sentence_1733"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1734,
    "id": "sentence_1734"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 1735,
    "id": "sentence_1735"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added.",
    "position": 1736,
    "id": "sentence_1736"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "position": 1737,
    "id": "sentence_1737"
  },
  {
    "type": "sentence",
    "content": "In recursive mode, it will list all files, sub files and\n    directories.",
    "originalSentence": "In recursive mode, it will list all files, sub files and\n    directories.",
    "position": 1738,
    "id": "sentence_1738"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1739,
    "id": "sentence_1739"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs.",
    "position": 1740,
    "id": "sentence_1740"
  },
  {
    "type": "sentence",
    "content": "Dirent\\[]}\n\nReads the contents of a directory.",
    "originalSentence": "Dirent\\[]}\n\nReads the contents of a directory.",
    "position": 1741,
    "id": "sentence_1741"
  },
  {
    "type": "sentence",
    "content": "The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.'",
    "originalSentence": "The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.'",
    "position": 1742,
    "id": "sentence_1742"
  },
  {
    "type": "sentence",
    "content": "` and `'..'",
    "originalSentence": "` and `'..'",
    "position": 1743,
    "id": "sentence_1743"
  },
  {
    "type": "sentence",
    "content": "See the POSIX readdir(3) documentation for more details.",
    "originalSentence": "See the POSIX readdir(3) documentation for more details.",
    "position": 1744,
    "id": "sentence_1744"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback.",
    "position": 1745,
    "id": "sentence_1745"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "position": 1746,
    "id": "sentence_1746"
  },
  {
    "type": "sentence",
    "content": "If `options.",
    "originalSentence": "If `options.",
    "position": 1747,
    "id": "sentence_1747"
  },
  {
    "type": "sentence",
    "content": "withFileTypes` is set to `true`, the `files` array will contain\n{fs.",
    "originalSentence": "withFileTypes` is set to `true`, the `files` array will contain\n{fs.",
    "position": 1748,
    "id": "sentence_1748"
  },
  {
    "type": "sentence",
    "content": "Dirent} objects.",
    "originalSentence": "Dirent} objects.",
    "position": 1749,
    "id": "sentence_1749"
  },
  {
    "type": "sentence",
    "content": "readFile(path[, options], callback)`\n\n<!",
    "originalSentence": "readFile(path[, options], callback)`\n\n<!",
    "position": 1750,
    "id": "sentence_1750"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1751,
    "id": "sentence_1751"
  },
  {
    "type": "sentence",
    "content": "1.29\nchanges:\n  - version: v18.",
    "originalSentence": "1.29\nchanges:\n  - version: v18.",
    "position": 1752,
    "id": "sentence_1752"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1753,
    "id": "sentence_1753"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1754,
    "id": "sentence_1754"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 1755,
    "id": "sentence_1755"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 1756,
    "id": "sentence_1756"
  },
  {
    "type": "sentence",
    "content": "2.0\n      - v14.",
    "originalSentence": "2.0\n      - v14.",
    "position": 1757,
    "id": "sentence_1757"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "position": 1758,
    "id": "sentence_1758"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1759,
    "id": "sentence_1759"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1760,
    "id": "sentence_1760"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1761,
    "id": "sentence_1761"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1762,
    "id": "sentence_1762"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1763,
    "id": "sentence_1763"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1764,
    "id": "sentence_1764"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1765,
    "id": "sentence_1765"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1766,
    "id": "sentence_1766"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 1767,
    "id": "sentence_1767"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success.",
    "position": 1768,
    "id": "sentence_1768"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 1769,
    "id": "sentence_1769"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "position": 1770,
    "id": "sentence_1770"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 1771,
    "id": "sentence_1771"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'r'`.",
    "originalSentence": "**Default:** `'r'`.",
    "position": 1772,
    "id": "sentence_1772"
  },
  {
    "type": "sentence",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file.",
    "position": 1773,
    "id": "sentence_1773"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.",
    "position": 1774,
    "id": "sentence_1774"
  },
  {
    "type": "sentence",
    "content": "log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.",
    "originalSentence": "log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.",
    "position": 1775,
    "id": "sentence_1775"
  },
  {
    "type": "sentence",
    "content": "If no encoding is specified, then the raw buffer is returned.",
    "originalSentence": "If no encoding is specified, then the raw buffer is returned.",
    "position": 1776,
    "id": "sentence_1776"
  },
  {
    "type": "sentence",
    "content": "If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs.",
    "originalSentence": "If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs.",
    "position": 1777,
    "id": "sentence_1777"
  },
  {
    "type": "sentence",
    "content": "readFile()` and\n[`fs.",
    "originalSentence": "readFile()` and\n[`fs.",
    "position": 1778,
    "id": "sentence_1778"
  },
  {
    "type": "sentence",
    "content": "readFileSync()`][] is platform-specific.",
    "originalSentence": "readFileSync()`][] is platform-specific.",
    "position": 1779,
    "id": "sentence_1779"
  },
  {
    "type": "sentence",
    "content": "On macOS, Linux, and Windows, an\nerror will be returned.",
    "originalSentence": "On macOS, Linux, and Windows, an\nerror will be returned.",
    "position": 1780,
    "id": "sentence_1780"
  },
  {
    "type": "sentence",
    "content": "On FreeBSD, a representation of the directory's contents\nwill be returned.",
    "originalSentence": "On FreeBSD, a representation of the directory's contents\nwill be returned.",
    "position": 1781,
    "id": "sentence_1781"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`.",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`.",
    "position": 1782,
    "id": "sentence_1782"
  },
  {
    "type": "sentence",
    "content": "If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller.",
    "originalSentence": "If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller.",
    "position": 1783,
    "id": "sentence_1783"
  },
  {
    "type": "sentence",
    "content": "signal;\nreadFile(fileInfo[0].",
    "originalSentence": "signal;\nreadFile(fileInfo[0].",
    "position": 1784,
    "id": "sentence_1784"
  },
  {
    "type": "sentence",
    "content": "name, { signal }, (err, buf) => {\n  // ...",
    "originalSentence": "name, { signal }, (err, buf) => {\n  // ...",
    "position": 1785,
    "id": "sentence_1785"
  },
  {
    "type": "sentence",
    "content": "});\n// When you want to abort the request\ncontroller.",
    "originalSentence": "});\n// When you want to abort the request\ncontroller.",
    "position": 1786,
    "id": "sentence_1786"
  },
  {
    "type": "sentence",
    "content": "abort();\n```\n\nThe `fs.",
    "originalSentence": "abort();\n```\n\nThe `fs.",
    "position": 1787,
    "id": "sentence_1787"
  },
  {
    "type": "sentence",
    "content": "readFile()` function buffers the entire file.",
    "originalSentence": "readFile()` function buffers the entire file.",
    "position": 1788,
    "id": "sentence_1788"
  },
  {
    "type": "sentence",
    "content": "To minimize memory costs,\nwhen possible prefer streaming via `fs.",
    "originalSentence": "To minimize memory costs,\nwhen possible prefer streaming via `fs.",
    "position": 1789,
    "id": "sentence_1789"
  },
  {
    "type": "sentence",
    "content": "createReadStream()`.",
    "originalSentence": "createReadStream()`.",
    "position": 1790,
    "id": "sentence_1790"
  },
  {
    "type": "sentence",
    "content": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 1791,
    "id": "sentence_1791"
  },
  {
    "type": "sentence",
    "content": "readFile` performs.",
    "originalSentence": "readFile` performs.",
    "position": 1792,
    "id": "sentence_1792"
  },
  {
    "type": "sentence",
    "content": "#### File descriptors\n\n1.",
    "originalSentence": "#### File descriptors\n\n1.",
    "position": 1793,
    "id": "sentence_1793"
  },
  {
    "type": "sentence",
    "content": "Any specified file descriptor has to support reading.",
    "originalSentence": "Any specified file descriptor has to support reading.",
    "position": 1794,
    "id": "sentence_1794"
  },
  {
    "type": "sentence",
    "content": "If a file descriptor is specified as the `path`, it will not be closed\n   automatically.",
    "originalSentence": "If a file descriptor is specified as the `path`, it will not be closed\n   automatically.",
    "position": 1795,
    "id": "sentence_1795"
  },
  {
    "type": "sentence",
    "content": "The reading will begin at the current position.",
    "originalSentence": "The reading will begin at the current position.",
    "position": 1796,
    "id": "sentence_1796"
  },
  {
    "type": "sentence",
    "content": "For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs.",
    "originalSentence": "For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs.",
    "position": 1797,
    "id": "sentence_1797"
  },
  {
    "type": "sentence",
    "content": "readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`.",
    "originalSentence": "readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`.",
    "position": 1798,
    "id": "sentence_1798"
  },
  {
    "type": "sentence",
    "content": "#### Performance Considerations\n\nThe `fs.",
    "originalSentence": "#### Performance Considerations\n\nThe `fs.",
    "position": 1799,
    "id": "sentence_1799"
  },
  {
    "type": "sentence",
    "content": "readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk.",
    "originalSentence": "readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk.",
    "position": 1800,
    "id": "sentence_1800"
  },
  {
    "type": "sentence",
    "content": "This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory.",
    "originalSentence": "This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory.",
    "position": 1801,
    "id": "sentence_1801"
  },
  {
    "type": "sentence",
    "content": "The additional read overhead can vary broadly on different systems and depends\non the type of file being read.",
    "originalSentence": "The additional read overhead can vary broadly on different systems and depends\non the type of file being read.",
    "position": 1802,
    "id": "sentence_1802"
  },
  {
    "type": "sentence",
    "content": "If the file type is not a regular file (a pipe\nfor instance) and Node.",
    "originalSentence": "If the file type is not a regular file (a pipe\nfor instance) and Node.",
    "position": 1803,
    "id": "sentence_1803"
  },
  {
    "type": "sentence",
    "content": "js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data.",
    "originalSentence": "js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data.",
    "position": 1804,
    "id": "sentence_1804"
  },
  {
    "type": "sentence",
    "content": "For regular files, each read will process\n512 KiB of data.",
    "originalSentence": "For regular files, each read will process\n512 KiB of data.",
    "position": 1805,
    "id": "sentence_1805"
  },
  {
    "type": "sentence",
    "content": "For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs.",
    "originalSentence": "For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs.",
    "position": 1806,
    "id": "sentence_1806"
  },
  {
    "type": "sentence",
    "content": "read()` directly and for application code to manage\nreading the full contents of the file itself.",
    "originalSentence": "read()` directly and for application code to manage\nreading the full contents of the file itself.",
    "position": 1807,
    "id": "sentence_1807"
  },
  {
    "type": "sentence",
    "content": "js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs.",
    "originalSentence": "js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs.",
    "position": 1808,
    "id": "sentence_1808"
  },
  {
    "type": "sentence",
    "content": "readFile()` for multiple file sizes in\ndifferent Node.",
    "originalSentence": "readFile()` for multiple file sizes in\ndifferent Node.",
    "position": 1809,
    "id": "sentence_1809"
  },
  {
    "type": "sentence",
    "content": "js versions.",
    "originalSentence": "js versions.",
    "position": 1810,
    "id": "sentence_1810"
  },
  {
    "type": "sentence",
    "content": "readlink(path[, options], callback)`\n\n<!",
    "originalSentence": "readlink(path[, options], callback)`\n\n<!",
    "position": 1811,
    "id": "sentence_1811"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1812,
    "id": "sentence_1812"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v18.",
    "originalSentence": "1.31\nchanges:\n  - version: v18.",
    "position": 1813,
    "id": "sentence_1813"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1814,
    "id": "sentence_1814"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1815,
    "id": "sentence_1815"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1816,
    "id": "sentence_1816"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1817,
    "id": "sentence_1817"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1818,
    "id": "sentence_1818"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1819,
    "id": "sentence_1819"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1820,
    "id": "sentence_1820"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1821,
    "id": "sentence_1821"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1822,
    "id": "sentence_1822"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`.",
    "position": 1823,
    "id": "sentence_1823"
  },
  {
    "type": "sentence",
    "content": "The callback gets\ntwo arguments `(err, linkString)`.",
    "originalSentence": "The callback gets\ntwo arguments `(err, linkString)`.",
    "position": 1824,
    "id": "sentence_1824"
  },
  {
    "type": "sentence",
    "content": "See the POSIX readlink(2) documentation for more details.",
    "originalSentence": "See the POSIX readlink(2) documentation for more details.",
    "position": 1825,
    "id": "sentence_1825"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback.",
    "position": 1826,
    "id": "sentence_1826"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "position": 1827,
    "id": "sentence_1827"
  },
  {
    "type": "sentence",
    "content": "readv(fd, buffers[, position], callback)`\n\n<!",
    "originalSentence": "readv(fd, buffers[, position], callback)`\n\n<!",
    "position": 1828,
    "id": "sentence_1828"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v13.",
    "originalSentence": "-- YAML\nadded:\n  - v13.",
    "position": 1829,
    "id": "sentence_1829"
  },
  {
    "type": "sentence",
    "content": "13.0\n  - v12.",
    "originalSentence": "13.0\n  - v12.",
    "position": 1830,
    "id": "sentence_1830"
  },
  {
    "type": "sentence",
    "content": "17.0\nchanges:\n  - version: v18.",
    "originalSentence": "17.0\nchanges:\n  - version: v18.",
    "position": 1831,
    "id": "sentence_1831"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1832,
    "id": "sentence_1832"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`.",
    "position": 1833,
    "id": "sentence_1833"
  },
  {
    "type": "sentence",
    "content": "`position` is the offset from the beginning of the file from where data\nshould be read.",
    "originalSentence": "`position` is the offset from the beginning of the file from where data\nshould be read.",
    "position": 1834,
    "id": "sentence_1834"
  },
  {
    "type": "sentence",
    "content": "If `typeof position !",
    "originalSentence": "If `typeof position !",
    "position": 1835,
    "id": "sentence_1835"
  },
  {
    "type": "sentence",
    "content": "== 'number'`, the data will be read\nfrom the current position.",
    "originalSentence": "== 'number'`, the data will be read\nfrom the current position.",
    "position": 1836,
    "id": "sentence_1836"
  },
  {
    "type": "sentence",
    "content": "The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`.",
    "originalSentence": "The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`.",
    "position": 1837,
    "id": "sentence_1837"
  },
  {
    "type": "sentence",
    "content": "`bytesRead` is how many bytes were read from the file.",
    "originalSentence": "`bytesRead` is how many bytes were read from the file.",
    "position": 1838,
    "id": "sentence_1838"
  },
  {
    "type": "sentence",
    "content": "If this method is invoked as its [`util.",
    "originalSentence": "If this method is invoked as its [`util.",
    "position": 1839,
    "id": "sentence_1839"
  },
  {
    "type": "sentence",
    "content": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties.",
    "originalSentence": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties.",
    "position": 1840,
    "id": "sentence_1840"
  },
  {
    "type": "sentence",
    "content": "realpath(path[, options], callback)`\n\n<!",
    "originalSentence": "realpath(path[, options], callback)`\n\n<!",
    "position": 1841,
    "id": "sentence_1841"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1842,
    "id": "sentence_1842"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v18.",
    "originalSentence": "1.31\nchanges:\n  - version: v18.",
    "position": 1843,
    "id": "sentence_1843"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1844,
    "id": "sentence_1844"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1845,
    "id": "sentence_1845"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1846,
    "id": "sentence_1846"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1847,
    "id": "sentence_1847"
  },
  {
    "type": "sentence",
    "content": "- version: v8.",
    "originalSentence": "- version: v8.",
    "position": 1848,
    "id": "sentence_1848"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "position": 1849,
    "id": "sentence_1849"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1850,
    "id": "sentence_1850"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 1851,
    "id": "sentence_1851"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1852,
    "id": "sentence_1852"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1853,
    "id": "sentence_1853"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1854,
    "id": "sentence_1854"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 1855,
    "id": "sentence_1855"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows.",
    "position": 1856,
    "id": "sentence_1856"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 1857,
    "id": "sentence_1857"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "position": 1858,
    "id": "sentence_1858"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `.",
    "position": 1859,
    "id": "sentence_1859"
  },
  {
    "type": "sentence",
    "content": "`, and\nsymbolic links.",
    "originalSentence": "`, and\nsymbolic links.",
    "position": 1860,
    "id": "sentence_1860"
  },
  {
    "type": "sentence",
    "content": "A canonical pathname is not necessarily unique.",
    "originalSentence": "A canonical pathname is not necessarily unique.",
    "position": 1861,
    "id": "sentence_1861"
  },
  {
    "type": "sentence",
    "content": "Hard links and bind mounts can\nexpose a file system entity through many pathnames.",
    "originalSentence": "Hard links and bind mounts can\nexpose a file system entity through many pathnames.",
    "position": 1862,
    "id": "sentence_1862"
  },
  {
    "type": "sentence",
    "content": "This function behaves like realpath(3), with some exceptions:\n\n1.",
    "originalSentence": "This function behaves like realpath(3), with some exceptions:\n\n1.",
    "position": 1863,
    "id": "sentence_1863"
  },
  {
    "type": "sentence",
    "content": "No case conversion is performed on case-insensitive file systems.",
    "originalSentence": "No case conversion is performed on case-insensitive file systems.",
    "position": 1864,
    "id": "sentence_1864"
  },
  {
    "type": "sentence",
    "content": "The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports.",
    "originalSentence": "The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports.",
    "position": 1865,
    "id": "sentence_1865"
  },
  {
    "type": "sentence",
    "content": "The `callback` gets two arguments `(err, resolvedPath)`.",
    "originalSentence": "The `callback` gets two arguments `(err, resolvedPath)`.",
    "position": 1866,
    "id": "sentence_1866"
  },
  {
    "type": "sentence",
    "content": "May use `process.",
    "originalSentence": "May use `process.",
    "position": 1867,
    "id": "sentence_1867"
  },
  {
    "type": "sentence",
    "content": "cwd`\nto resolve relative paths.",
    "originalSentence": "cwd`\nto resolve relative paths.",
    "position": 1868,
    "id": "sentence_1868"
  },
  {
    "type": "sentence",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 1869,
    "id": "sentence_1869"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "position": 1870,
    "id": "sentence_1870"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 1871,
    "id": "sentence_1871"
  },
  {
    "type": "sentence",
    "content": "If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object.",
    "originalSentence": "If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object.",
    "position": 1872,
    "id": "sentence_1872"
  },
  {
    "type": "sentence",
    "content": "A path that does not exist results in an ENOENT error.",
    "originalSentence": "A path that does not exist results in an ENOENT error.",
    "position": 1873,
    "id": "sentence_1873"
  },
  {
    "type": "sentence",
    "content": "path` is the absolute file path.",
    "originalSentence": "path` is the absolute file path.",
    "position": 1874,
    "id": "sentence_1874"
  },
  {
    "type": "sentence",
    "content": "native(path[, options], callback)`\n\n<!",
    "originalSentence": "native(path[, options], callback)`\n\n<!",
    "position": 1875,
    "id": "sentence_1875"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v9.",
    "originalSentence": "-- YAML\nadded: v9.",
    "position": 1876,
    "id": "sentence_1876"
  },
  {
    "type": "sentence",
    "content": "2.0\nchanges:\n  - version: v18.",
    "originalSentence": "2.0\nchanges:\n  - version: v18.",
    "position": 1877,
    "id": "sentence_1877"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1878,
    "id": "sentence_1878"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3).",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3).",
    "position": 1879,
    "id": "sentence_1879"
  },
  {
    "type": "sentence",
    "content": "The `callback` gets two arguments `(err, resolvedPath)`.",
    "originalSentence": "The `callback` gets two arguments `(err, resolvedPath)`.",
    "position": 1880,
    "id": "sentence_1880"
  },
  {
    "type": "sentence",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 1881,
    "id": "sentence_1881"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "position": 1882,
    "id": "sentence_1882"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 1883,
    "id": "sentence_1883"
  },
  {
    "type": "sentence",
    "content": "On Linux, when Node.",
    "originalSentence": "On Linux, when Node.",
    "position": 1884,
    "id": "sentence_1884"
  },
  {
    "type": "sentence",
    "content": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "originalSentence": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "position": 1885,
    "id": "sentence_1885"
  },
  {
    "type": "sentence",
    "content": "Glibc does not have\nthis restriction.",
    "originalSentence": "Glibc does not have\nthis restriction.",
    "position": 1886,
    "id": "sentence_1886"
  },
  {
    "type": "sentence",
    "content": "rename(oldPath, newPath, callback)`\n\n<!",
    "originalSentence": "rename(oldPath, newPath, callback)`\n\n<!",
    "position": 1887,
    "id": "sentence_1887"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1888,
    "id": "sentence_1888"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 1889,
    "id": "sentence_1889"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1890,
    "id": "sentence_1890"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1891,
    "id": "sentence_1891"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1892,
    "id": "sentence_1892"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1893,
    "id": "sentence_1893"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1894,
    "id": "sentence_1894"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "position": 1895,
    "id": "sentence_1895"
  },
  {
    "type": "sentence",
    "content": "Support is currently still\n                 *experimental*.",
    "originalSentence": "Support is currently still\n                 *experimental*.",
    "position": 1896,
    "id": "sentence_1896"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1897,
    "id": "sentence_1897"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1898,
    "id": "sentence_1898"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1899,
    "id": "sentence_1899"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`.",
    "originalSentence": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`.",
    "position": 1900,
    "id": "sentence_1900"
  },
  {
    "type": "sentence",
    "content": "In the case that `newPath` already exists, it will\nbe overwritten.",
    "originalSentence": "In the case that `newPath` already exists, it will\nbe overwritten.",
    "position": 1901,
    "id": "sentence_1901"
  },
  {
    "type": "sentence",
    "content": "If there is a directory at `newPath`, an error will\nbe raised instead.",
    "originalSentence": "If there is a directory at `newPath`, an error will\nbe raised instead.",
    "position": 1902,
    "id": "sentence_1902"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 1903,
    "id": "sentence_1903"
  },
  {
    "type": "sentence",
    "content": "See also: rename(2).",
    "originalSentence": "See also: rename(2).",
    "position": 1904,
    "id": "sentence_1904"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile.",
    "originalSentence": "```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile.",
    "position": 1905,
    "id": "sentence_1905"
  },
  {
    "type": "sentence",
    "content": "txt', 'newFile.",
    "originalSentence": "txt', 'newFile.",
    "position": 1906,
    "id": "sentence_1906"
  },
  {
    "type": "sentence",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 1907,
    "id": "sentence_1907"
  },
  {
    "type": "sentence",
    "content": "log('Rename complete!'",
    "originalSentence": "log('Rename complete!'",
    "position": 1908,
    "id": "sentence_1908"
  },
  {
    "type": "sentence",
    "content": ");\n});\n```\n\n### `fs.",
    "originalSentence": ");\n});\n```\n\n### `fs.",
    "position": 1909,
    "id": "sentence_1909"
  },
  {
    "type": "sentence",
    "content": "rmdir(path[, options], callback)`\n\n<!",
    "originalSentence": "rmdir(path[, options], callback)`\n\n<!",
    "position": 1910,
    "id": "sentence_1910"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1911,
    "id": "sentence_1911"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "originalSentence": "0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "position": 1912,
    "id": "sentence_1912"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 1913,
    "id": "sentence_1913"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1914,
    "id": "sentence_1914"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1915,
    "id": "sentence_1915"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 1916,
    "id": "sentence_1916"
  },
  {
    "type": "sentence",
    "content": "rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\"",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\"",
    "position": 1917,
    "id": "sentence_1917"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1918,
    "id": "sentence_1918"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 1919,
    "id": "sentence_1919"
  },
  {
    "type": "sentence",
    "content": "rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\"",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\"",
    "position": 1920,
    "id": "sentence_1920"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 1921,
    "id": "sentence_1921"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "position": 1922,
    "id": "sentence_1922"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 1923,
    "id": "sentence_1923"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "position": 1924,
    "id": "sentence_1924"
  },
  {
    "type": "sentence",
    "content": "rm` instead.",
    "originalSentence": "rm` instead.",
    "position": 1925,
    "id": "sentence_1925"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 1926,
    "id": "sentence_1926"
  },
  {
    "type": "sentence",
    "content": "3.0\n     - v12.",
    "originalSentence": "3.0\n     - v12.",
    "position": 1927,
    "id": "sentence_1927"
  },
  {
    "type": "sentence",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "position": 1928,
    "id": "sentence_1928"
  },
  {
    "type": "sentence",
    "content": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "originalSentence": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "position": 1929,
    "id": "sentence_1929"
  },
  {
    "type": "sentence",
    "content": "The\n                 `retryDelay` option is now supported.",
    "originalSentence": "The\n                 `retryDelay` option is now supported.",
    "position": 1930,
    "id": "sentence_1930"
  },
  {
    "type": "sentence",
    "content": "`ENFILE` errors are now\n                 retried.",
    "originalSentence": "`ENFILE` errors are now\n                 retried.",
    "position": 1931,
    "id": "sentence_1931"
  },
  {
    "type": "sentence",
    "content": "- version: v12.",
    "originalSentence": "- version: v12.",
    "position": 1932,
    "id": "sentence_1932"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "position": 1933,
    "id": "sentence_1933"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1934,
    "id": "sentence_1934"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1935,
    "id": "sentence_1935"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1936,
    "id": "sentence_1936"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1937,
    "id": "sentence_1937"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 1938,
    "id": "sentence_1938"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1939,
    "id": "sentence_1939"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1940,
    "id": "sentence_1940"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1941,
    "id": "sentence_1941"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "position": 1942,
    "id": "sentence_1942"
  },
  {
    "type": "sentence",
    "content": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "originalSentence": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "position": 1943,
    "id": "sentence_1943"
  },
  {
    "type": "sentence",
    "content": "The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 1944,
    "id": "sentence_1944"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2).",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2).",
    "position": 1945,
    "id": "sentence_1945"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are given\nto the completion callback.",
    "originalSentence": "No arguments other than a possible exception are given\nto the completion callback.",
    "position": 1946,
    "id": "sentence_1946"
  },
  {
    "type": "sentence",
    "content": "rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX.",
    "originalSentence": "rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX.",
    "position": 1947,
    "id": "sentence_1947"
  },
  {
    "type": "sentence",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "position": 1948,
    "id": "sentence_1948"
  },
  {
    "type": "sentence",
    "content": "rm()`][]\nwith options `{ recursive: true, force: true }`.",
    "originalSentence": "rm()`][]\nwith options `{ recursive: true, force: true }`.",
    "position": 1949,
    "id": "sentence_1949"
  },
  {
    "type": "sentence",
    "content": "rm(path[, options], callback)`\n\n<!",
    "originalSentence": "rm(path[, options], callback)`\n\n<!",
    "position": 1950,
    "id": "sentence_1950"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v14.",
    "originalSentence": "-- YAML\nadded: v14.",
    "position": 1951,
    "id": "sentence_1951"
  },
  {
    "type": "sentence",
    "content": "14.0\nchanges:\n  - version:\n      - v17.",
    "originalSentence": "14.0\nchanges:\n  - version:\n      - v17.",
    "position": 1952,
    "id": "sentence_1952"
  },
  {
    "type": "sentence",
    "content": "3.0\n      - v16.",
    "originalSentence": "3.0\n      - v16.",
    "position": 1953,
    "id": "sentence_1953"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1954,
    "id": "sentence_1954"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "position": 1955,
    "id": "sentence_1955"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1956,
    "id": "sentence_1956"
  },
  {
    "type": "sentence",
    "content": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "originalSentence": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "position": 1957,
    "id": "sentence_1957"
  },
  {
    "type": "sentence",
    "content": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "originalSentence": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "position": 1958,
    "id": "sentence_1958"
  },
  {
    "type": "sentence",
    "content": "This option\n    represents the number of retries.",
    "originalSentence": "This option\n    represents the number of retries.",
    "position": 1959,
    "id": "sentence_1959"
  },
  {
    "type": "sentence",
    "content": "This option is ignored if the `recursive`\n    option is not `true`.",
    "originalSentence": "This option is ignored if the `recursive`\n    option is not `true`.",
    "position": 1960,
    "id": "sentence_1960"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 1961,
    "id": "sentence_1961"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} If `true`, perform a recursive removal.",
    "originalSentence": "* `recursive` {boolean} If `true`, perform a recursive removal.",
    "position": 1962,
    "id": "sentence_1962"
  },
  {
    "type": "sentence",
    "content": "In\n    recursive mode operations are retried on failure.",
    "originalSentence": "In\n    recursive mode operations are retried on failure.",
    "position": 1963,
    "id": "sentence_1963"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1964,
    "id": "sentence_1964"
  },
  {
    "type": "sentence",
    "content": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "originalSentence": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "position": 1965,
    "id": "sentence_1965"
  },
  {
    "type": "sentence",
    "content": "This option is ignored if the `recursive` option is not `true`.",
    "originalSentence": "This option is ignored if the `recursive` option is not `true`.",
    "position": 1966,
    "id": "sentence_1966"
  },
  {
    "type": "sentence",
    "content": "**Default:** `100`.",
    "originalSentence": "**Default:** `100`.",
    "position": 1967,
    "id": "sentence_1967"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "position": 1968,
    "id": "sentence_1968"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are given to the\ncompletion callback.",
    "originalSentence": "No arguments other than a possible exception are given to the\ncompletion callback.",
    "position": 1969,
    "id": "sentence_1969"
  },
  {
    "type": "sentence",
    "content": "stat(path[, options], callback)`\n\n<!",
    "originalSentence": "stat(path[, options], callback)`\n\n<!",
    "position": 1970,
    "id": "sentence_1970"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 1971,
    "id": "sentence_1971"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 1972,
    "id": "sentence_1972"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 1973,
    "id": "sentence_1973"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1974,
    "id": "sentence_1974"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 1975,
    "id": "sentence_1975"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 1976,
    "id": "sentence_1976"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 1977,
    "id": "sentence_1977"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 1978,
    "id": "sentence_1978"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1979,
    "id": "sentence_1979"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 1980,
    "id": "sentence_1980"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 1981,
    "id": "sentence_1981"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 1982,
    "id": "sentence_1982"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 1983,
    "id": "sentence_1983"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 1984,
    "id": "sentence_1984"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 1985,
    "id": "sentence_1985"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 1986,
    "id": "sentence_1986"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 1987,
    "id": "sentence_1987"
  },
  {
    "type": "sentence",
    "content": "Stats}\n\nAsynchronous stat(2).",
    "originalSentence": "Stats}\n\nAsynchronous stat(2).",
    "position": 1988,
    "id": "sentence_1988"
  },
  {
    "type": "sentence",
    "content": "The callback gets two arguments `(err, stats)` where\n`stats` is an {fs.",
    "originalSentence": "The callback gets two arguments `(err, stats)` where\n`stats` is an {fs.",
    "position": 1989,
    "id": "sentence_1989"
  },
  {
    "type": "sentence",
    "content": "Stats} object.",
    "originalSentence": "Stats} object.",
    "position": 1990,
    "id": "sentence_1990"
  },
  {
    "type": "sentence",
    "content": "In case of an error, the `err.",
    "originalSentence": "In case of an error, the `err.",
    "position": 1991,
    "id": "sentence_1991"
  },
  {
    "type": "sentence",
    "content": "code` will be one of [Common System Errors][].",
    "originalSentence": "code` will be one of [Common System Errors][].",
    "position": 1992,
    "id": "sentence_1992"
  },
  {
    "type": "sentence",
    "content": "stat()`][] follows symbolic links.",
    "originalSentence": "stat()`][] follows symbolic links.",
    "position": 1993,
    "id": "sentence_1993"
  },
  {
    "type": "sentence",
    "content": "lstat()`][] to look at the\nlinks themselves.",
    "originalSentence": "lstat()`][] to look at the\nlinks themselves.",
    "position": 1994,
    "id": "sentence_1994"
  },
  {
    "type": "sentence",
    "content": "stat()` to check for the existence of a file before calling\n`fs.",
    "originalSentence": "stat()` to check for the existence of a file before calling\n`fs.",
    "position": 1995,
    "id": "sentence_1995"
  },
  {
    "type": "sentence",
    "content": "open()`, `fs.",
    "originalSentence": "open()`, `fs.",
    "position": 1996,
    "id": "sentence_1996"
  },
  {
    "type": "sentence",
    "content": "readFile()`, or `fs.",
    "originalSentence": "readFile()`, or `fs.",
    "position": 1997,
    "id": "sentence_1997"
  },
  {
    "type": "sentence",
    "content": "writeFile()` is not recommended.",
    "originalSentence": "writeFile()` is not recommended.",
    "position": 1998,
    "id": "sentence_1998"
  },
  {
    "type": "sentence",
    "content": "Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available.",
    "originalSentence": "Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available.",
    "position": 1999,
    "id": "sentence_1999"
  },
  {
    "type": "sentence",
    "content": "To check if a file exists without manipulating it afterwards, [`fs.",
    "originalSentence": "To check if a file exists without manipulating it afterwards, [`fs.",
    "position": 2000,
    "id": "sentence_2000"
  },
  {
    "type": "sentence",
    "content": "access()`][]\nis recommended.",
    "originalSentence": "access()`][]\nis recommended.",
    "position": 2001,
    "id": "sentence_2001"
  },
  {
    "type": "sentence",
    "content": "For example, given the following directory structure:\n\n```text\n- txtDir\n-- file.",
    "originalSentence": "For example, given the following directory structure:\n\n```text\n- txtDir\n-- file.",
    "position": 2002,
    "id": "sentence_2002"
  },
  {
    "type": "sentence",
    "content": "js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['.",
    "originalSentence": "js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['.",
    "position": 2003,
    "id": "sentence_2003"
  },
  {
    "type": "sentence",
    "content": "/txtDir', '.",
    "originalSentence": "/txtDir', '.",
    "position": 2004,
    "id": "sentence_2004"
  },
  {
    "type": "sentence",
    "content": "/txtDir/file.",
    "originalSentence": "/txtDir/file.",
    "position": 2005,
    "id": "sentence_2005"
  },
  {
    "type": "sentence",
    "content": "txt'];\n\nfor (let i = 0; i < pathsToCheck.",
    "originalSentence": "txt'];\n\nfor (let i = 0; i < pathsToCheck.",
    "position": 2006,
    "id": "sentence_2006"
  },
  {
    "type": "sentence",
    "content": "length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.",
    "originalSentence": "length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.",
    "position": 2007,
    "id": "sentence_2007"
  },
  {
    "type": "sentence",
    "content": "isDirectory());\n    console.",
    "originalSentence": "isDirectory());\n    console.",
    "position": 2008,
    "id": "sentence_2008"
  },
  {
    "type": "sentence",
    "content": "log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.",
    "originalSentence": "log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.",
    "position": 2009,
    "id": "sentence_2009"
  },
  {
    "type": "sentence",
    "content": "963,\n  mtimeMs: 1561174614583.",
    "originalSentence": "963,\n  mtimeMs: 1561174614583.",
    "position": 2010,
    "id": "sentence_2010"
  },
  {
    "type": "sentence",
    "content": "3518,\n  ctimeMs: 1561174626623.",
    "originalSentence": "3518,\n  ctimeMs: 1561174626623.",
    "position": 2011,
    "id": "sentence_2011"
  },
  {
    "type": "sentence",
    "content": "5366,\n  birthtimeMs: 1561174126937.",
    "originalSentence": "5366,\n  birthtimeMs: 1561174126937.",
    "position": 2012,
    "id": "sentence_2012"
  },
  {
    "type": "sentence",
    "content": "2893,\n  atime: 2019-06-22T03:37:33.",
    "originalSentence": "2893,\n  atime: 2019-06-22T03:37:33.",
    "position": 2013,
    "id": "sentence_2013"
  },
  {
    "type": "sentence",
    "content": "072Z,\n  mtime: 2019-06-22T03:36:54.",
    "originalSentence": "072Z,\n  mtime: 2019-06-22T03:36:54.",
    "position": 2014,
    "id": "sentence_2014"
  },
  {
    "type": "sentence",
    "content": "583Z,\n  ctime: 2019-06-22T03:37:06.",
    "originalSentence": "583Z,\n  ctime: 2019-06-22T03:37:06.",
    "position": 2015,
    "id": "sentence_2015"
  },
  {
    "type": "sentence",
    "content": "624Z,\n  birthtime: 2019-06-22T03:28:46.",
    "originalSentence": "624Z,\n  birthtime: 2019-06-22T03:28:46.",
    "position": 2016,
    "id": "sentence_2016"
  },
  {
    "type": "sentence",
    "content": "937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.",
    "originalSentence": "937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.",
    "position": 2017,
    "id": "sentence_2017"
  },
  {
    "type": "sentence",
    "content": "8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.",
    "originalSentence": "8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.",
    "position": 2018,
    "id": "sentence_2018"
  },
  {
    "type": "sentence",
    "content": "8145,\n  birthtimeMs: 1561174007710.",
    "originalSentence": "8145,\n  birthtimeMs: 1561174007710.",
    "position": 2019,
    "id": "sentence_2019"
  },
  {
    "type": "sentence",
    "content": "7478,\n  atime: 2019-06-22T03:36:56.",
    "originalSentence": "7478,\n  atime: 2019-06-22T03:36:56.",
    "position": 2020,
    "id": "sentence_2020"
  },
  {
    "type": "sentence",
    "content": "619Z,\n  mtime: 2019-06-22T03:36:54.",
    "originalSentence": "619Z,\n  mtime: 2019-06-22T03:36:54.",
    "position": 2021,
    "id": "sentence_2021"
  },
  {
    "type": "sentence",
    "content": "584Z,\n  ctime: 2019-06-22T03:36:54.",
    "originalSentence": "584Z,\n  ctime: 2019-06-22T03:36:54.",
    "position": 2022,
    "id": "sentence_2022"
  },
  {
    "type": "sentence",
    "content": "584Z,\n  birthtime: 2019-06-22T03:26:47.",
    "originalSentence": "584Z,\n  birthtime: 2019-06-22T03:26:47.",
    "position": 2023,
    "id": "sentence_2023"
  },
  {
    "type": "sentence",
    "content": "711Z\n}\n```\n\n### `fs.",
    "originalSentence": "711Z\n}\n```\n\n### `fs.",
    "position": 2024,
    "id": "sentence_2024"
  },
  {
    "type": "sentence",
    "content": "statfs(path[, options], callback)`\n\n<!",
    "originalSentence": "statfs(path[, options], callback)`\n\n<!",
    "position": 2025,
    "id": "sentence_2025"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 2026,
    "id": "sentence_2026"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 2027,
    "id": "sentence_2027"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 2028,
    "id": "sentence_2028"
  },
  {
    "type": "sentence",
    "content": "StatFs} object should be `bigint`.",
    "originalSentence": "StatFs} object should be `bigint`.",
    "position": 2029,
    "id": "sentence_2029"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2030,
    "id": "sentence_2030"
  },
  {
    "type": "sentence",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 2031,
    "id": "sentence_2031"
  },
  {
    "type": "sentence",
    "content": "StatFs}\n\nAsynchronous statfs(2).",
    "originalSentence": "StatFs}\n\nAsynchronous statfs(2).",
    "position": 2032,
    "id": "sentence_2032"
  },
  {
    "type": "sentence",
    "content": "Returns information about the mounted file system which\ncontains `path`.",
    "originalSentence": "Returns information about the mounted file system which\ncontains `path`.",
    "position": 2033,
    "id": "sentence_2033"
  },
  {
    "type": "sentence",
    "content": "The callback gets two arguments `(err, stats)` where `stats`\nis an {fs.",
    "originalSentence": "The callback gets two arguments `(err, stats)` where `stats`\nis an {fs.",
    "position": 2034,
    "id": "sentence_2034"
  },
  {
    "type": "sentence",
    "content": "StatFs} object.",
    "originalSentence": "StatFs} object.",
    "position": 2035,
    "id": "sentence_2035"
  },
  {
    "type": "sentence",
    "content": "In case of an error, the `err.",
    "originalSentence": "In case of an error, the `err.",
    "position": 2036,
    "id": "sentence_2036"
  },
  {
    "type": "sentence",
    "content": "code` will be one of [Common System Errors][].",
    "originalSentence": "code` will be one of [Common System Errors][].",
    "position": 2037,
    "id": "sentence_2037"
  },
  {
    "type": "sentence",
    "content": "symlink(target, path[, type], callback)`\n\n<!",
    "originalSentence": "symlink(target, path[, type], callback)`\n\n<!",
    "position": 2038,
    "id": "sentence_2038"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2039,
    "id": "sentence_2039"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v18.",
    "originalSentence": "1.31\nchanges:\n  - version: v18.",
    "position": 2040,
    "id": "sentence_2040"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2041,
    "id": "sentence_2041"
  },
  {
    "type": "sentence",
    "content": "- version: v12.",
    "originalSentence": "- version: v12.",
    "position": 2042,
    "id": "sentence_2042"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "position": 2043,
    "id": "sentence_2043"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2044,
    "id": "sentence_2044"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "position": 2045,
    "id": "sentence_2045"
  },
  {
    "type": "sentence",
    "content": "Support is currently still\n                 *experimental*.",
    "originalSentence": "Support is currently still\n                 *experimental*.",
    "position": 2046,
    "id": "sentence_2046"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`.",
    "originalSentence": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`.",
    "position": 2047,
    "id": "sentence_2047"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback.",
    "position": 2048,
    "id": "sentence_2048"
  },
  {
    "type": "sentence",
    "content": "See the POSIX symlink(2) documentation for more details.",
    "originalSentence": "See the POSIX symlink(2) documentation for more details.",
    "position": 2049,
    "id": "sentence_2049"
  },
  {
    "type": "sentence",
    "content": "The `type` argument is only available on Windows and ignored on other platforms.",
    "originalSentence": "The `type` argument is only available on Windows and ignored on other platforms.",
    "position": 2050,
    "id": "sentence_2050"
  },
  {
    "type": "sentence",
    "content": "It can be set to `'dir'`, `'file'`, or `'junction'`.",
    "originalSentence": "It can be set to `'dir'`, `'file'`, or `'junction'`.",
    "position": 2051,
    "id": "sentence_2051"
  },
  {
    "type": "sentence",
    "content": "If the `type` argument is\n`null`, Node.",
    "originalSentence": "If the `type` argument is\n`null`, Node.",
    "position": 2052,
    "id": "sentence_2052"
  },
  {
    "type": "sentence",
    "content": "js will autodetect `target` type and use `'file'` or `'dir'`.",
    "originalSentence": "js will autodetect `target` type and use `'file'` or `'dir'`.",
    "position": 2053,
    "id": "sentence_2053"
  },
  {
    "type": "sentence",
    "content": "If the `target` does not exist, `'file'` will be used.",
    "originalSentence": "If the `target` does not exist, `'file'` will be used.",
    "position": 2054,
    "id": "sentence_2054"
  },
  {
    "type": "sentence",
    "content": "Windows junction points\nrequire the destination path to be absolute.",
    "originalSentence": "Windows junction points\nrequire the destination path to be absolute.",
    "position": 2055,
    "id": "sentence_2055"
  },
  {
    "type": "sentence",
    "content": "When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path.",
    "originalSentence": "When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path.",
    "position": 2056,
    "id": "sentence_2056"
  },
  {
    "type": "sentence",
    "content": "Junction\npoints on NTFS volumes can only point to directories.",
    "originalSentence": "Junction\npoints on NTFS volumes can only point to directories.",
    "position": 2057,
    "id": "sentence_2057"
  },
  {
    "type": "sentence",
    "content": "Relative targets are relative to the link's parent directory.",
    "originalSentence": "Relative targets are relative to the link's parent directory.",
    "position": 2058,
    "id": "sentence_2058"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('.",
    "originalSentence": "```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('.",
    "position": 2059,
    "id": "sentence_2059"
  },
  {
    "type": "sentence",
    "content": "/mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree .",
    "originalSentence": "/mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree .",
    "position": 2060,
    "id": "sentence_2060"
  },
  {
    "type": "sentence",
    "content": "├── mew\n└── mewtwo -> .",
    "originalSentence": "├── mew\n└── mewtwo -> .",
    "position": 2061,
    "id": "sentence_2061"
  },
  {
    "type": "sentence",
    "content": "/mew\n```\n\n### `fs.",
    "originalSentence": "/mew\n```\n\n### `fs.",
    "position": 2062,
    "id": "sentence_2062"
  },
  {
    "type": "sentence",
    "content": "truncate(path[, len], callback)`\n\n<!",
    "originalSentence": "truncate(path[, len], callback)`\n\n<!",
    "position": 2063,
    "id": "sentence_2063"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2064,
    "id": "sentence_2064"
  },
  {
    "type": "sentence",
    "content": "8.6\nchanges:\n  - version: v18.",
    "originalSentence": "8.6\nchanges:\n  - version: v18.",
    "position": 2065,
    "id": "sentence_2065"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2066,
    "id": "sentence_2066"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 2067,
    "id": "sentence_2067"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 2068,
    "id": "sentence_2068"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2069,
    "id": "sentence_2069"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 2070,
    "id": "sentence_2070"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 2071,
    "id": "sentence_2071"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2072,
    "id": "sentence_2072"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 2073,
    "id": "sentence_2073"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 2074,
    "id": "sentence_2074"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file.",
    "position": 2075,
    "id": "sentence_2075"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 2076,
    "id": "sentence_2076"
  },
  {
    "type": "sentence",
    "content": "A file descriptor can also be passed as the\nfirst argument.",
    "originalSentence": "A file descriptor can also be passed as the\nfirst argument.",
    "position": 2077,
    "id": "sentence_2077"
  },
  {
    "type": "sentence",
    "content": "In this case, `fs.",
    "originalSentence": "In this case, `fs.",
    "position": 2078,
    "id": "sentence_2078"
  },
  {
    "type": "sentence",
    "content": "ftruncate()` is called.",
    "originalSentence": "ftruncate()` is called.",
    "position": 2079,
    "id": "sentence_2079"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file.",
    "originalSentence": "```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file.",
    "position": 2080,
    "id": "sentence_2080"
  },
  {
    "type": "sentence",
    "content": "txt' is a regular file.",
    "originalSentence": "txt' is a regular file.",
    "position": 2081,
    "id": "sentence_2081"
  },
  {
    "type": "sentence",
    "content": "truncate('path/file.",
    "originalSentence": "truncate('path/file.",
    "position": 2082,
    "id": "sentence_2082"
  },
  {
    "type": "sentence",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 2083,
    "id": "sentence_2083"
  },
  {
    "type": "sentence",
    "content": "log('path/file.",
    "originalSentence": "log('path/file.",
    "position": 2084,
    "id": "sentence_2084"
  },
  {
    "type": "sentence",
    "content": "txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file.",
    "originalSentence": "txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file.",
    "position": 2085,
    "id": "sentence_2085"
  },
  {
    "type": "sentence",
    "content": "txt' is a regular file.",
    "originalSentence": "txt' is a regular file.",
    "position": 2086,
    "id": "sentence_2086"
  },
  {
    "type": "sentence",
    "content": "truncate('path/file.",
    "originalSentence": "truncate('path/file.",
    "position": 2087,
    "id": "sentence_2087"
  },
  {
    "type": "sentence",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 2088,
    "id": "sentence_2088"
  },
  {
    "type": "sentence",
    "content": "log('path/file.",
    "originalSentence": "log('path/file.",
    "position": 2089,
    "id": "sentence_2089"
  },
  {
    "type": "sentence",
    "content": "txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "originalSentence": "txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "position": 2090,
    "id": "sentence_2090"
  },
  {
    "type": "sentence",
    "content": "See the POSIX truncate(2) documentation for more details.",
    "originalSentence": "See the POSIX truncate(2) documentation for more details.",
    "position": 2091,
    "id": "sentence_2091"
  },
  {
    "type": "sentence",
    "content": "unlink(path, callback)`\n\n<!",
    "originalSentence": "unlink(path, callback)`\n\n<!",
    "position": 2092,
    "id": "sentence_2092"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2093,
    "id": "sentence_2093"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 2094,
    "id": "sentence_2094"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2095,
    "id": "sentence_2095"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2096,
    "id": "sentence_2096"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 2097,
    "id": "sentence_2097"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 2098,
    "id": "sentence_2098"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2099,
    "id": "sentence_2099"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2100,
    "id": "sentence_2100"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2101,
    "id": "sentence_2101"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 2102,
    "id": "sentence_2102"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 2103,
    "id": "sentence_2103"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link.",
    "position": 2104,
    "id": "sentence_2104"
  },
  {
    "type": "sentence",
    "content": "No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback.",
    "position": 2105,
    "id": "sentence_2105"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file.",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file.",
    "position": 2106,
    "id": "sentence_2106"
  },
  {
    "type": "sentence",
    "content": "txt' is a regular file.",
    "originalSentence": "txt' is a regular file.",
    "position": 2107,
    "id": "sentence_2107"
  },
  {
    "type": "sentence",
    "content": "unlink('path/file.",
    "originalSentence": "unlink('path/file.",
    "position": 2108,
    "id": "sentence_2108"
  },
  {
    "type": "sentence",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 2109,
    "id": "sentence_2109"
  },
  {
    "type": "sentence",
    "content": "log('path/file.",
    "originalSentence": "log('path/file.",
    "position": 2110,
    "id": "sentence_2110"
  },
  {
    "type": "sentence",
    "content": "txt was deleted');\n});\n```\n\n`fs.",
    "originalSentence": "txt was deleted');\n});\n```\n\n`fs.",
    "position": 2111,
    "id": "sentence_2111"
  },
  {
    "type": "sentence",
    "content": "unlink()` will not work on a directory, empty or otherwise.",
    "originalSentence": "unlink()` will not work on a directory, empty or otherwise.",
    "position": 2112,
    "id": "sentence_2112"
  },
  {
    "type": "sentence",
    "content": "To remove a\ndirectory, use [`fs.",
    "originalSentence": "To remove a\ndirectory, use [`fs.",
    "position": 2113,
    "id": "sentence_2113"
  },
  {
    "type": "sentence",
    "content": "rmdir()`][].",
    "originalSentence": "rmdir()`][].",
    "position": 2114,
    "id": "sentence_2114"
  },
  {
    "type": "sentence",
    "content": "See the POSIX unlink(2) documentation for more details.",
    "originalSentence": "See the POSIX unlink(2) documentation for more details.",
    "position": 2115,
    "id": "sentence_2115"
  },
  {
    "type": "sentence",
    "content": "unwatchFile(filename[, listener])`\n\n<!",
    "originalSentence": "unwatchFile(filename[, listener])`\n\n<!",
    "position": 2116,
    "id": "sentence_2116"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2117,
    "id": "sentence_2117"
  },
  {
    "type": "sentence",
    "content": "1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs.",
    "originalSentence": "1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs.",
    "position": 2118,
    "id": "sentence_2118"
  },
  {
    "type": "sentence",
    "content": "watchFile()`\n\nStop watching for changes on `filename`.",
    "originalSentence": "watchFile()`\n\nStop watching for changes on `filename`.",
    "position": 2119,
    "id": "sentence_2119"
  },
  {
    "type": "sentence",
    "content": "If `listener` is specified, only that\nparticular listener is removed.",
    "originalSentence": "If `listener` is specified, only that\nparticular listener is removed.",
    "position": 2120,
    "id": "sentence_2120"
  },
  {
    "type": "sentence",
    "content": "Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`.",
    "originalSentence": "Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`.",
    "position": 2121,
    "id": "sentence_2121"
  },
  {
    "type": "sentence",
    "content": "Calling `fs.",
    "originalSentence": "Calling `fs.",
    "position": 2122,
    "id": "sentence_2122"
  },
  {
    "type": "sentence",
    "content": "unwatchFile()` with a filename that is not being watched is a\nno-op, not an error.",
    "originalSentence": "unwatchFile()` with a filename that is not being watched is a\nno-op, not an error.",
    "position": 2123,
    "id": "sentence_2123"
  },
  {
    "type": "sentence",
    "content": "Using [`fs.",
    "originalSentence": "Using [`fs.",
    "position": 2124,
    "id": "sentence_2124"
  },
  {
    "type": "sentence",
    "content": "watch()`][] is more efficient than `fs.",
    "originalSentence": "watch()`][] is more efficient than `fs.",
    "position": 2125,
    "id": "sentence_2125"
  },
  {
    "type": "sentence",
    "content": "watchFile()` and\n`fs.",
    "originalSentence": "watchFile()` and\n`fs.",
    "position": 2126,
    "id": "sentence_2126"
  },
  {
    "type": "sentence",
    "content": "unwatchFile()`.",
    "originalSentence": "unwatchFile()`.",
    "position": 2127,
    "id": "sentence_2127"
  },
  {
    "type": "sentence",
    "content": "watch()` should be used instead of `fs.",
    "originalSentence": "watch()` should be used instead of `fs.",
    "position": 2128,
    "id": "sentence_2128"
  },
  {
    "type": "sentence",
    "content": "watchFile()`\nand `fs.",
    "originalSentence": "watchFile()`\nand `fs.",
    "position": 2129,
    "id": "sentence_2129"
  },
  {
    "type": "sentence",
    "content": "unwatchFile()` when possible.",
    "originalSentence": "unwatchFile()` when possible.",
    "position": 2130,
    "id": "sentence_2130"
  },
  {
    "type": "sentence",
    "content": "utimes(path, atime, mtime, callback)`\n\n<!",
    "originalSentence": "utimes(path, atime, mtime, callback)`\n\n<!",
    "position": 2131,
    "id": "sentence_2131"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2132,
    "id": "sentence_2132"
  },
  {
    "type": "sentence",
    "content": "4.2\nchanges:\n  - version: v18.",
    "originalSentence": "4.2\nchanges:\n  - version: v18.",
    "position": 2133,
    "id": "sentence_2133"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2134,
    "id": "sentence_2134"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2135,
    "id": "sentence_2135"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 2136,
    "id": "sentence_2136"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 2137,
    "id": "sentence_2137"
  },
  {
    "type": "sentence",
    "content": "- version: v8.",
    "originalSentence": "- version: v8.",
    "position": 2138,
    "id": "sentence_2138"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "position": 2139,
    "id": "sentence_2139"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2140,
    "id": "sentence_2140"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2141,
    "id": "sentence_2141"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2142,
    "id": "sentence_2142"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 2143,
    "id": "sentence_2143"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 2144,
    "id": "sentence_2144"
  },
  {
    "type": "sentence",
    "content": "- version: v4.",
    "originalSentence": "- version: v4.",
    "position": 2145,
    "id": "sentence_2145"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 2146,
    "id": "sentence_2146"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`.",
    "position": 2147,
    "id": "sentence_2147"
  },
  {
    "type": "sentence",
    "content": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789.",
    "originalSentence": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789.",
    "position": 2148,
    "id": "sentence_2148"
  },
  {
    "type": "sentence",
    "content": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "originalSentence": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "position": 2149,
    "id": "sentence_2149"
  },
  {
    "type": "sentence",
    "content": "watch(filename[, options][, listener])`\n\n<!",
    "originalSentence": "watch(filename[, options][, listener])`\n\n<!",
    "position": 2150,
    "id": "sentence_2150"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2151,
    "id": "sentence_2151"
  },
  {
    "type": "sentence",
    "content": "5.10\nchanges:\n  - version: v19.",
    "originalSentence": "5.10\nchanges:\n  - version: v19.",
    "position": 2152,
    "id": "sentence_2152"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi.",
    "position": 2153,
    "id": "sentence_2153"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 2154,
    "id": "sentence_2154"
  },
  {
    "type": "sentence",
    "content": "9.0\n      - v14.",
    "originalSentence": "9.0\n      - v14.",
    "position": 2155,
    "id": "sentence_2155"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal.",
    "position": 2156,
    "id": "sentence_2156"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2157,
    "id": "sentence_2157"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 2158,
    "id": "sentence_2158"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2159,
    "id": "sentence_2159"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 2160,
    "id": "sentence_2160"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "originalSentence": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "position": 2161,
    "id": "sentence_2161"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 2162,
    "id": "sentence_2162"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "originalSentence": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "position": 2163,
    "id": "sentence_2163"
  },
  {
    "type": "sentence",
    "content": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "originalSentence": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "position": 2164,
    "id": "sentence_2164"
  },
  {
    "type": "sentence",
    "content": "**Default:**\n    `false`.",
    "originalSentence": "**Default:**\n    `false`.",
    "position": 2165,
    "id": "sentence_2165"
  },
  {
    "type": "sentence",
    "content": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "originalSentence": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "position": 2166,
    "id": "sentence_2166"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'utf8'`.",
    "originalSentence": "**Default:** `'utf8'`.",
    "position": 2167,
    "id": "sentence_2167"
  },
  {
    "type": "sentence",
    "content": "* `signal` {AbortSignal} allows closing the watcher with an AbortSignal.",
    "originalSentence": "* `signal` {AbortSignal} allows closing the watcher with an AbortSignal.",
    "position": 2168,
    "id": "sentence_2168"
  },
  {
    "type": "sentence",
    "content": "* `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs.",
    "originalSentence": "* `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs.",
    "position": 2169,
    "id": "sentence_2169"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory.",
    "originalSentence": "FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory.",
    "position": 2170,
    "id": "sentence_2170"
  },
  {
    "type": "sentence",
    "content": "The second argument is optional.",
    "originalSentence": "The second argument is optional.",
    "position": 2171,
    "id": "sentence_2171"
  },
  {
    "type": "sentence",
    "content": "If `options` is provided as a string, it\nspecifies the `encoding`.",
    "originalSentence": "If `options` is provided as a string, it\nspecifies the `encoding`.",
    "position": 2172,
    "id": "sentence_2172"
  },
  {
    "type": "sentence",
    "content": "Otherwise `options` should be passed as an object.",
    "originalSentence": "Otherwise `options` should be passed as an object.",
    "position": 2173,
    "id": "sentence_2173"
  },
  {
    "type": "sentence",
    "content": "The listener callback gets two arguments `(eventType, filename)`.",
    "originalSentence": "The listener callback gets two arguments `(eventType, filename)`.",
    "position": 2174,
    "id": "sentence_2174"
  },
  {
    "type": "sentence",
    "content": "`eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event.",
    "originalSentence": "`eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event.",
    "position": 2175,
    "id": "sentence_2175"
  },
  {
    "type": "sentence",
    "content": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "originalSentence": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "position": 2176,
    "id": "sentence_2176"
  },
  {
    "type": "sentence",
    "content": "The listener callback is attached to the `'change'` event fired by\n{fs.",
    "originalSentence": "The listener callback is attached to the `'change'` event fired by\n{fs.",
    "position": 2177,
    "id": "sentence_2177"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`.",
    "originalSentence": "FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`.",
    "position": 2178,
    "id": "sentence_2178"
  },
  {
    "type": "sentence",
    "content": "If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs.",
    "originalSentence": "If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs.",
    "position": 2179,
    "id": "sentence_2179"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}.",
    "originalSentence": "FSWatcher}.",
    "position": 2180,
    "id": "sentence_2180"
  },
  {
    "type": "sentence",
    "content": "#### Caveats\n\n<!",
    "originalSentence": "#### Caveats\n\n<!",
    "position": 2181,
    "id": "sentence_2181"
  },
  {
    "type": "sentence",
    "content": "--type=misc-->\n\nThe `fs.",
    "originalSentence": "--type=misc-->\n\nThe `fs.",
    "position": 2182,
    "id": "sentence_2182"
  },
  {
    "type": "sentence",
    "content": "watch` API is not 100% consistent across platforms, and is\nunavailable in some situations.",
    "originalSentence": "watch` API is not 100% consistent across platforms, and is\nunavailable in some situations.",
    "position": 2183,
    "id": "sentence_2183"
  },
  {
    "type": "sentence",
    "content": "On Windows, no events will be emitted if the watched directory is moved or\nrenamed.",
    "originalSentence": "On Windows, no events will be emitted if the watched directory is moved or\nrenamed.",
    "position": 2184,
    "id": "sentence_2184"
  },
  {
    "type": "sentence",
    "content": "An `EPERM` error is reported when the watched directory is deleted.",
    "originalSentence": "An `EPERM` error is reported when the watched directory is deleted.",
    "position": 2185,
    "id": "sentence_2185"
  },
  {
    "type": "sentence",
    "content": "watch` API does not provide any protection with respect\nto malicious actions on the file system.",
    "originalSentence": "watch` API does not provide any protection with respect\nto malicious actions on the file system.",
    "position": 2186,
    "id": "sentence_2186"
  },
  {
    "type": "sentence",
    "content": "For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files.",
    "originalSentence": "For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files.",
    "position": 2187,
    "id": "sentence_2187"
  },
  {
    "type": "sentence",
    "content": "This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename.",
    "originalSentence": "This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename.",
    "position": 2188,
    "id": "sentence_2188"
  },
  {
    "type": "sentence",
    "content": "##### Availability\n\n<!",
    "originalSentence": "##### Availability\n\n<!",
    "position": 2189,
    "id": "sentence_2189"
  },
  {
    "type": "sentence",
    "content": "--type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes.",
    "originalSentence": "--type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes.",
    "position": 2190,
    "id": "sentence_2190"
  },
  {
    "type": "sentence",
    "content": "* On Linux systems, this uses [`inotify(7)`][].",
    "originalSentence": "* On Linux systems, this uses [`inotify(7)`][].",
    "position": 2191,
    "id": "sentence_2191"
  },
  {
    "type": "sentence",
    "content": "* On BSD systems, this uses [`kqueue(2)`][].",
    "originalSentence": "* On BSD systems, this uses [`kqueue(2)`][].",
    "position": 2192,
    "id": "sentence_2192"
  },
  {
    "type": "sentence",
    "content": "* On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories.",
    "originalSentence": "* On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories.",
    "position": 2193,
    "id": "sentence_2193"
  },
  {
    "type": "sentence",
    "content": "* On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][].",
    "originalSentence": "* On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][].",
    "position": 2194,
    "id": "sentence_2194"
  },
  {
    "type": "sentence",
    "content": "* On Windows systems, this feature depends on [`ReadDirectoryChangesW`][].",
    "originalSentence": "* On Windows systems, this feature depends on [`ReadDirectoryChangesW`][].",
    "position": 2195,
    "id": "sentence_2195"
  },
  {
    "type": "sentence",
    "content": "* On AIX systems, this feature depends on [`AHAFS`][], which must be enabled.",
    "originalSentence": "* On AIX systems, this feature depends on [`AHAFS`][], which must be enabled.",
    "position": 2196,
    "id": "sentence_2196"
  },
  {
    "type": "sentence",
    "content": "* On IBM i systems, this feature is not supported.",
    "originalSentence": "* On IBM i systems, this feature is not supported.",
    "position": 2197,
    "id": "sentence_2197"
  },
  {
    "type": "sentence",
    "content": "If the underlying functionality is not available for some reason, then\n`fs.",
    "originalSentence": "If the underlying functionality is not available for some reason, then\n`fs.",
    "position": 2198,
    "id": "sentence_2198"
  },
  {
    "type": "sentence",
    "content": "watch()` will not be able to function and may throw an exception.",
    "originalSentence": "watch()` will not be able to function and may throw an exception.",
    "position": 2199,
    "id": "sentence_2199"
  },
  {
    "type": "sentence",
    "content": "For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker.",
    "originalSentence": "For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker.",
    "position": 2200,
    "id": "sentence_2200"
  },
  {
    "type": "sentence",
    "content": "It is still possible to use `fs.",
    "originalSentence": "It is still possible to use `fs.",
    "position": 2201,
    "id": "sentence_2201"
  },
  {
    "type": "sentence",
    "content": "watchFile()`, which uses stat polling, but\nthis method is slower and less reliable.",
    "originalSentence": "watchFile()`, which uses stat polling, but\nthis method is slower and less reliable.",
    "position": 2202,
    "id": "sentence_2202"
  },
  {
    "type": "sentence",
    "content": "##### Inodes\n\n<!",
    "originalSentence": "##### Inodes\n\n<!",
    "position": 2203,
    "id": "sentence_2203"
  },
  {
    "type": "sentence",
    "content": "--type=misc-->\n\nOn Linux and macOS systems, `fs.",
    "originalSentence": "--type=misc-->\n\nOn Linux and macOS systems, `fs.",
    "position": 2204,
    "id": "sentence_2204"
  },
  {
    "type": "sentence",
    "content": "watch()` resolves the path to an [inode][] and\nwatches the inode.",
    "originalSentence": "watch()` resolves the path to an [inode][] and\nwatches the inode.",
    "position": 2205,
    "id": "sentence_2205"
  },
  {
    "type": "sentence",
    "content": "If the watched path is deleted and recreated, it is assigned\na new inode.",
    "originalSentence": "If the watched path is deleted and recreated, it is assigned\na new inode.",
    "position": 2206,
    "id": "sentence_2206"
  },
  {
    "type": "sentence",
    "content": "The watch will emit an event for the delete but will continue\nwatching the _original_ inode.",
    "originalSentence": "The watch will emit an event for the delete but will continue\nwatching the _original_ inode.",
    "position": 2207,
    "id": "sentence_2207"
  },
  {
    "type": "sentence",
    "content": "Events for the new inode will not be emitted.",
    "originalSentence": "Events for the new inode will not be emitted.",
    "position": 2208,
    "id": "sentence_2208"
  },
  {
    "type": "sentence",
    "content": "This is expected behavior.",
    "originalSentence": "This is expected behavior.",
    "position": 2209,
    "id": "sentence_2209"
  },
  {
    "type": "sentence",
    "content": "AIX files retain the same inode for the lifetime of a file.",
    "originalSentence": "AIX files retain the same inode for the lifetime of a file.",
    "position": 2210,
    "id": "sentence_2210"
  },
  {
    "type": "sentence",
    "content": "Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation).",
    "originalSentence": "Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation).",
    "position": 2211,
    "id": "sentence_2211"
  },
  {
    "type": "sentence",
    "content": "##### Filename argument\n\n<!",
    "originalSentence": "##### Filename argument\n\n<!",
    "position": 2212,
    "id": "sentence_2212"
  },
  {
    "type": "sentence",
    "content": "--type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX.",
    "originalSentence": "--type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX.",
    "position": 2213,
    "id": "sentence_2213"
  },
  {
    "type": "sentence",
    "content": "Even on supported platforms, `filename` is not always\nguaranteed to be provided.",
    "originalSentence": "Even on supported platforms, `filename` is not always\nguaranteed to be provided.",
    "position": 2214,
    "id": "sentence_2214"
  },
  {
    "type": "sentence",
    "content": "Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`.",
    "originalSentence": "Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`.",
    "position": 2215,
    "id": "sentence_2215"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.",
    "originalSentence": "```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.",
    "position": 2216,
    "id": "sentence_2216"
  },
  {
    "type": "sentence",
    "content": "log(`event type is: ${eventType}`);\n  if (filename) {\n    console.",
    "originalSentence": "log(`event type is: ${eventType}`);\n  if (filename) {\n    console.",
    "position": 2217,
    "id": "sentence_2217"
  },
  {
    "type": "sentence",
    "content": "log(`filename provided: ${filename}`);\n  } else {\n    console.",
    "originalSentence": "log(`filename provided: ${filename}`);\n  } else {\n    console.",
    "position": 2218,
    "id": "sentence_2218"
  },
  {
    "type": "sentence",
    "content": "log('filename not provided');\n  }\n});\n```\n\n### `fs.",
    "originalSentence": "log('filename not provided');\n  }\n});\n```\n\n### `fs.",
    "position": 2219,
    "id": "sentence_2219"
  },
  {
    "type": "sentence",
    "content": "watchFile(filename[, options], listener)`\n\n<!",
    "originalSentence": "watchFile(filename[, options], listener)`\n\n<!",
    "position": 2220,
    "id": "sentence_2220"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2221,
    "id": "sentence_2221"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v10.",
    "originalSentence": "1.31\nchanges:\n  - version: v10.",
    "position": 2222,
    "id": "sentence_2222"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported.",
    "position": 2223,
    "id": "sentence_2223"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2224,
    "id": "sentence_2224"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 2225,
    "id": "sentence_2225"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs.",
    "originalSentence": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs.",
    "position": 2226,
    "id": "sentence_2226"
  },
  {
    "type": "sentence",
    "content": "Stats}\n  * `previous` {fs.",
    "originalSentence": "Stats}\n  * `previous` {fs.",
    "position": 2227,
    "id": "sentence_2227"
  },
  {
    "type": "sentence",
    "content": "Stats}\n* Returns: {fs.",
    "originalSentence": "Stats}\n* Returns: {fs.",
    "position": 2228,
    "id": "sentence_2228"
  },
  {
    "type": "sentence",
    "content": "StatWatcher}\n\nWatch for changes on `filename`.",
    "originalSentence": "StatWatcher}\n\nWatch for changes on `filename`.",
    "position": 2229,
    "id": "sentence_2229"
  },
  {
    "type": "sentence",
    "content": "The callback `listener` will be called each\ntime the file is accessed.",
    "originalSentence": "The callback `listener` will be called each\ntime the file is accessed.",
    "position": 2230,
    "id": "sentence_2230"
  },
  {
    "type": "sentence",
    "content": "The `options` argument may be omitted.",
    "originalSentence": "The `options` argument may be omitted.",
    "position": 2231,
    "id": "sentence_2231"
  },
  {
    "type": "sentence",
    "content": "If provided, it should be an object.",
    "originalSentence": "If provided, it should be an object.",
    "position": 2232,
    "id": "sentence_2232"
  },
  {
    "type": "sentence",
    "content": "The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched.",
    "originalSentence": "The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched.",
    "position": 2233,
    "id": "sentence_2233"
  },
  {
    "type": "sentence",
    "content": "The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds.",
    "originalSentence": "The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds.",
    "position": 2234,
    "id": "sentence_2234"
  },
  {
    "type": "sentence",
    "content": "The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message.",
    "originalSentence": "The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message.",
    "position": 2235,
    "id": "sentence_2235"
  },
  {
    "type": "sentence",
    "content": "text', (curr, prev) => {\n  console.",
    "originalSentence": "text', (curr, prev) => {\n  console.",
    "position": 2236,
    "id": "sentence_2236"
  },
  {
    "type": "sentence",
    "content": "log(`the current mtime is: ${curr.",
    "originalSentence": "log(`the current mtime is: ${curr.",
    "position": 2237,
    "id": "sentence_2237"
  },
  {
    "type": "sentence",
    "content": "mtime}`);\n  console.",
    "originalSentence": "mtime}`);\n  console.",
    "position": 2238,
    "id": "sentence_2238"
  },
  {
    "type": "sentence",
    "content": "log(`the previous mtime was: ${prev.",
    "originalSentence": "log(`the previous mtime was: ${prev.",
    "position": 2239,
    "id": "sentence_2239"
  },
  {
    "type": "sentence",
    "content": "mtime}`);\n});\n```\n\nThese stat objects are instances of `fs.",
    "originalSentence": "mtime}`);\n});\n```\n\nThese stat objects are instances of `fs.",
    "position": 2240,
    "id": "sentence_2240"
  },
  {
    "type": "sentence",
    "content": "If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s.",
    "originalSentence": "If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s.",
    "position": 2241,
    "id": "sentence_2241"
  },
  {
    "type": "sentence",
    "content": "To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr.",
    "originalSentence": "To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr.",
    "position": 2242,
    "id": "sentence_2242"
  },
  {
    "type": "sentence",
    "content": "mtimeMs` and `prev.",
    "originalSentence": "mtimeMs` and `prev.",
    "position": 2243,
    "id": "sentence_2243"
  },
  {
    "type": "sentence",
    "content": "When an `fs.",
    "originalSentence": "When an `fs.",
    "position": 2244,
    "id": "sentence_2244"
  },
  {
    "type": "sentence",
    "content": "watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch).",
    "originalSentence": "watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch).",
    "position": 2245,
    "id": "sentence_2245"
  },
  {
    "type": "sentence",
    "content": "If the file is created later on, the listener will be called\nagain, with the latest stat objects.",
    "originalSentence": "If the file is created later on, the listener will be called\nagain, with the latest stat objects.",
    "position": 2246,
    "id": "sentence_2246"
  },
  {
    "type": "sentence",
    "content": "This is a change in functionality since\nv0.",
    "originalSentence": "This is a change in functionality since\nv0.",
    "position": 2247,
    "id": "sentence_2247"
  },
  {
    "type": "sentence",
    "content": "Using [`fs.",
    "originalSentence": "Using [`fs.",
    "position": 2248,
    "id": "sentence_2248"
  },
  {
    "type": "sentence",
    "content": "watch()`][] is more efficient than `fs.",
    "originalSentence": "watch()`][] is more efficient than `fs.",
    "position": 2249,
    "id": "sentence_2249"
  },
  {
    "type": "sentence",
    "content": "watchFile` and\n`fs.",
    "originalSentence": "watchFile` and\n`fs.",
    "position": 2250,
    "id": "sentence_2250"
  },
  {
    "type": "sentence",
    "content": "unwatchFile`.",
    "originalSentence": "unwatchFile`.",
    "position": 2251,
    "id": "sentence_2251"
  },
  {
    "type": "sentence",
    "content": "watch` should be used instead of `fs.",
    "originalSentence": "watch` should be used instead of `fs.",
    "position": 2252,
    "id": "sentence_2252"
  },
  {
    "type": "sentence",
    "content": "watchFile` and\n`fs.",
    "originalSentence": "watchFile` and\n`fs.",
    "position": 2253,
    "id": "sentence_2253"
  },
  {
    "type": "sentence",
    "content": "unwatchFile` when possible.",
    "originalSentence": "unwatchFile` when possible.",
    "position": 2254,
    "id": "sentence_2254"
  },
  {
    "type": "sentence",
    "content": "When a file being watched by `fs.",
    "originalSentence": "When a file being watched by `fs.",
    "position": 2255,
    "id": "sentence_2255"
  },
  {
    "type": "sentence",
    "content": "watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance).",
    "originalSentence": "watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance).",
    "position": 2256,
    "id": "sentence_2256"
  },
  {
    "type": "sentence",
    "content": "This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs.",
    "originalSentence": "This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs.",
    "position": 2257,
    "id": "sentence_2257"
  },
  {
    "type": "sentence",
    "content": "write(fd, buffer, offset[, length[, position]], callback)`\n\n<!",
    "originalSentence": "write(fd, buffer, offset[, length[, position]], callback)`\n\n<!",
    "position": 2258,
    "id": "sentence_2258"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2259,
    "id": "sentence_2259"
  },
  {
    "type": "sentence",
    "content": "0.2\nchanges:\n  - version: v18.",
    "originalSentence": "0.2\nchanges:\n  - version: v18.",
    "position": 2260,
    "id": "sentence_2260"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2261,
    "id": "sentence_2261"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 2262,
    "id": "sentence_2262"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 2263,
    "id": "sentence_2263"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2264,
    "id": "sentence_2264"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 2265,
    "id": "sentence_2265"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2266,
    "id": "sentence_2266"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 2267,
    "id": "sentence_2267"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 2268,
    "id": "sentence_2268"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2269,
    "id": "sentence_2269"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "position": 2270,
    "id": "sentence_2270"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2271,
    "id": "sentence_2271"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "position": 2272,
    "id": "sentence_2272"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2273,
    "id": "sentence_2273"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 2274,
    "id": "sentence_2274"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 2275,
    "id": "sentence_2275"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "position": 2276,
    "id": "sentence_2276"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "position": 2277,
    "id": "sentence_2277"
  },
  {
    "type": "sentence",
    "content": "`offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write.",
    "originalSentence": "`offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write.",
    "position": 2278,
    "id": "sentence_2278"
  },
  {
    "type": "sentence",
    "content": "`position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "originalSentence": "`position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "position": 2279,
    "id": "sentence_2279"
  },
  {
    "type": "sentence",
    "content": "If `typeof position !",
    "originalSentence": "If `typeof position !",
    "position": 2280,
    "id": "sentence_2280"
  },
  {
    "type": "sentence",
    "content": "== 'number'`, the data will be written\nat the current position.",
    "originalSentence": "== 'number'`, the data will be written\nat the current position.",
    "position": 2281,
    "id": "sentence_2281"
  },
  {
    "type": "sentence",
    "content": "See pwrite(2).",
    "originalSentence": "See pwrite(2).",
    "position": 2282,
    "id": "sentence_2282"
  },
  {
    "type": "sentence",
    "content": "The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`.",
    "originalSentence": "The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`.",
    "position": 2283,
    "id": "sentence_2283"
  },
  {
    "type": "sentence",
    "content": "If this method is invoked as its [`util.",
    "originalSentence": "If this method is invoked as its [`util.",
    "position": 2284,
    "id": "sentence_2284"
  },
  {
    "type": "sentence",
    "content": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties.",
    "originalSentence": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties.",
    "position": 2285,
    "id": "sentence_2285"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `fs.",
    "originalSentence": "It is unsafe to use `fs.",
    "position": 2286,
    "id": "sentence_2286"
  },
  {
    "type": "sentence",
    "content": "write()` multiple times on the same file without waiting\nfor the callback.",
    "originalSentence": "write()` multiple times on the same file without waiting\nfor the callback.",
    "position": 2287,
    "id": "sentence_2287"
  },
  {
    "type": "sentence",
    "content": "For this scenario, [`fs.",
    "originalSentence": "For this scenario, [`fs.",
    "position": 2288,
    "id": "sentence_2288"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][] is\nrecommended.",
    "originalSentence": "createWriteStream()`][] is\nrecommended.",
    "position": 2289,
    "id": "sentence_2289"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 2290,
    "id": "sentence_2290"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 2291,
    "id": "sentence_2291"
  },
  {
    "type": "sentence",
    "content": "write(fd, buffer[, options], callback)`\n\n<!",
    "originalSentence": "write(fd, buffer[, options], callback)`\n\n<!",
    "position": 2292,
    "id": "sentence_2292"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v18.",
    "originalSentence": "-- YAML\nadded:\n  - v18.",
    "position": 2293,
    "id": "sentence_2293"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v16.",
    "originalSentence": "3.0\n  - v16.",
    "position": 2294,
    "id": "sentence_2294"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 2295,
    "id": "sentence_2295"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "position": 2296,
    "id": "sentence_2296"
  },
  {
    "type": "sentence",
    "content": "Similar to the above `fs.",
    "originalSentence": "Similar to the above `fs.",
    "position": 2297,
    "id": "sentence_2297"
  },
  {
    "type": "sentence",
    "content": "write` function, this version takes an\noptional `options` object.",
    "originalSentence": "write` function, this version takes an\noptional `options` object.",
    "position": 2298,
    "id": "sentence_2298"
  },
  {
    "type": "sentence",
    "content": "If no `options` object is specified, it will\ndefault with the above values.",
    "originalSentence": "If no `options` object is specified, it will\ndefault with the above values.",
    "position": 2299,
    "id": "sentence_2299"
  },
  {
    "type": "sentence",
    "content": "write(fd, string[, position[, encoding]], callback)`\n\n<!",
    "originalSentence": "write(fd, string[, position[, encoding]], callback)`\n\n<!",
    "position": 2300,
    "id": "sentence_2300"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2301,
    "id": "sentence_2301"
  },
  {
    "type": "sentence",
    "content": "11.5\nchanges:\n  - version: v19.",
    "originalSentence": "11.5\nchanges:\n  - version: v19.",
    "position": 2302,
    "id": "sentence_2302"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "position": 2303,
    "id": "sentence_2303"
  },
  {
    "type": "sentence",
    "content": "- version: v17.",
    "originalSentence": "- version: v17.",
    "position": 2304,
    "id": "sentence_2304"
  },
  {
    "type": "sentence",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "position": 2305,
    "id": "sentence_2305"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 2306,
    "id": "sentence_2306"
  },
  {
    "type": "sentence",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function.",
    "position": 2307,
    "id": "sentence_2307"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 2308,
    "id": "sentence_2308"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 2309,
    "id": "sentence_2309"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2310,
    "id": "sentence_2310"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 2311,
    "id": "sentence_2311"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 2312,
    "id": "sentence_2312"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2313,
    "id": "sentence_2313"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "position": 2314,
    "id": "sentence_2314"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2315,
    "id": "sentence_2315"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 2316,
    "id": "sentence_2316"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 2317,
    "id": "sentence_2317"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`.",
    "position": 2318,
    "id": "sentence_2318"
  },
  {
    "type": "sentence",
    "content": "If `string` is not a string,\nan exception is thrown.",
    "originalSentence": "If `string` is not a string,\nan exception is thrown.",
    "position": 2319,
    "id": "sentence_2319"
  },
  {
    "type": "sentence",
    "content": "`position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "originalSentence": "`position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "position": 2320,
    "id": "sentence_2320"
  },
  {
    "type": "sentence",
    "content": "If `typeof position !",
    "originalSentence": "If `typeof position !",
    "position": 2321,
    "id": "sentence_2321"
  },
  {
    "type": "sentence",
    "content": "== 'number'` the data will be written at\nthe current position.",
    "originalSentence": "== 'number'` the data will be written at\nthe current position.",
    "position": 2322,
    "id": "sentence_2322"
  },
  {
    "type": "sentence",
    "content": "See pwrite(2).",
    "originalSentence": "See pwrite(2).",
    "position": 2323,
    "id": "sentence_2323"
  },
  {
    "type": "sentence",
    "content": "`encoding` is the expected string encoding.",
    "originalSentence": "`encoding` is the expected string encoding.",
    "position": 2324,
    "id": "sentence_2324"
  },
  {
    "type": "sentence",
    "content": "The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written.",
    "originalSentence": "The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written.",
    "position": 2325,
    "id": "sentence_2325"
  },
  {
    "type": "sentence",
    "content": "Bytes\nwritten is not necessarily the same as string characters written.",
    "originalSentence": "Bytes\nwritten is not necessarily the same as string characters written.",
    "position": 2326,
    "id": "sentence_2326"
  },
  {
    "type": "sentence",
    "content": "See\n[`Buffer.",
    "originalSentence": "See\n[`Buffer.",
    "position": 2327,
    "id": "sentence_2327"
  },
  {
    "type": "sentence",
    "content": "byteLength`][].",
    "originalSentence": "byteLength`][].",
    "position": 2328,
    "id": "sentence_2328"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `fs.",
    "originalSentence": "It is unsafe to use `fs.",
    "position": 2329,
    "id": "sentence_2329"
  },
  {
    "type": "sentence",
    "content": "write()` multiple times on the same file without waiting\nfor the callback.",
    "originalSentence": "write()` multiple times on the same file without waiting\nfor the callback.",
    "position": 2330,
    "id": "sentence_2330"
  },
  {
    "type": "sentence",
    "content": "For this scenario, [`fs.",
    "originalSentence": "For this scenario, [`fs.",
    "position": 2331,
    "id": "sentence_2331"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][] is\nrecommended.",
    "originalSentence": "createWriteStream()`][] is\nrecommended.",
    "position": 2332,
    "id": "sentence_2332"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 2333,
    "id": "sentence_2333"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 2334,
    "id": "sentence_2334"
  },
  {
    "type": "sentence",
    "content": "On Windows, if the file descriptor is connected to the console (e.",
    "originalSentence": "On Windows, if the file descriptor is connected to the console (e.",
    "position": 2335,
    "id": "sentence_2335"
  },
  {
    "type": "sentence",
    "content": "`fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used.",
    "originalSentence": "`fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used.",
    "position": 2336,
    "id": "sentence_2336"
  },
  {
    "type": "sentence",
    "content": "It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command.",
    "originalSentence": "It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command.",
    "position": 2337,
    "id": "sentence_2337"
  },
  {
    "type": "sentence",
    "content": "See the [chcp][] docs for more\ndetails.",
    "originalSentence": "See the [chcp][] docs for more\ndetails.",
    "position": 2338,
    "id": "sentence_2338"
  },
  {
    "type": "sentence",
    "content": "writeFile(file, data[, options], callback)`\n\n<!",
    "originalSentence": "writeFile(file, data[, options], callback)`\n\n<!",
    "position": 2339,
    "id": "sentence_2339"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2340,
    "id": "sentence_2340"
  },
  {
    "type": "sentence",
    "content": "1.29\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "1.29\nchanges:\n  - version:\n    - v21.",
    "position": 2341,
    "id": "sentence_2341"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v20.",
    "originalSentence": "0.0\n    - v20.",
    "position": 2342,
    "id": "sentence_2342"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "position": 2343,
    "id": "sentence_2343"
  },
  {
    "type": "sentence",
    "content": "- version: v19.",
    "originalSentence": "- version: v19.",
    "position": 2344,
    "id": "sentence_2344"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "position": 2345,
    "id": "sentence_2345"
  },
  {
    "type": "sentence",
    "content": "- version: v18.",
    "originalSentence": "- version: v18.",
    "position": 2346,
    "id": "sentence_2346"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2347,
    "id": "sentence_2347"
  },
  {
    "type": "sentence",
    "content": "- version: v17.",
    "originalSentence": "- version: v17.",
    "position": 2348,
    "id": "sentence_2348"
  },
  {
    "type": "sentence",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "position": 2349,
    "id": "sentence_2349"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 2350,
    "id": "sentence_2350"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 2351,
    "id": "sentence_2351"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v15.",
    "originalSentence": "- version:\n      - v15.",
    "position": 2352,
    "id": "sentence_2352"
  },
  {
    "type": "sentence",
    "content": "2.0\n      - v14.",
    "originalSentence": "2.0\n      - v14.",
    "position": 2353,
    "id": "sentence_2353"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "position": 2354,
    "id": "sentence_2354"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 2355,
    "id": "sentence_2355"
  },
  {
    "type": "sentence",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "position": 2356,
    "id": "sentence_2356"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 2357,
    "id": "sentence_2357"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 2358,
    "id": "sentence_2358"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2359,
    "id": "sentence_2359"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 2360,
    "id": "sentence_2360"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2361,
    "id": "sentence_2361"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 2362,
    "id": "sentence_2362"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 2363,
    "id": "sentence_2363"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2364,
    "id": "sentence_2364"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "position": 2365,
    "id": "sentence_2365"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2366,
    "id": "sentence_2366"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 2367,
    "id": "sentence_2367"
  },
  {
    "type": "sentence",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 2368,
    "id": "sentence_2368"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 2369,
    "id": "sentence_2369"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 2370,
    "id": "sentence_2370"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 2371,
    "id": "sentence_2371"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'w'`.",
    "originalSentence": "**Default:** `'w'`.",
    "position": 2372,
    "id": "sentence_2372"
  },
  {
    "type": "sentence",
    "content": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "originalSentence": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "position": 2373,
    "id": "sentence_2373"
  },
  {
    "type": "sentence",
    "content": "fsync()` is used to flush the data.",
    "originalSentence": "fsync()` is used to flush the data.",
    "position": 2374,
    "id": "sentence_2374"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2375,
    "id": "sentence_2375"
  },
  {
    "type": "sentence",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists.",
    "position": 2376,
    "id": "sentence_2376"
  },
  {
    "type": "sentence",
    "content": "`data` can be a string or a buffer.",
    "originalSentence": "`data` can be a string or a buffer.",
    "position": 2377,
    "id": "sentence_2377"
  },
  {
    "type": "sentence",
    "content": "When `file` is a file descriptor, the behavior is similar to calling\n`fs.",
    "originalSentence": "When `file` is a file descriptor, the behavior is similar to calling\n`fs.",
    "position": 2378,
    "id": "sentence_2378"
  },
  {
    "type": "sentence",
    "content": "write()` directly (which is recommended).",
    "originalSentence": "write()` directly (which is recommended).",
    "position": 2379,
    "id": "sentence_2379"
  },
  {
    "type": "sentence",
    "content": "See the notes below on using\na file descriptor.",
    "originalSentence": "See the notes below on using\na file descriptor.",
    "position": 2380,
    "id": "sentence_2380"
  },
  {
    "type": "sentence",
    "content": "The `encoding` option is ignored if `data` is a buffer.",
    "originalSentence": "The `encoding` option is ignored if `data` is a buffer.",
    "position": 2381,
    "id": "sentence_2381"
  },
  {
    "type": "sentence",
    "content": "The `mode` option only affects the newly created file.",
    "originalSentence": "The `mode` option only affects the newly created file.",
    "position": 2382,
    "id": "sentence_2382"
  },
  {
    "type": "sentence",
    "content": "open()`][]\nfor more details.",
    "originalSentence": "open()`][]\nfor more details.",
    "position": 2383,
    "id": "sentence_2383"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer.",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer.",
    "position": 2384,
    "id": "sentence_2384"
  },
  {
    "type": "sentence",
    "content": "from('Hello Node.",
    "originalSentence": "from('Hello Node.",
    "position": 2385,
    "id": "sentence_2385"
  },
  {
    "type": "sentence",
    "content": "js'));\nwriteFile('message.",
    "originalSentence": "js'));\nwriteFile('message.",
    "position": 2386,
    "id": "sentence_2386"
  },
  {
    "type": "sentence",
    "content": "txt', data, (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt', data, (err) => {\n  if (err) throw err;\n  console.",
    "position": 2387,
    "id": "sentence_2387"
  },
  {
    "type": "sentence",
    "content": "log('The file has been saved!'",
    "originalSentence": "log('The file has been saved!'",
    "position": 2388,
    "id": "sentence_2388"
  },
  {
    "type": "sentence",
    "content": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message.",
    "originalSentence": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message.",
    "position": 2389,
    "id": "sentence_2389"
  },
  {
    "type": "sentence",
    "content": "txt', 'Hello Node.",
    "originalSentence": "txt', 'Hello Node.",
    "position": 2390,
    "id": "sentence_2390"
  },
  {
    "type": "sentence",
    "content": "js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs.",
    "originalSentence": "js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs.",
    "position": 2391,
    "id": "sentence_2391"
  },
  {
    "type": "sentence",
    "content": "writeFile()` multiple times on the same file without\nwaiting for the callback.",
    "originalSentence": "writeFile()` multiple times on the same file without\nwaiting for the callback.",
    "position": 2392,
    "id": "sentence_2392"
  },
  {
    "type": "sentence",
    "content": "For this scenario, [`fs.",
    "originalSentence": "For this scenario, [`fs.",
    "position": 2393,
    "id": "sentence_2393"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][] is\nrecommended.",
    "originalSentence": "createWriteStream()`][] is\nrecommended.",
    "position": 2394,
    "id": "sentence_2394"
  },
  {
    "type": "sentence",
    "content": "Similarly to `fs.",
    "originalSentence": "Similarly to `fs.",
    "position": 2395,
    "id": "sentence_2395"
  },
  {
    "type": "sentence",
    "content": "readFile` - `fs.",
    "originalSentence": "readFile` - `fs.",
    "position": 2396,
    "id": "sentence_2396"
  },
  {
    "type": "sentence",
    "content": "writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it.",
    "originalSentence": "writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it.",
    "position": 2397,
    "id": "sentence_2397"
  },
  {
    "type": "sentence",
    "content": "For performance sensitive code consider using [`fs.",
    "originalSentence": "For performance sensitive code consider using [`fs.",
    "position": 2398,
    "id": "sentence_2398"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][].",
    "originalSentence": "createWriteStream()`][].",
    "position": 2399,
    "id": "sentence_2399"
  },
  {
    "type": "sentence",
    "content": "It is possible to use an {AbortSignal} to cancel an `fs.",
    "originalSentence": "It is possible to use an {AbortSignal} to cancel an `fs.",
    "position": 2400,
    "id": "sentence_2400"
  },
  {
    "type": "sentence",
    "content": "writeFile()`.",
    "originalSentence": "writeFile()`.",
    "position": 2401,
    "id": "sentence_2401"
  },
  {
    "type": "sentence",
    "content": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "originalSentence": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "position": 2402,
    "id": "sentence_2402"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.",
    "position": 2403,
    "id": "sentence_2403"
  },
  {
    "type": "sentence",
    "content": "from('Hello Node.",
    "originalSentence": "from('Hello Node.",
    "position": 2404,
    "id": "sentence_2404"
  },
  {
    "type": "sentence",
    "content": "js'));\nwriteFile('message.",
    "originalSentence": "js'));\nwriteFile('message.",
    "position": 2405,
    "id": "sentence_2405"
  },
  {
    "type": "sentence",
    "content": "txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.",
    "originalSentence": "txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.",
    "position": 2406,
    "id": "sentence_2406"
  },
  {
    "type": "sentence",
    "content": "abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 2407,
    "id": "sentence_2407"
  },
  {
    "type": "sentence",
    "content": "writeFile` performs.",
    "originalSentence": "writeFile` performs.",
    "position": 2408,
    "id": "sentence_2408"
  },
  {
    "type": "sentence",
    "content": "#### Using `fs.",
    "originalSentence": "#### Using `fs.",
    "position": 2409,
    "id": "sentence_2409"
  },
  {
    "type": "sentence",
    "content": "writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs.",
    "originalSentence": "writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs.",
    "position": 2410,
    "id": "sentence_2410"
  },
  {
    "type": "sentence",
    "content": "write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer.",
    "originalSentence": "write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer.",
    "position": 2411,
    "id": "sentence_2411"
  },
  {
    "type": "sentence",
    "content": "from(data, options.",
    "originalSentence": "from(data, options.",
    "position": 2412,
    "id": "sentence_2412"
  },
  {
    "type": "sentence",
    "content": "encoding), callback);\n```\n\nThe difference from directly calling `fs.",
    "originalSentence": "encoding), callback);\n```\n\nThe difference from directly calling `fs.",
    "position": 2413,
    "id": "sentence_2413"
  },
  {
    "type": "sentence",
    "content": "write()` is that under some unusual\nconditions, `fs.",
    "originalSentence": "write()` is that under some unusual\nconditions, `fs.",
    "position": 2414,
    "id": "sentence_2414"
  },
  {
    "type": "sentence",
    "content": "write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs.",
    "originalSentence": "write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs.",
    "position": 2415,
    "id": "sentence_2415"
  },
  {
    "type": "sentence",
    "content": "writeFile()` retries until\nthe data is entirely written (or an error occurs).",
    "originalSentence": "writeFile()` retries until\nthe data is entirely written (or an error occurs).",
    "position": 2416,
    "id": "sentence_2416"
  },
  {
    "type": "sentence",
    "content": "The implications of this are a common source of confusion.",
    "originalSentence": "The implications of this are a common source of confusion.",
    "position": 2417,
    "id": "sentence_2417"
  },
  {
    "type": "sentence",
    "content": "In\nthe file descriptor case, the file is not replaced!",
    "originalSentence": "In\nthe file descriptor case, the file is not replaced!",
    "position": 2418,
    "id": "sentence_2418"
  },
  {
    "type": "sentence",
    "content": "The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data.",
    "originalSentence": "The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data.",
    "position": 2419,
    "id": "sentence_2419"
  },
  {
    "type": "sentence",
    "content": "For example, if `fs.",
    "originalSentence": "For example, if `fs.",
    "position": 2420,
    "id": "sentence_2420"
  },
  {
    "type": "sentence",
    "content": "writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor).",
    "originalSentence": "writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor).",
    "position": 2421,
    "id": "sentence_2421"
  },
  {
    "type": "sentence",
    "content": "If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`.",
    "originalSentence": "If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`.",
    "position": 2422,
    "id": "sentence_2422"
  },
  {
    "type": "sentence",
    "content": "writev(fd, buffers[, position], callback)`\n\n<!",
    "originalSentence": "writev(fd, buffers[, position], callback)`\n\n<!",
    "position": 2423,
    "id": "sentence_2423"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 2424,
    "id": "sentence_2424"
  },
  {
    "type": "sentence",
    "content": "9.0\nchanges:\n  - version: v18.",
    "originalSentence": "9.0\nchanges:\n  - version: v18.",
    "position": 2425,
    "id": "sentence_2425"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 2426,
    "id": "sentence_2426"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`.",
    "position": 2427,
    "id": "sentence_2427"
  },
  {
    "type": "sentence",
    "content": "`position` is the offset from the beginning of the file where this data\nshould be written.",
    "originalSentence": "`position` is the offset from the beginning of the file where this data\nshould be written.",
    "position": 2428,
    "id": "sentence_2428"
  },
  {
    "type": "sentence",
    "content": "If `typeof position !",
    "originalSentence": "If `typeof position !",
    "position": 2429,
    "id": "sentence_2429"
  },
  {
    "type": "sentence",
    "content": "== 'number'`, the data will be written\nat the current position.",
    "originalSentence": "== 'number'`, the data will be written\nat the current position.",
    "position": 2430,
    "id": "sentence_2430"
  },
  {
    "type": "sentence",
    "content": "The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`.",
    "originalSentence": "The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`.",
    "position": 2431,
    "id": "sentence_2431"
  },
  {
    "type": "sentence",
    "content": "`bytesWritten` is how many bytes were written from `buffers`.",
    "originalSentence": "`bytesWritten` is how many bytes were written from `buffers`.",
    "position": 2432,
    "id": "sentence_2432"
  },
  {
    "type": "sentence",
    "content": "If this method is [`util.",
    "originalSentence": "If this method is [`util.",
    "position": 2433,
    "id": "sentence_2433"
  },
  {
    "type": "sentence",
    "content": "promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties.",
    "originalSentence": "promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties.",
    "position": 2434,
    "id": "sentence_2434"
  },
  {
    "type": "sentence",
    "content": "It is unsafe to use `fs.",
    "originalSentence": "It is unsafe to use `fs.",
    "position": 2435,
    "id": "sentence_2435"
  },
  {
    "type": "sentence",
    "content": "writev()` multiple times on the same file without\nwaiting for the callback.",
    "originalSentence": "writev()` multiple times on the same file without\nwaiting for the callback.",
    "position": 2436,
    "id": "sentence_2436"
  },
  {
    "type": "sentence",
    "content": "For this scenario, use [`fs.",
    "originalSentence": "For this scenario, use [`fs.",
    "position": 2437,
    "id": "sentence_2437"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][].",
    "originalSentence": "createWriteStream()`][].",
    "position": 2438,
    "id": "sentence_2438"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 2439,
    "id": "sentence_2439"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 2440,
    "id": "sentence_2440"
  },
  {
    "type": "sentence",
    "content": "## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails.",
    "originalSentence": "## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails.",
    "position": 2441,
    "id": "sentence_2441"
  },
  {
    "type": "sentence",
    "content": "accessSync(path[, mode])`\n\n<!",
    "originalSentence": "accessSync(path[, mode])`\n\n<!",
    "position": 2442,
    "id": "sentence_2442"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2443,
    "id": "sentence_2443"
  },
  {
    "type": "sentence",
    "content": "11.15\nchanges:\n  - version: v7.",
    "originalSentence": "11.15\nchanges:\n  - version: v7.",
    "position": 2444,
    "id": "sentence_2444"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2445,
    "id": "sentence_2445"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "position": 2446,
    "id": "sentence_2446"
  },
  {
    "type": "sentence",
    "content": "F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`.",
    "originalSentence": "F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`.",
    "position": 2447,
    "id": "sentence_2447"
  },
  {
    "type": "sentence",
    "content": "The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed.",
    "originalSentence": "The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed.",
    "position": 2448,
    "id": "sentence_2448"
  },
  {
    "type": "sentence",
    "content": "`mode` should be either the value\n`fs.",
    "originalSentence": "`mode` should be either the value\n`fs.",
    "position": 2449,
    "id": "sentence_2449"
  },
  {
    "type": "sentence",
    "content": "F_OK` or a mask consisting of the bitwise OR of any of\n`fs.",
    "originalSentence": "F_OK` or a mask consisting of the bitwise OR of any of\n`fs.",
    "position": 2450,
    "id": "sentence_2450"
  },
  {
    "type": "sentence",
    "content": "R_OK`, `fs.",
    "originalSentence": "R_OK`, `fs.",
    "position": 2451,
    "id": "sentence_2451"
  },
  {
    "type": "sentence",
    "content": "W_OK`, and `fs.",
    "originalSentence": "W_OK`, and `fs.",
    "position": 2452,
    "id": "sentence_2452"
  },
  {
    "type": "sentence",
    "content": "Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "Check [File access constants][] for\npossible values of `mode`.",
    "position": 2453,
    "id": "sentence_2453"
  },
  {
    "type": "sentence",
    "content": "If any of the accessibility checks fail, an `Error` will be thrown.",
    "originalSentence": "If any of the accessibility checks fail, an `Error` will be thrown.",
    "position": 2454,
    "id": "sentence_2454"
  },
  {
    "type": "sentence",
    "content": "Otherwise,\nthe method will return `undefined`.",
    "originalSentence": "Otherwise,\nthe method will return `undefined`.",
    "position": 2455,
    "id": "sentence_2455"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants.",
    "originalSentence": "```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants.",
    "position": 2456,
    "id": "sentence_2456"
  },
  {
    "type": "sentence",
    "content": "R_OK | constants.",
    "originalSentence": "R_OK | constants.",
    "position": 2457,
    "id": "sentence_2457"
  },
  {
    "type": "sentence",
    "content": "W_OK);\n  console.",
    "originalSentence": "W_OK);\n  console.",
    "position": 2458,
    "id": "sentence_2458"
  },
  {
    "type": "sentence",
    "content": "log('can read/write');\n} catch (err) {\n  console.",
    "originalSentence": "log('can read/write');\n} catch (err) {\n  console.",
    "position": 2459,
    "id": "sentence_2459"
  },
  {
    "type": "sentence",
    "content": "error('no access!'",
    "originalSentence": "error('no access!'",
    "position": 2460,
    "id": "sentence_2460"
  },
  {
    "type": "sentence",
    "content": ");\n}\n```\n\n### `fs.",
    "originalSentence": ");\n}\n```\n\n### `fs.",
    "position": 2461,
    "id": "sentence_2461"
  },
  {
    "type": "sentence",
    "content": "appendFileSync(path, data[, options])`\n\n<!",
    "originalSentence": "appendFileSync(path, data[, options])`\n\n<!",
    "position": 2462,
    "id": "sentence_2462"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2463,
    "id": "sentence_2463"
  },
  {
    "type": "sentence",
    "content": "6.7\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "6.7\nchanges:\n  - version:\n    - v21.",
    "position": 2464,
    "id": "sentence_2464"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v20.",
    "originalSentence": "1.0\n    - v20.",
    "position": 2465,
    "id": "sentence_2465"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 2466,
    "id": "sentence_2466"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2467,
    "id": "sentence_2467"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 2468,
    "id": "sentence_2468"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 2469,
    "id": "sentence_2469"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 2470,
    "id": "sentence_2470"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 2471,
    "id": "sentence_2471"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'a'`.",
    "originalSentence": "**Default:** `'a'`.",
    "position": 2472,
    "id": "sentence_2472"
  },
  {
    "type": "sentence",
    "content": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 2473,
    "id": "sentence_2473"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2474,
    "id": "sentence_2474"
  },
  {
    "type": "sentence",
    "content": "Synchronously append data to a file, creating the file if it does not yet\nexist.",
    "originalSentence": "Synchronously append data to a file, creating the file if it does not yet\nexist.",
    "position": 2475,
    "id": "sentence_2475"
  },
  {
    "type": "sentence",
    "content": "`data` can be a string or a {Buffer}.",
    "originalSentence": "`data` can be a string or a {Buffer}.",
    "position": 2476,
    "id": "sentence_2476"
  },
  {
    "type": "sentence",
    "content": "The `mode` option only affects the newly created file.",
    "originalSentence": "The `mode` option only affects the newly created file.",
    "position": 2477,
    "id": "sentence_2477"
  },
  {
    "type": "sentence",
    "content": "open()`][]\nfor more details.",
    "originalSentence": "open()`][]\nfor more details.",
    "position": 2478,
    "id": "sentence_2478"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message.",
    "originalSentence": "```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message.",
    "position": 2479,
    "id": "sentence_2479"
  },
  {
    "type": "sentence",
    "content": "txt', 'data to append');\n  console.",
    "originalSentence": "txt', 'data to append');\n  console.",
    "position": 2480,
    "id": "sentence_2480"
  },
  {
    "type": "sentence",
    "content": "log('The \"data to append\" was appended to file!'",
    "originalSentence": "log('The \"data to append\" was appended to file!'",
    "position": 2481,
    "id": "sentence_2481"
  },
  {
    "type": "sentence",
    "content": ");\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message.",
    "originalSentence": ");\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message.",
    "position": 2482,
    "id": "sentence_2482"
  },
  {
    "type": "sentence",
    "content": "txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "originalSentence": "txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "position": 2483,
    "id": "sentence_2483"
  },
  {
    "type": "sentence",
    "content": "open()` or `fs.",
    "originalSentence": "open()` or `fs.",
    "position": 2484,
    "id": "sentence_2484"
  },
  {
    "type": "sentence",
    "content": "openSync()`).",
    "originalSentence": "openSync()`).",
    "position": 2485,
    "id": "sentence_2485"
  },
  {
    "type": "sentence",
    "content": "The file descriptor will\nnot be closed automatically.",
    "originalSentence": "The file descriptor will\nnot be closed automatically.",
    "position": 2486,
    "id": "sentence_2486"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.",
    "originalSentence": "```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.",
    "position": 2487,
    "id": "sentence_2487"
  },
  {
    "type": "sentence",
    "content": "txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !",
    "originalSentence": "txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !",
    "position": 2488,
    "id": "sentence_2488"
  },
  {
    "type": "sentence",
    "content": "== undefined)\n    closeSync(fd);\n}\n```\n\n### `fs.",
    "originalSentence": "== undefined)\n    closeSync(fd);\n}\n```\n\n### `fs.",
    "position": 2489,
    "id": "sentence_2489"
  },
  {
    "type": "sentence",
    "content": "chmodSync(path, mode)`\n\n<!",
    "originalSentence": "chmodSync(path, mode)`\n\n<!",
    "position": 2490,
    "id": "sentence_2490"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2491,
    "id": "sentence_2491"
  },
  {
    "type": "sentence",
    "content": "6.7\nchanges:\n  - version: v7.",
    "originalSentence": "6.7\nchanges:\n  - version: v7.",
    "position": 2492,
    "id": "sentence_2492"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2493,
    "id": "sentence_2493"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2494,
    "id": "sentence_2494"
  },
  {
    "type": "sentence",
    "content": "chmod()`][].",
    "originalSentence": "chmod()`][].",
    "position": 2495,
    "id": "sentence_2495"
  },
  {
    "type": "sentence",
    "content": "See the POSIX chmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX chmod(2) documentation for more detail.",
    "position": 2496,
    "id": "sentence_2496"
  },
  {
    "type": "sentence",
    "content": "chownSync(path, uid, gid)`\n\n<!",
    "originalSentence": "chownSync(path, uid, gid)`\n\n<!",
    "position": 2497,
    "id": "sentence_2497"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2498,
    "id": "sentence_2498"
  },
  {
    "type": "sentence",
    "content": "1.97\nchanges:\n  - version: v7.",
    "originalSentence": "1.97\nchanges:\n  - version: v7.",
    "position": 2499,
    "id": "sentence_2499"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2500,
    "id": "sentence_2500"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file.",
    "position": 2501,
    "id": "sentence_2501"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2502,
    "id": "sentence_2502"
  },
  {
    "type": "sentence",
    "content": "This is the synchronous version of [`fs.",
    "originalSentence": "This is the synchronous version of [`fs.",
    "position": 2503,
    "id": "sentence_2503"
  },
  {
    "type": "sentence",
    "content": "chown()`][].",
    "originalSentence": "chown()`][].",
    "position": 2504,
    "id": "sentence_2504"
  },
  {
    "type": "sentence",
    "content": "See the POSIX chown(2) documentation for more detail.",
    "originalSentence": "See the POSIX chown(2) documentation for more detail.",
    "position": 2505,
    "id": "sentence_2505"
  },
  {
    "type": "sentence",
    "content": "closeSync(fd)`\n\n<!",
    "originalSentence": "closeSync(fd)`\n\n<!",
    "position": 2506,
    "id": "sentence_2506"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2507,
    "id": "sentence_2507"
  },
  {
    "type": "sentence",
    "content": "1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor.",
    "originalSentence": "1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor.",
    "position": 2508,
    "id": "sentence_2508"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2509,
    "id": "sentence_2509"
  },
  {
    "type": "sentence",
    "content": "Calling `fs.",
    "originalSentence": "Calling `fs.",
    "position": 2510,
    "id": "sentence_2510"
  },
  {
    "type": "sentence",
    "content": "closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "originalSentence": "closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "position": 2511,
    "id": "sentence_2511"
  },
  {
    "type": "sentence",
    "content": "See the POSIX close(2) documentation for more detail.",
    "originalSentence": "See the POSIX close(2) documentation for more detail.",
    "position": 2512,
    "id": "sentence_2512"
  },
  {
    "type": "sentence",
    "content": "copyFileSync(src, dest[, mode])`\n\n<!",
    "originalSentence": "copyFileSync(src, dest[, mode])`\n\n<!",
    "position": 2513,
    "id": "sentence_2513"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v8.",
    "originalSentence": "-- YAML\nadded: v8.",
    "position": 2514,
    "id": "sentence_2514"
  },
  {
    "type": "sentence",
    "content": "5.0\nchanges:\n  - version: v14.",
    "originalSentence": "5.0\nchanges:\n  - version: v14.",
    "position": 2515,
    "id": "sentence_2515"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "position": 2516,
    "id": "sentence_2516"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "position": 2517,
    "id": "sentence_2517"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 2518,
    "id": "sentence_2518"
  },
  {
    "type": "sentence",
    "content": "Synchronously copies `src` to `dest`.",
    "originalSentence": "Synchronously copies `src` to `dest`.",
    "position": 2519,
    "id": "sentence_2519"
  },
  {
    "type": "sentence",
    "content": "By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "By default, `dest` is overwritten if it\nalready exists.",
    "position": 2520,
    "id": "sentence_2520"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2521,
    "id": "sentence_2521"
  },
  {
    "type": "sentence",
    "content": "js makes no guarantees about the\natomicity of the copy operation.",
    "originalSentence": "js makes no guarantees about the\natomicity of the copy operation.",
    "position": 2522,
    "id": "sentence_2522"
  },
  {
    "type": "sentence",
    "content": "If an error occurs after the destination file\nhas been opened for writing, Node.",
    "originalSentence": "If an error occurs after the destination file\nhas been opened for writing, Node.",
    "position": 2523,
    "id": "sentence_2523"
  },
  {
    "type": "sentence",
    "content": "js will attempt to remove the destination.",
    "originalSentence": "js will attempt to remove the destination.",
    "position": 2524,
    "id": "sentence_2524"
  },
  {
    "type": "sentence",
    "content": "`mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "originalSentence": "`mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "position": 2525,
    "id": "sentence_2525"
  },
  {
    "type": "sentence",
    "content": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "originalSentence": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "position": 2526,
    "id": "sentence_2526"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL | fs.",
    "originalSentence": "COPYFILE_EXCL | fs.",
    "position": 2527,
    "id": "sentence_2527"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE`).",
    "originalSentence": "COPYFILE_FICLONE`).",
    "position": 2528,
    "id": "sentence_2528"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "originalSentence": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "position": 2529,
    "id": "sentence_2529"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "originalSentence": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "position": 2530,
    "id": "sentence_2530"
  },
  {
    "type": "sentence",
    "content": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "originalSentence": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "position": 2531,
    "id": "sentence_2531"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "originalSentence": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "position": 2532,
    "id": "sentence_2532"
  },
  {
    "type": "sentence",
    "content": "If the platform does not support\n  copy-on-write, then the operation will fail.",
    "originalSentence": "If the platform does not support\n  copy-on-write, then the operation will fail.",
    "position": 2533,
    "id": "sentence_2533"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination.",
    "originalSentence": "```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination.",
    "position": 2534,
    "id": "sentence_2534"
  },
  {
    "type": "sentence",
    "content": "txt will be created or overwritten by default.",
    "originalSentence": "txt will be created or overwritten by default.",
    "position": 2535,
    "id": "sentence_2535"
  },
  {
    "type": "sentence",
    "content": "copyFileSync('source.",
    "originalSentence": "copyFileSync('source.",
    "position": 2536,
    "id": "sentence_2536"
  },
  {
    "type": "sentence",
    "content": "txt', 'destination.",
    "originalSentence": "txt', 'destination.",
    "position": 2537,
    "id": "sentence_2537"
  },
  {
    "type": "sentence",
    "content": "txt');\nconsole.",
    "originalSentence": "txt');\nconsole.",
    "position": 2538,
    "id": "sentence_2538"
  },
  {
    "type": "sentence",
    "content": "log('source.",
    "originalSentence": "log('source.",
    "position": 2539,
    "id": "sentence_2539"
  },
  {
    "type": "sentence",
    "content": "txt was copied to destination.",
    "originalSentence": "txt was copied to destination.",
    "position": 2540,
    "id": "sentence_2540"
  },
  {
    "type": "sentence",
    "content": "txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "originalSentence": "txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "position": 2541,
    "id": "sentence_2541"
  },
  {
    "type": "sentence",
    "content": "txt exists.",
    "originalSentence": "txt exists.",
    "position": 2542,
    "id": "sentence_2542"
  },
  {
    "type": "sentence",
    "content": "copyFileSync('source.",
    "originalSentence": "copyFileSync('source.",
    "position": 2543,
    "id": "sentence_2543"
  },
  {
    "type": "sentence",
    "content": "txt', 'destination.",
    "originalSentence": "txt', 'destination.",
    "position": 2544,
    "id": "sentence_2544"
  },
  {
    "type": "sentence",
    "content": "txt', constants.",
    "originalSentence": "txt', constants.",
    "position": 2545,
    "id": "sentence_2545"
  },
  {
    "type": "sentence",
    "content": "COPYFILE_EXCL);\n```\n\n### `fs.",
    "originalSentence": "COPYFILE_EXCL);\n```\n\n### `fs.",
    "position": 2546,
    "id": "sentence_2546"
  },
  {
    "type": "sentence",
    "content": "cpSync(src, dest[, options])`\n\n<!",
    "originalSentence": "cpSync(src, dest[, options])`\n\n<!",
    "position": 2547,
    "id": "sentence_2547"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v16.",
    "originalSentence": "-- YAML\nadded: v16.",
    "position": 2548,
    "id": "sentence_2548"
  },
  {
    "type": "sentence",
    "content": "7.0\nchanges:\n  - version: v22.",
    "originalSentence": "7.0\nchanges:\n  - version: v22.",
    "position": 2549,
    "id": "sentence_2549"
  },
  {
    "type": "sentence",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "position": 2550,
    "id": "sentence_2550"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v20.",
    "originalSentence": "- version:\n    - v20.",
    "position": 2551,
    "id": "sentence_2551"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 2552,
    "id": "sentence_2552"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "position": 2553,
    "id": "sentence_2553"
  },
  {
    "type": "sentence",
    "content": "copyFile()`.",
    "originalSentence": "copyFile()`.",
    "position": 2554,
    "id": "sentence_2554"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v17.",
    "originalSentence": "- version:\n    - v17.",
    "position": 2555,
    "id": "sentence_2555"
  },
  {
    "type": "sentence",
    "content": "6.0\n    - v16.",
    "originalSentence": "6.0\n    - v16.",
    "position": 2556,
    "id": "sentence_2556"
  },
  {
    "type": "sentence",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "position": 2557,
    "id": "sentence_2557"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `src` {string|URL} source path to copy.",
    "originalSentence": "-->\n\n* `src` {string|URL} source path to copy.",
    "position": 2558,
    "id": "sentence_2558"
  },
  {
    "type": "sentence",
    "content": "* `dest` {string|URL} destination path to copy to.",
    "originalSentence": "* `dest` {string|URL} destination path to copy to.",
    "position": 2559,
    "id": "sentence_2559"
  },
  {
    "type": "sentence",
    "content": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "originalSentence": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "position": 2560,
    "id": "sentence_2560"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2561,
    "id": "sentence_2561"
  },
  {
    "type": "sentence",
    "content": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "originalSentence": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "position": 2562,
    "id": "sentence_2562"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2563,
    "id": "sentence_2563"
  },
  {
    "type": "sentence",
    "content": "* `filter` {Function} Function to filter copied files/directories.",
    "originalSentence": "* `filter` {Function} Function to filter copied files/directories.",
    "position": 2564,
    "id": "sentence_2564"
  },
  {
    "type": "sentence",
    "content": "Return\n    `true` to copy the item, `false` to ignore it.",
    "originalSentence": "Return\n    `true` to copy the item, `false` to ignore it.",
    "position": 2565,
    "id": "sentence_2565"
  },
  {
    "type": "sentence",
    "content": "When ignoring a directory,\n    all of its contents will be skipped as well.",
    "originalSentence": "When ignoring a directory,\n    all of its contents will be skipped as well.",
    "position": 2566,
    "id": "sentence_2566"
  },
  {
    "type": "sentence",
    "content": "**Default:** `undefined`\n    * `src` {string} source path to copy.",
    "originalSentence": "**Default:** `undefined`\n    * `src` {string} source path to copy.",
    "position": 2567,
    "id": "sentence_2567"
  },
  {
    "type": "sentence",
    "content": "* `dest` {string} destination path to copy to.",
    "originalSentence": "* `dest` {string} destination path to copy to.",
    "position": 2568,
    "id": "sentence_2568"
  },
  {
    "type": "sentence",
    "content": "* Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`.",
    "originalSentence": "* Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`.",
    "position": 2569,
    "id": "sentence_2569"
  },
  {
    "type": "sentence",
    "content": "* `force` {boolean} overwrite existing file or directory.",
    "originalSentence": "* `force` {boolean} overwrite existing file or directory.",
    "position": 2570,
    "id": "sentence_2570"
  },
  {
    "type": "sentence",
    "content": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "originalSentence": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "position": 2571,
    "id": "sentence_2571"
  },
  {
    "type": "sentence",
    "content": "Use the `errorOnExist` option to change this behavior.",
    "originalSentence": "Use the `errorOnExist` option to change this behavior.",
    "position": 2572,
    "id": "sentence_2572"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 2573,
    "id": "sentence_2573"
  },
  {
    "type": "sentence",
    "content": "* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "* `mode` {integer} modifiers for copy operation.",
    "position": 2574,
    "id": "sentence_2574"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 2575,
    "id": "sentence_2575"
  },
  {
    "type": "sentence",
    "content": "See `mode` flag of [`fs.",
    "originalSentence": "See `mode` flag of [`fs.",
    "position": 2576,
    "id": "sentence_2576"
  },
  {
    "type": "sentence",
    "content": "copyFileSync()`][].",
    "originalSentence": "copyFileSync()`][].",
    "position": 2577,
    "id": "sentence_2577"
  },
  {
    "type": "sentence",
    "content": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "originalSentence": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "position": 2578,
    "id": "sentence_2578"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2579,
    "id": "sentence_2579"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "originalSentence": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "position": 2580,
    "id": "sentence_2580"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "**Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 2581,
    "id": "sentence_2581"
  },
  {
    "type": "sentence",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 2582,
    "id": "sentence_2582"
  },
  {
    "type": "sentence",
    "content": "existsSync(path)`\n\n<!",
    "originalSentence": "existsSync(path)`\n\n<!",
    "position": 2583,
    "id": "sentence_2583"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2584,
    "id": "sentence_2584"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: v7.",
    "originalSentence": "1.21\nchanges:\n  - version: v7.",
    "position": 2585,
    "id": "sentence_2585"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 2586,
    "id": "sentence_2586"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise.",
    "position": 2587,
    "id": "sentence_2587"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2588,
    "id": "sentence_2588"
  },
  {
    "type": "sentence",
    "content": "exists()`][].",
    "originalSentence": "exists()`][].",
    "position": 2589,
    "id": "sentence_2589"
  },
  {
    "type": "sentence",
    "content": "exists()` is deprecated, but `fs.",
    "originalSentence": "exists()` is deprecated, but `fs.",
    "position": 2590,
    "id": "sentence_2590"
  },
  {
    "type": "sentence",
    "content": "existsSync()` is not.",
    "originalSentence": "existsSync()` is not.",
    "position": 2591,
    "id": "sentence_2591"
  },
  {
    "type": "sentence",
    "content": "The `callback`\nparameter to `fs.",
    "originalSentence": "The `callback`\nparameter to `fs.",
    "position": 2592,
    "id": "sentence_2592"
  },
  {
    "type": "sentence",
    "content": "exists()` accepts parameters that are inconsistent with other\nNode.",
    "originalSentence": "exists()` accepts parameters that are inconsistent with other\nNode.",
    "position": 2593,
    "id": "sentence_2593"
  },
  {
    "type": "sentence",
    "content": "js callbacks.",
    "originalSentence": "js callbacks.",
    "position": 2594,
    "id": "sentence_2594"
  },
  {
    "type": "sentence",
    "content": "existsSync()` does not use a callback.",
    "originalSentence": "existsSync()` does not use a callback.",
    "position": 2595,
    "id": "sentence_2595"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console.",
    "originalSentence": "```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console.",
    "position": 2596,
    "id": "sentence_2596"
  },
  {
    "type": "sentence",
    "content": "log('The path exists.'",
    "originalSentence": "log('The path exists.'",
    "position": 2597,
    "id": "sentence_2597"
  },
  {
    "type": "sentence",
    "content": ");\n```\n\n### `fs.",
    "originalSentence": ");\n```\n\n### `fs.",
    "position": 2598,
    "id": "sentence_2598"
  },
  {
    "type": "sentence",
    "content": "fchmodSync(fd, mode)`\n\n<!",
    "originalSentence": "fchmodSync(fd, mode)`\n\n<!",
    "position": 2599,
    "id": "sentence_2599"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2600,
    "id": "sentence_2600"
  },
  {
    "type": "sentence",
    "content": "4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file.",
    "originalSentence": "4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file.",
    "position": 2601,
    "id": "sentence_2601"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2602,
    "id": "sentence_2602"
  },
  {
    "type": "sentence",
    "content": "See the POSIX fchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchmod(2) documentation for more detail.",
    "position": 2603,
    "id": "sentence_2603"
  },
  {
    "type": "sentence",
    "content": "fchownSync(fd, uid, gid)`\n\n<!",
    "originalSentence": "fchownSync(fd, uid, gid)`\n\n<!",
    "position": 2604,
    "id": "sentence_2604"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2605,
    "id": "sentence_2605"
  },
  {
    "type": "sentence",
    "content": "4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id.",
    "originalSentence": "4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id.",
    "position": 2606,
    "id": "sentence_2606"
  },
  {
    "type": "sentence",
    "content": "* `gid` {integer} The file's new group's group id.",
    "originalSentence": "* `gid` {integer} The file's new group's group id.",
    "position": 2607,
    "id": "sentence_2607"
  },
  {
    "type": "sentence",
    "content": "Sets the owner of the file.",
    "originalSentence": "Sets the owner of the file.",
    "position": 2608,
    "id": "sentence_2608"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2609,
    "id": "sentence_2609"
  },
  {
    "type": "sentence",
    "content": "See the POSIX fchown(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchown(2) documentation for more detail.",
    "position": 2610,
    "id": "sentence_2610"
  },
  {
    "type": "sentence",
    "content": "fdatasyncSync(fd)`\n\n<!",
    "originalSentence": "fdatasyncSync(fd)`\n\n<!",
    "position": 2611,
    "id": "sentence_2611"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2612,
    "id": "sentence_2612"
  },
  {
    "type": "sentence",
    "content": "1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "originalSentence": "1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "position": 2613,
    "id": "sentence_2613"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 2614,
    "id": "sentence_2614"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2615,
    "id": "sentence_2615"
  },
  {
    "type": "sentence",
    "content": "fstatSync(fd[, options])`\n\n<!",
    "originalSentence": "fstatSync(fd[, options])`\n\n<!",
    "position": 2616,
    "id": "sentence_2616"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2617,
    "id": "sentence_2617"
  },
  {
    "type": "sentence",
    "content": "1.95\nchanges:\n  - version: v10.",
    "originalSentence": "1.95\nchanges:\n  - version: v10.",
    "position": 2618,
    "id": "sentence_2618"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 2619,
    "id": "sentence_2619"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 2620,
    "id": "sentence_2620"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 2621,
    "id": "sentence_2621"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2622,
    "id": "sentence_2622"
  },
  {
    "type": "sentence",
    "content": "* Returns: {fs.",
    "originalSentence": "* Returns: {fs.",
    "position": 2623,
    "id": "sentence_2623"
  },
  {
    "type": "sentence",
    "content": "Stats}\n\nRetrieves the {fs.",
    "originalSentence": "Stats}\n\nRetrieves the {fs.",
    "position": 2624,
    "id": "sentence_2624"
  },
  {
    "type": "sentence",
    "content": "Stats} for the file descriptor.",
    "originalSentence": "Stats} for the file descriptor.",
    "position": 2625,
    "id": "sentence_2625"
  },
  {
    "type": "sentence",
    "content": "See the POSIX fstat(2) documentation for more detail.",
    "originalSentence": "See the POSIX fstat(2) documentation for more detail.",
    "position": 2626,
    "id": "sentence_2626"
  },
  {
    "type": "sentence",
    "content": "fsyncSync(fd)`\n\n<!",
    "originalSentence": "fsyncSync(fd)`\n\n<!",
    "position": 2627,
    "id": "sentence_2627"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2628,
    "id": "sentence_2628"
  },
  {
    "type": "sentence",
    "content": "1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "originalSentence": "1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "position": 2629,
    "id": "sentence_2629"
  },
  {
    "type": "sentence",
    "content": "The specific implementation is operating system and device specific.",
    "originalSentence": "The specific implementation is operating system and device specific.",
    "position": 2630,
    "id": "sentence_2630"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "Refer to the POSIX fsync(2) documentation for more detail.",
    "position": 2631,
    "id": "sentence_2631"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2632,
    "id": "sentence_2632"
  },
  {
    "type": "sentence",
    "content": "ftruncateSync(fd[, len])`\n\n<!",
    "originalSentence": "ftruncateSync(fd[, len])`\n\n<!",
    "position": 2633,
    "id": "sentence_2633"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2634,
    "id": "sentence_2634"
  },
  {
    "type": "sentence",
    "content": "8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor.",
    "originalSentence": "8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor.",
    "position": 2635,
    "id": "sentence_2635"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2636,
    "id": "sentence_2636"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2637,
    "id": "sentence_2637"
  },
  {
    "type": "sentence",
    "content": "ftruncate()`][].",
    "originalSentence": "ftruncate()`][].",
    "position": 2638,
    "id": "sentence_2638"
  },
  {
    "type": "sentence",
    "content": "futimesSync(fd, atime, mtime)`\n\n<!",
    "originalSentence": "futimesSync(fd, atime, mtime)`\n\n<!",
    "position": 2639,
    "id": "sentence_2639"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2640,
    "id": "sentence_2640"
  },
  {
    "type": "sentence",
    "content": "4.2\nchanges:\n  - version: v4.",
    "originalSentence": "4.2\nchanges:\n  - version: v4.",
    "position": 2641,
    "id": "sentence_2641"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 2642,
    "id": "sentence_2642"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs.",
    "position": 2643,
    "id": "sentence_2643"
  },
  {
    "type": "sentence",
    "content": "futimes()`][].",
    "originalSentence": "futimes()`][].",
    "position": 2644,
    "id": "sentence_2644"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2645,
    "id": "sentence_2645"
  },
  {
    "type": "sentence",
    "content": "globSync(pattern[, options])`\n\n<!",
    "originalSentence": "globSync(pattern[, options])`\n\n<!",
    "position": 2646,
    "id": "sentence_2646"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v22.",
    "originalSentence": "-- YAML\nadded: v22.",
    "position": 2647,
    "id": "sentence_2647"
  },
  {
    "type": "sentence",
    "content": "0.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v24.",
    "position": 2648,
    "id": "sentence_2648"
  },
  {
    "type": "sentence",
    "content": "1.0\n      - v22.",
    "originalSentence": "1.0\n      - v22.",
    "position": 2649,
    "id": "sentence_2649"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "position": 2650,
    "id": "sentence_2650"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v24.",
    "originalSentence": "- version:\n      - v24.",
    "position": 2651,
    "id": "sentence_2651"
  },
  {
    "type": "sentence",
    "content": "0.0\n      - v22.",
    "originalSentence": "0.0\n      - v22.",
    "position": 2652,
    "id": "sentence_2652"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 2653,
    "id": "sentence_2653"
  },
  {
    "type": "sentence",
    "content": "- version:\n    - v23.",
    "originalSentence": "- version:\n    - v23.",
    "position": 2654,
    "id": "sentence_2654"
  },
  {
    "type": "sentence",
    "content": "7.0\n    - v22.",
    "originalSentence": "7.0\n    - v22.",
    "position": 2655,
    "id": "sentence_2655"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "position": 2656,
    "id": "sentence_2656"
  },
  {
    "type": "sentence",
    "content": "- version: v22.",
    "originalSentence": "- version: v22.",
    "position": 2657,
    "id": "sentence_2657"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "position": 2658,
    "id": "sentence_2658"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "originalSentence": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "position": 2659,
    "id": "sentence_2659"
  },
  {
    "type": "sentence",
    "content": "**Default:** `process.",
    "originalSentence": "**Default:** `process.",
    "position": 2660,
    "id": "sentence_2660"
  },
  {
    "type": "sentence",
    "content": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "originalSentence": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "position": 2661,
    "id": "sentence_2661"
  },
  {
    "type": "sentence",
    "content": "If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "originalSentence": "If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "position": 2662,
    "id": "sentence_2662"
  },
  {
    "type": "sentence",
    "content": "**Default:** `undefined`.",
    "originalSentence": "**Default:** `undefined`.",
    "position": 2663,
    "id": "sentence_2663"
  },
  {
    "type": "sentence",
    "content": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "originalSentence": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "position": 2664,
    "id": "sentence_2664"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2665,
    "id": "sentence_2665"
  },
  {
    "type": "sentence",
    "content": "* Returns: {string\\[]} paths of files that match the pattern.",
    "originalSentence": "* Returns: {string\\[]} paths of files that match the pattern.",
    "position": 2666,
    "id": "sentence_2666"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { globSync } from 'node:fs';\n\nconsole.",
    "originalSentence": "```mjs\nimport { globSync } from 'node:fs';\n\nconsole.",
    "position": 2667,
    "id": "sentence_2667"
  },
  {
    "type": "sentence",
    "content": "log(globSync('**/*.",
    "originalSentence": "log(globSync('**/*.",
    "position": 2668,
    "id": "sentence_2668"
  },
  {
    "type": "sentence",
    "content": "js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole.",
    "originalSentence": "js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole.",
    "position": 2669,
    "id": "sentence_2669"
  },
  {
    "type": "sentence",
    "content": "log(globSync('**/*.",
    "originalSentence": "log(globSync('**/*.",
    "position": 2670,
    "id": "sentence_2670"
  },
  {
    "type": "sentence",
    "content": "js'));\n```\n\n### `fs.",
    "originalSentence": "js'));\n```\n\n### `fs.",
    "position": 2671,
    "id": "sentence_2671"
  },
  {
    "type": "sentence",
    "content": "lchmodSync(path, mode)`\n\n<!",
    "originalSentence": "lchmodSync(path, mode)`\n\n<!",
    "position": 2672,
    "id": "sentence_2672"
  },
  {
    "type": "sentence",
    "content": "-- YAML\ndeprecated: v0.",
    "originalSentence": "-- YAML\ndeprecated: v0.",
    "position": 2673,
    "id": "sentence_2673"
  },
  {
    "type": "sentence",
    "content": "4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link.",
    "originalSentence": "4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link.",
    "position": 2674,
    "id": "sentence_2674"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2675,
    "id": "sentence_2675"
  },
  {
    "type": "sentence",
    "content": "This method is only implemented on macOS.",
    "originalSentence": "This method is only implemented on macOS.",
    "position": 2676,
    "id": "sentence_2676"
  },
  {
    "type": "sentence",
    "content": "See the POSIX lchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX lchmod(2) documentation for more detail.",
    "position": 2677,
    "id": "sentence_2677"
  },
  {
    "type": "sentence",
    "content": "lchownSync(path, uid, gid)`\n\n<!",
    "originalSentence": "lchownSync(path, uid, gid)`\n\n<!",
    "position": 2678,
    "id": "sentence_2678"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nchanges:\n  - version: v10.",
    "originalSentence": "-- YAML\nchanges:\n  - version: v10.",
    "position": 2679,
    "id": "sentence_2679"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "position": 2680,
    "id": "sentence_2680"
  },
  {
    "type": "sentence",
    "content": "- version: v0.",
    "originalSentence": "- version: v0.",
    "position": 2681,
    "id": "sentence_2681"
  },
  {
    "type": "sentence",
    "content": "4.7\n    description: Documentation-only deprecation.",
    "originalSentence": "4.7\n    description: Documentation-only deprecation.",
    "position": 2682,
    "id": "sentence_2682"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id.",
    "position": 2683,
    "id": "sentence_2683"
  },
  {
    "type": "sentence",
    "content": "* `gid` {integer} The file's new group's group id.",
    "originalSentence": "* `gid` {integer} The file's new group's group id.",
    "position": 2684,
    "id": "sentence_2684"
  },
  {
    "type": "sentence",
    "content": "Set the owner for the path.",
    "originalSentence": "Set the owner for the path.",
    "position": 2685,
    "id": "sentence_2685"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2686,
    "id": "sentence_2686"
  },
  {
    "type": "sentence",
    "content": "See the POSIX lchown(2) documentation for more details.",
    "originalSentence": "See the POSIX lchown(2) documentation for more details.",
    "position": 2687,
    "id": "sentence_2687"
  },
  {
    "type": "sentence",
    "content": "lutimesSync(path, atime, mtime)`\n\n<!",
    "originalSentence": "lutimesSync(path, atime, mtime)`\n\n<!",
    "position": 2688,
    "id": "sentence_2688"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 2689,
    "id": "sentence_2689"
  },
  {
    "type": "sentence",
    "content": "5.0\n  - v12.",
    "originalSentence": "5.0\n  - v12.",
    "position": 2690,
    "id": "sentence_2690"
  },
  {
    "type": "sentence",
    "content": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`.",
    "originalSentence": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`.",
    "position": 2691,
    "id": "sentence_2691"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails.",
    "originalSentence": "Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails.",
    "position": 2692,
    "id": "sentence_2692"
  },
  {
    "type": "sentence",
    "content": "This is the synchronous version of [`fs.",
    "originalSentence": "This is the synchronous version of [`fs.",
    "position": 2693,
    "id": "sentence_2693"
  },
  {
    "type": "sentence",
    "content": "lutimes()`][].",
    "originalSentence": "lutimes()`][].",
    "position": 2694,
    "id": "sentence_2694"
  },
  {
    "type": "sentence",
    "content": "linkSync(existingPath, newPath)`\n\n<!",
    "originalSentence": "linkSync(existingPath, newPath)`\n\n<!",
    "position": 2695,
    "id": "sentence_2695"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2696,
    "id": "sentence_2696"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v7.",
    "originalSentence": "1.31\nchanges:\n  - version: v7.",
    "position": 2697,
    "id": "sentence_2697"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "position": 2698,
    "id": "sentence_2698"
  },
  {
    "type": "sentence",
    "content": "Support is currently\n                 still *experimental*.",
    "originalSentence": "Support is currently\n                 still *experimental*.",
    "position": 2699,
    "id": "sentence_2699"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "originalSentence": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "position": 2700,
    "id": "sentence_2700"
  },
  {
    "type": "sentence",
    "content": "See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "See the POSIX\nlink(2) documentation for more detail.",
    "position": 2701,
    "id": "sentence_2701"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2702,
    "id": "sentence_2702"
  },
  {
    "type": "sentence",
    "content": "lstatSync(path[, options])`\n\n<!",
    "originalSentence": "lstatSync(path[, options])`\n\n<!",
    "position": 2703,
    "id": "sentence_2703"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2704,
    "id": "sentence_2704"
  },
  {
    "type": "sentence",
    "content": "1.30\nchanges:\n  - version:\n    - v15.",
    "originalSentence": "1.30\nchanges:\n  - version:\n    - v15.",
    "position": 2705,
    "id": "sentence_2705"
  },
  {
    "type": "sentence",
    "content": "3.0\n    - v14.",
    "originalSentence": "3.0\n    - v14.",
    "position": 2706,
    "id": "sentence_2706"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "position": 2707,
    "id": "sentence_2707"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2708,
    "id": "sentence_2708"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 2709,
    "id": "sentence_2709"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2710,
    "id": "sentence_2710"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2711,
    "id": "sentence_2711"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 2712,
    "id": "sentence_2712"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 2713,
    "id": "sentence_2713"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2714,
    "id": "sentence_2714"
  },
  {
    "type": "sentence",
    "content": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "originalSentence": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "position": 2715,
    "id": "sentence_2715"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 2716,
    "id": "sentence_2716"
  },
  {
    "type": "sentence",
    "content": "* Returns: {fs.",
    "originalSentence": "* Returns: {fs.",
    "position": 2717,
    "id": "sentence_2717"
  },
  {
    "type": "sentence",
    "content": "Stats}\n\nRetrieves the {fs.",
    "originalSentence": "Stats}\n\nRetrieves the {fs.",
    "position": 2718,
    "id": "sentence_2718"
  },
  {
    "type": "sentence",
    "content": "Stats} for the symbolic link referred to by `path`.",
    "originalSentence": "Stats} for the symbolic link referred to by `path`.",
    "position": 2719,
    "id": "sentence_2719"
  },
  {
    "type": "sentence",
    "content": "See the POSIX lstat(2) documentation for more details.",
    "originalSentence": "See the POSIX lstat(2) documentation for more details.",
    "position": 2720,
    "id": "sentence_2720"
  },
  {
    "type": "sentence",
    "content": "mkdirSync(path[, options])`\n\n<!",
    "originalSentence": "mkdirSync(path[, options])`\n\n<!",
    "position": 2721,
    "id": "sentence_2721"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2722,
    "id": "sentence_2722"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version:\n     - v13.",
    "originalSentence": "1.21\nchanges:\n  - version:\n     - v13.",
    "position": 2723,
    "id": "sentence_2723"
  },
  {
    "type": "sentence",
    "content": "11.0\n     - v12.",
    "originalSentence": "11.0\n     - v12.",
    "position": 2724,
    "id": "sentence_2724"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now.",
    "position": 2725,
    "id": "sentence_2725"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2726,
    "id": "sentence_2726"
  },
  {
    "type": "sentence",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "position": 2727,
    "id": "sentence_2727"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2728,
    "id": "sentence_2728"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2729,
    "id": "sentence_2729"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "position": 2730,
    "id": "sentence_2730"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0o777`.",
    "originalSentence": "**Default:** `0o777`.",
    "position": 2731,
    "id": "sentence_2731"
  },
  {
    "type": "sentence",
    "content": "* Returns: {string|undefined}\n\nSynchronously creates a directory.",
    "originalSentence": "* Returns: {string|undefined}\n\nSynchronously creates a directory.",
    "position": 2732,
    "id": "sentence_2732"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`, or if `recursive` is\n`true`, the first directory path created.",
    "originalSentence": "Returns `undefined`, or if `recursive` is\n`true`, the first directory path created.",
    "position": 2733,
    "id": "sentence_2733"
  },
  {
    "type": "sentence",
    "content": "This is the synchronous version of [`fs.",
    "originalSentence": "This is the synchronous version of [`fs.",
    "position": 2734,
    "id": "sentence_2734"
  },
  {
    "type": "sentence",
    "content": "mkdir()`][].",
    "originalSentence": "mkdir()`][].",
    "position": 2735,
    "id": "sentence_2735"
  },
  {
    "type": "sentence",
    "content": "See the POSIX mkdir(2) documentation for more details.",
    "originalSentence": "See the POSIX mkdir(2) documentation for more details.",
    "position": 2736,
    "id": "sentence_2736"
  },
  {
    "type": "sentence",
    "content": "mkdtempSync(prefix[, options])`\n\n<!",
    "originalSentence": "mkdtempSync(prefix[, options])`\n\n<!",
    "position": 2737,
    "id": "sentence_2737"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v5.",
    "originalSentence": "-- YAML\nadded: v5.",
    "position": 2738,
    "id": "sentence_2738"
  },
  {
    "type": "sentence",
    "content": "10.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "10.0\nchanges:\n  - version:\n    - v20.",
    "position": 2739,
    "id": "sentence_2739"
  },
  {
    "type": "sentence",
    "content": "6.0\n    - v18.",
    "originalSentence": "6.0\n    - v18.",
    "position": 2740,
    "id": "sentence_2740"
  },
  {
    "type": "sentence",
    "content": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "originalSentence": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "position": 2741,
    "id": "sentence_2741"
  },
  {
    "type": "sentence",
    "content": "- version:\n      - v16.",
    "originalSentence": "- version:\n      - v16.",
    "position": 2742,
    "id": "sentence_2742"
  },
  {
    "type": "sentence",
    "content": "5.0\n      - v14.",
    "originalSentence": "5.0\n      - v14.",
    "position": 2743,
    "id": "sentence_2743"
  },
  {
    "type": "sentence",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "position": 2744,
    "id": "sentence_2744"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path.",
    "originalSentence": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path.",
    "position": 2745,
    "id": "sentence_2745"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2746,
    "id": "sentence_2746"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()`][].",
    "originalSentence": "mkdtemp()`][].",
    "position": 2747,
    "id": "sentence_2747"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 2748,
    "id": "sentence_2748"
  },
  {
    "type": "sentence",
    "content": "mkdtempDisposableSync(prefix[, options])`\n\n<!",
    "originalSentence": "mkdtempDisposableSync(prefix[, options])`\n\n<!",
    "position": 2749,
    "id": "sentence_2749"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v24.",
    "originalSentence": "-- YAML\nadded: v24.",
    "position": 2750,
    "id": "sentence_2750"
  },
  {
    "type": "sentence",
    "content": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory.",
    "originalSentence": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory.",
    "position": 2751,
    "id": "sentence_2751"
  },
  {
    "type": "sentence",
    "content": "* `remove` {Function} A function which removes the created directory.",
    "originalSentence": "* `remove` {Function} A function which removes the created directory.",
    "position": 2752,
    "id": "sentence_2752"
  },
  {
    "type": "sentence",
    "content": "* `[Symbol.",
    "originalSentence": "* `[Symbol.",
    "position": 2753,
    "id": "sentence_2753"
  },
  {
    "type": "sentence",
    "content": "dispose]` {Function} The same as `remove`.",
    "originalSentence": "dispose]` {Function} The same as `remove`.",
    "position": 2754,
    "id": "sentence_2754"
  },
  {
    "type": "sentence",
    "content": "Returns a disposable object whose `path` property holds the created directory\npath.",
    "originalSentence": "Returns a disposable object whose `path` property holds the created directory\npath.",
    "position": 2755,
    "id": "sentence_2755"
  },
  {
    "type": "sentence",
    "content": "When the object is disposed, the directory and its contents will be\nremoved if it still exists.",
    "originalSentence": "When the object is disposed, the directory and its contents will be\nremoved if it still exists.",
    "position": 2756,
    "id": "sentence_2756"
  },
  {
    "type": "sentence",
    "content": "If the directory cannot be deleted, disposal will\nthrow an error.",
    "originalSentence": "If the directory cannot be deleted, disposal will\nthrow an error.",
    "position": 2757,
    "id": "sentence_2757"
  },
  {
    "type": "sentence",
    "content": "The object has a `remove()` method which will perform the same\ntask.",
    "originalSentence": "The object has a `remove()` method which will perform the same\ntask.",
    "position": 2758,
    "id": "sentence_2758"
  },
  {
    "type": "sentence",
    "content": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs.",
    "originalSentence": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs.",
    "position": 2759,
    "id": "sentence_2759"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()`][].",
    "originalSentence": "mkdtemp()`][].",
    "position": 2760,
    "id": "sentence_2760"
  },
  {
    "type": "sentence",
    "content": "There is no callback-based version of this API because it is designed for use\nwith the `using` syntax.",
    "originalSentence": "There is no callback-based version of this API because it is designed for use\nwith the `using` syntax.",
    "position": 2761,
    "id": "sentence_2761"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 2762,
    "id": "sentence_2762"
  },
  {
    "type": "sentence",
    "content": "opendirSync(path[, options])`\n\n<!",
    "originalSentence": "opendirSync(path[, options])`\n\n<!",
    "position": 2763,
    "id": "sentence_2763"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 2764,
    "id": "sentence_2764"
  },
  {
    "type": "sentence",
    "content": "12.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "12.0\nchanges:\n  - version:\n    - v20.",
    "position": 2765,
    "id": "sentence_2765"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 2766,
    "id": "sentence_2766"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 2767,
    "id": "sentence_2767"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 2768,
    "id": "sentence_2768"
  },
  {
    "type": "sentence",
    "content": "1.0\n     - v12.",
    "originalSentence": "1.0\n     - v12.",
    "position": 2769,
    "id": "sentence_2769"
  },
  {
    "type": "sentence",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "position": 2770,
    "id": "sentence_2770"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "position": 2771,
    "id": "sentence_2771"
  },
  {
    "type": "sentence",
    "content": "Higher values lead to better\n    performance but higher memory usage.",
    "originalSentence": "Higher values lead to better\n    performance but higher memory usage.",
    "position": 2772,
    "id": "sentence_2772"
  },
  {
    "type": "sentence",
    "content": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs.",
    "originalSentence": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs.",
    "position": 2773,
    "id": "sentence_2773"
  },
  {
    "type": "sentence",
    "content": "Dir}\n\nSynchronously open a directory.",
    "originalSentence": "Dir}\n\nSynchronously open a directory.",
    "position": 2774,
    "id": "sentence_2774"
  },
  {
    "type": "sentence",
    "content": "See opendir(3).",
    "originalSentence": "See opendir(3).",
    "position": 2775,
    "id": "sentence_2775"
  },
  {
    "type": "sentence",
    "content": "Creates an {fs.",
    "originalSentence": "Creates an {fs.",
    "position": 2776,
    "id": "sentence_2776"
  },
  {
    "type": "sentence",
    "content": "Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 2777,
    "id": "sentence_2777"
  },
  {
    "type": "sentence",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 2778,
    "id": "sentence_2778"
  },
  {
    "type": "sentence",
    "content": "openSync(path[, flags[, mode]])`\n\n<!",
    "originalSentence": "openSync(path[, flags[, mode]])`\n\n<!",
    "position": 2779,
    "id": "sentence_2779"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2780,
    "id": "sentence_2780"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: v11.",
    "originalSentence": "1.21\nchanges:\n  - version: v11.",
    "position": 2781,
    "id": "sentence_2781"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "position": 2782,
    "id": "sentence_2782"
  },
  {
    "type": "sentence",
    "content": "- version: v9.",
    "originalSentence": "- version: v9.",
    "position": 2783,
    "id": "sentence_2783"
  },
  {
    "type": "sentence",
    "content": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "originalSentence": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "position": 2784,
    "id": "sentence_2784"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2785,
    "id": "sentence_2785"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2786,
    "id": "sentence_2786"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`.",
    "position": 2787,
    "id": "sentence_2787"
  },
  {
    "type": "sentence",
    "content": "See [support of file system `flags`][].",
    "originalSentence": "See [support of file system `flags`][].",
    "position": 2788,
    "id": "sentence_2788"
  },
  {
    "type": "sentence",
    "content": "* `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor.",
    "originalSentence": "* `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor.",
    "position": 2789,
    "id": "sentence_2789"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2790,
    "id": "sentence_2790"
  },
  {
    "type": "sentence",
    "content": "open()`][].",
    "originalSentence": "open()`][].",
    "position": 2791,
    "id": "sentence_2791"
  },
  {
    "type": "sentence",
    "content": "readdirSync(path[, options])`\n\n<!",
    "originalSentence": "readdirSync(path[, options])`\n\n<!",
    "position": 2792,
    "id": "sentence_2792"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2793,
    "id": "sentence_2793"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "1.21\nchanges:\n  - version:\n    - v20.",
    "position": 2794,
    "id": "sentence_2794"
  },
  {
    "type": "sentence",
    "content": "1.0\n    - v18.",
    "originalSentence": "1.0\n    - v18.",
    "position": 2795,
    "id": "sentence_2795"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 2796,
    "id": "sentence_2796"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2797,
    "id": "sentence_2797"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "position": 2798,
    "id": "sentence_2798"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2799,
    "id": "sentence_2799"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2800,
    "id": "sentence_2800"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "position": 2801,
    "id": "sentence_2801"
  },
  {
    "type": "sentence",
    "content": "In recursive mode, it will list all files, sub files, and\n    directories.",
    "originalSentence": "In recursive mode, it will list all files, sub files, and\n    directories.",
    "position": 2802,
    "id": "sentence_2802"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2803,
    "id": "sentence_2803"
  },
  {
    "type": "sentence",
    "content": "* Returns: {string\\[]|Buffer\\[]|fs.",
    "originalSentence": "* Returns: {string\\[]|Buffer\\[]|fs.",
    "position": 2804,
    "id": "sentence_2804"
  },
  {
    "type": "sentence",
    "content": "Dirent\\[]}\n\nReads the contents of the directory.",
    "originalSentence": "Dirent\\[]}\n\nReads the contents of the directory.",
    "position": 2805,
    "id": "sentence_2805"
  },
  {
    "type": "sentence",
    "content": "See the POSIX readdir(3) documentation for more details.",
    "originalSentence": "See the POSIX readdir(3) documentation for more details.",
    "position": 2806,
    "id": "sentence_2806"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned.",
    "position": 2807,
    "id": "sentence_2807"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "position": 2808,
    "id": "sentence_2808"
  },
  {
    "type": "sentence",
    "content": "If `options.",
    "originalSentence": "If `options.",
    "position": 2809,
    "id": "sentence_2809"
  },
  {
    "type": "sentence",
    "content": "withFileTypes` is set to `true`, the result will contain\n{fs.",
    "originalSentence": "withFileTypes` is set to `true`, the result will contain\n{fs.",
    "position": 2810,
    "id": "sentence_2810"
  },
  {
    "type": "sentence",
    "content": "Dirent} objects.",
    "originalSentence": "Dirent} objects.",
    "position": 2811,
    "id": "sentence_2811"
  },
  {
    "type": "sentence",
    "content": "readFileSync(path[, options])`\n\n<!",
    "originalSentence": "readFileSync(path[, options])`\n\n<!",
    "position": 2812,
    "id": "sentence_2812"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2813,
    "id": "sentence_2813"
  },
  {
    "type": "sentence",
    "content": "1.8\nchanges:\n  - version: v7.",
    "originalSentence": "1.8\nchanges:\n  - version: v7.",
    "position": 2814,
    "id": "sentence_2814"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2815,
    "id": "sentence_2815"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 2816,
    "id": "sentence_2816"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "position": 2817,
    "id": "sentence_2817"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 2818,
    "id": "sentence_2818"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'r'`.",
    "originalSentence": "**Default:** `'r'`.",
    "position": 2819,
    "id": "sentence_2819"
  },
  {
    "type": "sentence",
    "content": "* Returns: {string|Buffer}\n\nReturns the contents of the `path`.",
    "originalSentence": "* Returns: {string|Buffer}\n\nReturns the contents of the `path`.",
    "position": 2820,
    "id": "sentence_2820"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2821,
    "id": "sentence_2821"
  },
  {
    "type": "sentence",
    "content": "readFile()`][].",
    "originalSentence": "readFile()`][].",
    "position": 2822,
    "id": "sentence_2822"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` option is specified then this function returns a\nstring.",
    "originalSentence": "If the `encoding` option is specified then this function returns a\nstring.",
    "position": 2823,
    "id": "sentence_2823"
  },
  {
    "type": "sentence",
    "content": "Otherwise it returns a buffer.",
    "originalSentence": "Otherwise it returns a buffer.",
    "position": 2824,
    "id": "sentence_2824"
  },
  {
    "type": "sentence",
    "content": "Similar to [`fs.",
    "originalSentence": "Similar to [`fs.",
    "position": 2825,
    "id": "sentence_2825"
  },
  {
    "type": "sentence",
    "content": "readFile()`][], when the path is a directory, the behavior of\n`fs.",
    "originalSentence": "readFile()`][], when the path is a directory, the behavior of\n`fs.",
    "position": 2826,
    "id": "sentence_2826"
  },
  {
    "type": "sentence",
    "content": "readFileSync()` is platform-specific.",
    "originalSentence": "readFileSync()` is platform-specific.",
    "position": 2827,
    "id": "sentence_2827"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs.",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs.",
    "position": 2828,
    "id": "sentence_2828"
  },
  {
    "type": "sentence",
    "content": "readlinkSync(path[, options])`\n\n<!",
    "originalSentence": "readlinkSync(path[, options])`\n\n<!",
    "position": 2829,
    "id": "sentence_2829"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2830,
    "id": "sentence_2830"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v7.",
    "originalSentence": "1.31\nchanges:\n  - version: v7.",
    "position": 2831,
    "id": "sentence_2831"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2832,
    "id": "sentence_2832"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value.",
    "position": 2833,
    "id": "sentence_2833"
  },
  {
    "type": "sentence",
    "content": "See the POSIX readlink(2) documentation for more details.",
    "originalSentence": "See the POSIX readlink(2) documentation for more details.",
    "position": 2834,
    "id": "sentence_2834"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "position": 2835,
    "id": "sentence_2835"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "position": 2836,
    "id": "sentence_2836"
  },
  {
    "type": "sentence",
    "content": "readSync(fd, buffer, offset, length[, position])`\n\n<!",
    "originalSentence": "readSync(fd, buffer, offset, length[, position])`\n\n<!",
    "position": 2837,
    "id": "sentence_2837"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2838,
    "id": "sentence_2838"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: v10.",
    "originalSentence": "1.21\nchanges:\n  - version: v10.",
    "position": 2839,
    "id": "sentence_2839"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 2840,
    "id": "sentence_2840"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 2841,
    "id": "sentence_2841"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "position": 2842,
    "id": "sentence_2842"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "position": 2843,
    "id": "sentence_2843"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2844,
    "id": "sentence_2844"
  },
  {
    "type": "sentence",
    "content": "read()`][].",
    "originalSentence": "read()`][].",
    "position": 2845,
    "id": "sentence_2845"
  },
  {
    "type": "sentence",
    "content": "readSync(fd, buffer[, options])`\n\n<!",
    "originalSentence": "readSync(fd, buffer[, options])`\n\n<!",
    "position": 2846,
    "id": "sentence_2846"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13.",
    "position": 2847,
    "id": "sentence_2847"
  },
  {
    "type": "sentence",
    "content": "13.0\n - v12.",
    "originalSentence": "13.0\n - v12.",
    "position": 2848,
    "id": "sentence_2848"
  },
  {
    "type": "sentence",
    "content": "17.0\nchanges:\n  - version:\n     - v13.",
    "originalSentence": "17.0\nchanges:\n  - version:\n     - v13.",
    "position": 2849,
    "id": "sentence_2849"
  },
  {
    "type": "sentence",
    "content": "13.0\n     - v12.",
    "originalSentence": "13.0\n     - v12.",
    "position": 2850,
    "id": "sentence_2850"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional.",
    "position": 2851,
    "id": "sentence_2851"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 2852,
    "id": "sentence_2852"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "position": 2853,
    "id": "sentence_2853"
  },
  {
    "type": "sentence",
    "content": "Similar to the above `fs.",
    "originalSentence": "Similar to the above `fs.",
    "position": 2854,
    "id": "sentence_2854"
  },
  {
    "type": "sentence",
    "content": "readSync` function, this version takes an optional `options` object.",
    "originalSentence": "readSync` function, this version takes an optional `options` object.",
    "position": 2855,
    "id": "sentence_2855"
  },
  {
    "type": "sentence",
    "content": "If no `options` object is specified, it will default with the above values.",
    "originalSentence": "If no `options` object is specified, it will default with the above values.",
    "position": 2856,
    "id": "sentence_2856"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2857,
    "id": "sentence_2857"
  },
  {
    "type": "sentence",
    "content": "read()`][].",
    "originalSentence": "read()`][].",
    "position": 2858,
    "id": "sentence_2858"
  },
  {
    "type": "sentence",
    "content": "readvSync(fd, buffers[, position])`\n\n<!",
    "originalSentence": "readvSync(fd, buffers[, position])`\n\n<!",
    "position": 2859,
    "id": "sentence_2859"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13.",
    "position": 2860,
    "id": "sentence_2860"
  },
  {
    "type": "sentence",
    "content": "13.0\n - v12.",
    "originalSentence": "13.0\n - v12.",
    "position": 2861,
    "id": "sentence_2861"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read.",
    "position": 2862,
    "id": "sentence_2862"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2863,
    "id": "sentence_2863"
  },
  {
    "type": "sentence",
    "content": "readv()`][].",
    "originalSentence": "readv()`][].",
    "position": 2864,
    "id": "sentence_2864"
  },
  {
    "type": "sentence",
    "content": "realpathSync(path[, options])`\n\n<!",
    "originalSentence": "realpathSync(path[, options])`\n\n<!",
    "position": 2865,
    "id": "sentence_2865"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2866,
    "id": "sentence_2866"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v8.",
    "originalSentence": "1.31\nchanges:\n  - version: v8.",
    "position": 2867,
    "id": "sentence_2867"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "position": 2868,
    "id": "sentence_2868"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2869,
    "id": "sentence_2869"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 2870,
    "id": "sentence_2870"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 2871,
    "id": "sentence_2871"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows.",
    "position": 2872,
    "id": "sentence_2872"
  },
  {
    "type": "sentence",
    "content": "- version: v6.",
    "originalSentence": "- version: v6.",
    "position": 2873,
    "id": "sentence_2873"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "position": 2874,
    "id": "sentence_2874"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname.",
    "position": 2875,
    "id": "sentence_2875"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2876,
    "id": "sentence_2876"
  },
  {
    "type": "sentence",
    "content": "realpath()`][].",
    "originalSentence": "realpath()`][].",
    "position": 2877,
    "id": "sentence_2877"
  },
  {
    "type": "sentence",
    "content": "realpathSync.",
    "originalSentence": "realpathSync.",
    "position": 2878,
    "id": "sentence_2878"
  },
  {
    "type": "sentence",
    "content": "native(path[, options])`\n\n<!",
    "originalSentence": "native(path[, options])`\n\n<!",
    "position": 2879,
    "id": "sentence_2879"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v9.",
    "originalSentence": "-- YAML\nadded: v9.",
    "position": 2880,
    "id": "sentence_2880"
  },
  {
    "type": "sentence",
    "content": "2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3).",
    "originalSentence": "2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3).",
    "position": 2881,
    "id": "sentence_2881"
  },
  {
    "type": "sentence",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 2882,
    "id": "sentence_2882"
  },
  {
    "type": "sentence",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned.",
    "position": 2883,
    "id": "sentence_2883"
  },
  {
    "type": "sentence",
    "content": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 2884,
    "id": "sentence_2884"
  },
  {
    "type": "sentence",
    "content": "On Linux, when Node.",
    "originalSentence": "On Linux, when Node.",
    "position": 2885,
    "id": "sentence_2885"
  },
  {
    "type": "sentence",
    "content": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "originalSentence": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "position": 2886,
    "id": "sentence_2886"
  },
  {
    "type": "sentence",
    "content": "Glibc does not have\nthis restriction.",
    "originalSentence": "Glibc does not have\nthis restriction.",
    "position": 2887,
    "id": "sentence_2887"
  },
  {
    "type": "sentence",
    "content": "renameSync(oldPath, newPath)`\n\n<!",
    "originalSentence": "renameSync(oldPath, newPath)`\n\n<!",
    "position": 2888,
    "id": "sentence_2888"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2889,
    "id": "sentence_2889"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: v7.",
    "originalSentence": "1.21\nchanges:\n  - version: v7.",
    "position": 2890,
    "id": "sentence_2890"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "position": 2891,
    "id": "sentence_2891"
  },
  {
    "type": "sentence",
    "content": "Support is currently still\n                 *experimental*.",
    "originalSentence": "Support is currently still\n                 *experimental*.",
    "position": 2892,
    "id": "sentence_2892"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`.",
    "originalSentence": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`.",
    "position": 2893,
    "id": "sentence_2893"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2894,
    "id": "sentence_2894"
  },
  {
    "type": "sentence",
    "content": "See the POSIX rename(2) documentation for more details.",
    "originalSentence": "See the POSIX rename(2) documentation for more details.",
    "position": 2895,
    "id": "sentence_2895"
  },
  {
    "type": "sentence",
    "content": "rmdirSync(path[, options])`\n\n<!",
    "originalSentence": "rmdirSync(path[, options])`\n\n<!",
    "position": 2896,
    "id": "sentence_2896"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2897,
    "id": "sentence_2897"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "originalSentence": "1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "position": 2898,
    "id": "sentence_2898"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 2899,
    "id": "sentence_2899"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 2900,
    "id": "sentence_2900"
  },
  {
    "type": "sentence",
    "content": "rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "originalSentence": "rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "position": 2901,
    "id": "sentence_2901"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 2902,
    "id": "sentence_2902"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 2903,
    "id": "sentence_2903"
  },
  {
    "type": "sentence",
    "content": "rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "originalSentence": "rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "position": 2904,
    "id": "sentence_2904"
  },
  {
    "type": "sentence",
    "content": "- version: v16.",
    "originalSentence": "- version: v16.",
    "position": 2905,
    "id": "sentence_2905"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "position": 2906,
    "id": "sentence_2906"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 2907,
    "id": "sentence_2907"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "position": 2908,
    "id": "sentence_2908"
  },
  {
    "type": "sentence",
    "content": "rmSync` instead.",
    "originalSentence": "rmSync` instead.",
    "position": 2909,
    "id": "sentence_2909"
  },
  {
    "type": "sentence",
    "content": "- version:\n     - v13.",
    "originalSentence": "- version:\n     - v13.",
    "position": 2910,
    "id": "sentence_2910"
  },
  {
    "type": "sentence",
    "content": "3.0\n     - v12.",
    "originalSentence": "3.0\n     - v12.",
    "position": 2911,
    "id": "sentence_2911"
  },
  {
    "type": "sentence",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "position": 2912,
    "id": "sentence_2912"
  },
  {
    "type": "sentence",
    "content": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "originalSentence": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "position": 2913,
    "id": "sentence_2913"
  },
  {
    "type": "sentence",
    "content": "The\n                 `retryDelay` option is now supported.",
    "originalSentence": "The\n                 `retryDelay` option is now supported.",
    "position": 2914,
    "id": "sentence_2914"
  },
  {
    "type": "sentence",
    "content": "`ENFILE` errors are now\n                 retried.",
    "originalSentence": "`ENFILE` errors are now\n                 retried.",
    "position": 2915,
    "id": "sentence_2915"
  },
  {
    "type": "sentence",
    "content": "- version: v12.",
    "originalSentence": "- version: v12.",
    "position": 2916,
    "id": "sentence_2916"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "position": 2917,
    "id": "sentence_2917"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2918,
    "id": "sentence_2918"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 2919,
    "id": "sentence_2919"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "position": 2920,
    "id": "sentence_2920"
  },
  {
    "type": "sentence",
    "content": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "originalSentence": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "position": 2921,
    "id": "sentence_2921"
  },
  {
    "type": "sentence",
    "content": "The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 2922,
    "id": "sentence_2922"
  },
  {
    "type": "sentence",
    "content": "Synchronous rmdir(2).",
    "originalSentence": "Synchronous rmdir(2).",
    "position": 2923,
    "id": "sentence_2923"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2924,
    "id": "sentence_2924"
  },
  {
    "type": "sentence",
    "content": "rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX.",
    "originalSentence": "rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX.",
    "position": 2925,
    "id": "sentence_2925"
  },
  {
    "type": "sentence",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "position": 2926,
    "id": "sentence_2926"
  },
  {
    "type": "sentence",
    "content": "rmSync()`][]\nwith options `{ recursive: true, force: true }`.",
    "originalSentence": "rmSync()`][]\nwith options `{ recursive: true, force: true }`.",
    "position": 2927,
    "id": "sentence_2927"
  },
  {
    "type": "sentence",
    "content": "rmSync(path[, options])`\n\n<!",
    "originalSentence": "rmSync(path[, options])`\n\n<!",
    "position": 2928,
    "id": "sentence_2928"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v14.",
    "originalSentence": "-- YAML\nadded: v14.",
    "position": 2929,
    "id": "sentence_2929"
  },
  {
    "type": "sentence",
    "content": "14.0\nchanges:\n  - version:\n      - v17.",
    "originalSentence": "14.0\nchanges:\n  - version:\n      - v17.",
    "position": 2930,
    "id": "sentence_2930"
  },
  {
    "type": "sentence",
    "content": "3.0\n      - v16.",
    "originalSentence": "3.0\n      - v16.",
    "position": 2931,
    "id": "sentence_2931"
  },
  {
    "type": "sentence",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2932,
    "id": "sentence_2932"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "position": 2933,
    "id": "sentence_2933"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2934,
    "id": "sentence_2934"
  },
  {
    "type": "sentence",
    "content": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "originalSentence": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "position": 2935,
    "id": "sentence_2935"
  },
  {
    "type": "sentence",
    "content": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "originalSentence": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "position": 2936,
    "id": "sentence_2936"
  },
  {
    "type": "sentence",
    "content": "This option\n    represents the number of retries.",
    "originalSentence": "This option\n    represents the number of retries.",
    "position": 2937,
    "id": "sentence_2937"
  },
  {
    "type": "sentence",
    "content": "This option is ignored if the `recursive`\n    option is not `true`.",
    "originalSentence": "This option is ignored if the `recursive`\n    option is not `true`.",
    "position": 2938,
    "id": "sentence_2938"
  },
  {
    "type": "sentence",
    "content": "**Default:** `0`.",
    "originalSentence": "**Default:** `0`.",
    "position": 2939,
    "id": "sentence_2939"
  },
  {
    "type": "sentence",
    "content": "* `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "originalSentence": "* `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "position": 2940,
    "id": "sentence_2940"
  },
  {
    "type": "sentence",
    "content": "In\n    recursive mode operations are retried on failure.",
    "originalSentence": "In\n    recursive mode operations are retried on failure.",
    "position": 2941,
    "id": "sentence_2941"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2942,
    "id": "sentence_2942"
  },
  {
    "type": "sentence",
    "content": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "originalSentence": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "position": 2943,
    "id": "sentence_2943"
  },
  {
    "type": "sentence",
    "content": "This option is ignored if the `recursive` option is not `true`.",
    "originalSentence": "This option is ignored if the `recursive` option is not `true`.",
    "position": 2944,
    "id": "sentence_2944"
  },
  {
    "type": "sentence",
    "content": "**Default:** `100`.",
    "originalSentence": "**Default:** `100`.",
    "position": 2945,
    "id": "sentence_2945"
  },
  {
    "type": "sentence",
    "content": "Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "originalSentence": "Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "position": 2946,
    "id": "sentence_2946"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2947,
    "id": "sentence_2947"
  },
  {
    "type": "sentence",
    "content": "statSync(path[, options])`\n\n<!",
    "originalSentence": "statSync(path[, options])`\n\n<!",
    "position": 2948,
    "id": "sentence_2948"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2949,
    "id": "sentence_2949"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version:\n    - v15.",
    "originalSentence": "1.21\nchanges:\n  - version:\n    - v15.",
    "position": 2950,
    "id": "sentence_2950"
  },
  {
    "type": "sentence",
    "content": "3.0\n    - v14.",
    "originalSentence": "3.0\n    - v14.",
    "position": 2951,
    "id": "sentence_2951"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "position": 2952,
    "id": "sentence_2952"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 2953,
    "id": "sentence_2953"
  },
  {
    "type": "sentence",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 2954,
    "id": "sentence_2954"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2955,
    "id": "sentence_2955"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2956,
    "id": "sentence_2956"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 2957,
    "id": "sentence_2957"
  },
  {
    "type": "sentence",
    "content": "Stats} object should be `bigint`.",
    "originalSentence": "Stats} object should be `bigint`.",
    "position": 2958,
    "id": "sentence_2958"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2959,
    "id": "sentence_2959"
  },
  {
    "type": "sentence",
    "content": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "originalSentence": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "position": 2960,
    "id": "sentence_2960"
  },
  {
    "type": "sentence",
    "content": "**Default:** `true`.",
    "originalSentence": "**Default:** `true`.",
    "position": 2961,
    "id": "sentence_2961"
  },
  {
    "type": "sentence",
    "content": "* Returns: {fs.",
    "originalSentence": "* Returns: {fs.",
    "position": 2962,
    "id": "sentence_2962"
  },
  {
    "type": "sentence",
    "content": "Stats}\n\nRetrieves the {fs.",
    "originalSentence": "Stats}\n\nRetrieves the {fs.",
    "position": 2963,
    "id": "sentence_2963"
  },
  {
    "type": "sentence",
    "content": "Stats} for the path.",
    "originalSentence": "Stats} for the path.",
    "position": 2964,
    "id": "sentence_2964"
  },
  {
    "type": "sentence",
    "content": "statfsSync(path[, options])`\n\n<!",
    "originalSentence": "statfsSync(path[, options])`\n\n<!",
    "position": 2965,
    "id": "sentence_2965"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 2966,
    "id": "sentence_2966"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 2967,
    "id": "sentence_2967"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 2968,
    "id": "sentence_2968"
  },
  {
    "type": "sentence",
    "content": "StatFs} object should be `bigint`.",
    "originalSentence": "StatFs} object should be `bigint`.",
    "position": 2969,
    "id": "sentence_2969"
  },
  {
    "type": "sentence",
    "content": "**Default:** `false`.",
    "originalSentence": "**Default:** `false`.",
    "position": 2970,
    "id": "sentence_2970"
  },
  {
    "type": "sentence",
    "content": "* Returns: {fs.",
    "originalSentence": "* Returns: {fs.",
    "position": 2971,
    "id": "sentence_2971"
  },
  {
    "type": "sentence",
    "content": "StatFs}\n\nSynchronous statfs(2).",
    "originalSentence": "StatFs}\n\nSynchronous statfs(2).",
    "position": 2972,
    "id": "sentence_2972"
  },
  {
    "type": "sentence",
    "content": "Returns information about the mounted file system which\ncontains `path`.",
    "originalSentence": "Returns information about the mounted file system which\ncontains `path`.",
    "position": 2973,
    "id": "sentence_2973"
  },
  {
    "type": "sentence",
    "content": "In case of an error, the `err.",
    "originalSentence": "In case of an error, the `err.",
    "position": 2974,
    "id": "sentence_2974"
  },
  {
    "type": "sentence",
    "content": "code` will be one of [Common System Errors][].",
    "originalSentence": "code` will be one of [Common System Errors][].",
    "position": 2975,
    "id": "sentence_2975"
  },
  {
    "type": "sentence",
    "content": "symlinkSync(target, path[, type])`\n\n<!",
    "originalSentence": "symlinkSync(target, path[, type])`\n\n<!",
    "position": 2976,
    "id": "sentence_2976"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2977,
    "id": "sentence_2977"
  },
  {
    "type": "sentence",
    "content": "1.31\nchanges:\n  - version: v12.",
    "originalSentence": "1.31\nchanges:\n  - version: v12.",
    "position": 2978,
    "id": "sentence_2978"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "position": 2979,
    "id": "sentence_2979"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 2980,
    "id": "sentence_2980"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "position": 2981,
    "id": "sentence_2981"
  },
  {
    "type": "sentence",
    "content": "Support is currently still\n                 *experimental*.",
    "originalSentence": "Support is currently still\n                 *experimental*.",
    "position": 2982,
    "id": "sentence_2982"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`.",
    "originalSentence": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`.",
    "position": 2983,
    "id": "sentence_2983"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 2984,
    "id": "sentence_2984"
  },
  {
    "type": "sentence",
    "content": "symlink()`][].",
    "originalSentence": "symlink()`][].",
    "position": 2985,
    "id": "sentence_2985"
  },
  {
    "type": "sentence",
    "content": "truncateSync(path[, len])`\n\n<!",
    "originalSentence": "truncateSync(path[, len])`\n\n<!",
    "position": 2986,
    "id": "sentence_2986"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2987,
    "id": "sentence_2987"
  },
  {
    "type": "sentence",
    "content": "8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file.",
    "originalSentence": "8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file.",
    "position": 2988,
    "id": "sentence_2988"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2989,
    "id": "sentence_2989"
  },
  {
    "type": "sentence",
    "content": "A file descriptor can also be\npassed as the first argument.",
    "originalSentence": "A file descriptor can also be\npassed as the first argument.",
    "position": 2990,
    "id": "sentence_2990"
  },
  {
    "type": "sentence",
    "content": "In this case, `fs.",
    "originalSentence": "In this case, `fs.",
    "position": 2991,
    "id": "sentence_2991"
  },
  {
    "type": "sentence",
    "content": "ftruncateSync()` is called.",
    "originalSentence": "ftruncateSync()` is called.",
    "position": 2992,
    "id": "sentence_2992"
  },
  {
    "type": "sentence",
    "content": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "originalSentence": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "position": 2993,
    "id": "sentence_2993"
  },
  {
    "type": "sentence",
    "content": "unlinkSync(path)`\n\n<!",
    "originalSentence": "unlinkSync(path)`\n\n<!",
    "position": 2994,
    "id": "sentence_2994"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 2995,
    "id": "sentence_2995"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: v7.",
    "originalSentence": "1.21\nchanges:\n  - version: v7.",
    "position": 2996,
    "id": "sentence_2996"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 2997,
    "id": "sentence_2997"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2).",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2).",
    "position": 2998,
    "id": "sentence_2998"
  },
  {
    "type": "sentence",
    "content": "Returns `undefined`.",
    "originalSentence": "Returns `undefined`.",
    "position": 2999,
    "id": "sentence_2999"
  },
  {
    "type": "sentence",
    "content": "utimesSync(path, atime, mtime)`\n\n<!",
    "originalSentence": "utimesSync(path, atime, mtime)`\n\n<!",
    "position": 3000,
    "id": "sentence_3000"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3001,
    "id": "sentence_3001"
  },
  {
    "type": "sentence",
    "content": "4.2\nchanges:\n  - version: v8.",
    "originalSentence": "4.2\nchanges:\n  - version: v8.",
    "position": 3002,
    "id": "sentence_3002"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "position": 3003,
    "id": "sentence_3003"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 3004,
    "id": "sentence_3004"
  },
  {
    "type": "sentence",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 3005,
    "id": "sentence_3005"
  },
  {
    "type": "sentence",
    "content": "- version: v4.",
    "originalSentence": "- version: v4.",
    "position": 3006,
    "id": "sentence_3006"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 3007,
    "id": "sentence_3007"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`.",
    "position": 3008,
    "id": "sentence_3008"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 3009,
    "id": "sentence_3009"
  },
  {
    "type": "sentence",
    "content": "utimes()`][].",
    "originalSentence": "utimes()`][].",
    "position": 3010,
    "id": "sentence_3010"
  },
  {
    "type": "sentence",
    "content": "writeFileSync(file, data[, options])`\n\n<!",
    "originalSentence": "writeFileSync(file, data[, options])`\n\n<!",
    "position": 3011,
    "id": "sentence_3011"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3012,
    "id": "sentence_3012"
  },
  {
    "type": "sentence",
    "content": "1.29\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "1.29\nchanges:\n  - version:\n    - v21.",
    "position": 3013,
    "id": "sentence_3013"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v20.",
    "originalSentence": "0.0\n    - v20.",
    "position": 3014,
    "id": "sentence_3014"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "position": 3015,
    "id": "sentence_3015"
  },
  {
    "type": "sentence",
    "content": "- version: v19.",
    "originalSentence": "- version: v19.",
    "position": 3016,
    "id": "sentence_3016"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported.",
    "position": 3017,
    "id": "sentence_3017"
  },
  {
    "type": "sentence",
    "content": "- version: v17.",
    "originalSentence": "- version: v17.",
    "position": 3018,
    "id": "sentence_3018"
  },
  {
    "type": "sentence",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated.",
    "position": 3019,
    "id": "sentence_3019"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 3020,
    "id": "sentence_3020"
  },
  {
    "type": "sentence",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "position": 3021,
    "id": "sentence_3021"
  },
  {
    "type": "sentence",
    "content": "- version: v14.",
    "originalSentence": "- version: v14.",
    "position": 3022,
    "id": "sentence_3022"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 3023,
    "id": "sentence_3023"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 3024,
    "id": "sentence_3024"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 3025,
    "id": "sentence_3025"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 3026,
    "id": "sentence_3026"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "position": 3027,
    "id": "sentence_3027"
  },
  {
    "type": "sentence",
    "content": "- version: v5.",
    "originalSentence": "- version: v5.",
    "position": 3028,
    "id": "sentence_3028"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 3029,
    "id": "sentence_3029"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 3030,
    "id": "sentence_3030"
  },
  {
    "type": "sentence",
    "content": "**Default:** `'w'`.",
    "originalSentence": "**Default:** `'w'`.",
    "position": 3031,
    "id": "sentence_3031"
  },
  {
    "type": "sentence",
    "content": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "originalSentence": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "position": 3032,
    "id": "sentence_3032"
  },
  {
    "type": "sentence",
    "content": "fsyncSync()` is used to flush the data.",
    "originalSentence": "fsyncSync()` is used to flush the data.",
    "position": 3033,
    "id": "sentence_3033"
  },
  {
    "type": "sentence",
    "content": "* Returns: `undefined`.",
    "originalSentence": "* Returns: `undefined`.",
    "position": 3034,
    "id": "sentence_3034"
  },
  {
    "type": "sentence",
    "content": "The `mode` option only affects the newly created file.",
    "originalSentence": "The `mode` option only affects the newly created file.",
    "position": 3035,
    "id": "sentence_3035"
  },
  {
    "type": "sentence",
    "content": "open()`][]\nfor more details.",
    "originalSentence": "open()`][]\nfor more details.",
    "position": 3036,
    "id": "sentence_3036"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 3037,
    "id": "sentence_3037"
  },
  {
    "type": "sentence",
    "content": "writeFile()`][].",
    "originalSentence": "writeFile()`][].",
    "position": 3038,
    "id": "sentence_3038"
  },
  {
    "type": "sentence",
    "content": "writeSync(fd, buffer, offset[, length[, position]])`\n\n<!",
    "originalSentence": "writeSync(fd, buffer, offset[, length[, position]])`\n\n<!",
    "position": 3039,
    "id": "sentence_3039"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3040,
    "id": "sentence_3040"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version: v14.",
    "originalSentence": "1.21\nchanges:\n  - version: v14.",
    "position": 3041,
    "id": "sentence_3041"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 3042,
    "id": "sentence_3042"
  },
  {
    "type": "sentence",
    "content": "- version: v10.",
    "originalSentence": "- version: v10.",
    "position": 3043,
    "id": "sentence_3043"
  },
  {
    "type": "sentence",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 3044,
    "id": "sentence_3044"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 3045,
    "id": "sentence_3045"
  },
  {
    "type": "sentence",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "position": 3046,
    "id": "sentence_3046"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 3047,
    "id": "sentence_3047"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "position": 3048,
    "id": "sentence_3048"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "position": 3049,
    "id": "sentence_3049"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 3050,
    "id": "sentence_3050"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 3051,
    "id": "sentence_3051"
  },
  {
    "type": "sentence",
    "content": "write(fd, buffer...)",
    "originalSentence": "write(fd, buffer...)",
    "position": 3052,
    "id": "sentence_3052"
  },
  {
    "type": "sentence",
    "content": "writeSync(fd, buffer[, options])`\n\n<!",
    "originalSentence": "writeSync(fd, buffer[, options])`\n\n<!",
    "position": 3053,
    "id": "sentence_3053"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v18.",
    "originalSentence": "-- YAML\nadded:\n  - v18.",
    "position": 3054,
    "id": "sentence_3054"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v16.",
    "originalSentence": "3.0\n  - v16.",
    "position": 3055,
    "id": "sentence_3055"
  },
  {
    "type": "sentence",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 3056,
    "id": "sentence_3056"
  },
  {
    "type": "sentence",
    "content": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 3057,
    "id": "sentence_3057"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 3058,
    "id": "sentence_3058"
  },
  {
    "type": "sentence",
    "content": "write(fd, buffer...)",
    "originalSentence": "write(fd, buffer...)",
    "position": 3059,
    "id": "sentence_3059"
  },
  {
    "type": "sentence",
    "content": "writeSync(fd, string[, position[, encoding]])`\n\n<!",
    "originalSentence": "writeSync(fd, string[, position[, encoding]])`\n\n<!",
    "position": 3060,
    "id": "sentence_3060"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3061,
    "id": "sentence_3061"
  },
  {
    "type": "sentence",
    "content": "11.5\nchanges:\n  - version: v14.",
    "originalSentence": "11.5\nchanges:\n  - version: v14.",
    "position": 3062,
    "id": "sentence_3062"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 3063,
    "id": "sentence_3063"
  },
  {
    "type": "sentence",
    "content": "- version: v7.",
    "originalSentence": "- version: v7.",
    "position": 3064,
    "id": "sentence_3064"
  },
  {
    "type": "sentence",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "position": 3065,
    "id": "sentence_3065"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written.",
    "position": 3066,
    "id": "sentence_3066"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 3067,
    "id": "sentence_3067"
  },
  {
    "type": "sentence",
    "content": "write(fd, string...)",
    "originalSentence": "write(fd, string...)",
    "position": 3068,
    "id": "sentence_3068"
  },
  {
    "type": "sentence",
    "content": "writevSync(fd, buffers[, position])`\n\n<!",
    "originalSentence": "writevSync(fd, buffers[, position])`\n\n<!",
    "position": 3069,
    "id": "sentence_3069"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3070,
    "id": "sentence_3070"
  },
  {
    "type": "sentence",
    "content": "9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 3071,
    "id": "sentence_3071"
  },
  {
    "type": "sentence",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 3072,
    "id": "sentence_3072"
  },
  {
    "type": "sentence",
    "content": "writev()`][].",
    "originalSentence": "writev()`][].",
    "position": 3073,
    "id": "sentence_3073"
  },
  {
    "type": "sentence",
    "content": "## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous).",
    "originalSentence": "## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous).",
    "position": 3074,
    "id": "sentence_3074"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3075,
    "id": "sentence_3075"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3076,
    "id": "sentence_3076"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\nA class representing a directory stream.",
    "originalSentence": "12.0\n-->\n\nA class representing a directory stream.",
    "position": 3077,
    "id": "sentence_3077"
  },
  {
    "type": "sentence",
    "content": "Created by [`fs.",
    "originalSentence": "Created by [`fs.",
    "position": 3078,
    "id": "sentence_3078"
  },
  {
    "type": "sentence",
    "content": "opendir()`][], [`fs.",
    "originalSentence": "opendir()`][], [`fs.",
    "position": 3079,
    "id": "sentence_3079"
  },
  {
    "type": "sentence",
    "content": "opendirSync()`][], or\n[`fsPromises.",
    "originalSentence": "opendirSync()`][], or\n[`fsPromises.",
    "position": 3080,
    "id": "sentence_3080"
  },
  {
    "type": "sentence",
    "content": "opendir()`][].",
    "originalSentence": "opendir()`][].",
    "position": 3081,
    "id": "sentence_3081"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "originalSentence": "```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "position": 3082,
    "id": "sentence_3082"
  },
  {
    "type": "sentence",
    "content": "/');\n  for await (const dirent of dir)\n    console.",
    "originalSentence": "/');\n  for await (const dirent of dir)\n    console.",
    "position": 3083,
    "id": "sentence_3083"
  },
  {
    "type": "sentence",
    "content": "log(dirent.",
    "originalSentence": "log(dirent.",
    "position": 3084,
    "id": "sentence_3084"
  },
  {
    "type": "sentence",
    "content": "name);\n} catch (err) {\n  console.",
    "originalSentence": "name);\n} catch (err) {\n  console.",
    "position": 3085,
    "id": "sentence_3085"
  },
  {
    "type": "sentence",
    "content": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "originalSentence": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "position": 3086,
    "id": "sentence_3086"
  },
  {
    "type": "sentence",
    "content": "Dir} object will be automatically\nclosed after the iterator exits.",
    "originalSentence": "Dir} object will be automatically\nclosed after the iterator exits.",
    "position": 3087,
    "id": "sentence_3087"
  },
  {
    "type": "sentence",
    "content": "close()`\n\n<!",
    "originalSentence": "close()`\n\n<!",
    "position": 3088,
    "id": "sentence_3088"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3089,
    "id": "sentence_3089"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle.",
    "originalSentence": "12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle.",
    "position": 3090,
    "id": "sentence_3090"
  },
  {
    "type": "sentence",
    "content": "Subsequent reads will result in errors.",
    "originalSentence": "Subsequent reads will result in errors.",
    "position": 3091,
    "id": "sentence_3091"
  },
  {
    "type": "sentence",
    "content": "A promise is returned that will be fulfilled after the resource has been\nclosed.",
    "originalSentence": "A promise is returned that will be fulfilled after the resource has been\nclosed.",
    "position": 3092,
    "id": "sentence_3092"
  },
  {
    "type": "sentence",
    "content": "close(callback)`\n\n<!",
    "originalSentence": "close(callback)`\n\n<!",
    "position": 3093,
    "id": "sentence_3093"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3094,
    "id": "sentence_3094"
  },
  {
    "type": "sentence",
    "content": "12.0\nchanges:\n  - version: v18.",
    "originalSentence": "12.0\nchanges:\n  - version: v18.",
    "position": 3095,
    "id": "sentence_3095"
  },
  {
    "type": "sentence",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 3096,
    "id": "sentence_3096"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle.",
    "originalSentence": "-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle.",
    "position": 3097,
    "id": "sentence_3097"
  },
  {
    "type": "sentence",
    "content": "Subsequent reads will result in errors.",
    "originalSentence": "Subsequent reads will result in errors.",
    "position": 3098,
    "id": "sentence_3098"
  },
  {
    "type": "sentence",
    "content": "The `callback` will be called after the resource handle has been closed.",
    "originalSentence": "The `callback` will be called after the resource handle has been closed.",
    "position": 3099,
    "id": "sentence_3099"
  },
  {
    "type": "sentence",
    "content": "closeSync()`\n\n<!",
    "originalSentence": "closeSync()`\n\n<!",
    "position": 3100,
    "id": "sentence_3100"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3101,
    "id": "sentence_3101"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\nSynchronously close the directory's underlying resource handle.",
    "originalSentence": "12.0\n-->\n\nSynchronously close the directory's underlying resource handle.",
    "position": 3102,
    "id": "sentence_3102"
  },
  {
    "type": "sentence",
    "content": "Subsequent reads will result in errors.",
    "originalSentence": "Subsequent reads will result in errors.",
    "position": 3103,
    "id": "sentence_3103"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3104,
    "id": "sentence_3104"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs.",
    "originalSentence": "12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs.",
    "position": 3105,
    "id": "sentence_3105"
  },
  {
    "type": "sentence",
    "content": "opendir()`][],\n[`fs.",
    "originalSentence": "opendir()`][],\n[`fs.",
    "position": 3106,
    "id": "sentence_3106"
  },
  {
    "type": "sentence",
    "content": "opendirSync()`][], or [`fsPromises.",
    "originalSentence": "opendirSync()`][], or [`fsPromises.",
    "position": 3107,
    "id": "sentence_3107"
  },
  {
    "type": "sentence",
    "content": "opendir()`][].",
    "originalSentence": "opendir()`][].",
    "position": 3108,
    "id": "sentence_3108"
  },
  {
    "type": "sentence",
    "content": "read()`\n\n<!",
    "originalSentence": "read()`\n\n<!",
    "position": 3109,
    "id": "sentence_3109"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3110,
    "id": "sentence_3110"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs.",
    "originalSentence": "12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs.",
    "position": 3111,
    "id": "sentence_3111"
  },
  {
    "type": "sentence",
    "content": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "originalSentence": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "position": 3112,
    "id": "sentence_3112"
  },
  {
    "type": "sentence",
    "content": "A promise is returned that will be fulfilled with an {fs.",
    "originalSentence": "A promise is returned that will be fulfilled with an {fs.",
    "position": 3113,
    "id": "sentence_3113"
  },
  {
    "type": "sentence",
    "content": "Dirent}, or `null`\nif there are no more directory entries to read.",
    "originalSentence": "Dirent}, or `null`\nif there are no more directory entries to read.",
    "position": 3114,
    "id": "sentence_3114"
  },
  {
    "type": "sentence",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 3115,
    "id": "sentence_3115"
  },
  {
    "type": "sentence",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 3116,
    "id": "sentence_3116"
  },
  {
    "type": "sentence",
    "content": "read(callback)`\n\n<!",
    "originalSentence": "read(callback)`\n\n<!",
    "position": 3117,
    "id": "sentence_3117"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3118,
    "id": "sentence_3118"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs.",
    "originalSentence": "12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs.",
    "position": 3119,
    "id": "sentence_3119"
  },
  {
    "type": "sentence",
    "content": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "originalSentence": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "position": 3120,
    "id": "sentence_3120"
  },
  {
    "type": "sentence",
    "content": "After the read is completed, the `callback` will be called with an\n{fs.",
    "originalSentence": "After the read is completed, the `callback` will be called with an\n{fs.",
    "position": 3121,
    "id": "sentence_3121"
  },
  {
    "type": "sentence",
    "content": "Dirent}, or `null` if there are no more directory entries to read.",
    "originalSentence": "Dirent}, or `null` if there are no more directory entries to read.",
    "position": 3122,
    "id": "sentence_3122"
  },
  {
    "type": "sentence",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 3123,
    "id": "sentence_3123"
  },
  {
    "type": "sentence",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 3124,
    "id": "sentence_3124"
  },
  {
    "type": "sentence",
    "content": "readSync()`\n\n<!",
    "originalSentence": "readSync()`\n\n<!",
    "position": 3125,
    "id": "sentence_3125"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3126,
    "id": "sentence_3126"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "12.0\n-->\n\n* Returns: {fs.",
    "position": 3127,
    "id": "sentence_3127"
  },
  {
    "type": "sentence",
    "content": "Dirent|null}\n\nSynchronously read the next directory entry as an {fs.",
    "originalSentence": "Dirent|null}\n\nSynchronously read the next directory entry as an {fs.",
    "position": 3128,
    "id": "sentence_3128"
  },
  {
    "type": "sentence",
    "content": "See the\nPOSIX readdir(3) documentation for more detail.",
    "originalSentence": "See the\nPOSIX readdir(3) documentation for more detail.",
    "position": 3129,
    "id": "sentence_3129"
  },
  {
    "type": "sentence",
    "content": "If there are no more directory entries to read, `null` will be returned.",
    "originalSentence": "If there are no more directory entries to read, `null` will be returned.",
    "position": 3130,
    "id": "sentence_3130"
  },
  {
    "type": "sentence",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 3131,
    "id": "sentence_3131"
  },
  {
    "type": "sentence",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 3132,
    "id": "sentence_3132"
  },
  {
    "type": "sentence",
    "content": "#### `dir[Symbol.",
    "originalSentence": "#### `dir[Symbol.",
    "position": 3133,
    "id": "sentence_3133"
  },
  {
    "type": "sentence",
    "content": "asyncIterator]()`\n\n<!",
    "originalSentence": "asyncIterator]()`\n\n<!",
    "position": 3134,
    "id": "sentence_3134"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3135,
    "id": "sentence_3135"
  },
  {
    "type": "sentence",
    "content": "12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs.",
    "originalSentence": "12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs.",
    "position": 3136,
    "id": "sentence_3136"
  },
  {
    "type": "sentence",
    "content": "Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read.",
    "originalSentence": "Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read.",
    "position": 3137,
    "id": "sentence_3137"
  },
  {
    "type": "sentence",
    "content": "Refer to the POSIX readdir(3) documentation for more detail.",
    "originalSentence": "Refer to the POSIX readdir(3) documentation for more detail.",
    "position": 3138,
    "id": "sentence_3138"
  },
  {
    "type": "sentence",
    "content": "Entries returned by the async iterator are always an {fs.",
    "originalSentence": "Entries returned by the async iterator are always an {fs.",
    "position": 3139,
    "id": "sentence_3139"
  },
  {
    "type": "sentence",
    "content": "The `null` case from `dir.",
    "originalSentence": "The `null` case from `dir.",
    "position": 3140,
    "id": "sentence_3140"
  },
  {
    "type": "sentence",
    "content": "read()` is handled internally.",
    "originalSentence": "read()` is handled internally.",
    "position": 3141,
    "id": "sentence_3141"
  },
  {
    "type": "sentence",
    "content": "Dir} for an example.",
    "originalSentence": "Dir} for an example.",
    "position": 3142,
    "id": "sentence_3142"
  },
  {
    "type": "sentence",
    "content": "Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 3143,
    "id": "sentence_3143"
  },
  {
    "type": "sentence",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 3144,
    "id": "sentence_3144"
  },
  {
    "type": "sentence",
    "content": "#### `dir[Symbol.",
    "originalSentence": "#### `dir[Symbol.",
    "position": 3145,
    "id": "sentence_3145"
  },
  {
    "type": "sentence",
    "content": "asyncDispose]()`\n\n<!",
    "originalSentence": "asyncDispose]()`\n\n<!",
    "position": 3146,
    "id": "sentence_3146"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v24.",
    "originalSentence": "-- YAML\nadded:\n - v24.",
    "position": 3147,
    "id": "sentence_3147"
  },
  {
    "type": "sentence",
    "content": "1.0\n - v22.",
    "originalSentence": "1.0\n - v22.",
    "position": 3148,
    "id": "sentence_3148"
  },
  {
    "type": "sentence",
    "content": "1.0\nchanges:\n - version: v24.",
    "originalSentence": "1.0\nchanges:\n - version: v24.",
    "position": 3149,
    "id": "sentence_3149"
  },
  {
    "type": "sentence",
    "content": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "originalSentence": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "position": 3150,
    "id": "sentence_3150"
  },
  {
    "type": "sentence",
    "content": "-->\n\nCalls `dir.",
    "originalSentence": "-->\n\nCalls `dir.",
    "position": 3151,
    "id": "sentence_3151"
  },
  {
    "type": "sentence",
    "content": "close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete.",
    "originalSentence": "close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete.",
    "position": 3152,
    "id": "sentence_3152"
  },
  {
    "type": "sentence",
    "content": "#### `dir[Symbol.",
    "originalSentence": "#### `dir[Symbol.",
    "position": 3153,
    "id": "sentence_3153"
  },
  {
    "type": "sentence",
    "content": "dispose]()`\n\n<!",
    "originalSentence": "dispose]()`\n\n<!",
    "position": 3154,
    "id": "sentence_3154"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v24.",
    "originalSentence": "-- YAML\nadded:\n - v24.",
    "position": 3155,
    "id": "sentence_3155"
  },
  {
    "type": "sentence",
    "content": "1.0\n - v22.",
    "originalSentence": "1.0\n - v22.",
    "position": 3156,
    "id": "sentence_3156"
  },
  {
    "type": "sentence",
    "content": "1.0\nchanges:\n - version: v24.",
    "originalSentence": "1.0\nchanges:\n - version: v24.",
    "position": 3157,
    "id": "sentence_3157"
  },
  {
    "type": "sentence",
    "content": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "originalSentence": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "position": 3158,
    "id": "sentence_3158"
  },
  {
    "type": "sentence",
    "content": "-->\n\nCalls `dir.",
    "originalSentence": "-->\n\nCalls `dir.",
    "position": 3159,
    "id": "sentence_3159"
  },
  {
    "type": "sentence",
    "content": "closeSync()` if the directory handle is open, and returns\n`undefined`.",
    "originalSentence": "closeSync()` if the directory handle is open, and returns\n`undefined`.",
    "position": 3160,
    "id": "sentence_3160"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3161,
    "id": "sentence_3161"
  },
  {
    "type": "sentence",
    "content": "Dirent`\n\n<!",
    "originalSentence": "Dirent`\n\n<!",
    "position": 3162,
    "id": "sentence_3162"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3163,
    "id": "sentence_3163"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs.",
    "originalSentence": "10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs.",
    "position": 3164,
    "id": "sentence_3164"
  },
  {
    "type": "sentence",
    "content": "The\ndirectory entry is a combination of the file name and file type pairs.",
    "originalSentence": "The\ndirectory entry is a combination of the file name and file type pairs.",
    "position": 3165,
    "id": "sentence_3165"
  },
  {
    "type": "sentence",
    "content": "Additionally, when [`fs.",
    "originalSentence": "Additionally, when [`fs.",
    "position": 3166,
    "id": "sentence_3166"
  },
  {
    "type": "sentence",
    "content": "readdir()`][] or [`fs.",
    "originalSentence": "readdir()`][] or [`fs.",
    "position": 3167,
    "id": "sentence_3167"
  },
  {
    "type": "sentence",
    "content": "readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs.",
    "originalSentence": "readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs.",
    "position": 3168,
    "id": "sentence_3168"
  },
  {
    "type": "sentence",
    "content": "Dirent} objects, rather than strings or {Buffer}s.",
    "originalSentence": "Dirent} objects, rather than strings or {Buffer}s.",
    "position": 3169,
    "id": "sentence_3169"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3170,
    "id": "sentence_3170"
  },
  {
    "type": "sentence",
    "content": "isBlockDevice()`\n\n<!",
    "originalSentence": "isBlockDevice()`\n\n<!",
    "position": 3171,
    "id": "sentence_3171"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3172,
    "id": "sentence_3172"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3173,
    "id": "sentence_3173"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a block device.",
    "originalSentence": "Dirent} object describes a block device.",
    "position": 3174,
    "id": "sentence_3174"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3175,
    "id": "sentence_3175"
  },
  {
    "type": "sentence",
    "content": "isCharacterDevice()`\n\n<!",
    "originalSentence": "isCharacterDevice()`\n\n<!",
    "position": 3176,
    "id": "sentence_3176"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3177,
    "id": "sentence_3177"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3178,
    "id": "sentence_3178"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a character device.",
    "originalSentence": "Dirent} object describes a character device.",
    "position": 3179,
    "id": "sentence_3179"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3180,
    "id": "sentence_3180"
  },
  {
    "type": "sentence",
    "content": "isDirectory()`\n\n<!",
    "originalSentence": "isDirectory()`\n\n<!",
    "position": 3181,
    "id": "sentence_3181"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3182,
    "id": "sentence_3182"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3183,
    "id": "sentence_3183"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a file system\ndirectory.",
    "originalSentence": "Dirent} object describes a file system\ndirectory.",
    "position": 3184,
    "id": "sentence_3184"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3185,
    "id": "sentence_3185"
  },
  {
    "type": "sentence",
    "content": "isFIFO()`\n\n<!",
    "originalSentence": "isFIFO()`\n\n<!",
    "position": 3186,
    "id": "sentence_3186"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3187,
    "id": "sentence_3187"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3188,
    "id": "sentence_3188"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a first-in-first-out\n(FIFO) pipe.",
    "originalSentence": "Dirent} object describes a first-in-first-out\n(FIFO) pipe.",
    "position": 3189,
    "id": "sentence_3189"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3190,
    "id": "sentence_3190"
  },
  {
    "type": "sentence",
    "content": "isFile()`\n\n<!",
    "originalSentence": "isFile()`\n\n<!",
    "position": 3191,
    "id": "sentence_3191"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3192,
    "id": "sentence_3192"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3193,
    "id": "sentence_3193"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a regular file.",
    "originalSentence": "Dirent} object describes a regular file.",
    "position": 3194,
    "id": "sentence_3194"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3195,
    "id": "sentence_3195"
  },
  {
    "type": "sentence",
    "content": "isSocket()`\n\n<!",
    "originalSentence": "isSocket()`\n\n<!",
    "position": 3196,
    "id": "sentence_3196"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3197,
    "id": "sentence_3197"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3198,
    "id": "sentence_3198"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a socket.",
    "originalSentence": "Dirent} object describes a socket.",
    "position": 3199,
    "id": "sentence_3199"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3200,
    "id": "sentence_3200"
  },
  {
    "type": "sentence",
    "content": "isSymbolicLink()`\n\n<!",
    "originalSentence": "isSymbolicLink()`\n\n<!",
    "position": 3201,
    "id": "sentence_3201"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3202,
    "id": "sentence_3202"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3203,
    "id": "sentence_3203"
  },
  {
    "type": "sentence",
    "content": "Dirent} object describes a symbolic link.",
    "originalSentence": "Dirent} object describes a symbolic link.",
    "position": 3204,
    "id": "sentence_3204"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3205,
    "id": "sentence_3205"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3206,
    "id": "sentence_3206"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs.",
    "originalSentence": "10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs.",
    "position": 3207,
    "id": "sentence_3207"
  },
  {
    "type": "sentence",
    "content": "Dirent} object refers to.",
    "originalSentence": "Dirent} object refers to.",
    "position": 3208,
    "id": "sentence_3208"
  },
  {
    "type": "sentence",
    "content": "The type of this\nvalue is determined by the `options.",
    "originalSentence": "The type of this\nvalue is determined by the `options.",
    "position": 3209,
    "id": "sentence_3209"
  },
  {
    "type": "sentence",
    "content": "encoding` passed to [`fs.",
    "originalSentence": "encoding` passed to [`fs.",
    "position": 3210,
    "id": "sentence_3210"
  },
  {
    "type": "sentence",
    "content": "readdir()`][] or\n[`fs.",
    "originalSentence": "readdir()`][] or\n[`fs.",
    "position": 3211,
    "id": "sentence_3211"
  },
  {
    "type": "sentence",
    "content": "readdirSync()`][].",
    "originalSentence": "readdirSync()`][].",
    "position": 3212,
    "id": "sentence_3212"
  },
  {
    "type": "sentence",
    "content": "#### `dirent.",
    "originalSentence": "#### `dirent.",
    "position": 3213,
    "id": "sentence_3213"
  },
  {
    "type": "sentence",
    "content": "parentPath`\n\n<!",
    "originalSentence": "parentPath`\n\n<!",
    "position": 3214,
    "id": "sentence_3214"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v21.",
    "originalSentence": "-- YAML\nadded:\n  - v21.",
    "position": 3215,
    "id": "sentence_3215"
  },
  {
    "type": "sentence",
    "content": "4.0\n  - v20.",
    "originalSentence": "4.0\n  - v20.",
    "position": 3216,
    "id": "sentence_3216"
  },
  {
    "type": "sentence",
    "content": "12.0\n  - v18.",
    "originalSentence": "12.0\n  - v18.",
    "position": 3217,
    "id": "sentence_3217"
  },
  {
    "type": "sentence",
    "content": "20.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "20.0\nchanges:\n  - version:\n      - v24.",
    "position": 3218,
    "id": "sentence_3218"
  },
  {
    "type": "sentence",
    "content": "0.0\n      - v22.",
    "originalSentence": "0.0\n      - v22.",
    "position": 3219,
    "id": "sentence_3219"
  },
  {
    "type": "sentence",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 3220,
    "id": "sentence_3220"
  },
  {
    "type": "sentence",
    "content": "-->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs.",
    "originalSentence": "-->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs.",
    "position": 3221,
    "id": "sentence_3221"
  },
  {
    "type": "sentence",
    "content": "Dirent} object refers to.",
    "originalSentence": "Dirent} object refers to.",
    "position": 3222,
    "id": "sentence_3222"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3223,
    "id": "sentence_3223"
  },
  {
    "type": "sentence",
    "content": "FSWatcher`\n\n<!",
    "originalSentence": "FSWatcher`\n\n<!",
    "position": 3224,
    "id": "sentence_3224"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3225,
    "id": "sentence_3225"
  },
  {
    "type": "sentence",
    "content": "5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs.",
    "originalSentence": "5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs.",
    "position": 3226,
    "id": "sentence_3226"
  },
  {
    "type": "sentence",
    "content": "watch()`][] method will return a new {fs.",
    "originalSentence": "watch()`][] method will return a new {fs.",
    "position": 3227,
    "id": "sentence_3227"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}\nobject.",
    "originalSentence": "FSWatcher}\nobject.",
    "position": 3228,
    "id": "sentence_3228"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified.",
    "originalSentence": "FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified.",
    "position": 3229,
    "id": "sentence_3229"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'change'`\n\n<!",
    "originalSentence": "#### Event: `'change'`\n\n<!",
    "position": 3230,
    "id": "sentence_3230"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3231,
    "id": "sentence_3231"
  },
  {
    "type": "sentence",
    "content": "5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file.",
    "originalSentence": "5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file.",
    "position": 3232,
    "id": "sentence_3232"
  },
  {
    "type": "sentence",
    "content": "See more details in [`fs.",
    "originalSentence": "See more details in [`fs.",
    "position": 3233,
    "id": "sentence_3233"
  },
  {
    "type": "sentence",
    "content": "watch()`][].",
    "originalSentence": "watch()`][].",
    "position": 3234,
    "id": "sentence_3234"
  },
  {
    "type": "sentence",
    "content": "The `filename` argument may not be provided depending on operating system\nsupport.",
    "originalSentence": "The `filename` argument may not be provided depending on operating system\nsupport.",
    "position": 3235,
    "id": "sentence_3235"
  },
  {
    "type": "sentence",
    "content": "If `filename` is provided, it will be provided as a {Buffer} if\n`fs.",
    "originalSentence": "If `filename` is provided, it will be provided as a {Buffer} if\n`fs.",
    "position": 3236,
    "id": "sentence_3236"
  },
  {
    "type": "sentence",
    "content": "watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string.",
    "originalSentence": "watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string.",
    "position": 3237,
    "id": "sentence_3237"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs.",
    "originalSentence": "```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs.",
    "position": 3238,
    "id": "sentence_3238"
  },
  {
    "type": "sentence",
    "content": "watch() listener\nwatch('.",
    "originalSentence": "watch() listener\nwatch('.",
    "position": 3239,
    "id": "sentence_3239"
  },
  {
    "type": "sentence",
    "content": "/tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.",
    "originalSentence": "/tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.",
    "position": 3240,
    "id": "sentence_3240"
  },
  {
    "type": "sentence",
    "content": "log(filename);\n    // Prints: <Buffer ...",
    "originalSentence": "log(filename);\n    // Prints: <Buffer ...",
    "position": 3241,
    "id": "sentence_3241"
  },
  {
    "type": "sentence",
    "content": ">\n  }\n});\n```\n\n#### Event: `'close'`\n\n<!",
    "originalSentence": ">\n  }\n});\n```\n\n#### Event: `'close'`\n\n<!",
    "position": 3242,
    "id": "sentence_3242"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v10.",
    "originalSentence": "-- YAML\nadded: v10.",
    "position": 3243,
    "id": "sentence_3243"
  },
  {
    "type": "sentence",
    "content": "0.0\n-->\n\nEmitted when the watcher stops watching for changes.",
    "originalSentence": "0.0\n-->\n\nEmitted when the watcher stops watching for changes.",
    "position": 3244,
    "id": "sentence_3244"
  },
  {
    "type": "sentence",
    "content": "The closed\n{fs.",
    "originalSentence": "The closed\n{fs.",
    "position": 3245,
    "id": "sentence_3245"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} object is no longer usable in the event handler.",
    "originalSentence": "FSWatcher} object is no longer usable in the event handler.",
    "position": 3246,
    "id": "sentence_3246"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'error'`\n\n<!",
    "originalSentence": "#### Event: `'error'`\n\n<!",
    "position": 3247,
    "id": "sentence_3247"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3248,
    "id": "sentence_3248"
  },
  {
    "type": "sentence",
    "content": "5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file.",
    "originalSentence": "5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file.",
    "position": 3249,
    "id": "sentence_3249"
  },
  {
    "type": "sentence",
    "content": "The errored\n{fs.",
    "originalSentence": "The errored\n{fs.",
    "position": 3250,
    "id": "sentence_3250"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} object is no longer usable in the event handler.",
    "originalSentence": "FSWatcher} object is no longer usable in the event handler.",
    "position": 3251,
    "id": "sentence_3251"
  },
  {
    "type": "sentence",
    "content": "#### `watcher.",
    "originalSentence": "#### `watcher.",
    "position": 3252,
    "id": "sentence_3252"
  },
  {
    "type": "sentence",
    "content": "close()`\n\n<!",
    "originalSentence": "close()`\n\n<!",
    "position": 3253,
    "id": "sentence_3253"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3254,
    "id": "sentence_3254"
  },
  {
    "type": "sentence",
    "content": "5.8\n-->\n\nStop watching for changes on the given {fs.",
    "originalSentence": "5.8\n-->\n\nStop watching for changes on the given {fs.",
    "position": 3255,
    "id": "sentence_3255"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}.",
    "originalSentence": "FSWatcher}.",
    "position": 3256,
    "id": "sentence_3256"
  },
  {
    "type": "sentence",
    "content": "Once stopped, the\n{fs.",
    "originalSentence": "Once stopped, the\n{fs.",
    "position": 3257,
    "id": "sentence_3257"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} object is no longer usable.",
    "originalSentence": "FSWatcher} object is no longer usable.",
    "position": 3258,
    "id": "sentence_3258"
  },
  {
    "type": "sentence",
    "content": "#### `watcher.",
    "originalSentence": "#### `watcher.",
    "position": 3259,
    "id": "sentence_3259"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 3260,
    "id": "sentence_3260"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v12.",
    "originalSentence": "3.0\n  - v12.",
    "position": 3261,
    "id": "sentence_3261"
  },
  {
    "type": "sentence",
    "content": "20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs.",
    "position": 3262,
    "id": "sentence_3262"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}\n\nWhen called, requests that the Node.",
    "originalSentence": "FSWatcher}\n\nWhen called, requests that the Node.",
    "position": 3263,
    "id": "sentence_3263"
  },
  {
    "type": "sentence",
    "content": "js event loop _not_ exit so long as the\n{fs.",
    "originalSentence": "js event loop _not_ exit so long as the\n{fs.",
    "position": 3264,
    "id": "sentence_3264"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} is active.",
    "originalSentence": "FSWatcher} is active.",
    "position": 3265,
    "id": "sentence_3265"
  },
  {
    "type": "sentence",
    "content": "Calling `watcher.",
    "originalSentence": "Calling `watcher.",
    "position": 3266,
    "id": "sentence_3266"
  },
  {
    "type": "sentence",
    "content": "ref()` multiple times will have\nno effect.",
    "originalSentence": "ref()` multiple times will have\nno effect.",
    "position": 3267,
    "id": "sentence_3267"
  },
  {
    "type": "sentence",
    "content": "By default, all {fs.",
    "originalSentence": "By default, all {fs.",
    "position": 3268,
    "id": "sentence_3268"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "originalSentence": "FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "position": 3269,
    "id": "sentence_3269"
  },
  {
    "type": "sentence",
    "content": "ref()` unless `watcher.",
    "originalSentence": "ref()` unless `watcher.",
    "position": 3270,
    "id": "sentence_3270"
  },
  {
    "type": "sentence",
    "content": "unref()` had been\ncalled previously.",
    "originalSentence": "unref()` had been\ncalled previously.",
    "position": 3271,
    "id": "sentence_3271"
  },
  {
    "type": "sentence",
    "content": "#### `watcher.",
    "originalSentence": "#### `watcher.",
    "position": 3272,
    "id": "sentence_3272"
  },
  {
    "type": "sentence",
    "content": "unref()`\n\n<!",
    "originalSentence": "unref()`\n\n<!",
    "position": 3273,
    "id": "sentence_3273"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 3274,
    "id": "sentence_3274"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v12.",
    "originalSentence": "3.0\n  - v12.",
    "position": 3275,
    "id": "sentence_3275"
  },
  {
    "type": "sentence",
    "content": "20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs.",
    "position": 3276,
    "id": "sentence_3276"
  },
  {
    "type": "sentence",
    "content": "FSWatcher}\n\nWhen called, the active {fs.",
    "originalSentence": "FSWatcher}\n\nWhen called, the active {fs.",
    "position": 3277,
    "id": "sentence_3277"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} object will not require the Node.",
    "originalSentence": "FSWatcher} object will not require the Node.",
    "position": 3278,
    "id": "sentence_3278"
  },
  {
    "type": "sentence",
    "content": "js\nevent loop to remain active.",
    "originalSentence": "js\nevent loop to remain active.",
    "position": 3279,
    "id": "sentence_3279"
  },
  {
    "type": "sentence",
    "content": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "originalSentence": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "position": 3280,
    "id": "sentence_3280"
  },
  {
    "type": "sentence",
    "content": "FSWatcher} object's\ncallback is invoked.",
    "originalSentence": "FSWatcher} object's\ncallback is invoked.",
    "position": 3281,
    "id": "sentence_3281"
  },
  {
    "type": "sentence",
    "content": "Calling `watcher.",
    "originalSentence": "Calling `watcher.",
    "position": 3282,
    "id": "sentence_3282"
  },
  {
    "type": "sentence",
    "content": "unref()` multiple times will have\nno effect.",
    "originalSentence": "unref()` multiple times will have\nno effect.",
    "position": 3283,
    "id": "sentence_3283"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3284,
    "id": "sentence_3284"
  },
  {
    "type": "sentence",
    "content": "StatWatcher`\n\n<!",
    "originalSentence": "StatWatcher`\n\n<!",
    "position": 3285,
    "id": "sentence_3285"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 3286,
    "id": "sentence_3286"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v12.",
    "originalSentence": "3.0\n  - v12.",
    "position": 3287,
    "id": "sentence_3287"
  },
  {
    "type": "sentence",
    "content": "20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs.",
    "originalSentence": "20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs.",
    "position": 3288,
    "id": "sentence_3288"
  },
  {
    "type": "sentence",
    "content": "watchFile()` method will return a new {fs.",
    "originalSentence": "watchFile()` method will return a new {fs.",
    "position": 3289,
    "id": "sentence_3289"
  },
  {
    "type": "sentence",
    "content": "StatWatcher}\nobject.",
    "originalSentence": "StatWatcher}\nobject.",
    "position": 3290,
    "id": "sentence_3290"
  },
  {
    "type": "sentence",
    "content": "#### `watcher.",
    "originalSentence": "#### `watcher.",
    "position": 3291,
    "id": "sentence_3291"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 3292,
    "id": "sentence_3292"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v12.",
    "originalSentence": "3.0\n  - v12.",
    "position": 3293,
    "id": "sentence_3293"
  },
  {
    "type": "sentence",
    "content": "20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs.",
    "position": 3294,
    "id": "sentence_3294"
  },
  {
    "type": "sentence",
    "content": "StatWatcher}\n\nWhen called, requests that the Node.",
    "originalSentence": "StatWatcher}\n\nWhen called, requests that the Node.",
    "position": 3295,
    "id": "sentence_3295"
  },
  {
    "type": "sentence",
    "content": "js event loop _not_ exit so long as the\n{fs.",
    "originalSentence": "js event loop _not_ exit so long as the\n{fs.",
    "position": 3296,
    "id": "sentence_3296"
  },
  {
    "type": "sentence",
    "content": "StatWatcher} is active.",
    "originalSentence": "StatWatcher} is active.",
    "position": 3297,
    "id": "sentence_3297"
  },
  {
    "type": "sentence",
    "content": "Calling `watcher.",
    "originalSentence": "Calling `watcher.",
    "position": 3298,
    "id": "sentence_3298"
  },
  {
    "type": "sentence",
    "content": "ref()` multiple times will have\nno effect.",
    "originalSentence": "ref()` multiple times will have\nno effect.",
    "position": 3299,
    "id": "sentence_3299"
  },
  {
    "type": "sentence",
    "content": "By default, all {fs.",
    "originalSentence": "By default, all {fs.",
    "position": 3300,
    "id": "sentence_3300"
  },
  {
    "type": "sentence",
    "content": "StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "originalSentence": "StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "position": 3301,
    "id": "sentence_3301"
  },
  {
    "type": "sentence",
    "content": "ref()` unless `watcher.",
    "originalSentence": "ref()` unless `watcher.",
    "position": 3302,
    "id": "sentence_3302"
  },
  {
    "type": "sentence",
    "content": "unref()` had been\ncalled previously.",
    "originalSentence": "unref()` had been\ncalled previously.",
    "position": 3303,
    "id": "sentence_3303"
  },
  {
    "type": "sentence",
    "content": "#### `watcher.",
    "originalSentence": "#### `watcher.",
    "position": 3304,
    "id": "sentence_3304"
  },
  {
    "type": "sentence",
    "content": "unref()`\n\n<!",
    "originalSentence": "unref()`\n\n<!",
    "position": 3305,
    "id": "sentence_3305"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v14.",
    "originalSentence": "-- YAML\nadded:\n  - v14.",
    "position": 3306,
    "id": "sentence_3306"
  },
  {
    "type": "sentence",
    "content": "3.0\n  - v12.",
    "originalSentence": "3.0\n  - v12.",
    "position": 3307,
    "id": "sentence_3307"
  },
  {
    "type": "sentence",
    "content": "20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs.",
    "position": 3308,
    "id": "sentence_3308"
  },
  {
    "type": "sentence",
    "content": "StatWatcher}\n\nWhen called, the active {fs.",
    "originalSentence": "StatWatcher}\n\nWhen called, the active {fs.",
    "position": 3309,
    "id": "sentence_3309"
  },
  {
    "type": "sentence",
    "content": "StatWatcher} object will not require the Node.",
    "originalSentence": "StatWatcher} object will not require the Node.",
    "position": 3310,
    "id": "sentence_3310"
  },
  {
    "type": "sentence",
    "content": "js\nevent loop to remain active.",
    "originalSentence": "js\nevent loop to remain active.",
    "position": 3311,
    "id": "sentence_3311"
  },
  {
    "type": "sentence",
    "content": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "originalSentence": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "position": 3312,
    "id": "sentence_3312"
  },
  {
    "type": "sentence",
    "content": "StatWatcher} object's\ncallback is invoked.",
    "originalSentence": "StatWatcher} object's\ncallback is invoked.",
    "position": 3313,
    "id": "sentence_3313"
  },
  {
    "type": "sentence",
    "content": "Calling `watcher.",
    "originalSentence": "Calling `watcher.",
    "position": 3314,
    "id": "sentence_3314"
  },
  {
    "type": "sentence",
    "content": "unref()` multiple times will have\nno effect.",
    "originalSentence": "unref()` multiple times will have\nno effect.",
    "position": 3315,
    "id": "sentence_3315"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3316,
    "id": "sentence_3316"
  },
  {
    "type": "sentence",
    "content": "ReadStream`\n\n<!",
    "originalSentence": "ReadStream`\n\n<!",
    "position": 3317,
    "id": "sentence_3317"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3318,
    "id": "sentence_3318"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\n* Extends: {stream.",
    "originalSentence": "1.93\n-->\n\n* Extends: {stream.",
    "position": 3319,
    "id": "sentence_3319"
  },
  {
    "type": "sentence",
    "content": "Readable}\n\nInstances of {fs.",
    "originalSentence": "Readable}\n\nInstances of {fs.",
    "position": 3320,
    "id": "sentence_3320"
  },
  {
    "type": "sentence",
    "content": "ReadStream} are created and returned using the\n[`fs.",
    "originalSentence": "ReadStream} are created and returned using the\n[`fs.",
    "position": 3321,
    "id": "sentence_3321"
  },
  {
    "type": "sentence",
    "content": "createReadStream()`][] function.",
    "originalSentence": "createReadStream()`][] function.",
    "position": 3322,
    "id": "sentence_3322"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'close'`\n\n<!",
    "originalSentence": "#### Event: `'close'`\n\n<!",
    "position": 3323,
    "id": "sentence_3323"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3324,
    "id": "sentence_3324"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\nEmitted when the {fs.",
    "originalSentence": "1.93\n-->\n\nEmitted when the {fs.",
    "position": 3325,
    "id": "sentence_3325"
  },
  {
    "type": "sentence",
    "content": "ReadStream}'s underlying file descriptor has been closed.",
    "originalSentence": "ReadStream}'s underlying file descriptor has been closed.",
    "position": 3326,
    "id": "sentence_3326"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'open'`\n\n<!",
    "originalSentence": "#### Event: `'open'`\n\n<!",
    "position": 3327,
    "id": "sentence_3327"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3328,
    "id": "sentence_3328"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "originalSentence": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "position": 3329,
    "id": "sentence_3329"
  },
  {
    "type": "sentence",
    "content": "ReadStream}.",
    "originalSentence": "ReadStream}.",
    "position": 3330,
    "id": "sentence_3330"
  },
  {
    "type": "sentence",
    "content": "Emitted when the {fs.",
    "originalSentence": "Emitted when the {fs.",
    "position": 3331,
    "id": "sentence_3331"
  },
  {
    "type": "sentence",
    "content": "ReadStream}'s file descriptor has been opened.",
    "originalSentence": "ReadStream}'s file descriptor has been opened.",
    "position": 3332,
    "id": "sentence_3332"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'ready'`\n\n<!",
    "originalSentence": "#### Event: `'ready'`\n\n<!",
    "position": 3333,
    "id": "sentence_3333"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v9.",
    "originalSentence": "-- YAML\nadded: v9.",
    "position": 3334,
    "id": "sentence_3334"
  },
  {
    "type": "sentence",
    "content": "11.0\n-->\n\nEmitted when the {fs.",
    "originalSentence": "11.0\n-->\n\nEmitted when the {fs.",
    "position": 3335,
    "id": "sentence_3335"
  },
  {
    "type": "sentence",
    "content": "ReadStream} is ready to be used.",
    "originalSentence": "ReadStream} is ready to be used.",
    "position": 3336,
    "id": "sentence_3336"
  },
  {
    "type": "sentence",
    "content": "Fires immediately after `'open'`.",
    "originalSentence": "Fires immediately after `'open'`.",
    "position": 3337,
    "id": "sentence_3337"
  },
  {
    "type": "sentence",
    "content": "#### `readStream.",
    "originalSentence": "#### `readStream.",
    "position": 3338,
    "id": "sentence_3338"
  },
  {
    "type": "sentence",
    "content": "bytesRead`\n\n<!",
    "originalSentence": "bytesRead`\n\n<!",
    "position": 3339,
    "id": "sentence_3339"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v6.",
    "originalSentence": "-- YAML\nadded: v6.",
    "position": 3340,
    "id": "sentence_3340"
  },
  {
    "type": "sentence",
    "content": "4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far.",
    "originalSentence": "4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far.",
    "position": 3341,
    "id": "sentence_3341"
  },
  {
    "type": "sentence",
    "content": "#### `readStream.",
    "originalSentence": "#### `readStream.",
    "position": 3342,
    "id": "sentence_3342"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3343,
    "id": "sentence_3343"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs.",
    "originalSentence": "1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs.",
    "position": 3344,
    "id": "sentence_3344"
  },
  {
    "type": "sentence",
    "content": "createReadStream()`.",
    "originalSentence": "createReadStream()`.",
    "position": 3345,
    "id": "sentence_3345"
  },
  {
    "type": "sentence",
    "content": "If `path` is passed as a string, then\n`readStream.",
    "originalSentence": "If `path` is passed as a string, then\n`readStream.",
    "position": 3346,
    "id": "sentence_3346"
  },
  {
    "type": "sentence",
    "content": "path` will be a string.",
    "originalSentence": "path` will be a string.",
    "position": 3347,
    "id": "sentence_3347"
  },
  {
    "type": "sentence",
    "content": "If `path` is passed as a {Buffer}, then\n`readStream.",
    "originalSentence": "If `path` is passed as a {Buffer}, then\n`readStream.",
    "position": 3348,
    "id": "sentence_3348"
  },
  {
    "type": "sentence",
    "content": "path` will be a {Buffer}.",
    "originalSentence": "path` will be a {Buffer}.",
    "position": 3349,
    "id": "sentence_3349"
  },
  {
    "type": "sentence",
    "content": "If `fd` is specified, then\n`readStream.",
    "originalSentence": "If `fd` is specified, then\n`readStream.",
    "position": 3350,
    "id": "sentence_3350"
  },
  {
    "type": "sentence",
    "content": "path` will be `undefined`.",
    "originalSentence": "path` will be `undefined`.",
    "position": 3351,
    "id": "sentence_3351"
  },
  {
    "type": "sentence",
    "content": "#### `readStream.",
    "originalSentence": "#### `readStream.",
    "position": 3352,
    "id": "sentence_3352"
  },
  {
    "type": "sentence",
    "content": "pending`\n\n<!",
    "originalSentence": "pending`\n\n<!",
    "position": 3353,
    "id": "sentence_3353"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n - v11.",
    "originalSentence": "-- YAML\nadded:\n - v11.",
    "position": 3354,
    "id": "sentence_3354"
  },
  {
    "type": "sentence",
    "content": "2.0\n - v10.",
    "originalSentence": "2.0\n - v10.",
    "position": 3355,
    "id": "sentence_3355"
  },
  {
    "type": "sentence",
    "content": "16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "originalSentence": "16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "position": 3356,
    "id": "sentence_3356"
  },
  {
    "type": "sentence",
    "content": "before the `'ready'` event is emitted.",
    "originalSentence": "before the `'ready'` event is emitted.",
    "position": 3357,
    "id": "sentence_3357"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3358,
    "id": "sentence_3358"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3359,
    "id": "sentence_3359"
  },
  {
    "type": "sentence",
    "content": "1.21\nchanges:\n  - version:\n    - v22.",
    "originalSentence": "1.21\nchanges:\n  - version:\n    - v22.",
    "position": 3360,
    "id": "sentence_3360"
  },
  {
    "type": "sentence",
    "content": "0.0\n    - v20.",
    "originalSentence": "0.0\n    - v20.",
    "position": 3361,
    "id": "sentence_3361"
  },
  {
    "type": "sentence",
    "content": "13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated.",
    "originalSentence": "13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated.",
    "position": 3362,
    "id": "sentence_3362"
  },
  {
    "type": "sentence",
    "content": "- version: v8.",
    "originalSentence": "- version: v8.",
    "position": 3363,
    "id": "sentence_3363"
  },
  {
    "type": "sentence",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers.",
    "position": 3364,
    "id": "sentence_3364"
  },
  {
    "type": "sentence",
    "content": "-->\n\nA {fs.",
    "originalSentence": "-->\n\nA {fs.",
    "position": 3365,
    "id": "sentence_3365"
  },
  {
    "type": "sentence",
    "content": "Stats} object provides information about a file.",
    "originalSentence": "Stats} object provides information about a file.",
    "position": 3366,
    "id": "sentence_3366"
  },
  {
    "type": "sentence",
    "content": "Objects returned from [`fs.",
    "originalSentence": "Objects returned from [`fs.",
    "position": 3367,
    "id": "sentence_3367"
  },
  {
    "type": "sentence",
    "content": "stat()`][], [`fs.",
    "originalSentence": "stat()`][], [`fs.",
    "position": 3368,
    "id": "sentence_3368"
  },
  {
    "type": "sentence",
    "content": "lstat()`][], [`fs.",
    "originalSentence": "lstat()`][], [`fs.",
    "position": 3369,
    "id": "sentence_3369"
  },
  {
    "type": "sentence",
    "content": "fstat()`][], and\ntheir synchronous counterparts are of this type.",
    "originalSentence": "fstat()`][], and\ntheir synchronous counterparts are of this type.",
    "position": 3370,
    "id": "sentence_3370"
  },
  {
    "type": "sentence",
    "content": "If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`.",
    "originalSentence": "If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`.",
    "position": 3371,
    "id": "sentence_3371"
  },
  {
    "type": "sentence",
    "content": "`Stat` objects are not to be created directly using the `new` keyword.",
    "originalSentence": "`Stat` objects are not to be created directly using the `new` keyword.",
    "position": 3372,
    "id": "sentence_3372"
  },
  {
    "type": "sentence",
    "content": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.",
    "originalSentence": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.",
    "position": 3373,
    "id": "sentence_3373"
  },
  {
    "type": "sentence",
    "content": "1,\n  mtimeMs: 1318289051000.",
    "originalSentence": "1,\n  mtimeMs: 1318289051000.",
    "position": 3374,
    "id": "sentence_3374"
  },
  {
    "type": "sentence",
    "content": "1,\n  ctimeMs: 1318289051000.",
    "originalSentence": "1,\n  ctimeMs: 1318289051000.",
    "position": 3375,
    "id": "sentence_3375"
  },
  {
    "type": "sentence",
    "content": "1,\n  birthtimeMs: 1318289051000.",
    "originalSentence": "1,\n  birthtimeMs: 1318289051000.",
    "position": 3376,
    "id": "sentence_3376"
  },
  {
    "type": "sentence",
    "content": "1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats.",
    "originalSentence": "1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats.",
    "position": 3377,
    "id": "sentence_3377"
  },
  {
    "type": "sentence",
    "content": "isBlockDevice()`\n\n<!",
    "originalSentence": "isBlockDevice()`\n\n<!",
    "position": 3378,
    "id": "sentence_3378"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3379,
    "id": "sentence_3379"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3380,
    "id": "sentence_3380"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a block device.",
    "originalSentence": "Stats} object describes a block device.",
    "position": 3381,
    "id": "sentence_3381"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3382,
    "id": "sentence_3382"
  },
  {
    "type": "sentence",
    "content": "isCharacterDevice()`\n\n<!",
    "originalSentence": "isCharacterDevice()`\n\n<!",
    "position": 3383,
    "id": "sentence_3383"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3384,
    "id": "sentence_3384"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3385,
    "id": "sentence_3385"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a character device.",
    "originalSentence": "Stats} object describes a character device.",
    "position": 3386,
    "id": "sentence_3386"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3387,
    "id": "sentence_3387"
  },
  {
    "type": "sentence",
    "content": "isDirectory()`\n\n<!",
    "originalSentence": "isDirectory()`\n\n<!",
    "position": 3388,
    "id": "sentence_3388"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3389,
    "id": "sentence_3389"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3390,
    "id": "sentence_3390"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a file system directory.",
    "originalSentence": "Stats} object describes a file system directory.",
    "position": 3391,
    "id": "sentence_3391"
  },
  {
    "type": "sentence",
    "content": "If the {fs.",
    "originalSentence": "If the {fs.",
    "position": 3392,
    "id": "sentence_3392"
  },
  {
    "type": "sentence",
    "content": "Stats} object was obtained from calling [`fs.",
    "originalSentence": "Stats} object was obtained from calling [`fs.",
    "position": 3393,
    "id": "sentence_3393"
  },
  {
    "type": "sentence",
    "content": "lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`.",
    "originalSentence": "lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`.",
    "position": 3394,
    "id": "sentence_3394"
  },
  {
    "type": "sentence",
    "content": "This is because [`fs.",
    "originalSentence": "This is because [`fs.",
    "position": 3395,
    "id": "sentence_3395"
  },
  {
    "type": "sentence",
    "content": "lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to.",
    "originalSentence": "lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to.",
    "position": 3396,
    "id": "sentence_3396"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3397,
    "id": "sentence_3397"
  },
  {
    "type": "sentence",
    "content": "isFIFO()`\n\n<!",
    "originalSentence": "isFIFO()`\n\n<!",
    "position": 3398,
    "id": "sentence_3398"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3399,
    "id": "sentence_3399"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3400,
    "id": "sentence_3400"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a first-in-first-out (FIFO)\npipe.",
    "originalSentence": "Stats} object describes a first-in-first-out (FIFO)\npipe.",
    "position": 3401,
    "id": "sentence_3401"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3402,
    "id": "sentence_3402"
  },
  {
    "type": "sentence",
    "content": "isFile()`\n\n<!",
    "originalSentence": "isFile()`\n\n<!",
    "position": 3403,
    "id": "sentence_3403"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3404,
    "id": "sentence_3404"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3405,
    "id": "sentence_3405"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a regular file.",
    "originalSentence": "Stats} object describes a regular file.",
    "position": 3406,
    "id": "sentence_3406"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3407,
    "id": "sentence_3407"
  },
  {
    "type": "sentence",
    "content": "isSocket()`\n\n<!",
    "originalSentence": "isSocket()`\n\n<!",
    "position": 3408,
    "id": "sentence_3408"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3409,
    "id": "sentence_3409"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3410,
    "id": "sentence_3410"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a socket.",
    "originalSentence": "Stats} object describes a socket.",
    "position": 3411,
    "id": "sentence_3411"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3412,
    "id": "sentence_3412"
  },
  {
    "type": "sentence",
    "content": "isSymbolicLink()`\n\n<!",
    "originalSentence": "isSymbolicLink()`\n\n<!",
    "position": 3413,
    "id": "sentence_3413"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3414,
    "id": "sentence_3414"
  },
  {
    "type": "sentence",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 3415,
    "id": "sentence_3415"
  },
  {
    "type": "sentence",
    "content": "Stats} object describes a symbolic link.",
    "originalSentence": "Stats} object describes a symbolic link.",
    "position": 3416,
    "id": "sentence_3416"
  },
  {
    "type": "sentence",
    "content": "This method is only valid when using [`fs.",
    "originalSentence": "This method is only valid when using [`fs.",
    "position": 3417,
    "id": "sentence_3417"
  },
  {
    "type": "sentence",
    "content": "lstat()`][].",
    "originalSentence": "lstat()`][].",
    "position": 3418,
    "id": "sentence_3418"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3419,
    "id": "sentence_3419"
  },
  {
    "type": "sentence",
    "content": "dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file.",
    "originalSentence": "dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file.",
    "position": 3420,
    "id": "sentence_3420"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3421,
    "id": "sentence_3421"
  },
  {
    "type": "sentence",
    "content": "ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file.",
    "originalSentence": "ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file.",
    "position": 3422,
    "id": "sentence_3422"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3423,
    "id": "sentence_3423"
  },
  {
    "type": "sentence",
    "content": "mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode.",
    "originalSentence": "mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode.",
    "position": 3424,
    "id": "sentence_3424"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3425,
    "id": "sentence_3425"
  },
  {
    "type": "sentence",
    "content": "nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file.",
    "originalSentence": "nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file.",
    "position": 3426,
    "id": "sentence_3426"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3427,
    "id": "sentence_3427"
  },
  {
    "type": "sentence",
    "content": "uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX).",
    "originalSentence": "uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX).",
    "position": 3428,
    "id": "sentence_3428"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3429,
    "id": "sentence_3429"
  },
  {
    "type": "sentence",
    "content": "gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX).",
    "originalSentence": "gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX).",
    "position": 3430,
    "id": "sentence_3430"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3431,
    "id": "sentence_3431"
  },
  {
    "type": "sentence",
    "content": "rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device.",
    "originalSentence": "rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device.",
    "position": 3432,
    "id": "sentence_3432"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3433,
    "id": "sentence_3433"
  },
  {
    "type": "sentence",
    "content": "size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes.",
    "originalSentence": "size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes.",
    "position": 3434,
    "id": "sentence_3434"
  },
  {
    "type": "sentence",
    "content": "If the underlying file system does not support getting the size of the file,\nthis will be `0`.",
    "originalSentence": "If the underlying file system does not support getting the size of the file,\nthis will be `0`.",
    "position": 3435,
    "id": "sentence_3435"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3436,
    "id": "sentence_3436"
  },
  {
    "type": "sentence",
    "content": "blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations.",
    "originalSentence": "blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations.",
    "position": 3437,
    "id": "sentence_3437"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3438,
    "id": "sentence_3438"
  },
  {
    "type": "sentence",
    "content": "blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file.",
    "originalSentence": "blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file.",
    "position": 3439,
    "id": "sentence_3439"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3440,
    "id": "sentence_3440"
  },
  {
    "type": "sentence",
    "content": "atimeMs`\n\n<!",
    "originalSentence": "atimeMs`\n\n<!",
    "position": 3441,
    "id": "sentence_3441"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v8.",
    "originalSentence": "-- YAML\nadded: v8.",
    "position": 3442,
    "id": "sentence_3442"
  },
  {
    "type": "sentence",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 3443,
    "id": "sentence_3443"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3444,
    "id": "sentence_3444"
  },
  {
    "type": "sentence",
    "content": "mtimeMs`\n\n<!",
    "originalSentence": "mtimeMs`\n\n<!",
    "position": 3445,
    "id": "sentence_3445"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v8.",
    "originalSentence": "-- YAML\nadded: v8.",
    "position": 3446,
    "id": "sentence_3446"
  },
  {
    "type": "sentence",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 3447,
    "id": "sentence_3447"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3448,
    "id": "sentence_3448"
  },
  {
    "type": "sentence",
    "content": "ctimeMs`\n\n<!",
    "originalSentence": "ctimeMs`\n\n<!",
    "position": 3449,
    "id": "sentence_3449"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v8.",
    "originalSentence": "-- YAML\nadded: v8.",
    "position": 3450,
    "id": "sentence_3450"
  },
  {
    "type": "sentence",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch.",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch.",
    "position": 3451,
    "id": "sentence_3451"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3452,
    "id": "sentence_3452"
  },
  {
    "type": "sentence",
    "content": "birthtimeMs`\n\n<!",
    "originalSentence": "birthtimeMs`\n\n<!",
    "position": 3453,
    "id": "sentence_3453"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v8.",
    "originalSentence": "-- YAML\nadded: v8.",
    "position": 3454,
    "id": "sentence_3454"
  },
  {
    "type": "sentence",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 3455,
    "id": "sentence_3455"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3456,
    "id": "sentence_3456"
  },
  {
    "type": "sentence",
    "content": "atimeNs`\n\n<!",
    "originalSentence": "atimeNs`\n\n<!",
    "position": 3457,
    "id": "sentence_3457"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3458,
    "id": "sentence_3458"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 3459,
    "id": "sentence_3459"
  },
  {
    "type": "sentence",
    "content": "The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 3460,
    "id": "sentence_3460"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3461,
    "id": "sentence_3461"
  },
  {
    "type": "sentence",
    "content": "mtimeNs`\n\n<!",
    "originalSentence": "mtimeNs`\n\n<!",
    "position": 3462,
    "id": "sentence_3462"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3463,
    "id": "sentence_3463"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 3464,
    "id": "sentence_3464"
  },
  {
    "type": "sentence",
    "content": "The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 3465,
    "id": "sentence_3465"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3466,
    "id": "sentence_3466"
  },
  {
    "type": "sentence",
    "content": "ctimeNs`\n\n<!",
    "originalSentence": "ctimeNs`\n\n<!",
    "position": 3467,
    "id": "sentence_3467"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3468,
    "id": "sentence_3468"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 3469,
    "id": "sentence_3469"
  },
  {
    "type": "sentence",
    "content": "The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch.",
    "position": 3470,
    "id": "sentence_3470"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3471,
    "id": "sentence_3471"
  },
  {
    "type": "sentence",
    "content": "birthtimeNs`\n\n<!",
    "originalSentence": "birthtimeNs`\n\n<!",
    "position": 3472,
    "id": "sentence_3472"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v12.",
    "originalSentence": "-- YAML\nadded: v12.",
    "position": 3473,
    "id": "sentence_3473"
  },
  {
    "type": "sentence",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 3474,
    "id": "sentence_3474"
  },
  {
    "type": "sentence",
    "content": "The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 3475,
    "id": "sentence_3475"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3476,
    "id": "sentence_3476"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3477,
    "id": "sentence_3477"
  },
  {
    "type": "sentence",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed.",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed.",
    "position": 3478,
    "id": "sentence_3478"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3479,
    "id": "sentence_3479"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3480,
    "id": "sentence_3480"
  },
  {
    "type": "sentence",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified.",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified.",
    "position": 3481,
    "id": "sentence_3481"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3482,
    "id": "sentence_3482"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3483,
    "id": "sentence_3483"
  },
  {
    "type": "sentence",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed.",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed.",
    "position": 3484,
    "id": "sentence_3484"
  },
  {
    "type": "sentence",
    "content": "#### `stats.",
    "originalSentence": "#### `stats.",
    "position": 3485,
    "id": "sentence_3485"
  },
  {
    "type": "sentence",
    "content": "birthtime`\n\n<!",
    "originalSentence": "birthtime`\n\n<!",
    "position": 3486,
    "id": "sentence_3486"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3487,
    "id": "sentence_3487"
  },
  {
    "type": "sentence",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file.",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file.",
    "position": 3488,
    "id": "sentence_3488"
  },
  {
    "type": "sentence",
    "content": "#### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds.",
    "originalSentence": "#### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds.",
    "position": 3489,
    "id": "sentence_3489"
  },
  {
    "type": "sentence",
    "content": "Their\nprecision is platform specific.",
    "originalSentence": "Their\nprecision is platform specific.",
    "position": 3490,
    "id": "sentence_3490"
  },
  {
    "type": "sentence",
    "content": "When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number].",
    "originalSentence": "When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number].",
    "position": 3491,
    "id": "sentence_3491"
  },
  {
    "type": "sentence",
    "content": "The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds.",
    "originalSentence": "The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds.",
    "position": 3492,
    "id": "sentence_3492"
  },
  {
    "type": "sentence",
    "content": "They are\nonly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "They are\nonly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 3493,
    "id": "sentence_3493"
  },
  {
    "type": "sentence",
    "content": "Their precision is platform specific.",
    "originalSentence": "Their precision is platform specific.",
    "position": 3494,
    "id": "sentence_3494"
  },
  {
    "type": "sentence",
    "content": "`atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times.",
    "originalSentence": "`atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times.",
    "position": 3495,
    "id": "sentence_3495"
  },
  {
    "type": "sentence",
    "content": "The\n`Date` and number values are not connected.",
    "originalSentence": "The\n`Date` and number values are not connected.",
    "position": 3496,
    "id": "sentence_3496"
  },
  {
    "type": "sentence",
    "content": "Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation.",
    "originalSentence": "Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation.",
    "position": 3497,
    "id": "sentence_3497"
  },
  {
    "type": "sentence",
    "content": "The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed.",
    "originalSentence": "The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed.",
    "position": 3498,
    "id": "sentence_3498"
  },
  {
    "type": "sentence",
    "content": "Changed\n  by the mknod(2), utimes(2), and read(2) system calls.",
    "originalSentence": "Changed\n  by the mknod(2), utimes(2), and read(2) system calls.",
    "position": 3499,
    "id": "sentence_3499"
  },
  {
    "type": "sentence",
    "content": "* `mtime` \"Modified Time\": Time when file data last modified.",
    "originalSentence": "* `mtime` \"Modified Time\": Time when file data last modified.",
    "position": 3500,
    "id": "sentence_3500"
  },
  {
    "type": "sentence",
    "content": "Changed by the mknod(2), utimes(2), and write(2) system calls.",
    "originalSentence": "Changed by the mknod(2), utimes(2), and write(2) system calls.",
    "position": 3501,
    "id": "sentence_3501"
  },
  {
    "type": "sentence",
    "content": "* `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification).",
    "originalSentence": "* `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification).",
    "position": 3502,
    "id": "sentence_3502"
  },
  {
    "type": "sentence",
    "content": "Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls.",
    "originalSentence": "Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls.",
    "position": 3503,
    "id": "sentence_3503"
  },
  {
    "type": "sentence",
    "content": "* `birthtime` \"Birth Time\": Time of file creation.",
    "originalSentence": "* `birthtime` \"Birth Time\": Time of file creation.",
    "position": 3504,
    "id": "sentence_3504"
  },
  {
    "type": "sentence",
    "content": "Set once when the\n  file is created.",
    "originalSentence": "Set once when the\n  file is created.",
    "position": 3505,
    "id": "sentence_3505"
  },
  {
    "type": "sentence",
    "content": "On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`).",
    "originalSentence": "On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`).",
    "position": 3506,
    "id": "sentence_3506"
  },
  {
    "type": "sentence",
    "content": "This value may be greater\n  than `atime` or `mtime` in this case.",
    "originalSentence": "This value may be greater\n  than `atime` or `mtime` in this case.",
    "position": 3507,
    "id": "sentence_3507"
  },
  {
    "type": "sentence",
    "content": "On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call.",
    "originalSentence": "On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call.",
    "position": 3508,
    "id": "sentence_3508"
  },
  {
    "type": "sentence",
    "content": "Prior to Node.",
    "originalSentence": "Prior to Node.",
    "position": 3509,
    "id": "sentence_3509"
  },
  {
    "type": "sentence",
    "content": "js 0.12, the `ctime` held the `birthtime` on Windows systems.",
    "originalSentence": "js 0.12, the `ctime` held the `birthtime` on Windows systems.",
    "position": 3510,
    "id": "sentence_3510"
  },
  {
    "type": "sentence",
    "content": "As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was.",
    "originalSentence": "As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was.",
    "position": 3511,
    "id": "sentence_3511"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3512,
    "id": "sentence_3512"
  },
  {
    "type": "sentence",
    "content": "StatFs`\n\n<!",
    "originalSentence": "StatFs`\n\n<!",
    "position": 3513,
    "id": "sentence_3513"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3514,
    "id": "sentence_3514"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3515,
    "id": "sentence_3515"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\nProvides information about a mounted file system.",
    "originalSentence": "15.0\n-->\n\nProvides information about a mounted file system.",
    "position": 3516,
    "id": "sentence_3516"
  },
  {
    "type": "sentence",
    "content": "Objects returned from [`fs.",
    "originalSentence": "Objects returned from [`fs.",
    "position": 3517,
    "id": "sentence_3517"
  },
  {
    "type": "sentence",
    "content": "statfs()`][] and its synchronous counterpart are of\nthis type.",
    "originalSentence": "statfs()`][] and its synchronous counterpart are of\nthis type.",
    "position": 3518,
    "id": "sentence_3518"
  },
  {
    "type": "sentence",
    "content": "If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`.",
    "originalSentence": "If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`.",
    "position": 3519,
    "id": "sentence_3519"
  },
  {
    "type": "sentence",
    "content": "```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs.",
    "originalSentence": "```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs.",
    "position": 3520,
    "id": "sentence_3520"
  },
  {
    "type": "sentence",
    "content": "bavail`\n\n<!",
    "originalSentence": "bavail`\n\n<!",
    "position": 3521,
    "id": "sentence_3521"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3522,
    "id": "sentence_3522"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3523,
    "id": "sentence_3523"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users.",
    "position": 3524,
    "id": "sentence_3524"
  },
  {
    "type": "sentence",
    "content": "#### `statfs.",
    "originalSentence": "#### `statfs.",
    "position": 3525,
    "id": "sentence_3525"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3526,
    "id": "sentence_3526"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3527,
    "id": "sentence_3527"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system.",
    "position": 3528,
    "id": "sentence_3528"
  },
  {
    "type": "sentence",
    "content": "#### `statfs.",
    "originalSentence": "#### `statfs.",
    "position": 3529,
    "id": "sentence_3529"
  },
  {
    "type": "sentence",
    "content": "blocks`\n\n<!",
    "originalSentence": "blocks`\n\n<!",
    "position": 3530,
    "id": "sentence_3530"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3531,
    "id": "sentence_3531"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3532,
    "id": "sentence_3532"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system.",
    "position": 3533,
    "id": "sentence_3533"
  },
  {
    "type": "sentence",
    "content": "#### `statfs.",
    "originalSentence": "#### `statfs.",
    "position": 3534,
    "id": "sentence_3534"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3535,
    "id": "sentence_3535"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3536,
    "id": "sentence_3536"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size.",
    "position": 3537,
    "id": "sentence_3537"
  },
  {
    "type": "sentence",
    "content": "#### `statfs.",
    "originalSentence": "#### `statfs.",
    "position": 3538,
    "id": "sentence_3538"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3539,
    "id": "sentence_3539"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3540,
    "id": "sentence_3540"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system.",
    "position": 3541,
    "id": "sentence_3541"
  },
  {
    "type": "sentence",
    "content": "#### `statfs.",
    "originalSentence": "#### `statfs.",
    "position": 3542,
    "id": "sentence_3542"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3543,
    "id": "sentence_3543"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3544,
    "id": "sentence_3544"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system.",
    "position": 3545,
    "id": "sentence_3545"
  },
  {
    "type": "sentence",
    "content": "#### `statfs.",
    "originalSentence": "#### `statfs.",
    "position": 3546,
    "id": "sentence_3546"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded:\n  - v19.",
    "originalSentence": "-- YAML\nadded:\n  - v19.",
    "position": 3547,
    "id": "sentence_3547"
  },
  {
    "type": "sentence",
    "content": "6.0\n  - v18.",
    "originalSentence": "6.0\n  - v18.",
    "position": 3548,
    "id": "sentence_3548"
  },
  {
    "type": "sentence",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system.",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system.",
    "position": 3549,
    "id": "sentence_3549"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3550,
    "id": "sentence_3550"
  },
  {
    "type": "sentence",
    "content": "Utf8Stream`\n\n<!",
    "originalSentence": "Utf8Stream`\n\n<!",
    "position": 3551,
    "id": "sentence_3551"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v24.",
    "originalSentence": "-- YAML\nadded: v24.",
    "position": 3552,
    "id": "sentence_3552"
  },
  {
    "type": "sentence",
    "content": "6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand.",
    "originalSentence": "6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand.",
    "position": 3553,
    "id": "sentence_3553"
  },
  {
    "type": "sentence",
    "content": "It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy.",
    "originalSentence": "It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy.",
    "position": 3554,
    "id": "sentence_3554"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed.",
    "originalSentence": "#### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed.",
    "position": 3555,
    "id": "sentence_3555"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing.",
    "originalSentence": "#### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing.",
    "position": 3556,
    "id": "sentence_3556"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written.",
    "originalSentence": "#### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written.",
    "position": 3557,
    "id": "sentence_3557"
  },
  {
    "type": "sentence",
    "content": "The data that was dropped is passed as the first argument\nto the event handle.",
    "originalSentence": "The data that was dropped is passed as the first argument\nto the event handle.",
    "position": 3558,
    "id": "sentence_3558"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs.",
    "originalSentence": "#### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs.",
    "position": 3559,
    "id": "sentence_3559"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file.",
    "originalSentence": "#### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file.",
    "position": 3560,
    "id": "sentence_3560"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes.",
    "originalSentence": "#### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes.",
    "position": 3561,
    "id": "sentence_3561"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed.",
    "originalSentence": "#### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed.",
    "position": 3562,
    "id": "sentence_3562"
  },
  {
    "type": "sentence",
    "content": "The number\nof bytes written is passed as the first argument to the event handler.",
    "originalSentence": "The number\nof bytes written is passed as the first argument to the event handler.",
    "position": 3563,
    "id": "sentence_3563"
  },
  {
    "type": "sentence",
    "content": "#### `new fs.",
    "originalSentence": "#### `new fs.",
    "position": 3564,
    "id": "sentence_3564"
  },
  {
    "type": "sentence",
    "content": "Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it.",
    "originalSentence": "Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it.",
    "position": 3565,
    "id": "sentence_3565"
  },
  {
    "type": "sentence",
    "content": "**Default**: `true`.",
    "originalSentence": "**Default**: `true`.",
    "position": 3566,
    "id": "sentence_3566"
  },
  {
    "type": "sentence",
    "content": "* `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`.",
    "originalSentence": "* `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`.",
    "position": 3567,
    "id": "sentence_3567"
  },
  {
    "type": "sentence",
    "content": "**Default**:\n    `'utf8'`.",
    "originalSentence": "**Default**:\n    `'utf8'`.",
    "position": 3568,
    "id": "sentence_3568"
  },
  {
    "type": "sentence",
    "content": "* `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option).",
    "originalSentence": "* `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option).",
    "position": 3569,
    "id": "sentence_3569"
  },
  {
    "type": "sentence",
    "content": "* `fd`: {number} A file descriptor, something that is returned by `fs.",
    "originalSentence": "* `fd`: {number} A file descriptor, something that is returned by `fs.",
    "position": 3570,
    "id": "sentence_3570"
  },
  {
    "type": "sentence",
    "content": "open()`\n    or `fs.",
    "originalSentence": "open()`\n    or `fs.",
    "position": 3571,
    "id": "sentence_3571"
  },
  {
    "type": "sentence",
    "content": "openSync()`.",
    "originalSentence": "openSync()`.",
    "position": 3572,
    "id": "sentence_3572"
  },
  {
    "type": "sentence",
    "content": "* `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream.",
    "originalSentence": "* `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream.",
    "position": 3573,
    "id": "sentence_3573"
  },
  {
    "type": "sentence",
    "content": "* `fsync`: {boolean} Perform a `fs.",
    "originalSentence": "* `fsync`: {boolean} Perform a `fs.",
    "position": 3574,
    "id": "sentence_3574"
  },
  {
    "type": "sentence",
    "content": "fsyncSync()` every time a write is\n    completed.",
    "originalSentence": "fsyncSync()` every time a write is\n    completed.",
    "position": 3575,
    "id": "sentence_3575"
  },
  {
    "type": "sentence",
    "content": "* `maxLength`: {number} The maximum length of the internal buffer.",
    "originalSentence": "* `maxLength`: {number} The maximum length of the internal buffer.",
    "position": 3576,
    "id": "sentence_3576"
  },
  {
    "type": "sentence",
    "content": "If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing.",
    "originalSentence": "If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing.",
    "position": 3577,
    "id": "sentence_3577"
  },
  {
    "type": "sentence",
    "content": "* `mkdir`: {boolean} Ensure directory for `dest` file exists when true.",
    "originalSentence": "* `mkdir`: {boolean} Ensure directory for `dest` file exists when true.",
    "position": 3578,
    "id": "sentence_3578"
  },
  {
    "type": "sentence",
    "content": "**Default**: `false`.",
    "originalSentence": "**Default**: `false`.",
    "position": 3579,
    "id": "sentence_3579"
  },
  {
    "type": "sentence",
    "content": "* `mode`: {number|string} Specify the creating file mode (see `fs.",
    "originalSentence": "* `mode`: {number|string} Specify the creating file mode (see `fs.",
    "position": 3580,
    "id": "sentence_3580"
  },
  {
    "type": "sentence",
    "content": "* `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds.",
    "originalSentence": "* `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds.",
    "position": 3581,
    "id": "sentence_3581"
  },
  {
    "type": "sentence",
    "content": "* `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error.",
    "originalSentence": "* `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error.",
    "position": 3582,
    "id": "sentence_3582"
  },
  {
    "type": "sentence",
    "content": "If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error.",
    "originalSentence": "If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error.",
    "position": 3583,
    "id": "sentence_3583"
  },
  {
    "type": "sentence",
    "content": "The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write.",
    "originalSentence": "The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write.",
    "position": 3584,
    "id": "sentence_3584"
  },
  {
    "type": "sentence",
    "content": "* `err` {any} An error or `null`.",
    "originalSentence": "* `err` {any} An error or `null`.",
    "position": 3585,
    "id": "sentence_3585"
  },
  {
    "type": "sentence",
    "content": "* `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously.",
    "originalSentence": "* `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously.",
    "position": 3586,
    "id": "sentence_3586"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3587,
    "id": "sentence_3587"
  },
  {
    "type": "sentence",
    "content": "append`\n\n* {boolean} Whether the stream is appending to the file or truncating it.",
    "originalSentence": "append`\n\n* {boolean} Whether the stream is appending to the file or truncating it.",
    "position": 3588,
    "id": "sentence_3588"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3589,
    "id": "sentence_3589"
  },
  {
    "type": "sentence",
    "content": "contentMode`\n\n* {string} The type of data that can be written to the stream.",
    "originalSentence": "contentMode`\n\n* {string} The type of data that can be written to the stream.",
    "position": 3590,
    "id": "sentence_3590"
  },
  {
    "type": "sentence",
    "content": "Supported\n  values are `'utf8'` or `'buffer'`.",
    "originalSentence": "Supported\n  values are `'utf8'` or `'buffer'`.",
    "position": 3591,
    "id": "sentence_3591"
  },
  {
    "type": "sentence",
    "content": "**Default**: `'utf8'`.",
    "originalSentence": "**Default**: `'utf8'`.",
    "position": 3592,
    "id": "sentence_3592"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3593,
    "id": "sentence_3593"
  },
  {
    "type": "sentence",
    "content": "destroy()`\n\nClose the stream immediately, without flushing the internal buffer.",
    "originalSentence": "destroy()`\n\nClose the stream immediately, without flushing the internal buffer.",
    "position": 3594,
    "id": "sentence_3594"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3595,
    "id": "sentence_3595"
  },
  {
    "type": "sentence",
    "content": "end()`\n\nClose the stream gracefully, flushing the internal buffer before closing.",
    "originalSentence": "end()`\n\nClose the stream gracefully, flushing the internal buffer before closing.",
    "position": 3596,
    "id": "sentence_3596"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3597,
    "id": "sentence_3597"
  },
  {
    "type": "sentence",
    "content": "fd`\n\n* {number} The file descriptor that is being written to.",
    "originalSentence": "fd`\n\n* {number} The file descriptor that is being written to.",
    "position": 3598,
    "id": "sentence_3598"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3599,
    "id": "sentence_3599"
  },
  {
    "type": "sentence",
    "content": "file`\n\n* {string} The file that is being written to.",
    "originalSentence": "file`\n\n* {string} The file that is being written to.",
    "position": 3600,
    "id": "sentence_3600"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3601,
    "id": "sentence_3601"
  },
  {
    "type": "sentence",
    "content": "flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`.",
    "originalSentence": "flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`.",
    "position": 3602,
    "id": "sentence_3602"
  },
  {
    "type": "sentence",
    "content": "Writes the current buffer to the file if a write was not in progress.",
    "originalSentence": "Writes the current buffer to the file if a write was not in progress.",
    "position": 3603,
    "id": "sentence_3603"
  },
  {
    "type": "sentence",
    "content": "Do\nnothing if `minLength` is zero or if it is already writing.",
    "originalSentence": "Do\nnothing if `minLength` is zero or if it is already writing.",
    "position": 3604,
    "id": "sentence_3604"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3605,
    "id": "sentence_3605"
  },
  {
    "type": "sentence",
    "content": "flushSync()`\n\nFlushes the buffered data synchronously.",
    "originalSentence": "flushSync()`\n\nFlushes the buffered data synchronously.",
    "position": 3606,
    "id": "sentence_3606"
  },
  {
    "type": "sentence",
    "content": "This is a costly operation.",
    "originalSentence": "This is a costly operation.",
    "position": 3607,
    "id": "sentence_3607"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3608,
    "id": "sentence_3608"
  },
  {
    "type": "sentence",
    "content": "fsync`\n\n* {boolean} Whether the stream is performing a `fs.",
    "originalSentence": "fsync`\n\n* {boolean} Whether the stream is performing a `fs.",
    "position": 3609,
    "id": "sentence_3609"
  },
  {
    "type": "sentence",
    "content": "fsyncSync()` after every\n  write operation.",
    "originalSentence": "fsyncSync()` after every\n  write operation.",
    "position": 3610,
    "id": "sentence_3610"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3611,
    "id": "sentence_3611"
  },
  {
    "type": "sentence",
    "content": "maxLength`\n\n* {number} The maximum length of the internal buffer.",
    "originalSentence": "maxLength`\n\n* {number} The maximum length of the internal buffer.",
    "position": 3612,
    "id": "sentence_3612"
  },
  {
    "type": "sentence",
    "content": "If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data.",
    "originalSentence": "If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data.",
    "position": 3613,
    "id": "sentence_3613"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3614,
    "id": "sentence_3614"
  },
  {
    "type": "sentence",
    "content": "minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing.",
    "originalSentence": "minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing.",
    "position": 3615,
    "id": "sentence_3615"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3616,
    "id": "sentence_3616"
  },
  {
    "type": "sentence",
    "content": "mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists.",
    "originalSentence": "mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists.",
    "position": 3617,
    "id": "sentence_3617"
  },
  {
    "type": "sentence",
    "content": "If `true`, it will create the directory if it does not\n  exist.",
    "originalSentence": "If `true`, it will create the directory if it does not\n  exist.",
    "position": 3618,
    "id": "sentence_3618"
  },
  {
    "type": "sentence",
    "content": "**Default**: `false`.",
    "originalSentence": "**Default**: `false`.",
    "position": 3619,
    "id": "sentence_3619"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3620,
    "id": "sentence_3620"
  },
  {
    "type": "sentence",
    "content": "mode`\n\n* {number|string} The mode of the file that is being written to.",
    "originalSentence": "mode`\n\n* {number|string} The mode of the file that is being written to.",
    "position": 3621,
    "id": "sentence_3621"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3622,
    "id": "sentence_3622"
  },
  {
    "type": "sentence",
    "content": "periodicFlush`\n\n* {number} The number of milliseconds between flushes.",
    "originalSentence": "periodicFlush`\n\n* {number} The number of milliseconds between flushes.",
    "position": 3623,
    "id": "sentence_3623"
  },
  {
    "type": "sentence",
    "content": "If set to `0`, no\n  periodic flushes will be performed.",
    "originalSentence": "If set to `0`, no\n  periodic flushes will be performed.",
    "position": 3624,
    "id": "sentence_3624"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3625,
    "id": "sentence_3625"
  },
  {
    "type": "sentence",
    "content": "reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option).",
    "originalSentence": "reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option).",
    "position": 3626,
    "id": "sentence_3626"
  },
  {
    "type": "sentence",
    "content": "Reopen the file in place, useful for log rotation.",
    "originalSentence": "Reopen the file in place, useful for log rotation.",
    "position": 3627,
    "id": "sentence_3627"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3628,
    "id": "sentence_3628"
  },
  {
    "type": "sentence",
    "content": "sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously.",
    "originalSentence": "sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously.",
    "position": 3629,
    "id": "sentence_3629"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3630,
    "id": "sentence_3630"
  },
  {
    "type": "sentence",
    "content": "write(data)`\n\n* `data` {string|Buffer} The data to write.",
    "originalSentence": "write(data)`\n\n* `data` {string|Buffer} The data to write.",
    "position": 3631,
    "id": "sentence_3631"
  },
  {
    "type": "sentence",
    "content": "* Returns {boolean}\n\nWhen the `options.",
    "originalSentence": "* Returns {boolean}\n\nWhen the `options.",
    "position": 3632,
    "id": "sentence_3632"
  },
  {
    "type": "sentence",
    "content": "contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string.",
    "originalSentence": "contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string.",
    "position": 3633,
    "id": "sentence_3633"
  },
  {
    "type": "sentence",
    "content": "If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}.",
    "originalSentence": "If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}.",
    "position": 3634,
    "id": "sentence_3634"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream.",
    "originalSentence": "#### `utf8Stream.",
    "position": 3635,
    "id": "sentence_3635"
  },
  {
    "type": "sentence",
    "content": "writing`\n\n* {boolean} Whether the stream is currently writing data to the file.",
    "originalSentence": "writing`\n\n* {boolean} Whether the stream is currently writing data to the file.",
    "position": 3636,
    "id": "sentence_3636"
  },
  {
    "type": "sentence",
    "content": "#### `utf8Stream[Symbol.",
    "originalSentence": "#### `utf8Stream[Symbol.",
    "position": 3637,
    "id": "sentence_3637"
  },
  {
    "type": "sentence",
    "content": "dispose]()`\n\nCalls `utf8Stream.",
    "originalSentence": "dispose]()`\n\nCalls `utf8Stream.",
    "position": 3638,
    "id": "sentence_3638"
  },
  {
    "type": "sentence",
    "content": "destroy()`.",
    "originalSentence": "destroy()`.",
    "position": 3639,
    "id": "sentence_3639"
  },
  {
    "type": "sentence",
    "content": "### Class: `fs.",
    "originalSentence": "### Class: `fs.",
    "position": 3640,
    "id": "sentence_3640"
  },
  {
    "type": "sentence",
    "content": "WriteStream`\n\n<!",
    "originalSentence": "WriteStream`\n\n<!",
    "position": 3641,
    "id": "sentence_3641"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3642,
    "id": "sentence_3642"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\n* Extends {stream.",
    "originalSentence": "1.93\n-->\n\n* Extends {stream.",
    "position": 3643,
    "id": "sentence_3643"
  },
  {
    "type": "sentence",
    "content": "Writable}\n\nInstances of {fs.",
    "originalSentence": "Writable}\n\nInstances of {fs.",
    "position": 3644,
    "id": "sentence_3644"
  },
  {
    "type": "sentence",
    "content": "WriteStream} are created and returned using the\n[`fs.",
    "originalSentence": "WriteStream} are created and returned using the\n[`fs.",
    "position": 3645,
    "id": "sentence_3645"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][] function.",
    "originalSentence": "createWriteStream()`][] function.",
    "position": 3646,
    "id": "sentence_3646"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'close'`\n\n<!",
    "originalSentence": "#### Event: `'close'`\n\n<!",
    "position": 3647,
    "id": "sentence_3647"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3648,
    "id": "sentence_3648"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\nEmitted when the {fs.",
    "originalSentence": "1.93\n-->\n\nEmitted when the {fs.",
    "position": 3649,
    "id": "sentence_3649"
  },
  {
    "type": "sentence",
    "content": "WriteStream}'s underlying file descriptor has been closed.",
    "originalSentence": "WriteStream}'s underlying file descriptor has been closed.",
    "position": 3650,
    "id": "sentence_3650"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'open'`\n\n<!",
    "originalSentence": "#### Event: `'open'`\n\n<!",
    "position": 3651,
    "id": "sentence_3651"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3652,
    "id": "sentence_3652"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "originalSentence": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "position": 3653,
    "id": "sentence_3653"
  },
  {
    "type": "sentence",
    "content": "WriteStream}.",
    "originalSentence": "WriteStream}.",
    "position": 3654,
    "id": "sentence_3654"
  },
  {
    "type": "sentence",
    "content": "Emitted when the {fs.",
    "originalSentence": "Emitted when the {fs.",
    "position": 3655,
    "id": "sentence_3655"
  },
  {
    "type": "sentence",
    "content": "WriteStream}'s file is opened.",
    "originalSentence": "WriteStream}'s file is opened.",
    "position": 3656,
    "id": "sentence_3656"
  },
  {
    "type": "sentence",
    "content": "#### Event: `'ready'`\n\n<!",
    "originalSentence": "#### Event: `'ready'`\n\n<!",
    "position": 3657,
    "id": "sentence_3657"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v9.",
    "originalSentence": "-- YAML\nadded: v9.",
    "position": 3658,
    "id": "sentence_3658"
  },
  {
    "type": "sentence",
    "content": "11.0\n-->\n\nEmitted when the {fs.",
    "originalSentence": "11.0\n-->\n\nEmitted when the {fs.",
    "position": 3659,
    "id": "sentence_3659"
  },
  {
    "type": "sentence",
    "content": "WriteStream} is ready to be used.",
    "originalSentence": "WriteStream} is ready to be used.",
    "position": 3660,
    "id": "sentence_3660"
  },
  {
    "type": "sentence",
    "content": "Fires immediately after `'open'`.",
    "originalSentence": "Fires immediately after `'open'`.",
    "position": 3661,
    "id": "sentence_3661"
  },
  {
    "type": "sentence",
    "content": "#### `writeStream.",
    "originalSentence": "#### `writeStream.",
    "position": 3662,
    "id": "sentence_3662"
  },
  {
    "type": "sentence",
    "content": "bytesWritten`\n\n<!",
    "originalSentence": "bytesWritten`\n\n<!",
    "position": 3663,
    "id": "sentence_3663"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3664,
    "id": "sentence_3664"
  },
  {
    "type": "sentence",
    "content": "4.7\n-->\n\nThe number of bytes written so far.",
    "originalSentence": "4.7\n-->\n\nThe number of bytes written so far.",
    "position": 3665,
    "id": "sentence_3665"
  },
  {
    "type": "sentence",
    "content": "Does not include data that is still queued\nfor writing.",
    "originalSentence": "Does not include data that is still queued\nfor writing.",
    "position": 3666,
    "id": "sentence_3666"
  },
  {
    "type": "sentence",
    "content": "#### `writeStream.",
    "originalSentence": "#### `writeStream.",
    "position": 3667,
    "id": "sentence_3667"
  },
  {
    "type": "sentence",
    "content": "close([callback])`\n\n<!",
    "originalSentence": "close([callback])`\n\n<!",
    "position": 3668,
    "id": "sentence_3668"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3669,
    "id": "sentence_3669"
  },
  {
    "type": "sentence",
    "content": "9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`.",
    "originalSentence": "9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`.",
    "position": 3670,
    "id": "sentence_3670"
  },
  {
    "type": "sentence",
    "content": "Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed.",
    "originalSentence": "Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed.",
    "position": 3671,
    "id": "sentence_3671"
  },
  {
    "type": "sentence",
    "content": "#### `writeStream.",
    "originalSentence": "#### `writeStream.",
    "position": 3672,
    "id": "sentence_3672"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v0.",
    "originalSentence": "-- YAML\nadded: v0.",
    "position": 3673,
    "id": "sentence_3673"
  },
  {
    "type": "sentence",
    "content": "1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs.",
    "originalSentence": "1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs.",
    "position": 3674,
    "id": "sentence_3674"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`][].",
    "originalSentence": "createWriteStream()`][].",
    "position": 3675,
    "id": "sentence_3675"
  },
  {
    "type": "sentence",
    "content": "If `path` is passed as a string, then\n`writeStream.",
    "originalSentence": "If `path` is passed as a string, then\n`writeStream.",
    "position": 3676,
    "id": "sentence_3676"
  },
  {
    "type": "sentence",
    "content": "path` will be a string.",
    "originalSentence": "path` will be a string.",
    "position": 3677,
    "id": "sentence_3677"
  },
  {
    "type": "sentence",
    "content": "If `path` is passed as a {Buffer}, then\n`writeStream.",
    "originalSentence": "If `path` is passed as a {Buffer}, then\n`writeStream.",
    "position": 3678,
    "id": "sentence_3678"
  },
  {
    "type": "sentence",
    "content": "path` will be a {Buffer}.",
    "originalSentence": "path` will be a {Buffer}.",
    "position": 3679,
    "id": "sentence_3679"
  },
  {
    "type": "sentence",
    "content": "#### `writeStream.",
    "originalSentence": "#### `writeStream.",
    "position": 3680,
    "id": "sentence_3680"
  },
  {
    "type": "sentence",
    "content": "pending`\n\n<!",
    "originalSentence": "pending`\n\n<!",
    "position": 3681,
    "id": "sentence_3681"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v11.",
    "originalSentence": "-- YAML\nadded: v11.",
    "position": 3682,
    "id": "sentence_3682"
  },
  {
    "type": "sentence",
    "content": "2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "originalSentence": "2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "position": 3683,
    "id": "sentence_3683"
  },
  {
    "type": "sentence",
    "content": "before the `'ready'` event is emitted.",
    "originalSentence": "before the `'ready'` event is emitted.",
    "position": 3684,
    "id": "sentence_3684"
  },
  {
    "type": "sentence",
    "content": "constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "originalSentence": "constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "position": 3685,
    "id": "sentence_3685"
  },
  {
    "type": "sentence",
    "content": "#### FS constants\n\nThe following constants are exported by `fs.",
    "originalSentence": "#### FS constants\n\nThe following constants are exported by `fs.",
    "position": 3686,
    "id": "sentence_3686"
  },
  {
    "type": "sentence",
    "content": "constants` and `fsPromises.",
    "originalSentence": "constants` and `fsPromises.",
    "position": 3687,
    "id": "sentence_3687"
  },
  {
    "type": "sentence",
    "content": "constants`.",
    "originalSentence": "constants`.",
    "position": 3688,
    "id": "sentence_3688"
  },
  {
    "type": "sentence",
    "content": "Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available.",
    "originalSentence": "Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available.",
    "position": 3689,
    "id": "sentence_3689"
  },
  {
    "type": "sentence",
    "content": "For portable applications it is recommended to check for their presence\nbefore use.",
    "originalSentence": "For portable applications it is recommended to check for their presence\nbefore use.",
    "position": 3690,
    "id": "sentence_3690"
  },
  {
    "type": "sentence",
    "content": "To use more than one constant, use the bitwise OR `|` operator.",
    "originalSentence": "To use more than one constant, use the bitwise OR `|` operator.",
    "position": 3691,
    "id": "sentence_3691"
  },
  {
    "type": "sentence",
    "content": "Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...",
    "originalSentence": "Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...",
    "position": 3692,
    "id": "sentence_3692"
  },
  {
    "type": "sentence",
    "content": "});\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises.",
    "originalSentence": "});\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises.",
    "position": 3693,
    "id": "sentence_3693"
  },
  {
    "type": "sentence",
    "content": "access()`][], [`fs.",
    "originalSentence": "access()`][], [`fs.",
    "position": 3694,
    "id": "sentence_3694"
  },
  {
    "type": "sentence",
    "content": "access()`][], and [`fs.",
    "originalSentence": "access()`][], and [`fs.",
    "position": 3695,
    "id": "sentence_3695"
  },
  {
    "type": "sentence",
    "content": "accessSync()`][].",
    "originalSentence": "accessSync()`][].",
    "position": 3696,
    "id": "sentence_3696"
  },
  {
    "type": "sentence",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process.",
    "position": 3697,
    "id": "sentence_3697"
  },
  {
    "type": "sentence",
    "content": "This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions.",
    "originalSentence": "This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions.",
    "position": 3698,
    "id": "sentence_3698"
  },
  {
    "type": "sentence",
    "content": "Default if no mode is specified.",
    "originalSentence": "Default if no mode is specified.",
    "position": 3699,
    "id": "sentence_3699"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process.",
    "position": 3700,
    "id": "sentence_3700"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process.",
    "position": 3701,
    "id": "sentence_3701"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process.",
    "position": 3702,
    "id": "sentence_3702"
  },
  {
    "type": "sentence",
    "content": "This has no effect on Windows\n    (will behave like <code>fs.",
    "originalSentence": "This has no effect on Windows\n    (will behave like <code>fs.",
    "position": 3703,
    "id": "sentence_3703"
  },
  {
    "type": "sentence",
    "content": "F_OK</code>).",
    "originalSentence": "F_OK</code>).",
    "position": 3704,
    "id": "sentence_3704"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "position": 3705,
    "id": "sentence_3705"
  },
  {
    "type": "sentence",
    "content": "##### File copy constants\n\nThe following constants are meant for use with [`fs.",
    "originalSentence": "##### File copy constants\n\nThe following constants are meant for use with [`fs.",
    "position": 3706,
    "id": "sentence_3706"
  },
  {
    "type": "sentence",
    "content": "copyFile()`][].",
    "originalSentence": "copyFile()`][].",
    "position": 3707,
    "id": "sentence_3707"
  },
  {
    "type": "sentence",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists.",
    "position": 3708,
    "id": "sentence_3708"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "position": 3709,
    "id": "sentence_3709"
  },
  {
    "type": "sentence",
    "content": "If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used.",
    "originalSentence": "If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used.",
    "position": 3710,
    "id": "sentence_3710"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "position": 3711,
    "id": "sentence_3711"
  },
  {
    "type": "sentence",
    "content": "If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error.",
    "originalSentence": "If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error.",
    "position": 3712,
    "id": "sentence_3712"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "position": 3713,
    "id": "sentence_3713"
  },
  {
    "type": "sentence",
    "content": "##### File open constants\n\nThe following constants are meant for use with `fs.",
    "originalSentence": "##### File open constants\n\nThe following constants are meant for use with `fs.",
    "position": 3714,
    "id": "sentence_3714"
  },
  {
    "type": "sentence",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access.",
    "position": 3715,
    "id": "sentence_3715"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access.",
    "position": 3716,
    "id": "sentence_3716"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access.",
    "position": 3717,
    "id": "sentence_3717"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist.",
    "position": 3718,
    "id": "sentence_3718"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists.",
    "position": 3719,
    "id": "sentence_3719"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one).",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one).",
    "position": 3720,
    "id": "sentence_3720"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero.",
    "position": 3721,
    "id": "sentence_3721"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file.",
    "position": 3722,
    "id": "sentence_3722"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory.",
    "position": 3723,
    "id": "sentence_3723"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file.",
    "position": 3724,
    "id": "sentence_3724"
  },
  {
    "type": "sentence",
    "content": "This flag is available on Linux operating systems only.",
    "originalSentence": "This flag is available on Linux operating systems only.",
    "position": 3725,
    "id": "sentence_3725"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link.",
    "position": 3726,
    "id": "sentence_3726"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity.",
    "position": 3727,
    "id": "sentence_3727"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity.",
    "position": 3728,
    "id": "sentence_3728"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to.",
    "position": 3729,
    "id": "sentence_3729"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O.",
    "position": 3730,
    "id": "sentence_3730"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible.",
    "position": 3731,
    "id": "sentence_3731"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file.",
    "position": 3732,
    "id": "sentence_3732"
  },
  {
    "type": "sentence",
    "content": "This flag\n    is available on Windows operating systems only.",
    "originalSentence": "This flag\n    is available on Windows operating systems only.",
    "position": 3733,
    "id": "sentence_3733"
  },
  {
    "type": "sentence",
    "content": "On other operating systems,\n    this flag is ignored.",
    "originalSentence": "On other operating systems,\n    this flag is ignored.",
    "position": 3734,
    "id": "sentence_3734"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available.",
    "position": 3735,
    "id": "sentence_3735"
  },
  {
    "type": "sentence",
    "content": "##### File type constants\n\nThe following constants are meant for use with the {fs.",
    "originalSentence": "##### File type constants\n\nThe following constants are meant for use with the {fs.",
    "position": 3736,
    "id": "sentence_3736"
  },
  {
    "type": "sentence",
    "content": "Stats} object's\n`mode` property for determining a file's type.",
    "originalSentence": "Stats} object's\n`mode` property for determining a file's type.",
    "position": 3737,
    "id": "sentence_3737"
  },
  {
    "type": "sentence",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code.",
    "position": 3738,
    "id": "sentence_3738"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file.",
    "position": 3739,
    "id": "sentence_3739"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory.",
    "position": 3740,
    "id": "sentence_3740"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file.",
    "position": 3741,
    "id": "sentence_3741"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file.",
    "position": 3742,
    "id": "sentence_3742"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe.",
    "position": 3743,
    "id": "sentence_3743"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link.",
    "position": 3744,
    "id": "sentence_3744"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket.",
    "position": 3745,
    "id": "sentence_3745"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available.",
    "position": 3746,
    "id": "sentence_3746"
  },
  {
    "type": "sentence",
    "content": "##### File mode constants\n\nThe following constants are meant for use with the {fs.",
    "originalSentence": "##### File mode constants\n\nThe following constants are meant for use with the {fs.",
    "position": 3747,
    "id": "sentence_3747"
  },
  {
    "type": "sentence",
    "content": "Stats} object's\n`mode` property for determining the access permissions for a file.",
    "originalSentence": "Stats} object's\n`mode` property for determining the access permissions for a file.",
    "position": 3748,
    "id": "sentence_3748"
  },
  {
    "type": "sentence",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner.",
    "position": 3749,
    "id": "sentence_3749"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner.",
    "position": 3750,
    "id": "sentence_3750"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner.",
    "position": 3751,
    "id": "sentence_3751"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner.",
    "position": 3752,
    "id": "sentence_3752"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group.",
    "position": 3753,
    "id": "sentence_3753"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group.",
    "position": 3754,
    "id": "sentence_3754"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group.",
    "position": 3755,
    "id": "sentence_3755"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group.",
    "position": 3756,
    "id": "sentence_3756"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others.",
    "position": 3757,
    "id": "sentence_3757"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others.",
    "position": 3758,
    "id": "sentence_3758"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others.",
    "position": 3759,
    "id": "sentence_3759"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others.",
    "position": 3760,
    "id": "sentence_3760"
  },
  {
    "type": "sentence",
    "content": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available.",
    "position": 3761,
    "id": "sentence_3761"
  },
  {
    "type": "sentence",
    "content": "## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods.",
    "originalSentence": "## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods.",
    "position": 3762,
    "id": "sentence_3762"
  },
  {
    "type": "sentence",
    "content": "For example, the following is prone to error because the `fs.",
    "originalSentence": "For example, the following is prone to error because the `fs.",
    "position": 3763,
    "id": "sentence_3763"
  },
  {
    "type": "sentence",
    "content": "stat()`\noperation might complete before the `fs.",
    "originalSentence": "stat()`\noperation might complete before the `fs.",
    "position": 3764,
    "id": "sentence_3764"
  },
  {
    "type": "sentence",
    "content": "rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs.",
    "originalSentence": "rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs.",
    "position": 3765,
    "id": "sentence_3765"
  },
  {
    "type": "sentence",
    "content": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.",
    "position": 3766,
    "id": "sentence_3766"
  },
  {
    "type": "sentence",
    "content": "log('renamed complete');\n});\nfs.",
    "originalSentence": "log('renamed complete');\n});\nfs.",
    "position": 3767,
    "id": "sentence_3767"
  },
  {
    "type": "sentence",
    "content": "stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.",
    "position": 3768,
    "id": "sentence_3768"
  },
  {
    "type": "sentence",
    "content": "log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON.",
    "position": 3769,
    "id": "sentence_3769"
  },
  {
    "type": "sentence",
    "content": "stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.",
    "originalSentence": "stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.",
    "position": 3770,
    "id": "sentence_3770"
  },
  {
    "type": "sentence",
    "content": "log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON.",
    "position": 3771,
    "id": "sentence_3771"
  },
  {
    "type": "sentence",
    "content": "stringify(stats)}`);\n} catch (error) {\n  console.",
    "originalSentence": "stringify(stats)}`);\n} catch (error) {\n  console.",
    "position": 3772,
    "id": "sentence_3772"
  },
  {
    "type": "sentence",
    "content": "error('there was an error:', error.",
    "originalSentence": "error('there was an error:', error.",
    "position": 3773,
    "id": "sentence_3773"
  },
  {
    "type": "sentence",
    "content": "message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.",
    "position": 3774,
    "id": "sentence_3774"
  },
  {
    "type": "sentence",
    "content": "log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON.",
    "position": 3775,
    "id": "sentence_3775"
  },
  {
    "type": "sentence",
    "content": "stringify(stats)}`);\n  } catch (error) {\n    console.",
    "originalSentence": "stringify(stats)}`);\n  } catch (error) {\n    console.",
    "position": 3776,
    "id": "sentence_3776"
  },
  {
    "type": "sentence",
    "content": "error('there was an error:', error.",
    "originalSentence": "error('there was an error:', error.",
    "position": 3777,
    "id": "sentence_3777"
  },
  {
    "type": "sentence",
    "content": "message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs.",
    "originalSentence": "message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs.",
    "position": 3778,
    "id": "sentence_3778"
  },
  {
    "type": "sentence",
    "content": "stat()` call into the callback\nof the `fs.",
    "originalSentence": "stat()` call into the callback\nof the `fs.",
    "position": 3779,
    "id": "sentence_3779"
  },
  {
    "type": "sentence",
    "content": "rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "originalSentence": "rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "position": 3780,
    "id": "sentence_3780"
  },
  {
    "type": "sentence",
    "content": "log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON.",
    "position": 3781,
    "id": "sentence_3781"
  },
  {
    "type": "sentence",
    "content": "stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "originalSentence": "stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "position": 3782,
    "id": "sentence_3782"
  },
  {
    "type": "sentence",
    "content": "log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON.",
    "position": 3783,
    "id": "sentence_3783"
  },
  {
    "type": "sentence",
    "content": "stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol.",
    "originalSentence": "stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol.",
    "position": 3784,
    "id": "sentence_3784"
  },
  {
    "type": "sentence",
    "content": "#### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename.",
    "originalSentence": "#### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename.",
    "position": 3785,
    "id": "sentence_3785"
  },
  {
    "type": "sentence",
    "content": "Relative paths will be resolved relative\nto the current working directory as determined by calling `process.",
    "originalSentence": "Relative paths will be resolved relative\nto the current working directory as determined by calling `process.",
    "position": 3786,
    "id": "sentence_3786"
  },
  {
    "type": "sentence",
    "content": "Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file.",
    "originalSentence": "Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file.",
    "position": 3787,
    "id": "sentence_3787"
  },
  {
    "type": "sentence",
    "content": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "originalSentence": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "position": 3788,
    "id": "sentence_3788"
  },
  {
    "type": "sentence",
    "content": "close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process.",
    "originalSentence": "close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process.",
    "position": 3789,
    "id": "sentence_3789"
  },
  {
    "type": "sentence",
    "content": "cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file.",
    "originalSentence": "cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file.",
    "position": 3790,
    "id": "sentence_3790"
  },
  {
    "type": "sentence",
    "content": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "originalSentence": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "position": 3791,
    "id": "sentence_3791"
  },
  {
    "type": "sentence",
    "content": "close();\n}\n```\n\n#### File URL paths\n\n<!",
    "originalSentence": "close();\n}\n```\n\n#### File URL paths\n\n<!",
    "position": 3792,
    "id": "sentence_3792"
  },
  {
    "type": "sentence",
    "content": "-- YAML\nadded: v7.",
    "originalSentence": "-- YAML\nadded: v7.",
    "position": 3793,
    "id": "sentence_3793"
  },
  {
    "type": "sentence",
    "content": "6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol.",
    "originalSentence": "6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol.",
    "position": 3794,
    "id": "sentence_3794"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths.",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths.",
    "position": 3795,
    "id": "sentence_3795"
  },
  {
    "type": "sentence",
    "content": "##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths.",
    "originalSentence": "##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths.",
    "position": 3796,
    "id": "sentence_3796"
  },
  {
    "type": "sentence",
    "content": "`file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter.",
    "originalSentence": "`file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter.",
    "position": 3797,
    "id": "sentence_3797"
  },
  {
    "type": "sentence",
    "content": "Using another separator will result in an error.",
    "originalSentence": "Using another separator will result in an error.",
    "position": 3798,
    "id": "sentence_3798"
  },
  {
    "type": "sentence",
    "content": "On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!",
    "originalSentence": "On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!",
    "position": 3799,
    "id": "sentence_3799"
  },
  {
    "type": "sentence",
    "content": "readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences.",
    "originalSentence": "readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences.",
    "position": 3800,
    "id": "sentence_3800"
  },
  {
    "type": "sentence",
    "content": "On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings.",
    "originalSentence": "On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings.",
    "position": 3801,
    "id": "sentence_3801"
  },
  {
    "type": "sentence",
    "content": "As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer.",
    "originalSentence": "As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer.",
    "position": 3802,
    "id": "sentence_3802"
  },
  {
    "type": "sentence",
    "content": "from('/open/some/file.",
    "originalSentence": "from('/open/some/file.",
    "position": 3803,
    "id": "sentence_3803"
  },
  {
    "type": "sentence",
    "content": "txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "originalSentence": "txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "position": 3804,
    "id": "sentence_3804"
  },
  {
    "type": "sentence",
    "content": "close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node.",
    "originalSentence": "close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node.",
    "position": 3805,
    "id": "sentence_3805"
  },
  {
    "type": "sentence",
    "content": "js follows the concept of per-drive working directory.",
    "originalSentence": "js follows the concept of per-drive working directory.",
    "position": 3806,
    "id": "sentence_3806"
  },
  {
    "type": "sentence",
    "content": "This\nbehavior can be observed when using a drive path without a backslash.",
    "originalSentence": "This\nbehavior can be observed when using a drive path without a backslash.",
    "position": 3807,
    "id": "sentence_3807"
  },
  {
    "type": "sentence",
    "content": "For\nexample `fs.",
    "originalSentence": "For\nexample `fs.",
    "position": 3808,
    "id": "sentence_3808"
  },
  {
    "type": "sentence",
    "content": "readdirSync('C:\\\\')` can potentially return a different result than\n`fs.",
    "originalSentence": "readdirSync('C:\\\\')` can potentially return a different result than\n`fs.",
    "position": 3809,
    "id": "sentence_3809"
  },
  {
    "type": "sentence",
    "content": "readdirSync('C:')`.",
    "originalSentence": "readdirSync('C:')`.",
    "position": 3810,
    "id": "sentence_3810"
  },
  {
    "type": "sentence",
    "content": "For more information, see\n[this MSDN page][MSDN-Rel-Path].",
    "originalSentence": "For more information, see\n[this MSDN page][MSDN-Rel-Path].",
    "position": 3811,
    "id": "sentence_3811"
  },
  {
    "type": "sentence",
    "content": "### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources.",
    "originalSentence": "### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources.",
    "position": 3812,
    "id": "sentence_3812"
  },
  {
    "type": "sentence",
    "content": "Each open file is assigned a simple numeric\nidentifier called a _file descriptor_.",
    "originalSentence": "Each open file is assigned a simple numeric\nidentifier called a _file descriptor_.",
    "position": 3813,
    "id": "sentence_3813"
  },
  {
    "type": "sentence",
    "content": "At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile.",
    "originalSentence": "At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile.",
    "position": 3814,
    "id": "sentence_3814"
  },
  {
    "type": "sentence",
    "content": "Windows systems use a different but conceptually similar mechanism for\ntracking resources.",
    "originalSentence": "Windows systems use a different but conceptually similar mechanism for\ntracking resources.",
    "position": 3815,
    "id": "sentence_3815"
  },
  {
    "type": "sentence",
    "content": "To simplify things for users, Node.",
    "originalSentence": "To simplify things for users, Node.",
    "position": 3816,
    "id": "sentence_3816"
  },
  {
    "type": "sentence",
    "content": "js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor.",
    "originalSentence": "js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor.",
    "position": 3817,
    "id": "sentence_3817"
  },
  {
    "type": "sentence",
    "content": "The callback-based `fs.",
    "originalSentence": "The callback-based `fs.",
    "position": 3818,
    "id": "sentence_3818"
  },
  {
    "type": "sentence",
    "content": "open()`, and synchronous `fs.",
    "originalSentence": "open()`, and synchronous `fs.",
    "position": 3819,
    "id": "sentence_3819"
  },
  {
    "type": "sentence",
    "content": "openSync()` methods open a\nfile and allocate a new file descriptor.",
    "originalSentence": "openSync()` methods open a\nfile and allocate a new file descriptor.",
    "position": 3820,
    "id": "sentence_3820"
  },
  {
    "type": "sentence",
    "content": "Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file.",
    "originalSentence": "Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file.",
    "position": 3821,
    "id": "sentence_3821"
  },
  {
    "type": "sentence",
    "content": "Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed.",
    "originalSentence": "Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed.",
    "position": 3822,
    "id": "sentence_3822"
  },
  {
    "type": "sentence",
    "content": "Failure to do so will result in a memory leak that will\neventually cause an application to crash.",
    "originalSentence": "Failure to do so will result in a memory leak that will\neventually cause an application to crash.",
    "position": 3823,
    "id": "sentence_3823"
  },
  {
    "type": "sentence",
    "content": "```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file.",
    "originalSentence": "```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file.",
    "position": 3824,
    "id": "sentence_3824"
  },
  {
    "type": "sentence",
    "content": "txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor.",
    "originalSentence": "txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor.",
    "position": 3825,
    "id": "sentence_3825"
  },
  {
    "type": "sentence",
    "content": "These objects are better managed by the system to ensure\nthat resources are not leaked.",
    "originalSentence": "These objects are better managed by the system to ensure\nthat resources are not leaked.",
    "position": 3826,
    "id": "sentence_3826"
  },
  {
    "type": "sentence",
    "content": "However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file.",
    "originalSentence": "However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file.",
    "position": 3827,
    "id": "sentence_3827"
  },
  {
    "type": "sentence",
    "content": "txt', 'r');\n  const stat = await file.",
    "originalSentence": "txt', 'r');\n  const stat = await file.",
    "position": 3828,
    "id": "sentence_3828"
  },
  {
    "type": "sentence",
    "content": "stat();\n  // use stat\n} finally {\n  await file.",
    "originalSentence": "stat();\n  // use stat\n} finally {\n  await file.",
    "position": 3829,
    "id": "sentence_3829"
  },
  {
    "type": "sentence",
    "content": "close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs.",
    "originalSentence": "close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs.",
    "position": 3830,
    "id": "sentence_3830"
  },
  {
    "type": "sentence",
    "content": "FSWatcher()`) use libuv's threadpool.",
    "originalSentence": "FSWatcher()`) use libuv's threadpool.",
    "position": 3831,
    "id": "sentence_3831"
  },
  {
    "type": "sentence",
    "content": "This can have surprising and negative\nperformance implications for some applications.",
    "originalSentence": "This can have surprising and negative\nperformance implications for some applications.",
    "position": 3832,
    "id": "sentence_3832"
  },
  {
    "type": "sentence",
    "content": "See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information.",
    "originalSentence": "See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information.",
    "position": 3833,
    "id": "sentence_3833"
  },
  {
    "type": "sentence",
    "content": "### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring.",
    "originalSentence": "### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring.",
    "position": 3834,
    "id": "sentence_3834"
  },
  {
    "type": "sentence",
    "content": "* `'a'`: Open file for appending.",
    "originalSentence": "* `'a'`: Open file for appending.",
    "position": 3835,
    "id": "sentence_3835"
  },
  {
    "type": "sentence",
    "content": "The file is created if it does not exist.",
    "originalSentence": "The file is created if it does not exist.",
    "position": 3836,
    "id": "sentence_3836"
  },
  {
    "type": "sentence",
    "content": "* `'ax'`: Like `'a'` but fails if the path exists.",
    "originalSentence": "* `'ax'`: Like `'a'` but fails if the path exists.",
    "position": 3837,
    "id": "sentence_3837"
  },
  {
    "type": "sentence",
    "content": "* `'a+'`: Open file for reading and appending.",
    "originalSentence": "* `'a+'`: Open file for reading and appending.",
    "position": 3838,
    "id": "sentence_3838"
  },
  {
    "type": "sentence",
    "content": "The file is created if it does not exist.",
    "originalSentence": "The file is created if it does not exist.",
    "position": 3839,
    "id": "sentence_3839"
  },
  {
    "type": "sentence",
    "content": "* `'ax+'`: Like `'a+'` but fails if the path exists.",
    "originalSentence": "* `'ax+'`: Like `'a+'` but fails if the path exists.",
    "position": 3840,
    "id": "sentence_3840"
  },
  {
    "type": "sentence",
    "content": "* `'as'`: Open file for appending in synchronous mode.",
    "originalSentence": "* `'as'`: Open file for appending in synchronous mode.",
    "position": 3841,
    "id": "sentence_3841"
  },
  {
    "type": "sentence",
    "content": "The file is created if it does not exist.",
    "originalSentence": "The file is created if it does not exist.",
    "position": 3842,
    "id": "sentence_3842"
  },
  {
    "type": "sentence",
    "content": "* `'as+'`: Open file for reading and appending in synchronous mode.",
    "originalSentence": "* `'as+'`: Open file for reading and appending in synchronous mode.",
    "position": 3843,
    "id": "sentence_3843"
  },
  {
    "type": "sentence",
    "content": "The file is created if it does not exist.",
    "originalSentence": "The file is created if it does not exist.",
    "position": 3844,
    "id": "sentence_3844"
  },
  {
    "type": "sentence",
    "content": "* `'r'`: Open file for reading.",
    "originalSentence": "* `'r'`: Open file for reading.",
    "position": 3845,
    "id": "sentence_3845"
  },
  {
    "type": "sentence",
    "content": "An exception occurs if the file does not exist.",
    "originalSentence": "An exception occurs if the file does not exist.",
    "position": 3846,
    "id": "sentence_3846"
  },
  {
    "type": "sentence",
    "content": "* `'rs'`: Open file for reading in synchronous mode.",
    "originalSentence": "* `'rs'`: Open file for reading in synchronous mode.",
    "position": 3847,
    "id": "sentence_3847"
  },
  {
    "type": "sentence",
    "content": "An exception occurs if the file does not exist.",
    "originalSentence": "An exception occurs if the file does not exist.",
    "position": 3848,
    "id": "sentence_3848"
  },
  {
    "type": "sentence",
    "content": "* `'r+'`: Open file for reading and writing.",
    "originalSentence": "* `'r+'`: Open file for reading and writing.",
    "position": 3849,
    "id": "sentence_3849"
  },
  {
    "type": "sentence",
    "content": "An exception occurs if the file does not exist.",
    "originalSentence": "An exception occurs if the file does not exist.",
    "position": 3850,
    "id": "sentence_3850"
  },
  {
    "type": "sentence",
    "content": "* `'rs+'`: Open file for reading and writing in synchronous mode.",
    "originalSentence": "* `'rs+'`: Open file for reading and writing in synchronous mode.",
    "position": 3851,
    "id": "sentence_3851"
  },
  {
    "type": "sentence",
    "content": "Instructs\n  the operating system to bypass the local file system cache.",
    "originalSentence": "Instructs\n  the operating system to bypass the local file system cache.",
    "position": 3852,
    "id": "sentence_3852"
  },
  {
    "type": "sentence",
    "content": "This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache.",
    "originalSentence": "This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache.",
    "position": 3853,
    "id": "sentence_3853"
  },
  {
    "type": "sentence",
    "content": "It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed.",
    "originalSentence": "It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed.",
    "position": 3854,
    "id": "sentence_3854"
  },
  {
    "type": "sentence",
    "content": "This doesn't turn `fs.",
    "originalSentence": "This doesn't turn `fs.",
    "position": 3855,
    "id": "sentence_3855"
  },
  {
    "type": "sentence",
    "content": "open()` or `fsPromises.",
    "originalSentence": "open()` or `fsPromises.",
    "position": 3856,
    "id": "sentence_3856"
  },
  {
    "type": "sentence",
    "content": "open()` into a synchronous\n  blocking call.",
    "originalSentence": "open()` into a synchronous\n  blocking call.",
    "position": 3857,
    "id": "sentence_3857"
  },
  {
    "type": "sentence",
    "content": "If synchronous operation is desired, something like\n  `fs.",
    "originalSentence": "If synchronous operation is desired, something like\n  `fs.",
    "position": 3858,
    "id": "sentence_3858"
  },
  {
    "type": "sentence",
    "content": "openSync()` should be used.",
    "originalSentence": "openSync()` should be used.",
    "position": 3859,
    "id": "sentence_3859"
  },
  {
    "type": "sentence",
    "content": "* `'w'`: Open file for writing.",
    "originalSentence": "* `'w'`: Open file for writing.",
    "position": 3860,
    "id": "sentence_3860"
  },
  {
    "type": "sentence",
    "content": "The file is created (if it does not exist) or truncated (if it exists).",
    "originalSentence": "The file is created (if it does not exist) or truncated (if it exists).",
    "position": 3861,
    "id": "sentence_3861"
  },
  {
    "type": "sentence",
    "content": "* `'wx'`: Like `'w'` but fails if the path exists.",
    "originalSentence": "* `'wx'`: Like `'w'` but fails if the path exists.",
    "position": 3862,
    "id": "sentence_3862"
  },
  {
    "type": "sentence",
    "content": "* `'w+'`: Open file for reading and writing.",
    "originalSentence": "* `'w+'`: Open file for reading and writing.",
    "position": 3863,
    "id": "sentence_3863"
  },
  {
    "type": "sentence",
    "content": "The file is created (if it does not exist) or truncated (if it exists).",
    "originalSentence": "The file is created (if it does not exist) or truncated (if it exists).",
    "position": 3864,
    "id": "sentence_3864"
  },
  {
    "type": "sentence",
    "content": "* `'wx+'`: Like `'w+'` but fails if the path exists.",
    "originalSentence": "* `'wx+'`: Like `'w+'` but fails if the path exists.",
    "position": 3865,
    "id": "sentence_3865"
  },
  {
    "type": "sentence",
    "content": "`flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs.",
    "originalSentence": "`flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs.",
    "position": 3866,
    "id": "sentence_3866"
  },
  {
    "type": "sentence",
    "content": "constants`.",
    "originalSentence": "constants`.",
    "position": 3867,
    "id": "sentence_3867"
  },
  {
    "type": "sentence",
    "content": "On Windows, flags are translated to\ntheir equivalent ones where applicable, e.",
    "originalSentence": "On Windows, flags are translated to\ntheir equivalent ones where applicable, e.",
    "position": 3868,
    "id": "sentence_3868"
  },
  {
    "type": "sentence",
    "content": "`O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`.",
    "originalSentence": "`O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`.",
    "position": 3869,
    "id": "sentence_3869"
  },
  {
    "type": "sentence",
    "content": "The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists.",
    "originalSentence": "The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists.",
    "position": 3870,
    "id": "sentence_3870"
  },
  {
    "type": "sentence",
    "content": "On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist.",
    "originalSentence": "On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist.",
    "position": 3871,
    "id": "sentence_3871"
  },
  {
    "type": "sentence",
    "content": "The exclusive flag might not work with network file systems.",
    "originalSentence": "The exclusive flag might not work with network file systems.",
    "position": 3872,
    "id": "sentence_3872"
  },
  {
    "type": "sentence",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 3873,
    "id": "sentence_3873"
  },
  {
    "type": "sentence",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 3874,
    "id": "sentence_3874"
  },
  {
    "type": "sentence",
    "content": "Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`.",
    "originalSentence": "Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`.",
    "position": 3875,
    "id": "sentence_3875"
  },
  {
    "type": "sentence",
    "content": "The behavior of some flags are platform-specific.",
    "originalSentence": "The behavior of some flags are platform-specific.",
    "position": 3876,
    "id": "sentence_3876"
  },
  {
    "type": "sentence",
    "content": "As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror.",
    "originalSentence": "As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror.",
    "position": 3877,
    "id": "sentence_3877"
  },
  {
    "type": "sentence",
    "content": "In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned.",
    "originalSentence": "In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned.",
    "position": 3878,
    "id": "sentence_3878"
  },
  {
    "type": "sentence",
    "content": "```js\n// macOS and Linux\nfs.",
    "originalSentence": "```js\n// macOS and Linux\nfs.",
    "position": 3879,
    "id": "sentence_3879"
  },
  {
    "type": "sentence",
    "content": "open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs.",
    "originalSentence": "open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs.",
    "position": 3880,
    "id": "sentence_3880"
  },
  {
    "type": "sentence",
    "content": "open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs.",
    "originalSentence": "open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs.",
    "position": 3881,
    "id": "sentence_3881"
  },
  {
    "type": "sentence",
    "content": "open()`, `fs.",
    "originalSentence": "open()`, `fs.",
    "position": 3882,
    "id": "sentence_3882"
  },
  {
    "type": "sentence",
    "content": "writeFile()`, or `fsPromises.",
    "originalSentence": "writeFile()`, or `fsPromises.",
    "position": 3883,
    "id": "sentence_3883"
  },
  {
    "type": "sentence",
    "content": "open()`) will fail with\n`EPERM`.",
    "originalSentence": "open()`) will fail with\n`EPERM`.",
    "position": 3884,
    "id": "sentence_3884"
  },
  {
    "type": "sentence",
    "content": "Existing hidden files can be opened for writing with the `'r+'` flag.",
    "originalSentence": "Existing hidden files can be opened for writing with the `'r+'` flag.",
    "position": 3885,
    "id": "sentence_3885"
  },
  {
    "type": "sentence",
    "content": "A call to `fs.",
    "originalSentence": "A call to `fs.",
    "position": 3886,
    "id": "sentence_3886"
  },
  {
    "type": "sentence",
    "content": "ftruncate()` or `filehandle.",
    "originalSentence": "ftruncate()` or `filehandle.",
    "position": 3887,
    "id": "sentence_3887"
  },
  {
    "type": "sentence",
    "content": "truncate()` can be used to reset\nthe file contents.",
    "originalSentence": "truncate()` can be used to reset\nthe file contents.",
    "position": 3888,
    "id": "sentence_3888"
  },
  {
    "type": "sentence",
    "content": "[#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors.",
    "originalSentence": "[#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors.",
    "position": 3889,
    "id": "sentence_3889"
  },
  {
    "type": "sentence",
    "content": "md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer.",
    "originalSentence": "md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer.",
    "position": 3890,
    "id": "sentence_3890"
  },
  {
    "type": "sentence",
    "content": "byteLength`]: buffer.",
    "originalSentence": "byteLength`]: buffer.",
    "position": 3891,
    "id": "sentence_3891"
  },
  {
    "type": "sentence",
    "content": "md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number.",
    "originalSentence": "md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number.",
    "position": 3892,
    "id": "sentence_3892"
  },
  {
    "type": "sentence",
    "content": "MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli.",
    "originalSentence": "MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli.",
    "position": 3893,
    "id": "sentence_3893"
  },
  {
    "type": "sentence",
    "content": "md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle.",
    "originalSentence": "md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle.",
    "position": 3894,
    "id": "sentence_3894"
  },
  {
    "type": "sentence",
    "content": "createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle.",
    "originalSentence": "createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle.",
    "position": 3895,
    "id": "sentence_3895"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle.",
    "originalSentence": "createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle.",
    "position": 3896,
    "id": "sentence_3896"
  },
  {
    "type": "sentence",
    "content": "writeFile()`]: #filehandlewritefiledata-options\n[`fs.",
    "originalSentence": "writeFile()`]: #filehandlewritefiledata-options\n[`fs.",
    "position": 3897,
    "id": "sentence_3897"
  },
  {
    "type": "sentence",
    "content": "access()`]: #fsaccesspath-mode-callback\n[`fs.",
    "originalSentence": "access()`]: #fsaccesspath-mode-callback\n[`fs.",
    "position": 3898,
    "id": "sentence_3898"
  },
  {
    "type": "sentence",
    "content": "accessSync()`]: #fsaccesssyncpath-mode\n[`fs.",
    "originalSentence": "accessSync()`]: #fsaccesssyncpath-mode\n[`fs.",
    "position": 3899,
    "id": "sentence_3899"
  },
  {
    "type": "sentence",
    "content": "chmod()`]: #fschmodpath-mode-callback\n[`fs.",
    "originalSentence": "chmod()`]: #fschmodpath-mode-callback\n[`fs.",
    "position": 3900,
    "id": "sentence_3900"
  },
  {
    "type": "sentence",
    "content": "chown()`]: #fschownpath-uid-gid-callback\n[`fs.",
    "originalSentence": "chown()`]: #fschownpath-uid-gid-callback\n[`fs.",
    "position": 3901,
    "id": "sentence_3901"
  },
  {
    "type": "sentence",
    "content": "copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs.",
    "originalSentence": "copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs.",
    "position": 3902,
    "id": "sentence_3902"
  },
  {
    "type": "sentence",
    "content": "copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs.",
    "originalSentence": "copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs.",
    "position": 3903,
    "id": "sentence_3903"
  },
  {
    "type": "sentence",
    "content": "createReadStream()`]: #fscreatereadstreampath-options\n[`fs.",
    "originalSentence": "createReadStream()`]: #fscreatereadstreampath-options\n[`fs.",
    "position": 3904,
    "id": "sentence_3904"
  },
  {
    "type": "sentence",
    "content": "createWriteStream()`]: #fscreatewritestreampath-options\n[`fs.",
    "originalSentence": "createWriteStream()`]: #fscreatewritestreampath-options\n[`fs.",
    "position": 3905,
    "id": "sentence_3905"
  },
  {
    "type": "sentence",
    "content": "exists()`]: #fsexistspath-callback\n[`fs.",
    "originalSentence": "exists()`]: #fsexistspath-callback\n[`fs.",
    "position": 3906,
    "id": "sentence_3906"
  },
  {
    "type": "sentence",
    "content": "fstat()`]: #fsfstatfd-options-callback\n[`fs.",
    "originalSentence": "fstat()`]: #fsfstatfd-options-callback\n[`fs.",
    "position": 3907,
    "id": "sentence_3907"
  },
  {
    "type": "sentence",
    "content": "ftruncate()`]: #fsftruncatefd-len-callback\n[`fs.",
    "originalSentence": "ftruncate()`]: #fsftruncatefd-len-callback\n[`fs.",
    "position": 3908,
    "id": "sentence_3908"
  },
  {
    "type": "sentence",
    "content": "futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs.",
    "originalSentence": "futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs.",
    "position": 3909,
    "id": "sentence_3909"
  },
  {
    "type": "sentence",
    "content": "lstat()`]: #fslstatpath-options-callback\n[`fs.",
    "originalSentence": "lstat()`]: #fslstatpath-options-callback\n[`fs.",
    "position": 3910,
    "id": "sentence_3910"
  },
  {
    "type": "sentence",
    "content": "lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs.",
    "originalSentence": "lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs.",
    "position": 3911,
    "id": "sentence_3911"
  },
  {
    "type": "sentence",
    "content": "mkdir()`]: #fsmkdirpath-options-callback\n[`fs.",
    "originalSentence": "mkdir()`]: #fsmkdirpath-options-callback\n[`fs.",
    "position": 3912,
    "id": "sentence_3912"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs.",
    "originalSentence": "mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs.",
    "position": 3913,
    "id": "sentence_3913"
  },
  {
    "type": "sentence",
    "content": "open()`]: #fsopenpath-flags-mode-callback\n[`fs.",
    "originalSentence": "open()`]: #fsopenpath-flags-mode-callback\n[`fs.",
    "position": 3914,
    "id": "sentence_3914"
  },
  {
    "type": "sentence",
    "content": "opendir()`]: #fsopendirpath-options-callback\n[`fs.",
    "originalSentence": "opendir()`]: #fsopendirpath-options-callback\n[`fs.",
    "position": 3915,
    "id": "sentence_3915"
  },
  {
    "type": "sentence",
    "content": "opendirSync()`]: #fsopendirsyncpath-options\n[`fs.",
    "originalSentence": "opendirSync()`]: #fsopendirsyncpath-options\n[`fs.",
    "position": 3916,
    "id": "sentence_3916"
  },
  {
    "type": "sentence",
    "content": "read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs.",
    "originalSentence": "read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs.",
    "position": 3917,
    "id": "sentence_3917"
  },
  {
    "type": "sentence",
    "content": "readFile()`]: #fsreadfilepath-options-callback\n[`fs.",
    "originalSentence": "readFile()`]: #fsreadfilepath-options-callback\n[`fs.",
    "position": 3918,
    "id": "sentence_3918"
  },
  {
    "type": "sentence",
    "content": "readFileSync()`]: #fsreadfilesyncpath-options\n[`fs.",
    "originalSentence": "readFileSync()`]: #fsreadfilesyncpath-options\n[`fs.",
    "position": 3919,
    "id": "sentence_3919"
  },
  {
    "type": "sentence",
    "content": "readdir()`]: #fsreaddirpath-options-callback\n[`fs.",
    "originalSentence": "readdir()`]: #fsreaddirpath-options-callback\n[`fs.",
    "position": 3920,
    "id": "sentence_3920"
  },
  {
    "type": "sentence",
    "content": "readdirSync()`]: #fsreaddirsyncpath-options\n[`fs.",
    "originalSentence": "readdirSync()`]: #fsreaddirsyncpath-options\n[`fs.",
    "position": 3921,
    "id": "sentence_3921"
  },
  {
    "type": "sentence",
    "content": "readv()`]: #fsreadvfd-buffers-position-callback\n[`fs.",
    "originalSentence": "readv()`]: #fsreadvfd-buffers-position-callback\n[`fs.",
    "position": 3922,
    "id": "sentence_3922"
  },
  {
    "type": "sentence",
    "content": "realpath()`]: #fsrealpathpath-options-callback\n[`fs.",
    "originalSentence": "realpath()`]: #fsrealpathpath-options-callback\n[`fs.",
    "position": 3923,
    "id": "sentence_3923"
  },
  {
    "type": "sentence",
    "content": "rm()`]: #fsrmpath-options-callback\n[`fs.",
    "originalSentence": "rm()`]: #fsrmpath-options-callback\n[`fs.",
    "position": 3924,
    "id": "sentence_3924"
  },
  {
    "type": "sentence",
    "content": "rmSync()`]: #fsrmsyncpath-options\n[`fs.",
    "originalSentence": "rmSync()`]: #fsrmsyncpath-options\n[`fs.",
    "position": 3925,
    "id": "sentence_3925"
  },
  {
    "type": "sentence",
    "content": "rmdir()`]: #fsrmdirpath-options-callback\n[`fs.",
    "originalSentence": "rmdir()`]: #fsrmdirpath-options-callback\n[`fs.",
    "position": 3926,
    "id": "sentence_3926"
  },
  {
    "type": "sentence",
    "content": "stat()`]: #fsstatpath-options-callback\n[`fs.",
    "originalSentence": "stat()`]: #fsstatpath-options-callback\n[`fs.",
    "position": 3927,
    "id": "sentence_3927"
  },
  {
    "type": "sentence",
    "content": "statfs()`]: #fsstatfspath-options-callback\n[`fs.",
    "originalSentence": "statfs()`]: #fsstatfspath-options-callback\n[`fs.",
    "position": 3928,
    "id": "sentence_3928"
  },
  {
    "type": "sentence",
    "content": "symlink()`]: #fssymlinktarget-path-type-callback\n[`fs.",
    "originalSentence": "symlink()`]: #fssymlinktarget-path-type-callback\n[`fs.",
    "position": 3929,
    "id": "sentence_3929"
  },
  {
    "type": "sentence",
    "content": "utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs.",
    "originalSentence": "utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs.",
    "position": 3930,
    "id": "sentence_3930"
  },
  {
    "type": "sentence",
    "content": "watch()`]: #fswatchfilename-options-listener\n[`fs.",
    "originalSentence": "watch()`]: #fswatchfilename-options-listener\n[`fs.",
    "position": 3931,
    "id": "sentence_3931"
  },
  {
    "type": "sentence",
    "content": "write(fd, buffer...)",
    "originalSentence": "write(fd, buffer...)",
    "position": 3932,
    "id": "sentence_3932"
  },
  {
    "type": "sentence",
    "content": "`]: #fswritefd-buffer-offset-length-position-callback\n[`fs.",
    "originalSentence": "`]: #fswritefd-buffer-offset-length-position-callback\n[`fs.",
    "position": 3933,
    "id": "sentence_3933"
  },
  {
    "type": "sentence",
    "content": "write(fd, string...)",
    "originalSentence": "write(fd, string...)",
    "position": 3934,
    "id": "sentence_3934"
  },
  {
    "type": "sentence",
    "content": "`]: #fswritefd-string-position-encoding-callback\n[`fs.",
    "originalSentence": "`]: #fswritefd-string-position-encoding-callback\n[`fs.",
    "position": 3935,
    "id": "sentence_3935"
  },
  {
    "type": "sentence",
    "content": "writeFile()`]: #fswritefilefile-data-options-callback\n[`fs.",
    "originalSentence": "writeFile()`]: #fswritefilefile-data-options-callback\n[`fs.",
    "position": 3936,
    "id": "sentence_3936"
  },
  {
    "type": "sentence",
    "content": "writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises.",
    "originalSentence": "writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises.",
    "position": 3937,
    "id": "sentence_3937"
  },
  {
    "type": "sentence",
    "content": "access()`]: #fspromisesaccesspath-mode\n[`fsPromises.",
    "originalSentence": "access()`]: #fspromisesaccesspath-mode\n[`fsPromises.",
    "position": 3938,
    "id": "sentence_3938"
  },
  {
    "type": "sentence",
    "content": "copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises.",
    "originalSentence": "copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises.",
    "position": 3939,
    "id": "sentence_3939"
  },
  {
    "type": "sentence",
    "content": "mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises.",
    "originalSentence": "mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises.",
    "position": 3940,
    "id": "sentence_3940"
  },
  {
    "type": "sentence",
    "content": "open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises.",
    "originalSentence": "open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises.",
    "position": 3941,
    "id": "sentence_3941"
  },
  {
    "type": "sentence",
    "content": "opendir()`]: #fspromisesopendirpath-options\n[`fsPromises.",
    "originalSentence": "opendir()`]: #fspromisesopendirpath-options\n[`fsPromises.",
    "position": 3942,
    "id": "sentence_3942"
  },
  {
    "type": "sentence",
    "content": "rm()`]: #fspromisesrmpath-options\n[`fsPromises.",
    "originalSentence": "rm()`]: #fspromisesrmpath-options\n[`fsPromises.",
    "position": 3943,
    "id": "sentence_3943"
  },
  {
    "type": "sentence",
    "content": "stat()`]: #fspromisesstatpath-options\n[`fsPromises.",
    "originalSentence": "stat()`]: #fspromisesstatpath-options\n[`fsPromises.",
    "position": 3944,
    "id": "sentence_3944"
  },
  {
    "type": "sentence",
    "content": "utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util.",
    "originalSentence": "utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util.",
    "position": 3945,
    "id": "sentence_3945"
  },
  {
    "type": "sentence",
    "content": "promisify()`]: util.",
    "originalSentence": "promisify()`]: util.",
    "position": 3946,
    "id": "sentence_3946"
  },
  {
    "type": "sentence",
    "content": "md#utilpromisifyoriginal\n[bigints]: https://tc39.github.io/proposal-bigint\n[caveats]: #caveats\n[chcp]: https://ss64.com/nt/chcp.html\n[inode]: https://en.wikipedia.org/wiki/Inode\n[support of file system `flags`]: #file-system-flags",
    "originalSentence": "md#utilpromisifyoriginal\n[bigints]: https://tc39.github.io/proposal-bigint\n[caveats]: #caveats\n[chcp]: https://ss64.com/nt/chcp.html\n[inode]: https://en.wikipedia.org/wiki/Inode\n[support of file system `flags`]: #file-system-flags",
    "position": 3947,
    "id": "sentence_3947"
  },
  {
    "type": "window",
    "content": "# File system\n\n<! --introduced_in=v0. 10.0-->\n\n> Stability: 2 - Stable\n\n<!",
    "originalSentence": "# File system\n\n<! --introduced_in=v0. 10.0-->\n\n> Stability: 2 - Stable\n\n<!",
    "position": 3948,
    "id": "window_3948"
  },
  {
    "type": "window",
    "content": "--introduced_in=v0. 10.0-->\n\n> Stability: 2 - Stable\n\n<! --name=fs-->\n\n<!",
    "originalSentence": "--introduced_in=v0. 10.0-->\n\n> Stability: 2 - Stable\n\n<! --name=fs-->\n\n<!",
    "position": 3949,
    "id": "window_3949"
  },
  {
    "type": "window",
    "content": "10.0-->\n\n> Stability: 2 - Stable\n\n<! --name=fs-->\n\n<! -- source_link=lib/fs.",
    "originalSentence": "10.0-->\n\n> Stability: 2 - Stable\n\n<! --name=fs-->\n\n<! -- source_link=lib/fs.",
    "position": 3950,
    "id": "window_3950"
  },
  {
    "type": "window",
    "content": "--name=fs-->\n\n<! -- source_link=lib/fs. js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions.",
    "originalSentence": "--name=fs-->\n\n<! -- source_link=lib/fs. js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions.",
    "position": 3951,
    "id": "window_3951"
  },
  {
    "type": "window",
    "content": "-- source_link=lib/fs. js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions. To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).",
    "originalSentence": "-- source_link=lib/fs. js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions. To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).",
    "position": 3952,
    "id": "window_3952"
  },
  {
    "type": "window",
    "content": "js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions. To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM). ## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete.",
    "originalSentence": "js -->\n\nThe `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions. To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM). ## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete.",
    "position": 3953,
    "id": "window_3953"
  },
  {
    "type": "window",
    "content": "To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM). ## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete. ```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console.",
    "originalSentence": "To use the promise-based APIs:\n\n```mjs\nimport * as fs from 'node:fs/promises';\n```\n\n```cjs\nconst fs = require('node:fs/promises');\n```\n\nTo use the callback and sync APIs:\n\n```mjs\nimport * as fs from 'node:fs';\n```\n\n```cjs\nconst fs = require('node:fs');\n```\n\nAll file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM). ## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete. ```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console.",
    "position": 3954,
    "id": "window_3954"
  },
  {
    "type": "window",
    "content": "## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete. ```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.",
    "originalSentence": "## Promise example\n\nPromise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete. ```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.",
    "position": 3955,
    "id": "window_3955"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (error) {\n  console. error('there was an error:', error.",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (error) {\n  console. error('there was an error:', error.",
    "position": 3956,
    "id": "window_3956"
  },
  {
    "type": "window",
    "content": "log('successfully deleted /tmp/hello');\n} catch (error) {\n  console. error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n} catch (error) {\n  console. error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console.",
    "position": 3957,
    "id": "window_3957"
  },
  {
    "type": "window",
    "content": "error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console. log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.",
    "originalSentence": "error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console. log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.",
    "position": 3958,
    "id": "window_3958"
  },
  {
    "type": "window",
    "content": "message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console. log(`successfully deleted ${path}`);\n  } catch (error) {\n    console. error('there was an error:', error.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console. log(`successfully deleted ${path}`);\n  } catch (error) {\n    console. error('there was an error:', error.",
    "position": 3959,
    "id": "window_3959"
  },
  {
    "type": "window",
    "content": "log(`successfully deleted ${path}`);\n  } catch (error) {\n    console. error('there was an error:', error. message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously.",
    "originalSentence": "log(`successfully deleted ${path}`);\n  } catch (error) {\n    console. error('there was an error:', error. message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously.",
    "position": 3960,
    "id": "window_3960"
  },
  {
    "type": "window",
    "content": "error('there was an error:', error. message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously. The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception.",
    "originalSentence": "error('there was an error:', error. message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously. The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception.",
    "position": 3961,
    "id": "window_3961"
  },
  {
    "type": "window",
    "content": "message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously. The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception. If the operation is completed successfully, then\nthe first argument is `null` or `undefined`.",
    "originalSentence": "message);\n  }\n})('/tmp/hello');\n```\n\n## Callback example\n\nThe callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously. The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception. If the operation is completed successfully, then\nthe first argument is `null` or `undefined`.",
    "position": 3962,
    "id": "window_3962"
  },
  {
    "type": "window",
    "content": "The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception. If the operation is completed successfully, then\nthe first argument is `null` or `undefined`. ```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception. If the operation is completed successfully, then\nthe first argument is `null` or `undefined`. ```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "position": 3963,
    "id": "window_3963"
  },
  {
    "type": "window",
    "content": "If the operation is completed successfully, then\nthe first argument is `null` or `undefined`. ```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "If the operation is completed successfully, then\nthe first argument is `null` or `undefined`. ```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.",
    "position": 3964,
    "id": "window_3964"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required.",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required.",
    "position": 3965,
    "id": "window_3965"
  },
  {
    "type": "window",
    "content": "log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required. ## Synchronous example\n\nThe synchronous APIs block the Node.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n});\n```\n\n```cjs\nconst { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console. log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required. ## Synchronous example\n\nThe synchronous APIs block the Node.",
    "position": 3966,
    "id": "window_3966"
  },
  {
    "type": "window",
    "content": "log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required. ## Synchronous example\n\nThe synchronous APIs block the Node. js event loop and further JavaScript\nexecution until the operation is complete.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n});\n```\n\nThe callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required. ## Synchronous example\n\nThe synchronous APIs block the Node. js event loop and further JavaScript\nexecution until the operation is complete.",
    "position": 3967,
    "id": "window_3967"
  },
  {
    "type": "window",
    "content": "## Synchronous example\n\nThe synchronous APIs block the Node. js event loop and further JavaScript\nexecution until the operation is complete. Exceptions are thrown immediately\nand can be handled using `try…",
    "originalSentence": "## Synchronous example\n\nThe synchronous APIs block the Node. js event loop and further JavaScript\nexecution until the operation is complete. Exceptions are thrown immediately\nand can be handled using `try…",
    "position": 3968,
    "id": "window_3968"
  },
  {
    "type": "window",
    "content": "js event loop and further JavaScript\nexecution until the operation is complete. Exceptions are thrown immediately\nand can be handled using `try… catch`, or can be allowed to bubble up.",
    "originalSentence": "js event loop and further JavaScript\nexecution until the operation is complete. Exceptions are thrown immediately\nand can be handled using `try… catch`, or can be allowed to bubble up.",
    "position": 3969,
    "id": "window_3969"
  },
  {
    "type": "window",
    "content": "Exceptions are thrown immediately\nand can be handled using `try… catch`, or can be allowed to bubble up. ```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "originalSentence": "Exceptions are thrown immediately\nand can be handled using `try… catch`, or can be allowed to bubble up. ```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "position": 3970,
    "id": "window_3970"
  },
  {
    "type": "window",
    "content": "catch`, or can be allowed to bubble up. ```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "originalSentence": "catch`, or can be allowed to bubble up. ```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.",
    "position": 3971,
    "id": "window_3971"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<!",
    "originalSentence": "```mjs\nimport { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<!",
    "position": 3972,
    "id": "window_3972"
  },
  {
    "type": "window",
    "content": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n```cjs\nconst { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console. log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<! -- YAML\nadded: v10.",
    "position": 3973,
    "id": "window_3973"
  },
  {
    "type": "window",
    "content": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "originalSentence": "log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```\n\n## Promises API\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "position": 3974,
    "id": "window_3974"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`.",
    "position": 3975,
    "id": "window_3975"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`. - version:\n    - v11.",
    "originalSentence": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`. - version:\n    - v11.",
    "position": 3976,
    "id": "window_3976"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`. - version:\n    - v11. 14.0\n    - v10.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`. - version:\n    - v11. 14.0\n    - v10.",
    "position": 3977,
    "id": "window_3977"
  },
  {
    "type": "window",
    "content": "- version:\n    - v11. 14.0\n    - v10. 17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental.",
    "originalSentence": "- version:\n    - v11. 14.0\n    - v10. 17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental.",
    "position": 3978,
    "id": "window_3978"
  },
  {
    "type": "window",
    "content": "14.0\n    - v10. 17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental. - version: v10.",
    "originalSentence": "14.0\n    - v10. 17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental. - version: v10.",
    "position": 3979,
    "id": "window_3979"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental. - version: v10. 1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs').",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental. - version: v10. 1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs').",
    "position": 3980,
    "id": "window_3980"
  },
  {
    "type": "window",
    "content": "- version: v10. 1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs'). promises` only.",
    "originalSentence": "- version: v10. 1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs'). promises` only.",
    "position": 3981,
    "id": "window_3981"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs'). promises` only. -->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs'). promises` only. -->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises.",
    "position": 3982,
    "id": "window_3982"
  },
  {
    "type": "window",
    "content": "promises` only. -->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises. The promise APIs use the underlying Node.",
    "originalSentence": "promises` only. -->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises. The promise APIs use the underlying Node.",
    "position": 3983,
    "id": "window_3983"
  },
  {
    "type": "window",
    "content": "-->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises. The promise APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread.",
    "originalSentence": "-->\n\nThe `fs/promises` API provides asynchronous file system methods that return\npromises. The promise APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread.",
    "position": 3984,
    "id": "window_3984"
  },
  {
    "type": "window",
    "content": "The promise APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe.",
    "originalSentence": "The promise APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe.",
    "position": 3985,
    "id": "window_3985"
  },
  {
    "type": "window",
    "content": "js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "originalSentence": "js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "position": 3986,
    "id": "window_3986"
  },
  {
    "type": "window",
    "content": "These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### Class: `FileHandle`\n\n<!",
    "originalSentence": "These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### Class: `FileHandle`\n\n<!",
    "position": 3987,
    "id": "window_3987"
  },
  {
    "type": "window",
    "content": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### Class: `FileHandle`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### Class: `FileHandle`\n\n<! -- YAML\nadded: v10.",
    "position": 3988,
    "id": "window_3988"
  },
  {
    "type": "window",
    "content": "### Class: `FileHandle`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor.",
    "originalSentence": "### Class: `FileHandle`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor.",
    "position": 3989,
    "id": "window_3989"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor. Instances of the {FileHandle} object are created by the `fsPromises.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor. Instances of the {FileHandle} object are created by the `fsPromises.",
    "position": 3990,
    "id": "window_3990"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor. Instances of the {FileHandle} object are created by the `fsPromises. open()`\nmethod.",
    "originalSentence": "0.0\n-->\n\nA {FileHandle} object is an object wrapper for a numeric file descriptor. Instances of the {FileHandle} object are created by the `fsPromises. open()`\nmethod.",
    "position": 3991,
    "id": "window_3991"
  },
  {
    "type": "window",
    "content": "Instances of the {FileHandle} object are created by the `fsPromises. open()`\nmethod. All {FileHandle} objects are {EventEmitter}s.",
    "originalSentence": "Instances of the {FileHandle} object are created by the `fsPromises. open()`\nmethod. All {FileHandle} objects are {EventEmitter}s.",
    "position": 3992,
    "id": "window_3992"
  },
  {
    "type": "window",
    "content": "open()`\nmethod. All {FileHandle} objects are {EventEmitter}s. If a {FileHandle} is not closed using the `filehandle.",
    "originalSentence": "open()`\nmethod. All {FileHandle} objects are {EventEmitter}s. If a {FileHandle} is not closed using the `filehandle.",
    "position": 3993,
    "id": "window_3993"
  },
  {
    "type": "window",
    "content": "All {FileHandle} objects are {EventEmitter}s. If a {FileHandle} is not closed using the `filehandle. close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks.",
    "originalSentence": "All {FileHandle} objects are {EventEmitter}s. If a {FileHandle} is not closed using the `filehandle. close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks.",
    "position": 3994,
    "id": "window_3994"
  },
  {
    "type": "window",
    "content": "If a {FileHandle} is not closed using the `filehandle. close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks. Please do not rely on this behavior because\nit can be unreliable and the file may not be closed.",
    "originalSentence": "If a {FileHandle} is not closed using the `filehandle. close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks. Please do not rely on this behavior because\nit can be unreliable and the file may not be closed.",
    "position": 3995,
    "id": "window_3995"
  },
  {
    "type": "window",
    "content": "close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks. Please do not rely on this behavior because\nit can be unreliable and the file may not be closed. Instead, always explicitly\nclose {FileHandle}s.",
    "originalSentence": "close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks. Please do not rely on this behavior because\nit can be unreliable and the file may not be closed. Instead, always explicitly\nclose {FileHandle}s.",
    "position": 3996,
    "id": "window_3996"
  },
  {
    "type": "window",
    "content": "Please do not rely on this behavior because\nit can be unreliable and the file may not be closed. Instead, always explicitly\nclose {FileHandle}s. Node.",
    "originalSentence": "Please do not rely on this behavior because\nit can be unreliable and the file may not be closed. Instead, always explicitly\nclose {FileHandle}s. Node.",
    "position": 3997,
    "id": "window_3997"
  },
  {
    "type": "window",
    "content": "Instead, always explicitly\nclose {FileHandle}s. Node. js may change this behavior in the future.",
    "originalSentence": "Instead, always explicitly\nclose {FileHandle}s. Node. js may change this behavior in the future.",
    "position": 3998,
    "id": "window_3998"
  },
  {
    "type": "window",
    "content": "Node. js may change this behavior in the future. #### Event: `'close'`\n\n<!",
    "originalSentence": "Node. js may change this behavior in the future. #### Event: `'close'`\n\n<!",
    "position": 3999,
    "id": "window_3999"
  },
  {
    "type": "window",
    "content": "js may change this behavior in the future. #### Event: `'close'`\n\n<! -- YAML\nadded: v15.",
    "originalSentence": "js may change this behavior in the future. #### Event: `'close'`\n\n<! -- YAML\nadded: v15.",
    "position": 4000,
    "id": "window_4000"
  },
  {
    "type": "window",
    "content": "#### Event: `'close'`\n\n<! -- YAML\nadded: v15. 4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used.",
    "originalSentence": "#### Event: `'close'`\n\n<! -- YAML\nadded: v15. 4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used.",
    "position": 4001,
    "id": "window_4001"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v15. 4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used. #### `filehandle.",
    "originalSentence": "-- YAML\nadded: v15. 4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used. #### `filehandle.",
    "position": 4002,
    "id": "window_4002"
  },
  {
    "type": "window",
    "content": "4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used. #### `filehandle. appendFile(data[, options])`\n\n<!",
    "originalSentence": "4.0\n-->\n\nThe `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used. #### `filehandle. appendFile(data[, options])`\n\n<!",
    "position": 4003,
    "id": "window_4003"
  },
  {
    "type": "window",
    "content": "#### `filehandle. appendFile(data[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. appendFile(data[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4004,
    "id": "window_4004"
  },
  {
    "type": "window",
    "content": "appendFile(data[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "appendFile(data[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21.",
    "position": 4005,
    "id": "window_4005"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "position": 4006,
    "id": "window_4006"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 4007,
    "id": "window_4007"
  },
  {
    "type": "window",
    "content": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version:\n      - v15.",
    "originalSentence": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version:\n      - v15.",
    "position": 4008,
    "id": "window_4008"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version:\n      - v15. 14.0\n      - v14.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version:\n      - v15. 14.0\n      - v14.",
    "position": 4009,
    "id": "window_4009"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "originalSentence": "- version:\n      - v15. 14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "position": 4010,
    "id": "window_4010"
  },
  {
    "type": "window",
    "content": "14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14.",
    "originalSentence": "14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14.",
    "position": 4011,
    "id": "window_4011"
  },
  {
    "type": "window",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 4012,
    "id": "window_4012"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "position": 4013,
    "id": "window_4013"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4014,
    "id": "window_4014"
  },
  {
    "type": "window",
    "content": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success. Alias of [`filehandle.",
    "originalSentence": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success. Alias of [`filehandle.",
    "position": 4015,
    "id": "window_4015"
  },
  {
    "type": "window",
    "content": "**Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success. Alias of [`filehandle. writeFile()`][].",
    "originalSentence": "**Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success. Alias of [`filehandle. writeFile()`][].",
    "position": 4016,
    "id": "window_4016"
  },
  {
    "type": "window",
    "content": "Alias of [`filehandle. writeFile()`][]. When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises.",
    "originalSentence": "Alias of [`filehandle. writeFile()`][]. When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises.",
    "position": 4017,
    "id": "window_4017"
  },
  {
    "type": "window",
    "content": "writeFile()`][]. When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises. open()`][].",
    "originalSentence": "writeFile()`][]. When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises. open()`][].",
    "position": 4018,
    "id": "window_4018"
  },
  {
    "type": "window",
    "content": "When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises. open()`][]. Therefore, this is equivalent to\n[`filehandle.",
    "originalSentence": "When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises. open()`][]. Therefore, this is equivalent to\n[`filehandle.",
    "position": 4019,
    "id": "window_4019"
  },
  {
    "type": "window",
    "content": "open()`][]. Therefore, this is equivalent to\n[`filehandle. writeFile()`][].",
    "originalSentence": "open()`][]. Therefore, this is equivalent to\n[`filehandle. writeFile()`][].",
    "position": 4020,
    "id": "window_4020"
  },
  {
    "type": "window",
    "content": "Therefore, this is equivalent to\n[`filehandle. writeFile()`][]. #### `filehandle.",
    "originalSentence": "Therefore, this is equivalent to\n[`filehandle. writeFile()`][]. #### `filehandle.",
    "position": 4021,
    "id": "window_4021"
  },
  {
    "type": "window",
    "content": "writeFile()`][]. #### `filehandle. chmod(mode)`\n\n<!",
    "originalSentence": "writeFile()`][]. #### `filehandle. chmod(mode)`\n\n<!",
    "position": 4022,
    "id": "window_4022"
  },
  {
    "type": "window",
    "content": "#### `filehandle. chmod(mode)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. chmod(mode)`\n\n<! -- YAML\nadded: v10.",
    "position": 4023,
    "id": "window_4023"
  },
  {
    "type": "window",
    "content": "chmod(mode)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `mode` {integer} the file mode bit mask.",
    "originalSentence": "chmod(mode)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `mode` {integer} the file mode bit mask.",
    "position": 4024,
    "id": "window_4024"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `mode` {integer} the file mode bit mask. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `mode` {integer} the file mode bit mask. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4025,
    "id": "window_4025"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `mode` {integer} the file mode bit mask. * Returns: {Promise} Fulfills with `undefined` upon success. Modifies the permissions on the file.",
    "originalSentence": "0.0\n-->\n\n* `mode` {integer} the file mode bit mask. * Returns: {Promise} Fulfills with `undefined` upon success. Modifies the permissions on the file.",
    "position": 4026,
    "id": "window_4026"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success. Modifies the permissions on the file. See chmod(2).",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success. Modifies the permissions on the file. See chmod(2).",
    "position": 4027,
    "id": "window_4027"
  },
  {
    "type": "window",
    "content": "Modifies the permissions on the file. See chmod(2). #### `filehandle.",
    "originalSentence": "Modifies the permissions on the file. See chmod(2). #### `filehandle.",
    "position": 4028,
    "id": "window_4028"
  },
  {
    "type": "window",
    "content": "See chmod(2). #### `filehandle. chown(uid, gid)`\n\n<!",
    "originalSentence": "See chmod(2). #### `filehandle. chown(uid, gid)`\n\n<!",
    "position": 4029,
    "id": "window_4029"
  },
  {
    "type": "window",
    "content": "#### `filehandle. chown(uid, gid)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. chown(uid, gid)`\n\n<! -- YAML\nadded: v10.",
    "position": 4030,
    "id": "window_4030"
  },
  {
    "type": "window",
    "content": "chown(uid, gid)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `uid` {integer} The file's new owner's user id.",
    "originalSentence": "chown(uid, gid)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `uid` {integer} The file's new owner's user id.",
    "position": 4031,
    "id": "window_4031"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id.",
    "position": 4032,
    "id": "window_4032"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4033,
    "id": "window_4033"
  },
  {
    "type": "window",
    "content": "* `gid` {integer} The file's new group's group id. * Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of the file.",
    "originalSentence": "* `gid` {integer} The file's new group's group id. * Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of the file.",
    "position": 4034,
    "id": "window_4034"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of the file. A wrapper for chown(2).",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of the file. A wrapper for chown(2).",
    "position": 4035,
    "id": "window_4035"
  },
  {
    "type": "window",
    "content": "Changes the ownership of the file. A wrapper for chown(2). #### `filehandle.",
    "originalSentence": "Changes the ownership of the file. A wrapper for chown(2). #### `filehandle.",
    "position": 4036,
    "id": "window_4036"
  },
  {
    "type": "window",
    "content": "A wrapper for chown(2). #### `filehandle. close()`\n\n<!",
    "originalSentence": "A wrapper for chown(2). #### `filehandle. close()`\n\n<!",
    "position": 4037,
    "id": "window_4037"
  },
  {
    "type": "window",
    "content": "close()`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "close()`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4038,
    "id": "window_4038"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Closes the file handle after waiting for any pending operation on the handle to\ncomplete.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Closes the file handle after waiting for any pending operation on the handle to\ncomplete.",
    "position": 4039,
    "id": "window_4039"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Closes the file handle after waiting for any pending operation on the handle to\ncomplete. ```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.",
    "originalSentence": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Closes the file handle after waiting for any pending operation on the handle to\ncomplete. ```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.",
    "position": 4040,
    "id": "window_4040"
  },
  {
    "type": "window",
    "content": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete. ```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile. txt', 'r');\n} finally {\n  await filehandle?.",
    "originalSentence": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete. ```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile. txt', 'r');\n} finally {\n  await filehandle?.",
    "position": 4041,
    "id": "window_4041"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile. txt', 'r');\n} finally {\n  await filehandle?. close();\n}\n```\n\n#### `filehandle.",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile. txt', 'r');\n} finally {\n  await filehandle?. close();\n}\n```\n\n#### `filehandle.",
    "position": 4042,
    "id": "window_4042"
  },
  {
    "type": "window",
    "content": "txt', 'r');\n} finally {\n  await filehandle?. close();\n}\n```\n\n#### `filehandle. createReadStream([options])`\n\n<!",
    "originalSentence": "txt', 'r');\n} finally {\n  await filehandle?. close();\n}\n```\n\n#### `filehandle. createReadStream([options])`\n\n<!",
    "position": 4043,
    "id": "window_4043"
  },
  {
    "type": "window",
    "content": "close();\n}\n```\n\n#### `filehandle. createReadStream([options])`\n\n<! -- YAML\nadded: v16.",
    "originalSentence": "close();\n}\n```\n\n#### `filehandle. createReadStream([options])`\n\n<! -- YAML\nadded: v16.",
    "position": 4044,
    "id": "window_4044"
  },
  {
    "type": "window",
    "content": "createReadStream([options])`\n\n<! -- YAML\nadded: v16. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs.",
    "originalSentence": "createReadStream([options])`\n\n<! -- YAML\nadded: v16. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs.",
    "position": 4045,
    "id": "window_4045"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v16. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "originalSentence": "-- YAML\nadded: v16. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "position": 4046,
    "id": "window_4046"
  },
  {
    "type": "window",
    "content": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "position": 4047,
    "id": "window_4047"
  },
  {
    "type": "window",
    "content": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "position": 4048,
    "id": "window_4048"
  },
  {
    "type": "window",
    "content": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. If `start` is\nomitted or `undefined`, `filehandle.",
    "originalSentence": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. If `start` is\nomitted or `undefined`, `filehandle.",
    "position": 4049,
    "id": "window_4049"
  },
  {
    "type": "window",
    "content": "MAX_SAFE_INTEGER`][]] range. If `start` is\nomitted or `undefined`, `filehandle. createReadStream()` reads sequentially from\nthe current file position.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range. If `start` is\nomitted or `undefined`, `filehandle. createReadStream()` reads sequentially from\nthe current file position.",
    "position": 4050,
    "id": "window_4050"
  },
  {
    "type": "window",
    "content": "If `start` is\nomitted or `undefined`, `filehandle. createReadStream()` reads sequentially from\nthe current file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "originalSentence": "If `start` is\nomitted or `undefined`, `filehandle. createReadStream()` reads sequentially from\nthe current file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "position": 4051,
    "id": "window_4051"
  },
  {
    "type": "window",
    "content": "createReadStream()` reads sequentially from\nthe current file position. The `encoding` can be any one of those accepted by\n{Buffer}. If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available.",
    "originalSentence": "createReadStream()` reads sequentially from\nthe current file position. The `encoding` can be any one of those accepted by\n{Buffer}. If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available.",
    "position": 4052,
    "id": "window_4052"
  },
  {
    "type": "window",
    "content": "The `encoding` can be any one of those accepted by\n{Buffer}. If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "originalSentence": "The `encoding` can be any one of those accepted by\n{Buffer}. If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "position": 4053,
    "id": "window_4053"
  },
  {
    "type": "window",
    "content": "If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 4054,
    "id": "window_4054"
  },
  {
    "type": "window",
    "content": "This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "position": 4055,
    "id": "window_4055"
  },
  {
    "type": "window",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.",
    "position": 4056,
    "id": "window_4056"
  },
  {
    "type": "window",
    "content": "Set the `emitClose` option to `false` to change this behavior. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device. const stream = fd.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device. const stream = fd.",
    "position": 4057,
    "id": "window_4057"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device. const stream = fd. createReadStream();\nsetTimeout(() => {\n  stream.",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device. const stream = fd. createReadStream();\nsetTimeout(() => {\n  stream.",
    "position": 4058,
    "id": "window_4058"
  },
  {
    "type": "window",
    "content": "const stream = fd. createReadStream();\nsetTimeout(() => {\n  stream. close(); // This may not close the stream.",
    "originalSentence": "const stream = fd. createReadStream();\nsetTimeout(() => {\n  stream. close(); // This may not close the stream.",
    "position": 4059,
    "id": "window_4059"
  },
  {
    "type": "window",
    "content": "createReadStream();\nsetTimeout(() => {\n  stream. close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "originalSentence": "createReadStream();\nsetTimeout(() => {\n  stream. close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "position": 4060,
    "id": "window_4060"
  },
  {
    "type": "window",
    "content": "close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "originalSentence": "close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "position": 4061,
    "id": "window_4061"
  },
  {
    "type": "window",
    "content": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream.",
    "originalSentence": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream.",
    "position": 4062,
    "id": "window_4062"
  },
  {
    "type": "window",
    "content": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream. push(null);\n  stream.",
    "originalSentence": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream. push(null);\n  stream.",
    "position": 4063,
    "id": "window_4063"
  },
  {
    "type": "window",
    "content": "stream. push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "originalSentence": "stream. push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "position": 4064,
    "id": "window_4064"
  },
  {
    "type": "window",
    "content": "push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "originalSentence": "push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "position": 4065,
    "id": "window_4065"
  },
  {
    "type": "window",
    "content": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "originalSentence": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "position": 4066,
    "id": "window_4066"
  },
  {
    "type": "window",
    "content": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample.",
    "originalSentence": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample.",
    "position": 4067,
    "id": "window_4067"
  },
  {
    "type": "window",
    "content": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample. txt');\nfd.",
    "originalSentence": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample. txt');\nfd.",
    "position": 4068,
    "id": "window_4068"
  },
  {
    "type": "window",
    "content": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample. txt');\nfd. createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle.",
    "originalSentence": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nconst fd = await open('sample. txt');\nfd. createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle.",
    "position": 4069,
    "id": "window_4069"
  },
  {
    "type": "window",
    "content": "txt');\nfd. createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle. createWriteStream([options])`\n\n<!",
    "originalSentence": "txt');\nfd. createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle. createWriteStream([options])`\n\n<!",
    "position": 4070,
    "id": "window_4070"
  },
  {
    "type": "window",
    "content": "createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle. createWriteStream([options])`\n\n<! -- YAML\nadded: v16.",
    "originalSentence": "createReadStream({ start: 90, end: 99 });\n```\n\n#### `filehandle. createWriteStream([options])`\n\n<! -- YAML\nadded: v16.",
    "position": 4071,
    "id": "window_4071"
  },
  {
    "type": "window",
    "content": "createWriteStream([options])`\n\n<! -- YAML\nadded: v16. 11.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "createWriteStream([options])`\n\n<! -- YAML\nadded: v16. 11.0\nchanges:\n  - version:\n    - v21.",
    "position": 4072,
    "id": "window_4072"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v16. 11.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v16. 11.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "position": 4073,
    "id": "window_4073"
  },
  {
    "type": "window",
    "content": "11.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "originalSentence": "11.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "position": 4074,
    "id": "window_4074"
  },
  {
    "type": "window",
    "content": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. -->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. -->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 4075,
    "id": "window_4075"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. -->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. -->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "position": 4076,
    "id": "window_4076"
  },
  {
    "type": "window",
    "content": "-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * Returns: {fs.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * Returns: {fs.",
    "position": 4077,
    "id": "window_4077"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "**Default:** `false`. * Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "position": 4078,
    "id": "window_4078"
  },
  {
    "type": "window",
    "content": "* Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "* Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "position": 4079,
    "id": "window_4079"
  },
  {
    "type": "window",
    "content": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`.",
    "originalSentence": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`.",
    "position": 4080,
    "id": "window_4080"
  },
  {
    "type": "window",
    "content": "MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`. The `encoding` can be any one of those accepted by {Buffer}.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`. The `encoding` can be any one of those accepted by {Buffer}.",
    "position": 4081,
    "id": "window_4081"
  },
  {
    "type": "window",
    "content": "Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`. The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "originalSentence": "Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`. The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "position": 4082,
    "id": "window_4082"
  },
  {
    "type": "window",
    "content": "The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "originalSentence": "The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "position": 4083,
    "id": "window_4083"
  },
  {
    "type": "window",
    "content": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "originalSentence": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "position": 4084,
    "id": "window_4084"
  },
  {
    "type": "window",
    "content": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 4085,
    "id": "window_4085"
  },
  {
    "type": "window",
    "content": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "position": 4086,
    "id": "window_4086"
  },
  {
    "type": "window",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. #### `filehandle.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. #### `filehandle.",
    "position": 4087,
    "id": "window_4087"
  },
  {
    "type": "window",
    "content": "Set the `emitClose` option to `false` to change this behavior. #### `filehandle. datasync()`\n\n<!",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior. #### `filehandle. datasync()`\n\n<!",
    "position": 4088,
    "id": "window_4088"
  },
  {
    "type": "window",
    "content": "#### `filehandle. datasync()`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. datasync()`\n\n<! -- YAML\nadded: v10.",
    "position": 4089,
    "id": "window_4089"
  },
  {
    "type": "window",
    "content": "datasync()`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "datasync()`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4090,
    "id": "window_4090"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "position": 4091,
    "id": "window_4091"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 4092,
    "id": "window_4092"
  },
  {
    "type": "window",
    "content": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. Unlike `filehandle.",
    "originalSentence": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. Unlike `filehandle.",
    "position": 4093,
    "id": "window_4093"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX\nfdatasync(2) documentation for details. Unlike `filehandle. sync` this method does not flush modified metadata.",
    "originalSentence": "Refer to the POSIX\nfdatasync(2) documentation for details. Unlike `filehandle. sync` this method does not flush modified metadata.",
    "position": 4094,
    "id": "window_4094"
  },
  {
    "type": "window",
    "content": "Unlike `filehandle. sync` this method does not flush modified metadata. #### `filehandle.",
    "originalSentence": "Unlike `filehandle. sync` this method does not flush modified metadata. #### `filehandle.",
    "position": 4095,
    "id": "window_4095"
  },
  {
    "type": "window",
    "content": "sync` this method does not flush modified metadata. #### `filehandle. fd`\n\n<!",
    "originalSentence": "sync` this method does not flush modified metadata. #### `filehandle. fd`\n\n<!",
    "position": 4096,
    "id": "window_4096"
  },
  {
    "type": "window",
    "content": "fd`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object.",
    "originalSentence": "fd`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object.",
    "position": 4097,
    "id": "window_4097"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object. #### `filehandle.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object. #### `filehandle.",
    "position": 4098,
    "id": "window_4098"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object. #### `filehandle. read(buffer, offset, length, position)`\n\n<!",
    "originalSentence": "0.0\n-->\n\n* Type: {number} The numeric file descriptor managed by the {FileHandle} object. #### `filehandle. read(buffer, offset, length, position)`\n\n<!",
    "position": 4099,
    "id": "window_4099"
  },
  {
    "type": "window",
    "content": "#### `filehandle. read(buffer, offset, length, position)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. read(buffer, offset, length, position)`\n\n<! -- YAML\nadded: v10.",
    "position": 4100,
    "id": "window_4100"
  },
  {
    "type": "window",
    "content": "read(buffer, offset, length, position)`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v21.",
    "originalSentence": "read(buffer, offset, length, position)`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v21.",
    "position": 4101,
    "id": "window_4101"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "position": 4102,
    "id": "window_4102"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "originalSentence": "0.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "position": 4103,
    "id": "window_4103"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `offset` {integer} The location in the buffer at which to start filling.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `offset` {integer} The location in the buffer at which to start filling.",
    "position": 4104,
    "id": "window_4104"
  },
  {
    "type": "window",
    "content": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n* `length` {integer} The number of bytes to read.",
    "originalSentence": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n* `length` {integer} The number of bytes to read.",
    "position": 4105,
    "id": "window_4105"
  },
  {
    "type": "window",
    "content": "* `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n* `length` {integer} The number of bytes to read. **Default:**\n  `buffer.",
    "originalSentence": "* `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n* `length` {integer} The number of bytes to read. **Default:**\n  `buffer.",
    "position": 4106,
    "id": "window_4106"
  },
  {
    "type": "window",
    "content": "**Default:** `0`\n* `length` {integer} The number of bytes to read. **Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file.",
    "originalSentence": "**Default:** `0`\n* `length` {integer} The number of bytes to read. **Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file.",
    "position": 4107,
    "id": "window_4107"
  },
  {
    "type": "window",
    "content": "**Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file. If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated.",
    "originalSentence": "**Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file. If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated.",
    "position": 4108,
    "id": "window_4108"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file. If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated. If `position` is a non-negative\n  integer, the current file position will remain unchanged.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file. If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated. If `position` is a non-negative\n  integer, the current file position will remain unchanged.",
    "position": 4109,
    "id": "window_4109"
  },
  {
    "type": "window",
    "content": "If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated. If `position` is a non-negative\n  integer, the current file position will remain unchanged. **Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated. If `position` is a non-negative\n  integer, the current file position will remain unchanged. **Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 4110,
    "id": "window_4110"
  },
  {
    "type": "window",
    "content": "If `position` is a non-negative\n  integer, the current file position will remain unchanged. **Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer.",
    "originalSentence": "If `position` is a non-negative\n  integer, the current file position will remain unchanged. **Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer.",
    "position": 4111,
    "id": "window_4111"
  },
  {
    "type": "window",
    "content": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 4112,
    "id": "window_4112"
  },
  {
    "type": "window",
    "content": "Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle.",
    "originalSentence": "Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle.",
    "position": 4113,
    "id": "window_4113"
  },
  {
    "type": "window",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle. read([options])`\n\n<!",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle. read([options])`\n\n<!",
    "position": 4114,
    "id": "window_4114"
  },
  {
    "type": "window",
    "content": "#### `filehandle. read([options])`\n\n<! -- YAML\nadded:\n - v13.",
    "originalSentence": "#### `filehandle. read([options])`\n\n<! -- YAML\nadded:\n - v13.",
    "position": 4115,
    "id": "window_4115"
  },
  {
    "type": "window",
    "content": "read([options])`\n\n<! -- YAML\nadded:\n - v13. 11.0\n - v12.",
    "originalSentence": "read([options])`\n\n<! -- YAML\nadded:\n - v13. 11.0\n - v12.",
    "position": 4116,
    "id": "window_4116"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v13. 11.0\n - v12. 17.0\nchanges:\n  - version: v21.",
    "originalSentence": "-- YAML\nadded:\n - v13. 11.0\n - v12. 17.0\nchanges:\n  - version: v21.",
    "position": 4117,
    "id": "window_4117"
  },
  {
    "type": "window",
    "content": "11.0\n - v12. 17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "originalSentence": "11.0\n - v12. 17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "position": 4118,
    "id": "window_4118"
  },
  {
    "type": "window",
    "content": "17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read.",
    "originalSentence": "17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read.",
    "position": 4119,
    "id": "window_4119"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read. **Default:** `Buffer.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read. **Default:** `Buffer.",
    "position": 4120,
    "id": "window_4120"
  },
  {
    "type": "window",
    "content": "-->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read. **Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read. **Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "position": 4121,
    "id": "window_4121"
  },
  {
    "type": "window",
    "content": "**Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "originalSentence": "**Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "position": 4122,
    "id": "window_4122"
  },
  {
    "type": "window",
    "content": "alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.",
    "originalSentence": "alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.",
    "position": 4123,
    "id": "window_4123"
  },
  {
    "type": "window",
    "content": "**Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "originalSentence": "**Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "position": 4124,
    "id": "window_4124"
  },
  {
    "type": "window",
    "content": "**Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "originalSentence": "**Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "position": 4125,
    "id": "window_4125"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "position": 4126,
    "id": "window_4126"
  },
  {
    "type": "window",
    "content": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 4127,
    "id": "window_4127"
  },
  {
    "type": "window",
    "content": "If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer.",
    "originalSentence": "If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer.",
    "position": 4128,
    "id": "window_4128"
  },
  {
    "type": "window",
    "content": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 4129,
    "id": "window_4129"
  },
  {
    "type": "window",
    "content": "Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle.",
    "originalSentence": "Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle.",
    "position": 4130,
    "id": "window_4130"
  },
  {
    "type": "window",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle. read(buffer[, options])`\n\n<!",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle. read(buffer[, options])`\n\n<!",
    "position": 4131,
    "id": "window_4131"
  },
  {
    "type": "window",
    "content": "#### `filehandle. read(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18.",
    "originalSentence": "#### `filehandle. read(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18.",
    "position": 4132,
    "id": "window_4132"
  },
  {
    "type": "window",
    "content": "read(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18. 2.0\n  - v16.",
    "originalSentence": "read(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18. 2.0\n  - v16.",
    "position": 4133,
    "id": "window_4133"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v18. 2.0\n  - v16. 17.0\nchanges:\n  - version: v21.",
    "originalSentence": "-- YAML\nadded:\n  - v18. 2.0\n  - v16. 17.0\nchanges:\n  - version: v21.",
    "position": 4134,
    "id": "window_4134"
  },
  {
    "type": "window",
    "content": "2.0\n  - v16. 17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "originalSentence": "2.0\n  - v16. 17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.",
    "position": 4135,
    "id": "window_4135"
  },
  {
    "type": "window",
    "content": "17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "originalSentence": "17.0\nchanges:\n  - version: v21. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.",
    "position": 4136,
    "id": "window_4136"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`. -->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling.",
    "position": 4137,
    "id": "window_4137"
  },
  {
    "type": "window",
    "content": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "originalSentence": "-->\n\n* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read. * `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read.",
    "position": 4138,
    "id": "window_4138"
  },
  {
    "type": "window",
    "content": "* `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.",
    "originalSentence": "* `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling. **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.",
    "position": 4139,
    "id": "window_4139"
  },
  {
    "type": "window",
    "content": "**Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "originalSentence": "**Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file.",
    "position": 4140,
    "id": "window_4140"
  },
  {
    "type": "window",
    "content": "**Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "originalSentence": "**Default:**\n    `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated.",
    "position": 4141,
    "id": "window_4141"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.",
    "position": 4142,
    "id": "window_4142"
  },
  {
    "type": "window",
    "content": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 4143,
    "id": "window_4143"
  },
  {
    "type": "window",
    "content": "If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer.",
    "originalSentence": "If `position` is a non-negative\n    integer, the current file position will remain unchanged. **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer.",
    "position": 4144,
    "id": "window_4144"
  },
  {
    "type": "window",
    "content": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "**Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument. Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 4145,
    "id": "window_4145"
  },
  {
    "type": "window",
    "content": "Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle.",
    "originalSentence": "Reads data from the file and stores that in the given buffer. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle.",
    "position": 4146,
    "id": "window_4146"
  },
  {
    "type": "window",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle. readableWebStream([options])`\n\n<!",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. #### `filehandle. readableWebStream([options])`\n\n<!",
    "position": 4147,
    "id": "window_4147"
  },
  {
    "type": "window",
    "content": "#### `filehandle. readableWebStream([options])`\n\n<! -- YAML\nadded: v17.",
    "originalSentence": "#### `filehandle. readableWebStream([options])`\n\n<! -- YAML\nadded: v17.",
    "position": 4148,
    "id": "window_4148"
  },
  {
    "type": "window",
    "content": "readableWebStream([options])`\n\n<! -- YAML\nadded: v17. 0.0\nchanges:\n\n  - version:\n      - v24.",
    "originalSentence": "readableWebStream([options])`\n\n<! -- YAML\nadded: v17. 0.0\nchanges:\n\n  - version:\n      - v24.",
    "position": 4149,
    "id": "window_4149"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v17. 0.0\nchanges:\n\n  - version:\n      - v24. 0.0\n      - v22.",
    "originalSentence": "-- YAML\nadded: v17. 0.0\nchanges:\n\n  - version:\n      - v24. 0.0\n      - v22.",
    "position": 4150,
    "id": "window_4150"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n\n  - version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "0.0\nchanges:\n\n  - version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 4151,
    "id": "window_4151"
  },
  {
    "type": "window",
    "content": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "originalSentence": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "position": 4152,
    "id": "window_4152"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 8.0\n    - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 8.0\n    - v22.",
    "position": 4153,
    "id": "window_4153"
  },
  {
    "type": "window",
    "content": "- version:\n    - v23. 8.0\n    - v22. 15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream.",
    "originalSentence": "- version:\n    - v23. 8.0\n    - v22. 15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream.",
    "position": 4154,
    "id": "window_4154"
  },
  {
    "type": "window",
    "content": "8.0\n    - v22. 15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream. Streams are now always 'bytes' streams.",
    "originalSentence": "8.0\n    - v22. 15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream. Streams are now always 'bytes' streams.",
    "position": 4155,
    "id": "window_4155"
  },
  {
    "type": "window",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream. Streams are now always 'bytes' streams. - version:\n    - v20.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream. Streams are now always 'bytes' streams. - version:\n    - v20.",
    "position": 4156,
    "id": "window_4156"
  },
  {
    "type": "window",
    "content": "Streams are now always 'bytes' streams. - version:\n    - v20. 0.0\n    - v18.",
    "originalSentence": "Streams are now always 'bytes' streams. - version:\n    - v20. 0.0\n    - v18.",
    "position": 4157,
    "id": "window_4157"
  },
  {
    "type": "window",
    "content": "- version:\n    - v20. 0.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream.",
    "originalSentence": "- version:\n    - v20. 0.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream.",
    "position": 4158,
    "id": "window_4158"
  },
  {
    "type": "window",
    "content": "0.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream. -->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed.",
    "originalSentence": "0.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream. -->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed.",
    "position": 4159,
    "id": "window_4159"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream. -->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed. **Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream. -->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed. **Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents.",
    "position": 4160,
    "id": "window_4160"
  },
  {
    "type": "window",
    "content": "-->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed. **Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents. An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed. **Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents. An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing.",
    "position": 4161,
    "id": "window_4161"
  },
  {
    "type": "window",
    "content": "**Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents. An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing. ```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('.",
    "originalSentence": "**Default:** `false`\n* Returns: {ReadableStream}\n\nReturns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents. An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing. ```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('.",
    "position": 4162,
    "id": "window_4162"
  },
  {
    "type": "window",
    "content": "An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing. ```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const chunk of file.",
    "originalSentence": "An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing. ```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const chunk of file.",
    "position": 4163,
    "id": "window_4163"
  },
  {
    "type": "window",
    "content": "```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const chunk of file. readableWebStream())\n  console.",
    "originalSentence": "```mjs\nimport {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const chunk of file. readableWebStream())\n  console.",
    "position": 4164,
    "id": "window_4164"
  },
  {
    "type": "window",
    "content": "/some/file/to/read');\n\nfor await (const chunk of file. readableWebStream())\n  console. log(chunk);\n\nawait file.",
    "originalSentence": "/some/file/to/read');\n\nfor await (const chunk of file. readableWebStream())\n  console. log(chunk);\n\nawait file.",
    "position": 4165,
    "id": "window_4165"
  },
  {
    "type": "window",
    "content": "readableWebStream())\n  console. log(chunk);\n\nawait file. close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "originalSentence": "readableWebStream())\n  console. log(chunk);\n\nawait file. close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "position": 4166,
    "id": "window_4166"
  },
  {
    "type": "window",
    "content": "log(chunk);\n\nawait file. close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const chunk of file.",
    "originalSentence": "log(chunk);\n\nawait file. close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const chunk of file.",
    "position": 4167,
    "id": "window_4167"
  },
  {
    "type": "window",
    "content": "close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const chunk of file. readableWebStream())\n    console.",
    "originalSentence": "close();\n```\n\n```cjs\nconst {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const chunk of file. readableWebStream())\n    console.",
    "position": 4168,
    "id": "window_4168"
  },
  {
    "type": "window",
    "content": "/some/file/to/read');\n\n  for await (const chunk of file. readableWebStream())\n    console. log(chunk);\n\n  await file.",
    "originalSentence": "/some/file/to/read');\n\n  for await (const chunk of file. readableWebStream())\n    console. log(chunk);\n\n  await file.",
    "position": 4169,
    "id": "window_4169"
  },
  {
    "type": "window",
    "content": "readableWebStream())\n    console. log(chunk);\n\n  await file. close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically.",
    "originalSentence": "readableWebStream())\n    console. log(chunk);\n\n  await file. close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically.",
    "position": 4170,
    "id": "window_4170"
  },
  {
    "type": "window",
    "content": "log(chunk);\n\n  await file. close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically. User code must still call the\n`fileHandle.",
    "originalSentence": "log(chunk);\n\n  await file. close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically. User code must still call the\n`fileHandle.",
    "position": 4171,
    "id": "window_4171"
  },
  {
    "type": "window",
    "content": "close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically. User code must still call the\n`fileHandle. close()` method unless the `autoClose` option is set to `true`.",
    "originalSentence": "close();\n})();\n```\n\nWhile the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically. User code must still call the\n`fileHandle. close()` method unless the `autoClose` option is set to `true`.",
    "position": 4172,
    "id": "window_4172"
  },
  {
    "type": "window",
    "content": "User code must still call the\n`fileHandle. close()` method unless the `autoClose` option is set to `true`. #### `filehandle.",
    "originalSentence": "User code must still call the\n`fileHandle. close()` method unless the `autoClose` option is set to `true`. #### `filehandle.",
    "position": 4173,
    "id": "window_4173"
  },
  {
    "type": "window",
    "content": "close()` method unless the `autoClose` option is set to `true`. #### `filehandle. readFile(options)`\n\n<!",
    "originalSentence": "close()` method unless the `autoClose` option is set to `true`. #### `filehandle. readFile(options)`\n\n<!",
    "position": 4174,
    "id": "window_4174"
  },
  {
    "type": "window",
    "content": "#### `filehandle. readFile(options)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. readFile(options)`\n\n<! -- YAML\nadded: v10.",
    "position": 4175,
    "id": "window_4175"
  },
  {
    "type": "window",
    "content": "readFile(options)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file.",
    "originalSentence": "readFile(options)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file.",
    "position": 4176,
    "id": "window_4176"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file. If no encoding is specified (using `options.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file. If no encoding is specified (using `options.",
    "position": 4177,
    "id": "window_4177"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file. If no encoding is specified (using `options. encoding`), the data is\n  returned as a {Buffer} object.",
    "originalSentence": "0.0\n-->\n\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file. If no encoding is specified (using `options. encoding`), the data is\n  returned as a {Buffer} object.",
    "position": 4178,
    "id": "window_4178"
  },
  {
    "type": "window",
    "content": "If no encoding is specified (using `options. encoding`), the data is\n  returned as a {Buffer} object. Otherwise, the data will be a string.",
    "originalSentence": "If no encoding is specified (using `options. encoding`), the data is\n  returned as a {Buffer} object. Otherwise, the data will be a string.",
    "position": 4179,
    "id": "window_4179"
  },
  {
    "type": "window",
    "content": "encoding`), the data is\n  returned as a {Buffer} object. Otherwise, the data will be a string. Asynchronously reads the entire contents of a file.",
    "originalSentence": "encoding`), the data is\n  returned as a {Buffer} object. Otherwise, the data will be a string. Asynchronously reads the entire contents of a file.",
    "position": 4180,
    "id": "window_4180"
  },
  {
    "type": "window",
    "content": "Otherwise, the data will be a string. Asynchronously reads the entire contents of a file. If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "Otherwise, the data will be a string. Asynchronously reads the entire contents of a file. If `options` is a string, then it specifies the `encoding`.",
    "position": 4181,
    "id": "window_4181"
  },
  {
    "type": "window",
    "content": "Asynchronously reads the entire contents of a file. If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support reading.",
    "originalSentence": "Asynchronously reads the entire contents of a file. If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support reading.",
    "position": 4182,
    "id": "window_4182"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support reading. If one or more `filehandle.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support reading. If one or more `filehandle.",
    "position": 4183,
    "id": "window_4183"
  },
  {
    "type": "window",
    "content": "The {FileHandle} has to support reading. If one or more `filehandle. read()` calls are made on a file handle and then a\n`filehandle.",
    "originalSentence": "The {FileHandle} has to support reading. If one or more `filehandle. read()` calls are made on a file handle and then a\n`filehandle.",
    "position": 4184,
    "id": "window_4184"
  },
  {
    "type": "window",
    "content": "If one or more `filehandle. read()` calls are made on a file handle and then a\n`filehandle. readFile()` call is made, the data will be read from the current\nposition till the end of the file.",
    "originalSentence": "If one or more `filehandle. read()` calls are made on a file handle and then a\n`filehandle. readFile()` call is made, the data will be read from the current\nposition till the end of the file.",
    "position": 4185,
    "id": "window_4185"
  },
  {
    "type": "window",
    "content": "read()` calls are made on a file handle and then a\n`filehandle. readFile()` call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file.",
    "originalSentence": "read()` calls are made on a file handle and then a\n`filehandle. readFile()` call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file.",
    "position": 4186,
    "id": "window_4186"
  },
  {
    "type": "window",
    "content": "readFile()` call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file. #### `filehandle.",
    "originalSentence": "readFile()` call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file. #### `filehandle.",
    "position": 4187,
    "id": "window_4187"
  },
  {
    "type": "window",
    "content": "It doesn't always read from the beginning\nof the file. #### `filehandle. readLines([options])`\n\n<!",
    "originalSentence": "It doesn't always read from the beginning\nof the file. #### `filehandle. readLines([options])`\n\n<!",
    "position": 4188,
    "id": "window_4188"
  },
  {
    "type": "window",
    "content": "#### `filehandle. readLines([options])`\n\n<! -- YAML\nadded: v18.",
    "originalSentence": "#### `filehandle. readLines([options])`\n\n<! -- YAML\nadded: v18.",
    "position": 4189,
    "id": "window_4189"
  },
  {
    "type": "window",
    "content": "readLines([options])`\n\n<! -- YAML\nadded: v18. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline.",
    "originalSentence": "readLines([options])`\n\n<! -- YAML\nadded: v18. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline.",
    "position": 4190,
    "id": "window_4190"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v18. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline. InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file.",
    "originalSentence": "-- YAML\nadded: v18. 11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline. InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file.",
    "position": 4191,
    "id": "window_4191"
  },
  {
    "type": "window",
    "content": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline. InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file. See [`filehandle.",
    "originalSentence": "11.0\n-->\n\n* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline. InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file. See [`filehandle.",
    "position": 4192,
    "id": "window_4192"
  },
  {
    "type": "window",
    "content": "InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file. See [`filehandle. createReadStream()`][] for the options.",
    "originalSentence": "InterfaceConstructor}\n\nConvenience method to create a `readline` interface and stream over the file. See [`filehandle. createReadStream()`][] for the options.",
    "position": 4193,
    "id": "window_4193"
  },
  {
    "type": "window",
    "content": "See [`filehandle. createReadStream()`][] for the options. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('.",
    "originalSentence": "See [`filehandle. createReadStream()`][] for the options. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('.",
    "position": 4194,
    "id": "window_4194"
  },
  {
    "type": "window",
    "content": "createReadStream()`][] for the options. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const line of file.",
    "originalSentence": "createReadStream()`][] for the options. ```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const line of file.",
    "position": 4195,
    "id": "window_4195"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const line of file. readLines()) {\n  console.",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\n\nconst file = await open('. /some/file/to/read');\n\nfor await (const line of file. readLines()) {\n  console.",
    "position": 4196,
    "id": "window_4196"
  },
  {
    "type": "window",
    "content": "/some/file/to/read');\n\nfor await (const line of file. readLines()) {\n  console. log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "originalSentence": "/some/file/to/read');\n\nfor await (const line of file. readLines()) {\n  console. log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('.",
    "position": 4197,
    "id": "window_4197"
  },
  {
    "type": "window",
    "content": "readLines()) {\n  console. log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const line of file.",
    "originalSentence": "readLines()) {\n  console. log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const line of file.",
    "position": 4198,
    "id": "window_4198"
  },
  {
    "type": "window",
    "content": "log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const line of file. readLines()) {\n    console.",
    "originalSentence": "log(line);\n}\n```\n\n```cjs\nconst { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('. /some/file/to/read');\n\n  for await (const line of file. readLines()) {\n    console.",
    "position": 4199,
    "id": "window_4199"
  },
  {
    "type": "window",
    "content": "/some/file/to/read');\n\n  for await (const line of file. readLines()) {\n    console. log(line);\n  }\n})();\n```\n\n#### `filehandle.",
    "originalSentence": "/some/file/to/read');\n\n  for await (const line of file. readLines()) {\n    console. log(line);\n  }\n})();\n```\n\n#### `filehandle.",
    "position": 4200,
    "id": "window_4200"
  },
  {
    "type": "window",
    "content": "readLines()) {\n    console. log(line);\n  }\n})();\n```\n\n#### `filehandle. readv(buffers[, position])`\n\n<!",
    "originalSentence": "readLines()) {\n    console. log(line);\n  }\n})();\n```\n\n#### `filehandle. readv(buffers[, position])`\n\n<!",
    "position": 4201,
    "id": "window_4201"
  },
  {
    "type": "window",
    "content": "log(line);\n  }\n})();\n```\n\n#### `filehandle. readv(buffers[, position])`\n\n<! -- YAML\nadded:\n - v13.",
    "originalSentence": "log(line);\n  }\n})();\n```\n\n#### `filehandle. readv(buffers[, position])`\n\n<! -- YAML\nadded:\n - v13.",
    "position": 4202,
    "id": "window_4202"
  },
  {
    "type": "window",
    "content": "readv(buffers[, position])`\n\n<! -- YAML\nadded:\n - v13. 13.0\n - v12.",
    "originalSentence": "readv(buffers[, position])`\n\n<! -- YAML\nadded:\n - v13. 13.0\n - v12.",
    "position": 4203,
    "id": "window_4203"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v13. 13.0\n - v12. 17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from.",
    "originalSentence": "-- YAML\nadded:\n - v13. 13.0\n - v12. 17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from.",
    "position": 4204,
    "id": "window_4204"
  },
  {
    "type": "window",
    "content": "13.0\n - v12. 17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from. If `position` is not a `number`, the data will\n  be read from the current position.",
    "originalSentence": "13.0\n - v12. 17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from. If `position` is not a `number`, the data will\n  be read from the current position.",
    "position": 4205,
    "id": "window_4205"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from. If `position` is not a `number`, the data will\n  be read from the current position. **Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input.",
    "originalSentence": "17.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from. If `position` is not a `number`, the data will\n  be read from the current position. **Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input.",
    "position": 4206,
    "id": "window_4206"
  },
  {
    "type": "window",
    "content": "If `position` is not a `number`, the data will\n  be read from the current position. **Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input. Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle.",
    "originalSentence": "If `position` is not a `number`, the data will\n  be read from the current position. **Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input. Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle.",
    "position": 4207,
    "id": "window_4207"
  },
  {
    "type": "window",
    "content": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input. Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle. stat([options])`\n\n<!",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input. Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle. stat([options])`\n\n<!",
    "position": 4208,
    "id": "window_4208"
  },
  {
    "type": "window",
    "content": "Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle. stat([options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "Read from a file and write to an array of {ArrayBufferView}s\n\n#### `filehandle. stat([options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4209,
    "id": "window_4209"
  },
  {
    "type": "window",
    "content": "stat([options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "originalSentence": "stat([options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "position": 4210,
    "id": "window_4210"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 4211,
    "id": "window_4211"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 4212,
    "id": "window_4212"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 4213,
    "id": "window_4213"
  },
  {
    "type": "window",
    "content": "-->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 4214,
    "id": "window_4214"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {Promise} Fulfills with an {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {Promise} Fulfills with an {fs.",
    "position": 4215,
    "id": "window_4215"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {Promise} Fulfills with an {fs. Stats} for the file.",
    "originalSentence": "**Default:** `false`. * Returns: {Promise} Fulfills with an {fs. Stats} for the file.",
    "position": 4216,
    "id": "window_4216"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with an {fs. Stats} for the file. #### `filehandle.",
    "originalSentence": "* Returns: {Promise} Fulfills with an {fs. Stats} for the file. #### `filehandle.",
    "position": 4217,
    "id": "window_4217"
  },
  {
    "type": "window",
    "content": "sync()`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "sync()`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4218,
    "id": "window_4218"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Request that all data for the open file descriptor is flushed to the storage\ndevice.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Request that all data for the open file descriptor is flushed to the storage\ndevice.",
    "position": 4219,
    "id": "window_4219"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.",
    "originalSentence": "0.0\n-->\n\n* Returns: {Promise} Fulfills with `undefined` upon success. Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.",
    "position": 4220,
    "id": "window_4220"
  },
  {
    "type": "window",
    "content": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail.",
    "position": 4221,
    "id": "window_4221"
  },
  {
    "type": "window",
    "content": "The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail. #### `filehandle.",
    "originalSentence": "The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail. #### `filehandle.",
    "position": 4222,
    "id": "window_4222"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX fsync(2) documentation for more detail. #### `filehandle. truncate(len)`\n\n<!",
    "originalSentence": "Refer to the POSIX fsync(2) documentation for more detail. #### `filehandle. truncate(len)`\n\n<!",
    "position": 4223,
    "id": "window_4223"
  },
  {
    "type": "window",
    "content": "#### `filehandle. truncate(len)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. truncate(len)`\n\n<! -- YAML\nadded: v10.",
    "position": 4224,
    "id": "window_4224"
  },
  {
    "type": "window",
    "content": "truncate(len)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "truncate(len)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4225,
    "id": "window_4225"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates the file.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates the file.",
    "position": 4226,
    "id": "window_4226"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates the file. If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file.",
    "originalSentence": "0.0\n-->\n\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates the file. If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file.",
    "position": 4227,
    "id": "window_4227"
  },
  {
    "type": "window",
    "content": "Truncates the file. If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file. The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.",
    "originalSentence": "Truncates the file. If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file. The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.",
    "position": 4228,
    "id": "window_4228"
  },
  {
    "type": "window",
    "content": "If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file. The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp. txt', 'r+');\n  await filehandle.",
    "originalSentence": "If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file. The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp. txt', 'r+');\n  await filehandle.",
    "position": 4229,
    "id": "window_4229"
  },
  {
    "type": "window",
    "content": "The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp. txt', 'r+');\n  await filehandle. truncate(4);\n} finally {\n  await filehandle?.",
    "originalSentence": "The following example retains only the first four bytes of the file:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp. txt', 'r+');\n  await filehandle. truncate(4);\n} finally {\n  await filehandle?.",
    "position": 4230,
    "id": "window_4230"
  },
  {
    "type": "window",
    "content": "txt', 'r+');\n  await filehandle. truncate(4);\n} finally {\n  await filehandle?. close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "originalSentence": "txt', 'r+');\n  await filehandle. truncate(4);\n} finally {\n  await filehandle?. close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "position": 4231,
    "id": "window_4231"
  },
  {
    "type": "window",
    "content": "truncate(4);\n} finally {\n  await filehandle?. close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. #### `filehandle.",
    "originalSentence": "truncate(4);\n} finally {\n  await filehandle?. close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. #### `filehandle.",
    "position": 4232,
    "id": "window_4232"
  },
  {
    "type": "window",
    "content": "close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. #### `filehandle. utimes(atime, mtime)`\n\n<!",
    "originalSentence": "close();\n}\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. #### `filehandle. utimes(atime, mtime)`\n\n<!",
    "position": 4233,
    "id": "window_4233"
  },
  {
    "type": "window",
    "content": "#### `filehandle. utimes(atime, mtime)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. utimes(atime, mtime)`\n\n<! -- YAML\nadded: v10.",
    "position": 4234,
    "id": "window_4234"
  },
  {
    "type": "window",
    "content": "utimes(atime, mtime)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success.",
    "originalSentence": "utimes(atime, mtime)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success.",
    "position": 4235,
    "id": "window_4235"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success. #### `filehandle.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success. #### `filehandle.",
    "position": 4236,
    "id": "window_4236"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success. #### `filehandle. write(buffer, offset[, length[, position]])`\n\n<!",
    "originalSentence": "0.0\n-->\n\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}\n\nChange the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success. #### `filehandle. write(buffer, offset[, length[, position]])`\n\n<!",
    "position": 4237,
    "id": "window_4237"
  },
  {
    "type": "window",
    "content": "#### `filehandle. write(buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. write(buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v10.",
    "position": 4238,
    "id": "window_4238"
  },
  {
    "type": "window",
    "content": "write(buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "originalSentence": "write(buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "position": 4239,
    "id": "window_4239"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore.",
    "position": 4240,
    "id": "window_4240"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore. -->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins.",
    "originalSentence": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore. -->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins.",
    "position": 4241,
    "id": "window_4241"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore. -->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins. * `length` {integer} The number of bytes from `buffer` to write.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore. -->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins. * `length` {integer} The number of bytes from `buffer` to write.",
    "position": 4242,
    "id": "window_4242"
  },
  {
    "type": "window",
    "content": "-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins. * `length` {integer} The number of bytes from `buffer` to write. **Default:**\n  `buffer.",
    "originalSentence": "-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins. * `length` {integer} The number of bytes from `buffer` to write. **Default:**\n  `buffer.",
    "position": 4243,
    "id": "window_4243"
  },
  {
    "type": "window",
    "content": "* `length` {integer} The number of bytes from `buffer` to write. **Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written.",
    "originalSentence": "* `length` {integer} The number of bytes from `buffer` to write. **Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written.",
    "position": 4244,
    "id": "window_4244"
  },
  {
    "type": "window",
    "content": "**Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written. If `position` is not a `number`,\n  the data will be written at the current position.",
    "originalSentence": "**Default:**\n  `buffer. byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written. If `position` is not a `number`,\n  the data will be written at the current position.",
    "position": 4245,
    "id": "window_4245"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written. If `position` is not a `number`,\n  the data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written. If `position` is not a `number`,\n  the data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail.",
    "position": 4246,
    "id": "window_4246"
  },
  {
    "type": "window",
    "content": "If `position` is not a `number`,\n  the data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "originalSentence": "If `position` is not a `number`,\n  the data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "position": 4247,
    "id": "window_4247"
  },
  {
    "type": "window",
    "content": "See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written.",
    "originalSentence": "See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written.",
    "position": 4248,
    "id": "window_4248"
  },
  {
    "type": "window",
    "content": "**Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written. It is unsafe to use `filehandle.",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written. It is unsafe to use `filehandle.",
    "position": 4249,
    "id": "window_4249"
  },
  {
    "type": "window",
    "content": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written. It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written. It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 4250,
    "id": "window_4250"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.",
    "originalSentence": "It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.",
    "position": 4251,
    "id": "window_4251"
  },
  {
    "type": "window",
    "content": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle. createWriteStream()`][].",
    "originalSentence": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle. createWriteStream()`][].",
    "position": 4252,
    "id": "window_4252"
  },
  {
    "type": "window",
    "content": "For this\nscenario, use [`filehandle. createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode.",
    "originalSentence": "For this\nscenario, use [`filehandle. createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode.",
    "position": 4253,
    "id": "window_4253"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 4254,
    "id": "window_4254"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle.",
    "originalSentence": "On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle.",
    "position": 4255,
    "id": "window_4255"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle. write(buffer[, options])`\n\n<!",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle. write(buffer[, options])`\n\n<!",
    "position": 4256,
    "id": "window_4256"
  },
  {
    "type": "window",
    "content": "#### `filehandle. write(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18.",
    "originalSentence": "#### `filehandle. write(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18.",
    "position": 4257,
    "id": "window_4257"
  },
  {
    "type": "window",
    "content": "write(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18. 3.0\n  - v16.",
    "originalSentence": "write(buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18. 3.0\n  - v16.",
    "position": 4258,
    "id": "window_4258"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v18. 3.0\n  - v16. 17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "-- YAML\nadded:\n  - v18. 3.0\n  - v16. 17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 4259,
    "id": "window_4259"
  },
  {
    "type": "window",
    "content": "3.0\n  - v16. 17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "originalSentence": "3.0\n  - v16. 17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file.",
    "position": 4260,
    "id": "window_4260"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. Similar to the above `filehandle.",
    "originalSentence": "17.0\n-->\n\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. Similar to the above `filehandle.",
    "position": 4261,
    "id": "window_4261"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. Similar to the above `filehandle. write` function, this version takes an\noptional `options` object.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}\n\nWrite `buffer` to the file. Similar to the above `filehandle. write` function, this version takes an\noptional `options` object.",
    "position": 4262,
    "id": "window_4262"
  },
  {
    "type": "window",
    "content": "Similar to the above `filehandle. write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "originalSentence": "Similar to the above `filehandle. write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "position": 4263,
    "id": "window_4263"
  },
  {
    "type": "window",
    "content": "write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values. #### `filehandle.",
    "originalSentence": "write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values. #### `filehandle.",
    "position": 4264,
    "id": "window_4264"
  },
  {
    "type": "window",
    "content": "If no `options` object is specified, it will\ndefault with the above values. #### `filehandle. write(string[, position[, encoding]])`\n\n<!",
    "originalSentence": "If no `options` object is specified, it will\ndefault with the above values. #### `filehandle. write(string[, position[, encoding]])`\n\n<!",
    "position": 4265,
    "id": "window_4265"
  },
  {
    "type": "window",
    "content": "#### `filehandle. write(string[, position[, encoding]])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. write(string[, position[, encoding]])`\n\n<! -- YAML\nadded: v10.",
    "position": 4266,
    "id": "window_4266"
  },
  {
    "type": "window",
    "content": "write(string[, position[, encoding]])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "originalSentence": "write(string[, position[, encoding]])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "position": 4267,
    "id": "window_4267"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 4268,
    "id": "window_4268"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written.",
    "originalSentence": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written.",
    "position": 4269,
    "id": "window_4269"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written. If `position` is not a `number` the\n  data will be written at the current position.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written. If `position` is not a `number` the\n  data will be written at the current position.",
    "position": 4270,
    "id": "window_4270"
  },
  {
    "type": "window",
    "content": "-->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written. If `position` is not a `number` the\n  data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail.",
    "originalSentence": "-->\n\n* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written. If `position` is not a `number` the\n  data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail.",
    "position": 4271,
    "id": "window_4271"
  },
  {
    "type": "window",
    "content": "If `position` is not a `number` the\n  data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* `encoding` {string} The expected string encoding.",
    "originalSentence": "If `position` is not a `number` the\n  data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* `encoding` {string} The expected string encoding.",
    "position": 4272,
    "id": "window_4272"
  },
  {
    "type": "window",
    "content": "See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* `encoding` {string} The expected string encoding. **Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file.",
    "originalSentence": "See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* `encoding` {string} The expected string encoding. **Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file.",
    "position": 4273,
    "id": "window_4273"
  },
  {
    "type": "window",
    "content": "**Default:** `null`\n* `encoding` {string} The expected string encoding. **Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file. If `string` is not a string, the promise is\nrejected with an error.",
    "originalSentence": "**Default:** `null`\n* `encoding` {string} The expected string encoding. **Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file. If `string` is not a string, the promise is\nrejected with an error.",
    "position": 4274,
    "id": "window_4274"
  },
  {
    "type": "window",
    "content": "**Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file. If `string` is not a string, the promise is\nrejected with an error. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written.",
    "originalSentence": "**Default:** `'utf8'`\n* Returns: {Promise}\n\nWrite `string` to the file. If `string` is not a string, the promise is\nrejected with an error. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written.",
    "position": 4275,
    "id": "window_4275"
  },
  {
    "type": "window",
    "content": "If `string` is not a string, the promise is\nrejected with an error. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written. It is unsafe to use `filehandle.",
    "originalSentence": "If `string` is not a string, the promise is\nrejected with an error. The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written. It is unsafe to use `filehandle.",
    "position": 4276,
    "id": "window_4276"
  },
  {
    "type": "window",
    "content": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written. It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "The promise is fulfilled with an object containing two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written. It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 4277,
    "id": "window_4277"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.",
    "originalSentence": "It is unsafe to use `filehandle. write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.",
    "position": 4278,
    "id": "window_4278"
  },
  {
    "type": "window",
    "content": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle. createWriteStream()`][].",
    "originalSentence": "write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle. createWriteStream()`][].",
    "position": 4279,
    "id": "window_4279"
  },
  {
    "type": "window",
    "content": "For this\nscenario, use [`filehandle. createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode.",
    "originalSentence": "For this\nscenario, use [`filehandle. createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode.",
    "position": 4280,
    "id": "window_4280"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "createWriteStream()`][]. On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 4281,
    "id": "window_4281"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle.",
    "originalSentence": "On Linux, positional writes do not work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle.",
    "position": 4282,
    "id": "window_4282"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle. writeFile(data, options)`\n\n<!",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle. writeFile(data, options)`\n\n<!",
    "position": 4283,
    "id": "window_4283"
  },
  {
    "type": "window",
    "content": "#### `filehandle. writeFile(data, options)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `filehandle. writeFile(data, options)`\n\n<! -- YAML\nadded: v10.",
    "position": 4284,
    "id": "window_4284"
  },
  {
    "type": "window",
    "content": "writeFile(data, options)`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n      - v15.",
    "originalSentence": "writeFile(data, options)`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n      - v15.",
    "position": 4285,
    "id": "window_4285"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n      - v15. 14.0\n      - v14.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n      - v15. 14.0\n      - v14.",
    "position": 4286,
    "id": "window_4286"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n      - v15. 14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v15. 14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "position": 4287,
    "id": "window_4287"
  },
  {
    "type": "window",
    "content": "14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14.",
    "originalSentence": "14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14.",
    "position": 4288,
    "id": "window_4288"
  },
  {
    "type": "window",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 4289,
    "id": "window_4289"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string.",
    "position": 4290,
    "id": "window_4290"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string. **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string. **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile.",
    "position": 4291,
    "id": "window_4291"
  },
  {
    "type": "window",
    "content": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string. **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists.",
    "originalSentence": "-->\n\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string. **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists.",
    "position": 4292,
    "id": "window_4292"
  },
  {
    "type": "window",
    "content": "**Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "originalSentence": "**Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "position": 4293,
    "id": "window_4293"
  },
  {
    "type": "window",
    "content": "**Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The promise is fulfilled with no arguments upon success.",
    "originalSentence": "**Default:** `undefined`\n* Returns: {Promise}\n\nAsynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The promise is fulfilled with no arguments upon success.",
    "position": 4294,
    "id": "window_4294"
  },
  {
    "type": "window",
    "content": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The promise is fulfilled with no arguments upon success. If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The promise is fulfilled with no arguments upon success. If `options` is a string, then it specifies the `encoding`.",
    "position": 4295,
    "id": "window_4295"
  },
  {
    "type": "window",
    "content": "The promise is fulfilled with no arguments upon success. If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support writing.",
    "originalSentence": "The promise is fulfilled with no arguments upon success. If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support writing.",
    "position": 4296,
    "id": "window_4296"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support writing. It is unsafe to use `filehandle.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`. The {FileHandle} has to support writing. It is unsafe to use `filehandle.",
    "position": 4297,
    "id": "window_4297"
  },
  {
    "type": "window",
    "content": "The {FileHandle} has to support writing. It is unsafe to use `filehandle. writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "The {FileHandle} has to support writing. It is unsafe to use `filehandle. writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 4298,
    "id": "window_4298"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `filehandle. writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). If one or more `filehandle.",
    "originalSentence": "It is unsafe to use `filehandle. writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). If one or more `filehandle.",
    "position": 4299,
    "id": "window_4299"
  },
  {
    "type": "window",
    "content": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). If one or more `filehandle. write()` calls are made on a file handle and then a\n`filehandle.",
    "originalSentence": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). If one or more `filehandle. write()` calls are made on a file handle and then a\n`filehandle.",
    "position": 4300,
    "id": "window_4300"
  },
  {
    "type": "window",
    "content": "If one or more `filehandle. write()` calls are made on a file handle and then a\n`filehandle. writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file.",
    "originalSentence": "If one or more `filehandle. write()` calls are made on a file handle and then a\n`filehandle. writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file.",
    "position": 4301,
    "id": "window_4301"
  },
  {
    "type": "window",
    "content": "write()` calls are made on a file handle and then a\n`filehandle. writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file.",
    "originalSentence": "write()` calls are made on a file handle and then a\n`filehandle. writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file.",
    "position": 4302,
    "id": "window_4302"
  },
  {
    "type": "window",
    "content": "writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file. #### `filehandle.",
    "originalSentence": "writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file. #### `filehandle.",
    "position": 4303,
    "id": "window_4303"
  },
  {
    "type": "window",
    "content": "It doesn't always write from the\nbeginning of the file. #### `filehandle. writev(buffers[, position])`\n\n<!",
    "originalSentence": "It doesn't always write from the\nbeginning of the file. #### `filehandle. writev(buffers[, position])`\n\n<!",
    "position": 4304,
    "id": "window_4304"
  },
  {
    "type": "window",
    "content": "#### `filehandle. writev(buffers[, position])`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "#### `filehandle. writev(buffers[, position])`\n\n<! -- YAML\nadded: v12.",
    "position": 4305,
    "id": "window_4305"
  },
  {
    "type": "window",
    "content": "writev(buffers[, position])`\n\n<! -- YAML\nadded: v12. 9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written.",
    "originalSentence": "writev(buffers[, position])`\n\n<! -- YAML\nadded: v12. 9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written.",
    "position": 4306,
    "id": "window_4306"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written. If `position` is not a `number`,\n  the data will be written at the current position.",
    "originalSentence": "-- YAML\nadded: v12. 9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written. If `position` is not a `number`,\n  the data will be written at the current position.",
    "position": 4307,
    "id": "window_4307"
  },
  {
    "type": "window",
    "content": "9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written. If `position` is not a `number`,\n  the data will be written at the current position. **Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file.",
    "originalSentence": "9.0\n-->\n\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written. If `position` is not a `number`,\n  the data will be written at the current position. **Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file.",
    "position": 4308,
    "id": "window_4308"
  },
  {
    "type": "window",
    "content": "If `position` is not a `number`,\n  the data will be written at the current position. **Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file. The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input.",
    "originalSentence": "If `position` is not a `number`,\n  the data will be written at the current position. **Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file. The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input.",
    "position": 4309,
    "id": "window_4309"
  },
  {
    "type": "window",
    "content": "**Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file. The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input. It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected).",
    "originalSentence": "**Default:** `null`\n* Returns: {Promise}\n\nWrite an array of {ArrayBufferView}s to the file. The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input. It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected).",
    "position": 4310,
    "id": "window_4310"
  },
  {
    "type": "window",
    "content": "The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input. It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected). On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "The promise is fulfilled with an object containing a two properties:\n\n* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input. It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected). On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 4311,
    "id": "window_4311"
  },
  {
    "type": "window",
    "content": "It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected). On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected). On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 4312,
    "id": "window_4312"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle[Symbol.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle[Symbol.",
    "position": 4313,
    "id": "window_4313"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle[Symbol. asyncDispose]()`\n\n<!",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. #### `filehandle[Symbol. asyncDispose]()`\n\n<!",
    "position": 4314,
    "id": "window_4314"
  },
  {
    "type": "window",
    "content": "#### `filehandle[Symbol. asyncDispose]()`\n\n<! -- YAML\nadded:\n - v20.",
    "originalSentence": "#### `filehandle[Symbol. asyncDispose]()`\n\n<! -- YAML\nadded:\n - v20.",
    "position": 4315,
    "id": "window_4315"
  },
  {
    "type": "window",
    "content": "asyncDispose]()`\n\n<! -- YAML\nadded:\n - v20. 4.0\n - v18.",
    "originalSentence": "asyncDispose]()`\n\n<! -- YAML\nadded:\n - v20. 4.0\n - v18.",
    "position": 4316,
    "id": "window_4316"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v20. 4.0\n - v18. 18.0\nchanges:\n - version: v24.",
    "originalSentence": "-- YAML\nadded:\n - v20. 4.0\n - v18. 18.0\nchanges:\n - version: v24.",
    "position": 4317,
    "id": "window_4317"
  },
  {
    "type": "window",
    "content": "4.0\n - v18. 18.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "originalSentence": "4.0\n - v18. 18.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "position": 4318,
    "id": "window_4318"
  },
  {
    "type": "window",
    "content": "18.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `filehandle.",
    "originalSentence": "18.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `filehandle.",
    "position": 4319,
    "id": "window_4319"
  },
  {
    "type": "window",
    "content": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `filehandle. close()` and returns a promise that fulfills when the\nfilehandle is closed.",
    "originalSentence": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `filehandle. close()` and returns a promise that fulfills when the\nfilehandle is closed.",
    "position": 4320,
    "id": "window_4320"
  },
  {
    "type": "window",
    "content": "-->\n\nCalls `filehandle. close()` and returns a promise that fulfills when the\nfilehandle is closed. ### `fsPromises.",
    "originalSentence": "-->\n\nCalls `filehandle. close()` and returns a promise that fulfills when the\nfilehandle is closed. ### `fsPromises.",
    "position": 4321,
    "id": "window_4321"
  },
  {
    "type": "window",
    "content": "close()` and returns a promise that fulfills when the\nfilehandle is closed. ### `fsPromises. access(path[, mode])`\n\n<!",
    "originalSentence": "close()` and returns a promise that fulfills when the\nfilehandle is closed. ### `fsPromises. access(path[, mode])`\n\n<!",
    "position": 4322,
    "id": "window_4322"
  },
  {
    "type": "window",
    "content": "### `fsPromises. access(path[, mode])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. access(path[, mode])`\n\n<! -- YAML\nadded: v10.",
    "position": 4323,
    "id": "window_4323"
  },
  {
    "type": "window",
    "content": "access(path[, mode])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "originalSentence": "access(path[, mode])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "position": 4324,
    "id": "window_4324"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants.",
    "position": 4325,
    "id": "window_4325"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants. F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants. F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4326,
    "id": "window_4326"
  },
  {
    "type": "window",
    "content": "constants. F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success. Tests a user's permissions for the file or directory specified by `path`.",
    "originalSentence": "constants. F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success. Tests a user's permissions for the file or directory specified by `path`.",
    "position": 4327,
    "id": "window_4327"
  },
  {
    "type": "window",
    "content": "F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success. Tests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "originalSentence": "F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success. Tests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "position": 4328,
    "id": "window_4328"
  },
  {
    "type": "window",
    "content": "Tests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.",
    "originalSentence": "Tests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.",
    "position": 4329,
    "id": "window_4329"
  },
  {
    "type": "window",
    "content": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs. constants.",
    "originalSentence": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs. constants.",
    "position": 4330,
    "id": "window_4330"
  },
  {
    "type": "window",
    "content": "`mode` should be either the value `fs. constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "originalSentence": "`mode` should be either the value `fs. constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "position": 4331,
    "id": "window_4331"
  },
  {
    "type": "window",
    "content": "constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants.",
    "originalSentence": "constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants.",
    "position": 4332,
    "id": "window_4332"
  },
  {
    "type": "window",
    "content": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants. R_OK`,\n`fs.",
    "originalSentence": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants. R_OK`,\n`fs.",
    "position": 4333,
    "id": "window_4333"
  },
  {
    "type": "window",
    "content": "constants. R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "constants. R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "position": 4334,
    "id": "window_4334"
  },
  {
    "type": "window",
    "content": "R_OK`). Check [File access constants][] for\npossible values of `mode`. If the accessibility check is successful, the promise is fulfilled with no\nvalue.",
    "originalSentence": "R_OK`). Check [File access constants][] for\npossible values of `mode`. If the accessibility check is successful, the promise is fulfilled with no\nvalue.",
    "position": 4335,
    "id": "window_4335"
  },
  {
    "type": "window",
    "content": "Check [File access constants][] for\npossible values of `mode`. If the accessibility check is successful, the promise is fulfilled with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object.",
    "originalSentence": "Check [File access constants][] for\npossible values of `mode`. If the accessibility check is successful, the promise is fulfilled with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object.",
    "position": 4336,
    "id": "window_4336"
  },
  {
    "type": "window",
    "content": "If the accessibility check is successful, the promise is fulfilled with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object. The following example checks if the file\n`/etc/passwd` can be read and written by the current process.",
    "originalSentence": "If the accessibility check is successful, the promise is fulfilled with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object. The following example checks if the file\n`/etc/passwd` can be read and written by the current process.",
    "position": 4337,
    "id": "window_4337"
  },
  {
    "type": "window",
    "content": "If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object. The following example checks if the file\n`/etc/passwd` can be read and written by the current process. ```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants.",
    "originalSentence": "If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object. The following example checks if the file\n`/etc/passwd` can be read and written by the current process. ```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants.",
    "position": 4338,
    "id": "window_4338"
  },
  {
    "type": "window",
    "content": "The following example checks if the file\n`/etc/passwd` can be read and written by the current process. ```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants. R_OK | constants.",
    "originalSentence": "The following example checks if the file\n`/etc/passwd` can be read and written by the current process. ```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants. R_OK | constants.",
    "position": 4339,
    "id": "window_4339"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants. R_OK | constants. W_OK);\n  console.",
    "originalSentence": "```mjs\nimport { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants. R_OK | constants. W_OK);\n  console.",
    "position": 4340,
    "id": "window_4340"
  },
  {
    "type": "window",
    "content": "R_OK | constants. W_OK);\n  console. log('can access');\n} catch {\n  console.",
    "originalSentence": "R_OK | constants. W_OK);\n  console. log('can access');\n} catch {\n  console.",
    "position": 4341,
    "id": "window_4341"
  },
  {
    "type": "window",
    "content": "W_OK);\n  console. log('can access');\n} catch {\n  console. error('cannot access');\n}\n```\n\nUsing `fsPromises.",
    "originalSentence": "W_OK);\n  console. log('can access');\n} catch {\n  console. error('cannot access');\n}\n```\n\nUsing `fsPromises.",
    "position": 4342,
    "id": "window_4342"
  },
  {
    "type": "window",
    "content": "log('can access');\n} catch {\n  console. error('cannot access');\n}\n```\n\nUsing `fsPromises. access()` to check for the accessibility of a file before\ncalling `fsPromises.",
    "originalSentence": "log('can access');\n} catch {\n  console. error('cannot access');\n}\n```\n\nUsing `fsPromises. access()` to check for the accessibility of a file before\ncalling `fsPromises.",
    "position": 4343,
    "id": "window_4343"
  },
  {
    "type": "window",
    "content": "error('cannot access');\n}\n```\n\nUsing `fsPromises. access()` to check for the accessibility of a file before\ncalling `fsPromises. open()` is not recommended.",
    "originalSentence": "error('cannot access');\n}\n```\n\nUsing `fsPromises. access()` to check for the accessibility of a file before\ncalling `fsPromises. open()` is not recommended.",
    "position": 4344,
    "id": "window_4344"
  },
  {
    "type": "window",
    "content": "access()` to check for the accessibility of a file before\ncalling `fsPromises. open()` is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls.",
    "originalSentence": "access()` to check for the accessibility of a file before\ncalling `fsPromises. open()` is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls.",
    "position": 4345,
    "id": "window_4345"
  },
  {
    "type": "window",
    "content": "open()` is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible.",
    "originalSentence": "open()` is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible.",
    "position": 4346,
    "id": "window_4346"
  },
  {
    "type": "window",
    "content": "Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible. ### `fsPromises.",
    "originalSentence": "Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible. ### `fsPromises.",
    "position": 4347,
    "id": "window_4347"
  },
  {
    "type": "window",
    "content": "Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible. ### `fsPromises. appendFile(path, data[, options])`\n\n<!",
    "originalSentence": "Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible. ### `fsPromises. appendFile(path, data[, options])`\n\n<!",
    "position": 4348,
    "id": "window_4348"
  },
  {
    "type": "window",
    "content": "### `fsPromises. appendFile(path, data[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. appendFile(path, data[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4349,
    "id": "window_4349"
  },
  {
    "type": "window",
    "content": "appendFile(path, data[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "appendFile(path, data[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21.",
    "position": 4350,
    "id": "window_4350"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "position": 4351,
    "id": "window_4351"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 4352,
    "id": "window_4352"
  },
  {
    "type": "window",
    "content": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 4353,
    "id": "window_4353"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.",
    "position": 4354,
    "id": "window_4354"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 4355,
    "id": "window_4355"
  },
  {
    "type": "window",
    "content": "**Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "originalSentence": "**Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "position": 4356,
    "id": "window_4356"
  },
  {
    "type": "window",
    "content": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4357,
    "id": "window_4357"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously append data to a file, creating the file if it does not yet\nexist.",
    "originalSentence": "**Default:** `false`. * Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously append data to a file, creating the file if it does not yet\nexist.",
    "position": 4358,
    "id": "window_4358"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "position": 4359,
    "id": "window_4359"
  },
  {
    "type": "window",
    "content": "Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}. If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}. If `options` is a string, then it specifies the `encoding`.",
    "position": 4360,
    "id": "window_4360"
  },
  {
    "type": "window",
    "content": "`data` can be a string or a {Buffer}. If `options` is a string, then it specifies the `encoding`. The `mode` option only affects the newly created file.",
    "originalSentence": "`data` can be a string or a {Buffer}. If `options` is a string, then it specifies the `encoding`. The `mode` option only affects the newly created file.",
    "position": 4361,
    "id": "window_4361"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the `encoding`. The `mode` option only affects the newly created file. See [`fs.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`. The `mode` option only affects the newly created file. See [`fs.",
    "position": 4362,
    "id": "window_4362"
  },
  {
    "type": "window",
    "content": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "position": 4363,
    "id": "window_4363"
  },
  {
    "type": "window",
    "content": "See [`fs. open()`][]\nfor more details. The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises.",
    "originalSentence": "See [`fs. open()`][]\nfor more details. The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises.",
    "position": 4364,
    "id": "window_4364"
  },
  {
    "type": "window",
    "content": "open()`][]\nfor more details. The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises. open()`).",
    "originalSentence": "open()`][]\nfor more details. The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises. open()`).",
    "position": 4365,
    "id": "window_4365"
  },
  {
    "type": "window",
    "content": "The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises. open()`). ### `fsPromises.",
    "originalSentence": "The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises. open()`). ### `fsPromises.",
    "position": 4366,
    "id": "window_4366"
  },
  {
    "type": "window",
    "content": "### `fsPromises. chmod(path, mode)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. chmod(path, mode)`\n\n<! -- YAML\nadded: v10.",
    "position": 4367,
    "id": "window_4367"
  },
  {
    "type": "window",
    "content": "chmod(path, mode)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "chmod(path, mode)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4368,
    "id": "window_4368"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions of a file.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions of a file.",
    "position": 4369,
    "id": "window_4369"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions of a file. ### `fsPromises.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions of a file. ### `fsPromises.",
    "position": 4370,
    "id": "window_4370"
  },
  {
    "type": "window",
    "content": "Changes the permissions of a file. ### `fsPromises. chown(path, uid, gid)`\n\n<!",
    "originalSentence": "Changes the permissions of a file. ### `fsPromises. chown(path, uid, gid)`\n\n<!",
    "position": 4371,
    "id": "window_4371"
  },
  {
    "type": "window",
    "content": "### `fsPromises. chown(path, uid, gid)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. chown(path, uid, gid)`\n\n<! -- YAML\nadded: v10.",
    "position": 4372,
    "id": "window_4372"
  },
  {
    "type": "window",
    "content": "chown(path, uid, gid)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "chown(path, uid, gid)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4373,
    "id": "window_4373"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of a file.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of a file.",
    "position": 4374,
    "id": "window_4374"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of a file. ### `fsPromises.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the ownership of a file. ### `fsPromises.",
    "position": 4375,
    "id": "window_4375"
  },
  {
    "type": "window",
    "content": "Changes the ownership of a file. ### `fsPromises. copyFile(src, dest[, mode])`\n\n<!",
    "originalSentence": "Changes the ownership of a file. ### `fsPromises. copyFile(src, dest[, mode])`\n\n<!",
    "position": 4376,
    "id": "window_4376"
  },
  {
    "type": "window",
    "content": "### `fsPromises. copyFile(src, dest[, mode])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. copyFile(src, dest[, mode])`\n\n<! -- YAML\nadded: v10.",
    "position": 4377,
    "id": "window_4377"
  },
  {
    "type": "window",
    "content": "copyFile(src, dest[, mode])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "originalSentence": "copyFile(src, dest[, mode])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14.",
    "position": 4378,
    "id": "window_4378"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "position": 4379,
    "id": "window_4379"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation.",
    "originalSentence": "0.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation.",
    "position": 4380,
    "id": "window_4380"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation. It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation. It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e.",
    "position": 4381,
    "id": "window_4381"
  },
  {
    "type": "window",
    "content": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation. It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e. g.",
    "originalSentence": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation. It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e. g.",
    "position": 4382,
    "id": "window_4382"
  },
  {
    "type": "window",
    "content": "It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e. g. `fs.",
    "originalSentence": "It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e. g. `fs.",
    "position": 4383,
    "id": "window_4383"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL | fs. constants. COPYFILE_FICLONE`)\n  **Default:** `0`.",
    "originalSentence": "COPYFILE_EXCL | fs. constants. COPYFILE_FICLONE`)\n  **Default:** `0`.",
    "position": 4384,
    "id": "window_4384"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE`)\n  **Default:** `0`. * `fs.",
    "originalSentence": "constants. COPYFILE_FICLONE`)\n  **Default:** `0`. * `fs.",
    "position": 4385,
    "id": "window_4385"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE`)\n  **Default:** `0`. * `fs. constants.",
    "originalSentence": "COPYFILE_FICLONE`)\n  **Default:** `0`. * `fs. constants.",
    "position": 4386,
    "id": "window_4386"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists.",
    "originalSentence": "* `fs. constants. COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists.",
    "position": 4387,
    "id": "window_4387"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists. * `fs.",
    "originalSentence": "constants. COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists. * `fs.",
    "position": 4388,
    "id": "window_4388"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists. * `fs. constants.",
    "originalSentence": "COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists. * `fs. constants.",
    "position": 4389,
    "id": "window_4389"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink.",
    "originalSentence": "* `fs. constants. COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink.",
    "position": 4390,
    "id": "window_4390"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink. If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used.",
    "originalSentence": "constants. COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink. If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used.",
    "position": 4391,
    "id": "window_4391"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink. If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used. * `fs.",
    "originalSentence": "COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink. If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used. * `fs.",
    "position": 4392,
    "id": "window_4392"
  },
  {
    "type": "window",
    "content": "If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used. * `fs. constants.",
    "originalSentence": "If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used. * `fs. constants.",
    "position": 4393,
    "id": "window_4393"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink.",
    "originalSentence": "* `fs. constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink.",
    "position": 4394,
    "id": "window_4394"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink. If the platform does not support\n    copy-on-write, then the operation will fail.",
    "originalSentence": "constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink. If the platform does not support\n    copy-on-write, then the operation will fail.",
    "position": 4395,
    "id": "window_4395"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink. If the platform does not support\n    copy-on-write, then the operation will fail. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink. If the platform does not support\n    copy-on-write, then the operation will fail. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4396,
    "id": "window_4396"
  },
  {
    "type": "window",
    "content": "If the platform does not support\n    copy-on-write, then the operation will fail. * Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies `src` to `dest`.",
    "originalSentence": "If the platform does not support\n    copy-on-write, then the operation will fail. * Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies `src` to `dest`.",
    "position": 4397,
    "id": "window_4397"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "position": 4398,
    "id": "window_4398"
  },
  {
    "type": "window",
    "content": "Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. No guarantees are made about the atomicity of the copy operation.",
    "originalSentence": "Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. No guarantees are made about the atomicity of the copy operation.",
    "position": 4399,
    "id": "window_4399"
  },
  {
    "type": "window",
    "content": "By default, `dest` is overwritten if it\nalready exists. No guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.",
    "originalSentence": "By default, `dest` is overwritten if it\nalready exists. No guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.",
    "position": 4400,
    "id": "window_4400"
  },
  {
    "type": "window",
    "content": "No guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination. ```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source.",
    "originalSentence": "No guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination. ```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source.",
    "position": 4401,
    "id": "window_4401"
  },
  {
    "type": "window",
    "content": "If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination. ```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source. txt', 'destination.",
    "originalSentence": "If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination. ```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source. txt', 'destination.",
    "position": 4402,
    "id": "window_4402"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source. txt', 'destination. txt');\n  console.",
    "originalSentence": "```mjs\nimport { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source. txt', 'destination. txt');\n  console.",
    "position": 4403,
    "id": "window_4403"
  },
  {
    "type": "window",
    "content": "txt');\n  console. log('source. txt was copied to destination.",
    "originalSentence": "txt');\n  console. log('source. txt was copied to destination.",
    "position": 4404,
    "id": "window_4404"
  },
  {
    "type": "window",
    "content": "log('source. txt was copied to destination. txt');\n} catch {\n  console.",
    "originalSentence": "log('source. txt was copied to destination. txt');\n} catch {\n  console.",
    "position": 4405,
    "id": "window_4405"
  },
  {
    "type": "window",
    "content": "txt was copied to destination. txt');\n} catch {\n  console. error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "originalSentence": "txt was copied to destination. txt');\n} catch {\n  console. error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "position": 4406,
    "id": "window_4406"
  },
  {
    "type": "window",
    "content": "txt');\n} catch {\n  console. error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists.",
    "originalSentence": "txt');\n} catch {\n  console. error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists.",
    "position": 4407,
    "id": "window_4407"
  },
  {
    "type": "window",
    "content": "error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists. try {\n  await copyFile('source.",
    "originalSentence": "error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists. try {\n  await copyFile('source.",
    "position": 4408,
    "id": "window_4408"
  },
  {
    "type": "window",
    "content": "txt exists. try {\n  await copyFile('source. txt', 'destination.",
    "originalSentence": "txt exists. try {\n  await copyFile('source. txt', 'destination.",
    "position": 4409,
    "id": "window_4409"
  },
  {
    "type": "window",
    "content": "try {\n  await copyFile('source. txt', 'destination. txt', constants.",
    "originalSentence": "try {\n  await copyFile('source. txt', 'destination. txt', constants.",
    "position": 4410,
    "id": "window_4410"
  },
  {
    "type": "window",
    "content": "txt', 'destination. txt', constants. COPYFILE_EXCL);\n  console.",
    "originalSentence": "txt', 'destination. txt', constants. COPYFILE_EXCL);\n  console.",
    "position": 4411,
    "id": "window_4411"
  },
  {
    "type": "window",
    "content": "txt', constants. COPYFILE_EXCL);\n  console. log('source.",
    "originalSentence": "txt', constants. COPYFILE_EXCL);\n  console. log('source.",
    "position": 4412,
    "id": "window_4412"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL);\n  console. log('source. txt was copied to destination.",
    "originalSentence": "COPYFILE_EXCL);\n  console. log('source. txt was copied to destination.",
    "position": 4413,
    "id": "window_4413"
  },
  {
    "type": "window",
    "content": "log('source. txt was copied to destination. txt');\n} catch {\n  console.",
    "originalSentence": "log('source. txt was copied to destination. txt');\n} catch {\n  console.",
    "position": 4414,
    "id": "window_4414"
  },
  {
    "type": "window",
    "content": "txt was copied to destination. txt');\n} catch {\n  console. error('The file could not be copied');\n}\n```\n\n### `fsPromises.",
    "originalSentence": "txt was copied to destination. txt');\n} catch {\n  console. error('The file could not be copied');\n}\n```\n\n### `fsPromises.",
    "position": 4415,
    "id": "window_4415"
  },
  {
    "type": "window",
    "content": "txt');\n} catch {\n  console. error('The file could not be copied');\n}\n```\n\n### `fsPromises. cp(src, dest[, options])`\n\n<!",
    "originalSentence": "txt');\n} catch {\n  console. error('The file could not be copied');\n}\n```\n\n### `fsPromises. cp(src, dest[, options])`\n\n<!",
    "position": 4416,
    "id": "window_4416"
  },
  {
    "type": "window",
    "content": "error('The file could not be copied');\n}\n```\n\n### `fsPromises. cp(src, dest[, options])`\n\n<! -- YAML\nadded: v16.",
    "originalSentence": "error('The file could not be copied');\n}\n```\n\n### `fsPromises. cp(src, dest[, options])`\n\n<! -- YAML\nadded: v16.",
    "position": 4417,
    "id": "window_4417"
  },
  {
    "type": "window",
    "content": "cp(src, dest[, options])`\n\n<! -- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22.",
    "originalSentence": "cp(src, dest[, options])`\n\n<! -- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22.",
    "position": 4418,
    "id": "window_4418"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "originalSentence": "-- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "position": 4419,
    "id": "window_4419"
  },
  {
    "type": "window",
    "content": "7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20.",
    "originalSentence": "7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20.",
    "position": 4420,
    "id": "window_4420"
  },
  {
    "type": "window",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20. 1.0\n    - v18.",
    "position": 4421,
    "id": "window_4421"
  },
  {
    "type": "window",
    "content": "- version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "originalSentence": "- version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "position": 4422,
    "id": "window_4422"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`.",
    "position": 4423,
    "id": "window_4423"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`. - version:\n    - v17.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`. - version:\n    - v17.",
    "position": 4424,
    "id": "window_4424"
  },
  {
    "type": "window",
    "content": "- version:\n    - v17. 6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "originalSentence": "- version:\n    - v17. 6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "position": 4425,
    "id": "window_4425"
  },
  {
    "type": "window",
    "content": "6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy.",
    "originalSentence": "6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy.",
    "position": 4426,
    "id": "window_4426"
  },
  {
    "type": "window",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to.",
    "position": 4427,
    "id": "window_4427"
  },
  {
    "type": "window",
    "content": "-->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "originalSentence": "-->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "position": 4428,
    "id": "window_4428"
  },
  {
    "type": "window",
    "content": "* `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.",
    "originalSentence": "* `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.",
    "position": 4429,
    "id": "window_4429"
  },
  {
    "type": "window",
    "content": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "originalSentence": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "position": 4430,
    "id": "window_4430"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.",
    "originalSentence": "**Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.",
    "position": 4431,
    "id": "window_4431"
  },
  {
    "type": "window",
    "content": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`. * `filter` {Function} Function to filter copied files/directories.",
    "originalSentence": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`. * `filter` {Function} Function to filter copied files/directories.",
    "position": 4432,
    "id": "window_4432"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it.",
    "originalSentence": "**Default:** `false`. * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it.",
    "position": 4433,
    "id": "window_4433"
  },
  {
    "type": "window",
    "content": "* `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well.",
    "originalSentence": "* `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well.",
    "position": 4434,
    "id": "window_4434"
  },
  {
    "type": "window",
    "content": "Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "originalSentence": "Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "position": 4435,
    "id": "window_4435"
  },
  {
    "type": "window",
    "content": "When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy.",
    "originalSentence": "When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy.",
    "position": 4436,
    "id": "window_4436"
  },
  {
    "type": "window",
    "content": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy. * `dest` {string} destination path to copy to.",
    "originalSentence": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy. * `dest` {string} destination path to copy to.",
    "position": 4437,
    "id": "window_4437"
  },
  {
    "type": "window",
    "content": "* `src` {string} source path to copy. * `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "originalSentence": "* `src` {string} source path to copy. * `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "position": 4438,
    "id": "window_4438"
  },
  {
    "type": "window",
    "content": "* `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory.",
    "originalSentence": "* `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory.",
    "position": 4439,
    "id": "window_4439"
  },
  {
    "type": "window",
    "content": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "originalSentence": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "position": 4440,
    "id": "window_4440"
  },
  {
    "type": "window",
    "content": "* `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.",
    "originalSentence": "* `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.",
    "position": 4441,
    "id": "window_4441"
  },
  {
    "type": "window",
    "content": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior. **Default:** `true`.",
    "originalSentence": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior. **Default:** `true`.",
    "position": 4442,
    "id": "window_4442"
  },
  {
    "type": "window",
    "content": "Use the `errorOnExist` option to change this behavior. **Default:** `true`. * `mode` {integer} modifiers for copy operation.",
    "originalSentence": "Use the `errorOnExist` option to change this behavior. **Default:** `true`. * `mode` {integer} modifiers for copy operation.",
    "position": 4443,
    "id": "window_4443"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "originalSentence": "**Default:** `true`. * `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "position": 4444,
    "id": "window_4444"
  },
  {
    "type": "window",
    "content": "* `mode` {integer} modifiers for copy operation. **Default:** `0`. See `mode` flag of [`fsPromises.",
    "originalSentence": "* `mode` {integer} modifiers for copy operation. **Default:** `0`. See `mode` flag of [`fsPromises.",
    "position": 4445,
    "id": "window_4445"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. See `mode` flag of [`fsPromises. copyFile()`][].",
    "originalSentence": "**Default:** `0`. See `mode` flag of [`fsPromises. copyFile()`][].",
    "position": 4446,
    "id": "window_4446"
  },
  {
    "type": "window",
    "content": "See `mode` flag of [`fsPromises. copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "originalSentence": "See `mode` flag of [`fsPromises. copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "position": 4447,
    "id": "window_4447"
  },
  {
    "type": "window",
    "content": "copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.",
    "originalSentence": "copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.",
    "position": 4448,
    "id": "window_4448"
  },
  {
    "type": "window",
    "content": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "originalSentence": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "position": 4449,
    "id": "window_4449"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "**Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4450,
    "id": "window_4450"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 4451,
    "id": "window_4451"
  },
  {
    "type": "window",
    "content": "**Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "**Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 4452,
    "id": "window_4452"
  },
  {
    "type": "window",
    "content": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fsPromises.",
    "originalSentence": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fsPromises.",
    "position": 4453,
    "id": "window_4453"
  },
  {
    "type": "window",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fsPromises. glob(pattern[, options])`\n\n<!",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fsPromises. glob(pattern[, options])`\n\n<!",
    "position": 4454,
    "id": "window_4454"
  },
  {
    "type": "window",
    "content": "### `fsPromises. glob(pattern[, options])`\n\n<! -- YAML\nadded: v22.",
    "originalSentence": "### `fsPromises. glob(pattern[, options])`\n\n<! -- YAML\nadded: v22.",
    "position": 4455,
    "id": "window_4455"
  },
  {
    "type": "window",
    "content": "glob(pattern[, options])`\n\n<! -- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "glob(pattern[, options])`\n\n<! -- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24.",
    "position": 4456,
    "id": "window_4456"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22.",
    "originalSentence": "-- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22.",
    "position": 4457,
    "id": "window_4457"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "position": 4458,
    "id": "window_4458"
  },
  {
    "type": "window",
    "content": "1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24.",
    "originalSentence": "1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24.",
    "position": 4459,
    "id": "window_4459"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24. 0.0\n      - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24. 0.0\n      - v22.",
    "position": 4460,
    "id": "window_4460"
  },
  {
    "type": "window",
    "content": "- version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "- version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 4461,
    "id": "window_4461"
  },
  {
    "type": "window",
    "content": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "originalSentence": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "position": 4462,
    "id": "window_4462"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 7.0\n    - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 7.0\n    - v22.",
    "position": 4463,
    "id": "window_4463"
  },
  {
    "type": "window",
    "content": "- version:\n    - v23. 7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "originalSentence": "- version:\n    - v23. 7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "position": 4464,
    "id": "window_4464"
  },
  {
    "type": "window",
    "content": "7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22.",
    "originalSentence": "7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22.",
    "position": 4465,
    "id": "window_4465"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "position": 4466,
    "id": "window_4466"
  },
  {
    "type": "window",
    "content": "- version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "originalSentence": "- version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "position": 4467,
    "id": "window_4467"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.",
    "position": 4468,
    "id": "window_4468"
  },
  {
    "type": "window",
    "content": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "originalSentence": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "position": 4469,
    "id": "window_4469"
  },
  {
    "type": "window",
    "content": "**Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "originalSentence": "**Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "position": 4470,
    "id": "window_4470"
  },
  {
    "type": "window",
    "content": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.",
    "originalSentence": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.",
    "position": 4471,
    "id": "window_4471"
  },
  {
    "type": "window",
    "content": "If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`. If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude.",
    "originalSentence": "If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`. If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude.",
    "position": 4472,
    "id": "window_4472"
  },
  {
    "type": "window",
    "content": "**Default:** `undefined`. If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude. Note: Negation patterns (e.",
    "originalSentence": "**Default:** `undefined`. If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude. Note: Negation patterns (e.",
    "position": 4473,
    "id": "window_4473"
  },
  {
    "type": "window",
    "content": "If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude. Note: Negation patterns (e. g.",
    "originalSentence": "If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude. Note: Negation patterns (e. g.",
    "position": 4474,
    "id": "window_4474"
  },
  {
    "type": "window",
    "content": "foo. js') are\n    not supported. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "originalSentence": "foo. js') are\n    not supported. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "position": 4475,
    "id": "window_4475"
  },
  {
    "type": "window",
    "content": "js') are\n    not supported. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "originalSentence": "js') are\n    not supported. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "position": 4476,
    "id": "window_4476"
  },
  {
    "type": "window",
    "content": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`. * Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern.",
    "originalSentence": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`. * Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern.",
    "position": 4477,
    "id": "window_4477"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern. ```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*.",
    "originalSentence": "**Default:** `false`. * Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern. ```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*.",
    "position": 4478,
    "id": "window_4478"
  },
  {
    "type": "window",
    "content": "* Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern. ```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*. js'))\n  console.",
    "originalSentence": "* Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern. ```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*. js'))\n  console.",
    "position": 4479,
    "id": "window_4479"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*. js'))\n  console. log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*.",
    "originalSentence": "```mjs\nimport { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*. js'))\n  console. log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*.",
    "position": 4480,
    "id": "window_4480"
  },
  {
    "type": "window",
    "content": "js'))\n  console. log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*. js'))\n    console.",
    "originalSentence": "js'))\n  console. log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*. js'))\n    console.",
    "position": 4481,
    "id": "window_4481"
  },
  {
    "type": "window",
    "content": "log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*. js'))\n    console. log(entry);\n})();\n```\n\n### `fsPromises.",
    "originalSentence": "log(entry);\n```\n\n```cjs\nconst { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*. js'))\n    console. log(entry);\n})();\n```\n\n### `fsPromises.",
    "position": 4482,
    "id": "window_4482"
  },
  {
    "type": "window",
    "content": "js'))\n    console. log(entry);\n})();\n```\n\n### `fsPromises. lchmod(path, mode)`\n\n<!",
    "originalSentence": "js'))\n    console. log(entry);\n})();\n```\n\n### `fsPromises. lchmod(path, mode)`\n\n<!",
    "position": 4483,
    "id": "window_4483"
  },
  {
    "type": "window",
    "content": "log(entry);\n})();\n```\n\n### `fsPromises. lchmod(path, mode)`\n\n<! -- YAML\ndeprecated: v10.",
    "originalSentence": "log(entry);\n})();\n```\n\n### `fsPromises. lchmod(path, mode)`\n\n<! -- YAML\ndeprecated: v10.",
    "position": 4484,
    "id": "window_4484"
  },
  {
    "type": "window",
    "content": "lchmod(path, mode)`\n\n<! -- YAML\ndeprecated: v10. 0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "lchmod(path, mode)`\n\n<! -- YAML\ndeprecated: v10. 0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4485,
    "id": "window_4485"
  },
  {
    "type": "window",
    "content": "-- YAML\ndeprecated: v10. 0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions on a symbolic link.",
    "originalSentence": "-- YAML\ndeprecated: v10. 0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions on a symbolic link.",
    "position": 4486,
    "id": "window_4486"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions on a symbolic link. This method is only implemented on macOS.",
    "originalSentence": "0.0\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success. Changes the permissions on a symbolic link. This method is only implemented on macOS.",
    "position": 4487,
    "id": "window_4487"
  },
  {
    "type": "window",
    "content": "Changes the permissions on a symbolic link. This method is only implemented on macOS. ### `fsPromises.",
    "originalSentence": "Changes the permissions on a symbolic link. This method is only implemented on macOS. ### `fsPromises.",
    "position": 4488,
    "id": "window_4488"
  },
  {
    "type": "window",
    "content": "This method is only implemented on macOS. ### `fsPromises. lchown(path, uid, gid)`\n\n<!",
    "originalSentence": "This method is only implemented on macOS. ### `fsPromises. lchown(path, uid, gid)`\n\n<!",
    "position": 4489,
    "id": "window_4489"
  },
  {
    "type": "window",
    "content": "### `fsPromises. lchown(path, uid, gid)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. lchown(path, uid, gid)`\n\n<! -- YAML\nadded: v10.",
    "position": 4490,
    "id": "window_4490"
  },
  {
    "type": "window",
    "content": "lchown(path, uid, gid)`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "originalSentence": "lchown(path, uid, gid)`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "position": 4491,
    "id": "window_4491"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "position": 4492,
    "id": "window_4492"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 4493,
    "id": "window_4493"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the ownership on a symbolic link.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the ownership on a symbolic link.",
    "position": 4494,
    "id": "window_4494"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the ownership on a symbolic link. ### `fsPromises.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the ownership on a symbolic link. ### `fsPromises.",
    "position": 4495,
    "id": "window_4495"
  },
  {
    "type": "window",
    "content": "Changes the ownership on a symbolic link. ### `fsPromises. lutimes(path, atime, mtime)`\n\n<!",
    "originalSentence": "Changes the ownership on a symbolic link. ### `fsPromises. lutimes(path, atime, mtime)`\n\n<!",
    "position": 4496,
    "id": "window_4496"
  },
  {
    "type": "window",
    "content": "### `fsPromises. lutimes(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14.",
    "originalSentence": "### `fsPromises. lutimes(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14.",
    "position": 4497,
    "id": "window_4497"
  },
  {
    "type": "window",
    "content": "lutimes(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14. 5.0\n  - v12.",
    "originalSentence": "lutimes(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14. 5.0\n  - v12.",
    "position": 4498,
    "id": "window_4498"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 4499,
    "id": "window_4499"
  },
  {
    "type": "window",
    "content": "5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the access and modification times of a file in the same way as\n[`fsPromises.",
    "originalSentence": "5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the access and modification times of a file in the same way as\n[`fsPromises.",
    "position": 4500,
    "id": "window_4500"
  },
  {
    "type": "window",
    "content": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the access and modification times of a file in the same way as\n[`fsPromises. utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed.",
    "originalSentence": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Changes the access and modification times of a file in the same way as\n[`fsPromises. utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed.",
    "position": 4501,
    "id": "window_4501"
  },
  {
    "type": "window",
    "content": "Changes the access and modification times of a file in the same way as\n[`fsPromises. utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed. ### `fsPromises.",
    "originalSentence": "Changes the access and modification times of a file in the same way as\n[`fsPromises. utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed. ### `fsPromises.",
    "position": 4502,
    "id": "window_4502"
  },
  {
    "type": "window",
    "content": "utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed. ### `fsPromises. link(existingPath, newPath)`\n\n<!",
    "originalSentence": "utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed. ### `fsPromises. link(existingPath, newPath)`\n\n<!",
    "position": 4503,
    "id": "window_4503"
  },
  {
    "type": "window",
    "content": "### `fsPromises. link(existingPath, newPath)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. link(existingPath, newPath)`\n\n<! -- YAML\nadded: v10.",
    "position": 4504,
    "id": "window_4504"
  },
  {
    "type": "window",
    "content": "link(existingPath, newPath)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "link(existingPath, newPath)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 4505,
    "id": "window_4505"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Creates a new link from the `existingPath` to the `newPath`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Creates a new link from the `existingPath` to the `newPath`.",
    "position": 4506,
    "id": "window_4506"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "0.0\n-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success. Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "position": 4507,
    "id": "window_4507"
  },
  {
    "type": "window",
    "content": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. ### `fsPromises.",
    "originalSentence": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. ### `fsPromises.",
    "position": 4508,
    "id": "window_4508"
  },
  {
    "type": "window",
    "content": "See the POSIX\nlink(2) documentation for more detail. ### `fsPromises. lstat(path[, options])`\n\n<!",
    "originalSentence": "See the POSIX\nlink(2) documentation for more detail. ### `fsPromises. lstat(path[, options])`\n\n<!",
    "position": 4509,
    "id": "window_4509"
  },
  {
    "type": "window",
    "content": "### `fsPromises. lstat(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. lstat(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4510,
    "id": "window_4510"
  },
  {
    "type": "window",
    "content": "lstat(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "originalSentence": "lstat(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "position": 4511,
    "id": "window_4511"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 4512,
    "id": "window_4512"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 4513,
    "id": "window_4513"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 4514,
    "id": "window_4514"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 4515,
    "id": "window_4515"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {Promise}  Fulfills with the {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {Promise}  Fulfills with the {fs.",
    "position": 4516,
    "id": "window_4516"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {Promise}  Fulfills with the {fs. Stats} object for the given\n  symbolic link `path`.",
    "originalSentence": "**Default:** `false`. * Returns: {Promise}  Fulfills with the {fs. Stats} object for the given\n  symbolic link `path`.",
    "position": 4517,
    "id": "window_4517"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise}  Fulfills with the {fs. Stats} object for the given\n  symbolic link `path`. Equivalent to [`fsPromises.",
    "originalSentence": "* Returns: {Promise}  Fulfills with the {fs. Stats} object for the given\n  symbolic link `path`. Equivalent to [`fsPromises.",
    "position": 4518,
    "id": "window_4518"
  },
  {
    "type": "window",
    "content": "Stats} object for the given\n  symbolic link `path`. Equivalent to [`fsPromises. stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.",
    "originalSentence": "Stats} object for the given\n  symbolic link `path`. Equivalent to [`fsPromises. stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.",
    "position": 4519,
    "id": "window_4519"
  },
  {
    "type": "window",
    "content": "Equivalent to [`fsPromises. stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to. Refer to the POSIX lstat(2) document for more detail.",
    "originalSentence": "Equivalent to [`fsPromises. stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to. Refer to the POSIX lstat(2) document for more detail.",
    "position": 4520,
    "id": "window_4520"
  },
  {
    "type": "window",
    "content": "stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to. Refer to the POSIX lstat(2) document for more detail. ### `fsPromises.",
    "originalSentence": "stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to. Refer to the POSIX lstat(2) document for more detail. ### `fsPromises.",
    "position": 4521,
    "id": "window_4521"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX lstat(2) document for more detail. ### `fsPromises. mkdir(path[, options])`\n\n<!",
    "originalSentence": "Refer to the POSIX lstat(2) document for more detail. ### `fsPromises. mkdir(path[, options])`\n\n<!",
    "position": 4522,
    "id": "window_4522"
  },
  {
    "type": "window",
    "content": "### `fsPromises. mkdir(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. mkdir(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4523,
    "id": "window_4523"
  },
  {
    "type": "window",
    "content": "mkdir(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "originalSentence": "mkdir(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "position": 4524,
    "id": "window_4524"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.",
    "position": 4525,
    "id": "window_4525"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`. * Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`. * Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`.",
    "position": 4526,
    "id": "window_4526"
  },
  {
    "type": "window",
    "content": "**Default:** `0o777`. * Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`. Asynchronously creates a directory.",
    "originalSentence": "**Default:** `0o777`. * Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`. Asynchronously creates a directory.",
    "position": 4527,
    "id": "window_4527"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`. Asynchronously creates a directory. The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "originalSentence": "* Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`. Asynchronously creates a directory. The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "position": 4528,
    "id": "window_4528"
  },
  {
    "type": "window",
    "content": "Asynchronously creates a directory. The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fsPromises.",
    "originalSentence": "Asynchronously creates a directory. The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fsPromises.",
    "position": 4529,
    "id": "window_4529"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fsPromises. mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false.",
    "originalSentence": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fsPromises. mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false.",
    "position": 4530,
    "id": "window_4530"
  },
  {
    "type": "window",
    "content": "Calling\n`fsPromises. mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false. ```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('.",
    "originalSentence": "Calling\n`fsPromises. mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false. ```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('.",
    "position": 4531,
    "id": "window_4531"
  },
  {
    "type": "window",
    "content": "mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false. ```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('. /test/project/', import.",
    "originalSentence": "mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false. ```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('. /test/project/', import.",
    "position": 4532,
    "id": "window_4532"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('. /test/project/', import. meta.",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('. /test/project/', import. meta.",
    "position": 4533,
    "id": "window_4533"
  },
  {
    "type": "window",
    "content": "/test/project/', import. meta. url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "originalSentence": "/test/project/', import. meta. url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "position": 4534,
    "id": "window_4534"
  },
  {
    "type": "window",
    "content": "meta. url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console. log(`created ${createDir}`);\n} catch (err) {\n  console.",
    "originalSentence": "meta. url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console. log(`created ${createDir}`);\n} catch (err) {\n  console.",
    "position": 4535,
    "id": "window_4535"
  },
  {
    "type": "window",
    "content": "url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console. log(`created ${createDir}`);\n} catch (err) {\n  console. error(err.",
    "originalSentence": "url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console. log(`created ${createDir}`);\n} catch (err) {\n  console. error(err.",
    "position": 4536,
    "id": "window_4536"
  },
  {
    "type": "window",
    "content": "log(`created ${createDir}`);\n} catch (err) {\n  console. error(err. message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "originalSentence": "log(`created ${createDir}`);\n} catch (err) {\n  console. error(err. message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console.",
    "position": 4537,
    "id": "window_4537"
  },
  {
    "type": "window",
    "content": "error(err. message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console. log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory().",
    "originalSentence": "error(err. message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console. log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory().",
    "position": 4538,
    "id": "window_4538"
  },
  {
    "type": "window",
    "content": "message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console. log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory(). catch(console.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console. log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory(). catch(console.",
    "position": 4539,
    "id": "window_4539"
  },
  {
    "type": "window",
    "content": "log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory(). catch(console. error);\n```\n\n### `fsPromises.",
    "originalSentence": "log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory(). catch(console. error);\n```\n\n### `fsPromises.",
    "position": 4540,
    "id": "window_4540"
  },
  {
    "type": "window",
    "content": "catch(console. error);\n```\n\n### `fsPromises. mkdtemp(prefix[, options])`\n\n<!",
    "originalSentence": "catch(console. error);\n```\n\n### `fsPromises. mkdtemp(prefix[, options])`\n\n<!",
    "position": 4541,
    "id": "window_4541"
  },
  {
    "type": "window",
    "content": "error);\n```\n\n### `fsPromises. mkdtemp(prefix[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "error);\n```\n\n### `fsPromises. mkdtemp(prefix[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4542,
    "id": "window_4542"
  },
  {
    "type": "window",
    "content": "mkdtemp(prefix[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "mkdtemp(prefix[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20.",
    "position": 4543,
    "id": "window_4543"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18.",
    "position": 4544,
    "id": "window_4544"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "position": 4545,
    "id": "window_4545"
  },
  {
    "type": "window",
    "content": "6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16.",
    "originalSentence": "6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16.",
    "position": 4546,
    "id": "window_4546"
  },
  {
    "type": "window",
    "content": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16. 5.0\n      - v14.",
    "originalSentence": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16. 5.0\n      - v14.",
    "position": 4547,
    "id": "window_4547"
  },
  {
    "type": "window",
    "content": "- version:\n      - v16. 5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "originalSentence": "- version:\n      - v16. 5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "position": 4548,
    "id": "window_4548"
  },
  {
    "type": "window",
    "content": "5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory.",
    "originalSentence": "5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory.",
    "position": 4549,
    "id": "window_4549"
  },
  {
    "type": "window",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory. Creates a unique temporary directory.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory. Creates a unique temporary directory.",
    "position": 4550,
    "id": "window_4550"
  },
  {
    "type": "window",
    "content": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory. Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`.",
    "originalSentence": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory. Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`.",
    "position": 4551,
    "id": "window_4551"
  },
  {
    "type": "window",
    "content": "Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`. Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`.",
    "originalSentence": "Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`. Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`.",
    "position": 4552,
    "id": "window_4552"
  },
  {
    "type": "window",
    "content": "A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`. Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`. Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters.",
    "originalSentence": "A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`. Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`. Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters.",
    "position": 4553,
    "id": "window_4553"
  },
  {
    "type": "window",
    "content": "Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`. Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`. Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 4554,
    "id": "window_4554"
  },
  {
    "type": "window",
    "content": "Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.",
    "originalSentence": "Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.",
    "position": 4555,
    "id": "window_4555"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console. error(err);\n}\n```\n\nThe `fsPromises.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console. error(err);\n}\n```\n\nThe `fsPromises.",
    "position": 4556,
    "id": "window_4556"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console. error(err);\n}\n```\n\nThe `fsPromises. mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string.",
    "originalSentence": "```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console. error(err);\n}\n```\n\nThe `fsPromises. mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string.",
    "position": 4557,
    "id": "window_4557"
  },
  {
    "type": "window",
    "content": "error(err);\n}\n```\n\nThe `fsPromises. mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string. For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path').",
    "originalSentence": "error(err);\n}\n```\n\nThe `fsPromises. mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string. For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path').",
    "position": 4558,
    "id": "window_4558"
  },
  {
    "type": "window",
    "content": "mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string. For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path'). sep`).",
    "originalSentence": "mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string. For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path'). sep`).",
    "position": 4559,
    "id": "window_4559"
  },
  {
    "type": "window",
    "content": "For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path'). sep`). ### `fsPromises.",
    "originalSentence": "For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path'). sep`). ### `fsPromises.",
    "position": 4560,
    "id": "window_4560"
  },
  {
    "type": "window",
    "content": "sep`). ### `fsPromises. mkdtempDisposable(prefix[, options])`\n\n<!",
    "originalSentence": "sep`). ### `fsPromises. mkdtempDisposable(prefix[, options])`\n\n<!",
    "position": 4561,
    "id": "window_4561"
  },
  {
    "type": "window",
    "content": "### `fsPromises. mkdtempDisposable(prefix[, options])`\n\n<! -- YAML\nadded: v24.",
    "originalSentence": "### `fsPromises. mkdtempDisposable(prefix[, options])`\n\n<! -- YAML\nadded: v24.",
    "position": 4562,
    "id": "window_4562"
  },
  {
    "type": "window",
    "content": "mkdtempDisposable(prefix[, options])`\n\n<! -- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory.",
    "originalSentence": "mkdtempDisposable(prefix[, options])`\n\n<! -- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory.",
    "position": 4563,
    "id": "window_4563"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory. * `remove` {AsyncFunction} A function which removes the created directory.",
    "originalSentence": "-- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory. * `remove` {AsyncFunction} A function which removes the created directory.",
    "position": 4564,
    "id": "window_4564"
  },
  {
    "type": "window",
    "content": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory. * `remove` {AsyncFunction} A function which removes the created directory. * `[Symbol.",
    "originalSentence": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory. * `remove` {AsyncFunction} A function which removes the created directory. * `[Symbol.",
    "position": 4565,
    "id": "window_4565"
  },
  {
    "type": "window",
    "content": "* `remove` {AsyncFunction} A function which removes the created directory. * `[Symbol. asyncDispose]` {AsyncFunction} The same as `remove`.",
    "originalSentence": "* `remove` {AsyncFunction} A function which removes the created directory. * `[Symbol. asyncDispose]` {AsyncFunction} The same as `remove`.",
    "position": 4566,
    "id": "window_4566"
  },
  {
    "type": "window",
    "content": "* `[Symbol. asyncDispose]` {AsyncFunction} The same as `remove`. The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path.",
    "originalSentence": "* `[Symbol. asyncDispose]` {AsyncFunction} The same as `remove`. The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path.",
    "position": 4567,
    "id": "window_4567"
  },
  {
    "type": "window",
    "content": "asyncDispose]` {AsyncFunction} The same as `remove`. The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path. When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists.",
    "originalSentence": "asyncDispose]` {AsyncFunction} The same as `remove`. The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path. When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists.",
    "position": 4568,
    "id": "window_4568"
  },
  {
    "type": "window",
    "content": "The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path. When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists. If the\ndirectory cannot be deleted, disposal will throw an error.",
    "originalSentence": "The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path. When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists. If the\ndirectory cannot be deleted, disposal will throw an error.",
    "position": 4569,
    "id": "window_4569"
  },
  {
    "type": "window",
    "content": "When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists. If the\ndirectory cannot be deleted, disposal will throw an error. The object has an\nasync `remove()` method which will perform the same task.",
    "originalSentence": "When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists. If the\ndirectory cannot be deleted, disposal will throw an error. The object has an\nasync `remove()` method which will perform the same task.",
    "position": 4570,
    "id": "window_4570"
  },
  {
    "type": "window",
    "content": "If the\ndirectory cannot be deleted, disposal will throw an error. The object has an\nasync `remove()` method which will perform the same task. Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises.",
    "originalSentence": "If the\ndirectory cannot be deleted, disposal will throw an error. The object has an\nasync `remove()` method which will perform the same task. Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises.",
    "position": 4571,
    "id": "window_4571"
  },
  {
    "type": "window",
    "content": "The object has an\nasync `remove()` method which will perform the same task. Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises. mkdtempDisposable('prefix')`.",
    "originalSentence": "The object has an\nasync `remove()` method which will perform the same task. Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises. mkdtempDisposable('prefix')`.",
    "position": 4572,
    "id": "window_4572"
  },
  {
    "type": "window",
    "content": "Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises. mkdtempDisposable('prefix')`. <!",
    "originalSentence": "Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises. mkdtempDisposable('prefix')`. <!",
    "position": 4573,
    "id": "window_4573"
  },
  {
    "type": "window",
    "content": "mkdtempDisposable('prefix')`. <! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises.",
    "originalSentence": "mkdtempDisposable('prefix')`. <! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises.",
    "position": 4574,
    "id": "window_4574"
  },
  {
    "type": "window",
    "content": "<! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises. mkdtemp()`][].",
    "originalSentence": "<! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises. mkdtemp()`][].",
    "position": 4575,
    "id": "window_4575"
  },
  {
    "type": "window",
    "content": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises. mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fsPromises. mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 4576,
    "id": "window_4576"
  },
  {
    "type": "window",
    "content": "mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fsPromises.",
    "originalSentence": "mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fsPromises.",
    "position": 4577,
    "id": "window_4577"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fsPromises. open(path, flags[, mode])`\n\n<!",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fsPromises. open(path, flags[, mode])`\n\n<!",
    "position": 4578,
    "id": "window_4578"
  },
  {
    "type": "window",
    "content": "### `fsPromises. open(path, flags[, mode])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. open(path, flags[, mode])`\n\n<! -- YAML\nadded: v10.",
    "position": 4579,
    "id": "window_4579"
  },
  {
    "type": "window",
    "content": "open(path, flags[, mode])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v11.",
    "originalSentence": "open(path, flags[, mode])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v11.",
    "position": 4580,
    "id": "window_4580"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "position": 4581,
    "id": "window_4581"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "originalSentence": "0.0\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "position": 4582,
    "id": "window_4582"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`.",
    "position": 4583,
    "id": "window_4583"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`. * `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`. * `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created.",
    "position": 4584,
    "id": "window_4584"
  },
  {
    "type": "window",
    "content": "**Default:** `'r'`. * `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created. **Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object.",
    "originalSentence": "**Default:** `'r'`. * `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created. **Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object.",
    "position": 4585,
    "id": "window_4585"
  },
  {
    "type": "window",
    "content": "* `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created. **Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object. Opens a {FileHandle}.",
    "originalSentence": "* `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created. **Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object. Opens a {FileHandle}.",
    "position": 4586,
    "id": "window_4586"
  },
  {
    "type": "window",
    "content": "**Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object. Opens a {FileHandle}. Refer to the POSIX open(2) documentation for more detail.",
    "originalSentence": "**Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object. Opens a {FileHandle}. Refer to the POSIX open(2) documentation for more detail.",
    "position": 4587,
    "id": "window_4587"
  },
  {
    "type": "window",
    "content": "Opens a {FileHandle}. Refer to the POSIX open(2) documentation for more detail. Some characters (`< > : \" / \\ | ?",
    "originalSentence": "Opens a {FileHandle}. Refer to the POSIX open(2) documentation for more detail. Some characters (`< > : \" / \\ | ?",
    "position": 4588,
    "id": "window_4588"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX open(2) documentation for more detail. Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "originalSentence": "Refer to the POSIX open(2) documentation for more detail. Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "position": 4589,
    "id": "window_4589"
  },
  {
    "type": "window",
    "content": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.",
    "originalSentence": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.",
    "position": 4590,
    "id": "window_4590"
  },
  {
    "type": "window",
    "content": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "originalSentence": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "position": 4591,
    "id": "window_4591"
  },
  {
    "type": "window",
    "content": "Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. ### `fsPromises.",
    "originalSentence": "Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. ### `fsPromises.",
    "position": 4592,
    "id": "window_4592"
  },
  {
    "type": "window",
    "content": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. ### `fsPromises. opendir(path[, options])`\n\n<!",
    "originalSentence": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. ### `fsPromises. opendir(path[, options])`\n\n<!",
    "position": 4593,
    "id": "window_4593"
  },
  {
    "type": "window",
    "content": "### `fsPromises. opendir(path[, options])`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "### `fsPromises. opendir(path[, options])`\n\n<! -- YAML\nadded: v12.",
    "position": 4594,
    "id": "window_4594"
  },
  {
    "type": "window",
    "content": "opendir(path[, options])`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "opendir(path[, options])`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20.",
    "position": 4595,
    "id": "window_4595"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "position": 4596,
    "id": "window_4596"
  },
  {
    "type": "window",
    "content": "12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 4597,
    "id": "window_4597"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13.",
    "position": 4598,
    "id": "window_4598"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13. 1.0\n     - v12.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13. 1.0\n     - v12.",
    "position": 4599,
    "id": "window_4599"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "originalSentence": "- version:\n     - v13. 1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "position": 4600,
    "id": "window_4600"
  },
  {
    "type": "window",
    "content": "1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "originalSentence": "1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "position": 4601,
    "id": "window_4601"
  },
  {
    "type": "window",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage.",
    "position": 4602,
    "id": "window_4602"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories.",
    "position": 4603,
    "id": "window_4603"
  },
  {
    "type": "window",
    "content": "Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories. **Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs.",
    "originalSentence": "Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories. **Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs.",
    "position": 4604,
    "id": "window_4604"
  },
  {
    "type": "window",
    "content": "**Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories. **Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs. Dir}.",
    "originalSentence": "**Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories. **Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs. Dir}.",
    "position": 4605,
    "id": "window_4605"
  },
  {
    "type": "window",
    "content": "**Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs. Dir}. Asynchronously open a directory for iterative scanning.",
    "originalSentence": "**Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs. Dir}. Asynchronously open a directory for iterative scanning.",
    "position": 4606,
    "id": "window_4606"
  },
  {
    "type": "window",
    "content": "Dir}. Asynchronously open a directory for iterative scanning. See the POSIX\nopendir(3) documentation for more detail.",
    "originalSentence": "Dir}. Asynchronously open a directory for iterative scanning. See the POSIX\nopendir(3) documentation for more detail.",
    "position": 4607,
    "id": "window_4607"
  },
  {
    "type": "window",
    "content": "Asynchronously open a directory for iterative scanning. See the POSIX\nopendir(3) documentation for more detail. Creates an {fs.",
    "originalSentence": "Asynchronously open a directory for iterative scanning. See the POSIX\nopendir(3) documentation for more detail. Creates an {fs.",
    "position": 4608,
    "id": "window_4608"
  },
  {
    "type": "window",
    "content": "See the POSIX\nopendir(3) documentation for more detail. Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "See the POSIX\nopendir(3) documentation for more detail. Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 4609,
    "id": "window_4609"
  },
  {
    "type": "window",
    "content": "Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 4610,
    "id": "window_4610"
  },
  {
    "type": "window",
    "content": "Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "originalSentence": "Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "position": 4611,
    "id": "window_4611"
  },
  {
    "type": "window",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console.",
    "position": 4612,
    "id": "window_4612"
  },
  {
    "type": "window",
    "content": "Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console. log(dirent.",
    "originalSentence": "Example using async iteration:\n\n```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console. log(dirent.",
    "position": 4613,
    "id": "window_4613"
  },
  {
    "type": "window",
    "content": "/');\n  for await (const dirent of dir)\n    console. log(dirent. name);\n} catch (err) {\n  console.",
    "originalSentence": "/');\n  for await (const dirent of dir)\n    console. log(dirent. name);\n} catch (err) {\n  console.",
    "position": 4614,
    "id": "window_4614"
  },
  {
    "type": "window",
    "content": "log(dirent. name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "originalSentence": "log(dirent. name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "position": 4615,
    "id": "window_4615"
  },
  {
    "type": "window",
    "content": "name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits.",
    "originalSentence": "name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits.",
    "position": 4616,
    "id": "window_4616"
  },
  {
    "type": "window",
    "content": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits. ### `fsPromises.",
    "originalSentence": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits. ### `fsPromises.",
    "position": 4617,
    "id": "window_4617"
  },
  {
    "type": "window",
    "content": "Dir} object will be automatically\nclosed after the iterator exits. ### `fsPromises. readdir(path[, options])`\n\n<!",
    "originalSentence": "Dir} object will be automatically\nclosed after the iterator exits. ### `fsPromises. readdir(path[, options])`\n\n<!",
    "position": 4618,
    "id": "window_4618"
  },
  {
    "type": "window",
    "content": "### `fsPromises. readdir(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. readdir(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4619,
    "id": "window_4619"
  },
  {
    "type": "window",
    "content": "readdir(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "readdir(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20.",
    "position": 4620,
    "id": "window_4620"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "position": 4621,
    "id": "window_4621"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 4622,
    "id": "window_4622"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10.",
    "position": 4623,
    "id": "window_4623"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10. 11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10. 11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "position": 4624,
    "id": "window_4624"
  },
  {
    "type": "window",
    "content": "- version: v10. 11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "originalSentence": "- version: v10. 11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "position": 4625,
    "id": "window_4625"
  },
  {
    "type": "window",
    "content": "11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories.",
    "originalSentence": "11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories.",
    "position": 4626,
    "id": "window_4626"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.",
    "position": 4627,
    "id": "window_4627"
  },
  {
    "type": "window",
    "content": "In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`. * Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.'",
    "originalSentence": "In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`. * Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.'",
    "position": 4628,
    "id": "window_4628"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.' ` and `'..'",
    "originalSentence": "**Default:** `false`. * Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.' ` and `'..'",
    "position": 4629,
    "id": "window_4629"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.' ` and `'..' `.",
    "originalSentence": "* Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.' ` and `'..' `.",
    "position": 4630,
    "id": "window_4630"
  },
  {
    "type": "window",
    "content": "`. Reads the contents of a directory. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames.",
    "originalSentence": "`. Reads the contents of a directory. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames.",
    "position": 4631,
    "id": "window_4631"
  },
  {
    "type": "window",
    "content": "Reads the contents of a directory. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames. If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects.",
    "originalSentence": "Reads the contents of a directory. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames. If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects.",
    "position": 4632,
    "id": "window_4632"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames. If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects. If `options.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames. If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects. If `options.",
    "position": 4633,
    "id": "window_4633"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects. If `options. withFileTypes` is set to `true`, the returned array will contain\n{fs.",
    "originalSentence": "If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects. If `options. withFileTypes` is set to `true`, the returned array will contain\n{fs.",
    "position": 4634,
    "id": "window_4634"
  },
  {
    "type": "window",
    "content": "If `options. withFileTypes` is set to `true`, the returned array will contain\n{fs. Dirent} objects.",
    "originalSentence": "If `options. withFileTypes` is set to `true`, the returned array will contain\n{fs. Dirent} objects.",
    "position": 4635,
    "id": "window_4635"
  },
  {
    "type": "window",
    "content": "withFileTypes` is set to `true`, the returned array will contain\n{fs. Dirent} objects. ```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.",
    "originalSentence": "withFileTypes` is set to `true`, the returned array will contain\n{fs. Dirent} objects. ```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.",
    "position": 4636,
    "id": "window_4636"
  },
  {
    "type": "window",
    "content": "Dirent} objects. ```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console. log(file);\n} catch (err) {\n  console.",
    "originalSentence": "Dirent} objects. ```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console. log(file);\n} catch (err) {\n  console.",
    "position": 4637,
    "id": "window_4637"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console. log(file);\n} catch (err) {\n  console. error(err);\n}\n```\n\n### `fsPromises.",
    "originalSentence": "```mjs\nimport { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console. log(file);\n} catch (err) {\n  console. error(err);\n}\n```\n\n### `fsPromises.",
    "position": 4638,
    "id": "window_4638"
  },
  {
    "type": "window",
    "content": "log(file);\n} catch (err) {\n  console. error(err);\n}\n```\n\n### `fsPromises. readFile(path[, options])`\n\n<!",
    "originalSentence": "log(file);\n} catch (err) {\n  console. error(err);\n}\n```\n\n### `fsPromises. readFile(path[, options])`\n\n<!",
    "position": 4639,
    "id": "window_4639"
  },
  {
    "type": "window",
    "content": "error(err);\n}\n```\n\n### `fsPromises. readFile(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "error(err);\n}\n```\n\n### `fsPromises. readFile(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4640,
    "id": "window_4640"
  },
  {
    "type": "window",
    "content": "readFile(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v15.",
    "originalSentence": "readFile(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v15.",
    "position": 4641,
    "id": "window_4641"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v15. 2.0\n    - v14.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v15. 2.0\n    - v14.",
    "position": 4642,
    "id": "window_4642"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n    - v15. 2.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v15. 2.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "position": 4643,
    "id": "window_4643"
  },
  {
    "type": "window",
    "content": "2.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "2.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 4644,
    "id": "window_4644"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. -->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.",
    "position": 4645,
    "id": "window_4645"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file.",
    "position": 4646,
    "id": "window_4646"
  },
  {
    "type": "window",
    "content": "**Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file. Asynchronously reads the entire contents of a file.",
    "originalSentence": "**Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file. Asynchronously reads the entire contents of a file.",
    "position": 4647,
    "id": "window_4647"
  },
  {
    "type": "window",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file. Asynchronously reads the entire contents of a file. If no encoding is specified (using `options.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file. Asynchronously reads the entire contents of a file. If no encoding is specified (using `options.",
    "position": 4648,
    "id": "window_4648"
  },
  {
    "type": "window",
    "content": "Asynchronously reads the entire contents of a file. If no encoding is specified (using `options. encoding`), the data is returned\nas a {Buffer} object.",
    "originalSentence": "Asynchronously reads the entire contents of a file. If no encoding is specified (using `options. encoding`), the data is returned\nas a {Buffer} object.",
    "position": 4649,
    "id": "window_4649"
  },
  {
    "type": "window",
    "content": "If no encoding is specified (using `options. encoding`), the data is returned\nas a {Buffer} object. Otherwise, the data will be a string.",
    "originalSentence": "If no encoding is specified (using `options. encoding`), the data is returned\nas a {Buffer} object. Otherwise, the data will be a string.",
    "position": 4650,
    "id": "window_4650"
  },
  {
    "type": "window",
    "content": "encoding`), the data is returned\nas a {Buffer} object. Otherwise, the data will be a string. If `options` is a string, then it specifies the encoding.",
    "originalSentence": "encoding`), the data is returned\nas a {Buffer} object. Otherwise, the data will be a string. If `options` is a string, then it specifies the encoding.",
    "position": 4651,
    "id": "window_4651"
  },
  {
    "type": "window",
    "content": "Otherwise, the data will be a string. If `options` is a string, then it specifies the encoding. When the `path` is a directory, the behavior of `fsPromises.",
    "originalSentence": "Otherwise, the data will be a string. If `options` is a string, then it specifies the encoding. When the `path` is a directory, the behavior of `fsPromises.",
    "position": 4652,
    "id": "window_4652"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the encoding. When the `path` is a directory, the behavior of `fsPromises. readFile()` is\nplatform-specific.",
    "originalSentence": "If `options` is a string, then it specifies the encoding. When the `path` is a directory, the behavior of `fsPromises. readFile()` is\nplatform-specific.",
    "position": 4653,
    "id": "window_4653"
  },
  {
    "type": "window",
    "content": "When the `path` is a directory, the behavior of `fsPromises. readFile()` is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error.",
    "originalSentence": "When the `path` is a directory, the behavior of `fsPromises. readFile()` is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error.",
    "position": 4654,
    "id": "window_4654"
  },
  {
    "type": "window",
    "content": "readFile()` is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned.",
    "originalSentence": "readFile()` is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned.",
    "position": 4655,
    "id": "window_4655"
  },
  {
    "type": "window",
    "content": "On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned. An example of reading a `package.",
    "originalSentence": "On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned. An example of reading a `package.",
    "position": 4656,
    "id": "window_4656"
  },
  {
    "type": "window",
    "content": "On FreeBSD, a representation of the directory's contents will be\nreturned. An example of reading a `package. json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('.",
    "originalSentence": "On FreeBSD, a representation of the directory's contents will be\nreturned. An example of reading a `package. json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('.",
    "position": 4657,
    "id": "window_4657"
  },
  {
    "type": "window",
    "content": "An example of reading a `package. json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('. /package.",
    "originalSentence": "An example of reading a `package. json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('. /package.",
    "position": 4658,
    "id": "window_4658"
  },
  {
    "type": "window",
    "content": "json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('. /package. json', import.",
    "originalSentence": "json` file located in the same directory of the\nrunning code:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('. /package. json', import.",
    "position": 4659,
    "id": "window_4659"
  },
  {
    "type": "window",
    "content": "json', import. meta. url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.",
    "originalSentence": "json', import. meta. url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.",
    "position": 4660,
    "id": "window_4660"
  },
  {
    "type": "window",
    "content": "meta. url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console. log(contents);\n} catch (err) {\n  console.",
    "originalSentence": "meta. url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console. log(contents);\n} catch (err) {\n  console.",
    "position": 4661,
    "id": "window_4661"
  },
  {
    "type": "window",
    "content": "url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console. log(contents);\n} catch (err) {\n  console. error(err.",
    "originalSentence": "url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console. log(contents);\n} catch (err) {\n  console. error(err.",
    "position": 4662,
    "id": "window_4662"
  },
  {
    "type": "window",
    "content": "log(contents);\n} catch (err) {\n  console. error(err. message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('.",
    "originalSentence": "log(contents);\n} catch (err) {\n  console. error(err. message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('.",
    "position": 4663,
    "id": "window_4663"
  },
  {
    "type": "window",
    "content": "error(err. message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('. /package.",
    "originalSentence": "error(err. message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('. /package.",
    "position": 4664,
    "id": "window_4664"
  },
  {
    "type": "window",
    "content": "message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('. /package. json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('. /package. json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.",
    "position": 4665,
    "id": "window_4665"
  },
  {
    "type": "window",
    "content": "/package. json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console. log(contents);\n  } catch (err) {\n    console.",
    "originalSentence": "/package. json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console. log(contents);\n  } catch (err) {\n    console.",
    "position": 4666,
    "id": "window_4666"
  },
  {
    "type": "window",
    "content": "json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console. log(contents);\n  } catch (err) {\n    console. error(err.",
    "originalSentence": "json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console. log(contents);\n  } catch (err) {\n    console. error(err.",
    "position": 4667,
    "id": "window_4667"
  },
  {
    "type": "window",
    "content": "log(contents);\n  } catch (err) {\n    console. error(err. message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}.",
    "originalSentence": "log(contents);\n  } catch (err) {\n    console. error(err. message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}.",
    "position": 4668,
    "id": "window_4668"
  },
  {
    "type": "window",
    "content": "error(err. message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}. If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.",
    "originalSentence": "error(err. message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}. If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.",
    "position": 4669,
    "id": "window_4669"
  },
  {
    "type": "window",
    "content": "message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}. If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles. controller.",
    "originalSentence": "message);\n  }\n}\nlogFile();\n```\n\nIt is possible to abort an ongoing `readFile` using an {AbortSignal}. If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles. controller.",
    "position": 4670,
    "id": "window_4670"
  },
  {
    "type": "window",
    "content": "If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles. controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "originalSentence": "If a\nrequest is aborted the promise returned is rejected with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles. controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "position": 4671,
    "id": "window_4671"
  },
  {
    "type": "window",
    "content": "controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 4672,
    "id": "window_4672"
  },
  {
    "type": "window",
    "content": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs.",
    "originalSentence": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs.",
    "position": 4673,
    "id": "window_4673"
  },
  {
    "type": "window",
    "content": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs. Any specified {FileHandle} has to support reading.",
    "originalSentence": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs. Any specified {FileHandle} has to support reading.",
    "position": 4674,
    "id": "window_4674"
  },
  {
    "type": "window",
    "content": "readFile` performs. Any specified {FileHandle} has to support reading. ### `fsPromises.",
    "originalSentence": "readFile` performs. Any specified {FileHandle} has to support reading. ### `fsPromises.",
    "position": 4675,
    "id": "window_4675"
  },
  {
    "type": "window",
    "content": "Any specified {FileHandle} has to support reading. ### `fsPromises. readlink(path[, options])`\n\n<!",
    "originalSentence": "Any specified {FileHandle} has to support reading. ### `fsPromises. readlink(path[, options])`\n\n<!",
    "position": 4676,
    "id": "window_4676"
  },
  {
    "type": "window",
    "content": "### `fsPromises. readlink(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. readlink(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4677,
    "id": "window_4677"
  },
  {
    "type": "window",
    "content": "readlink(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success.",
    "originalSentence": "readlink(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success.",
    "position": 4678,
    "id": "window_4678"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success. Reads the contents of the symbolic link referred to by `path`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success. Reads the contents of the symbolic link referred to by `path`.",
    "position": 4679,
    "id": "window_4679"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success. Reads the contents of the symbolic link referred to by `path`. See the POSIX\nreadlink(2) documentation for more detail.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success. Reads the contents of the symbolic link referred to by `path`. See the POSIX\nreadlink(2) documentation for more detail.",
    "position": 4680,
    "id": "window_4680"
  },
  {
    "type": "window",
    "content": "Reads the contents of the symbolic link referred to by `path`. See the POSIX\nreadlink(2) documentation for more detail. The promise is fulfilled with the\n`linkString` upon success.",
    "originalSentence": "Reads the contents of the symbolic link referred to by `path`. See the POSIX\nreadlink(2) documentation for more detail. The promise is fulfilled with the\n`linkString` upon success.",
    "position": 4681,
    "id": "window_4681"
  },
  {
    "type": "window",
    "content": "See the POSIX\nreadlink(2) documentation for more detail. The promise is fulfilled with the\n`linkString` upon success. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "originalSentence": "See the POSIX\nreadlink(2) documentation for more detail. The promise is fulfilled with the\n`linkString` upon success. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "position": 4682,
    "id": "window_4682"
  },
  {
    "type": "window",
    "content": "The promise is fulfilled with the\n`linkString` upon success. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object.",
    "originalSentence": "The promise is fulfilled with the\n`linkString` upon success. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object.",
    "position": 4683,
    "id": "window_4683"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object. ### `fsPromises.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object. ### `fsPromises.",
    "position": 4684,
    "id": "window_4684"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object. ### `fsPromises. realpath(path[, options])`\n\n<!",
    "originalSentence": "If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object. ### `fsPromises. realpath(path[, options])`\n\n<!",
    "position": 4685,
    "id": "window_4685"
  },
  {
    "type": "window",
    "content": "### `fsPromises. realpath(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. realpath(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4686,
    "id": "window_4686"
  },
  {
    "type": "window",
    "content": "realpath(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success.",
    "originalSentence": "realpath(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success.",
    "position": 4687,
    "id": "window_4687"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success. Determines the actual location of `path` using the same semantics as the\n`fs.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success. Determines the actual location of `path` using the same semantics as the\n`fs.",
    "position": 4688,
    "id": "window_4688"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success. Determines the actual location of `path` using the same semantics as the\n`fs. realpath.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success. Determines the actual location of `path` using the same semantics as the\n`fs. realpath.",
    "position": 4689,
    "id": "window_4689"
  },
  {
    "type": "window",
    "content": "Determines the actual location of `path` using the same semantics as the\n`fs. realpath. native()` function.",
    "originalSentence": "Determines the actual location of `path` using the same semantics as the\n`fs. realpath. native()` function.",
    "position": 4690,
    "id": "window_4690"
  },
  {
    "type": "window",
    "content": "realpath. native()` function. Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "realpath. native()` function. Only paths that can be converted to UTF8 strings are supported.",
    "position": 4691,
    "id": "window_4691"
  },
  {
    "type": "window",
    "content": "native()` function. Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path.",
    "originalSentence": "native()` function. Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path.",
    "position": 4692,
    "id": "window_4692"
  },
  {
    "type": "window",
    "content": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path. If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path. If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object.",
    "position": 4693,
    "id": "window_4693"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path. If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object. On Linux, when Node.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path. If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object. On Linux, when Node.",
    "position": 4694,
    "id": "window_4694"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object. On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "originalSentence": "If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object. On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "position": 4695,
    "id": "window_4695"
  },
  {
    "type": "window",
    "content": "On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "originalSentence": "On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "position": 4696,
    "id": "window_4696"
  },
  {
    "type": "window",
    "content": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction. ### `fsPromises.",
    "originalSentence": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction. ### `fsPromises.",
    "position": 4697,
    "id": "window_4697"
  },
  {
    "type": "window",
    "content": "Glibc does not have\nthis restriction. ### `fsPromises. rename(oldPath, newPath)`\n\n<!",
    "originalSentence": "Glibc does not have\nthis restriction. ### `fsPromises. rename(oldPath, newPath)`\n\n<!",
    "position": 4698,
    "id": "window_4698"
  },
  {
    "type": "window",
    "content": "### `fsPromises. rename(oldPath, newPath)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. rename(oldPath, newPath)`\n\n<! -- YAML\nadded: v10.",
    "position": 4699,
    "id": "window_4699"
  },
  {
    "type": "window",
    "content": "rename(oldPath, newPath)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "rename(oldPath, newPath)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4700,
    "id": "window_4700"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. Renames `oldPath` to `newPath`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. Renames `oldPath` to `newPath`.",
    "position": 4701,
    "id": "window_4701"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. Renames `oldPath` to `newPath`. ### `fsPromises.",
    "originalSentence": "0.0\n-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. Renames `oldPath` to `newPath`. ### `fsPromises.",
    "position": 4702,
    "id": "window_4702"
  },
  {
    "type": "window",
    "content": "Renames `oldPath` to `newPath`. ### `fsPromises. rmdir(path[, options])`\n\n<!",
    "originalSentence": "Renames `oldPath` to `newPath`. ### `fsPromises. rmdir(path[, options])`\n\n<!",
    "position": 4703,
    "id": "window_4703"
  },
  {
    "type": "window",
    "content": "### `fsPromises. rmdir(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. rmdir(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4704,
    "id": "window_4704"
  },
  {
    "type": "window",
    "content": "rmdir(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "originalSentence": "rmdir(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "position": 4705,
    "id": "window_4705"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16.",
    "position": 4706,
    "id": "window_4706"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "originalSentence": "0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "position": 4707,
    "id": "window_4707"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "position": 4708,
    "id": "window_4708"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16.",
    "position": 4709,
    "id": "window_4709"
  },
  {
    "type": "window",
    "content": "rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.",
    "position": 4710,
    "id": "window_4710"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "position": 4711,
    "id": "window_4711"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises. rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16.",
    "position": 4712,
    "id": "window_4712"
  },
  {
    "type": "window",
    "content": "rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "position": 4713,
    "id": "window_4713"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14.",
    "position": 4714,
    "id": "window_4714"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises.",
    "position": 4715,
    "id": "window_4715"
  },
  {
    "type": "window",
    "content": "- version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises. rm` instead.",
    "originalSentence": "- version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises. rm` instead.",
    "position": 4716,
    "id": "window_4716"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises. rm` instead. - version:\n     - v13.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises. rm` instead. - version:\n     - v13.",
    "position": 4717,
    "id": "window_4717"
  },
  {
    "type": "window",
    "content": "rm` instead. - version:\n     - v13. 3.0\n     - v12.",
    "originalSentence": "rm` instead. - version:\n     - v13. 3.0\n     - v12.",
    "position": 4718,
    "id": "window_4718"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "originalSentence": "- version:\n     - v13. 3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "position": 4719,
    "id": "window_4719"
  },
  {
    "type": "window",
    "content": "3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "originalSentence": "3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "position": 4720,
    "id": "window_4720"
  },
  {
    "type": "window",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported.",
    "position": 4721,
    "id": "window_4721"
  },
  {
    "type": "window",
    "content": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.",
    "originalSentence": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.",
    "position": 4722,
    "id": "window_4722"
  },
  {
    "type": "window",
    "content": "The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried. - version: v12.",
    "originalSentence": "The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried. - version: v12.",
    "position": 4723,
    "id": "window_4723"
  },
  {
    "type": "window",
    "content": "`ENFILE` errors are now\n                 retried. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported.",
    "originalSentence": "`ENFILE` errors are now\n                 retried. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported.",
    "position": 4724,
    "id": "window_4724"
  },
  {
    "type": "window",
    "content": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "originalSentence": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "position": 4725,
    "id": "window_4725"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "position": 4726,
    "id": "window_4726"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 4727,
    "id": "window_4727"
  },
  {
    "type": "window",
    "content": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4728,
    "id": "window_4728"
  },
  {
    "type": "window",
    "content": "The `options` argument is still accepted for\n  backwards compatibility but it is not used. * Returns: {Promise} Fulfills with `undefined` upon success. Removes the directory identified by `path`.",
    "originalSentence": "The `options` argument is still accepted for\n  backwards compatibility but it is not used. * Returns: {Promise} Fulfills with `undefined` upon success. Removes the directory identified by `path`.",
    "position": 4729,
    "id": "window_4729"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success. Removes the directory identified by `path`. Using `fsPromises.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success. Removes the directory identified by `path`. Using `fsPromises.",
    "position": 4730,
    "id": "window_4730"
  },
  {
    "type": "window",
    "content": "Removes the directory identified by `path`. Using `fsPromises. rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX.",
    "originalSentence": "Removes the directory identified by `path`. Using `fsPromises. rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX.",
    "position": 4731,
    "id": "window_4731"
  },
  {
    "type": "window",
    "content": "Using `fsPromises. rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX. To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises.",
    "originalSentence": "Using `fsPromises. rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX. To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises.",
    "position": 4732,
    "id": "window_4732"
  },
  {
    "type": "window",
    "content": "rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX. To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises. rm()`][] with options `{ recursive: true, force: true }`.",
    "originalSentence": "rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX. To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises. rm()`][] with options `{ recursive: true, force: true }`.",
    "position": 4733,
    "id": "window_4733"
  },
  {
    "type": "window",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises. rm()`][] with options `{ recursive: true, force: true }`. ### `fsPromises.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises. rm()`][] with options `{ recursive: true, force: true }`. ### `fsPromises.",
    "position": 4734,
    "id": "window_4734"
  },
  {
    "type": "window",
    "content": "rm()`][] with options `{ recursive: true, force: true }`. ### `fsPromises. rm(path[, options])`\n\n<!",
    "originalSentence": "rm()`][] with options `{ recursive: true, force: true }`. ### `fsPromises. rm(path[, options])`\n\n<!",
    "position": 4735,
    "id": "window_4735"
  },
  {
    "type": "window",
    "content": "### `fsPromises. rm(path[, options])`\n\n<! -- YAML\nadded: v14.",
    "originalSentence": "### `fsPromises. rm(path[, options])`\n\n<! -- YAML\nadded: v14.",
    "position": 4736,
    "id": "window_4736"
  },
  {
    "type": "window",
    "content": "rm(path[, options])`\n\n<! -- YAML\nadded: v14. 14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "originalSentence": "rm(path[, options])`\n\n<! -- YAML\nadded: v14. 14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "position": 4737,
    "id": "window_4737"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v14. 14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.",
    "originalSentence": "-- YAML\nadded: v14. 14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.",
    "position": 4738,
    "id": "window_4738"
  },
  {
    "type": "window",
    "content": "14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "originalSentence": "14.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "position": 4739,
    "id": "window_4739"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "originalSentence": "**Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "position": 4740,
    "id": "window_4740"
  },
  {
    "type": "window",
    "content": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries.",
    "originalSentence": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries.",
    "position": 4741,
    "id": "window_4741"
  },
  {
    "type": "window",
    "content": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`.",
    "originalSentence": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`.",
    "position": 4742,
    "id": "window_4742"
  },
  {
    "type": "window",
    "content": "This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.",
    "originalSentence": "This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.",
    "position": 4743,
    "id": "window_4743"
  },
  {
    "type": "window",
    "content": "This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "originalSentence": "This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "position": 4744,
    "id": "window_4744"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure.",
    "originalSentence": "**Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure.",
    "position": 4745,
    "id": "window_4745"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.",
    "originalSentence": "* `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.",
    "position": 4746,
    "id": "window_4746"
  },
  {
    "type": "window",
    "content": "In\n    recursive mode operations are retried on failure. **Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "originalSentence": "In\n    recursive mode operations are retried on failure. **Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "position": 4747,
    "id": "window_4747"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.",
    "originalSentence": "**Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.",
    "position": 4748,
    "id": "window_4748"
  },
  {
    "type": "window",
    "content": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`. **Default:** `100`.",
    "originalSentence": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`. **Default:** `100`.",
    "position": 4749,
    "id": "window_4749"
  },
  {
    "type": "window",
    "content": "This option is ignored if the `recursive` option is not `true`. **Default:** `100`. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "This option is ignored if the `recursive` option is not `true`. **Default:** `100`. * Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4750,
    "id": "window_4750"
  },
  {
    "type": "window",
    "content": "**Default:** `100`. * Returns: {Promise} Fulfills with `undefined` upon success. Removes files and directories (modeled on the standard POSIX `rm` utility).",
    "originalSentence": "**Default:** `100`. * Returns: {Promise} Fulfills with `undefined` upon success. Removes files and directories (modeled on the standard POSIX `rm` utility).",
    "position": 4751,
    "id": "window_4751"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success. Removes files and directories (modeled on the standard POSIX `rm` utility). ### `fsPromises.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success. Removes files and directories (modeled on the standard POSIX `rm` utility). ### `fsPromises.",
    "position": 4752,
    "id": "window_4752"
  },
  {
    "type": "window",
    "content": "Removes files and directories (modeled on the standard POSIX `rm` utility). ### `fsPromises. stat(path[, options])`\n\n<!",
    "originalSentence": "Removes files and directories (modeled on the standard POSIX `rm` utility). ### `fsPromises. stat(path[, options])`\n\n<!",
    "position": 4753,
    "id": "window_4753"
  },
  {
    "type": "window",
    "content": "### `fsPromises. stat(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. stat(path[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4754,
    "id": "window_4754"
  },
  {
    "type": "window",
    "content": "stat(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "originalSentence": "stat(path[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10.",
    "position": 4755,
    "id": "window_4755"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 4756,
    "id": "window_4756"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "0.0\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 4757,
    "id": "window_4757"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 4758,
    "id": "window_4758"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 4759,
    "id": "window_4759"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {Promise}  Fulfills with the {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {Promise}  Fulfills with the {fs.",
    "position": 4760,
    "id": "window_4760"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {Promise}  Fulfills with the {fs. Stats} object for the\n  given `path`.",
    "originalSentence": "**Default:** `false`. * Returns: {Promise}  Fulfills with the {fs. Stats} object for the\n  given `path`.",
    "position": 4761,
    "id": "window_4761"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise}  Fulfills with the {fs. Stats} object for the\n  given `path`. ### `fsPromises.",
    "originalSentence": "* Returns: {Promise}  Fulfills with the {fs. Stats} object for the\n  given `path`. ### `fsPromises.",
    "position": 4762,
    "id": "window_4762"
  },
  {
    "type": "window",
    "content": "Stats} object for the\n  given `path`. ### `fsPromises. statfs(path[, options])`\n\n<!",
    "originalSentence": "Stats} object for the\n  given `path`. ### `fsPromises. statfs(path[, options])`\n\n<!",
    "position": 4763,
    "id": "window_4763"
  },
  {
    "type": "window",
    "content": "### `fsPromises. statfs(path[, options])`\n\n<! -- YAML\nadded:\n  - v19.",
    "originalSentence": "### `fsPromises. statfs(path[, options])`\n\n<! -- YAML\nadded:\n  - v19.",
    "position": 4764,
    "id": "window_4764"
  },
  {
    "type": "window",
    "content": "statfs(path[, options])`\n\n<! -- YAML\nadded:\n  - v19. 6.0\n  - v18.",
    "originalSentence": "statfs(path[, options])`\n\n<! -- YAML\nadded:\n  - v19. 6.0\n  - v18.",
    "position": 4765,
    "id": "window_4765"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 4766,
    "id": "window_4766"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`.",
    "position": 4767,
    "id": "window_4767"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`. **Default:** `false`.",
    "position": 4768,
    "id": "window_4768"
  },
  {
    "type": "window",
    "content": "StatFs} object should be `bigint`. **Default:** `false`. * Returns: {Promise} Fulfills with the {fs.",
    "originalSentence": "StatFs} object should be `bigint`. **Default:** `false`. * Returns: {Promise} Fulfills with the {fs.",
    "position": 4769,
    "id": "window_4769"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {Promise} Fulfills with the {fs. StatFs} object for the\n  given `path`.",
    "originalSentence": "**Default:** `false`. * Returns: {Promise} Fulfills with the {fs. StatFs} object for the\n  given `path`.",
    "position": 4770,
    "id": "window_4770"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with the {fs. StatFs} object for the\n  given `path`. ### `fsPromises.",
    "originalSentence": "* Returns: {Promise} Fulfills with the {fs. StatFs} object for the\n  given `path`. ### `fsPromises.",
    "position": 4771,
    "id": "window_4771"
  },
  {
    "type": "window",
    "content": "StatFs} object for the\n  given `path`. ### `fsPromises. symlink(target, path[, type])`\n\n<!",
    "originalSentence": "StatFs} object for the\n  given `path`. ### `fsPromises. symlink(target, path[, type])`\n\n<!",
    "position": 4772,
    "id": "window_4772"
  },
  {
    "type": "window",
    "content": "### `fsPromises. symlink(target, path[, type])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. symlink(target, path[, type])`\n\n<! -- YAML\nadded: v10.",
    "position": 4773,
    "id": "window_4773"
  },
  {
    "type": "window",
    "content": "symlink(target, path[, type])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v19.",
    "originalSentence": "symlink(target, path[, type])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version: v19.",
    "position": 4774,
    "id": "window_4774"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node.",
    "position": 4775,
    "id": "window_4775"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node. js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`.",
    "originalSentence": "0.0\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node. js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`.",
    "position": 4776,
    "id": "window_4776"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node. js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node. js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4777,
    "id": "window_4777"
  },
  {
    "type": "window",
    "content": "js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success. Creates a symbolic link.",
    "originalSentence": "js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success. Creates a symbolic link.",
    "position": 4778,
    "id": "window_4778"
  },
  {
    "type": "window",
    "content": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success. Creates a symbolic link. The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`.",
    "originalSentence": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success. Creates a symbolic link. The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`.",
    "position": 4779,
    "id": "window_4779"
  },
  {
    "type": "window",
    "content": "Creates a symbolic link. The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`. If the `type` argument is `null`, Node.",
    "originalSentence": "Creates a symbolic link. The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`. If the `type` argument is `null`, Node.",
    "position": 4780,
    "id": "window_4780"
  },
  {
    "type": "window",
    "content": "The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`. If the `type` argument is `null`, Node. js will\nautodetect `target` type and use `'file'` or `'dir'`.",
    "originalSentence": "The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`. If the `type` argument is `null`, Node. js will\nautodetect `target` type and use `'file'` or `'dir'`.",
    "position": 4781,
    "id": "window_4781"
  },
  {
    "type": "window",
    "content": "If the `type` argument is `null`, Node. js will\nautodetect `target` type and use `'file'` or `'dir'`. If the `target` does not\nexist, `'file'` will be used.",
    "originalSentence": "If the `type` argument is `null`, Node. js will\nautodetect `target` type and use `'file'` or `'dir'`. If the `target` does not\nexist, `'file'` will be used.",
    "position": 4782,
    "id": "window_4782"
  },
  {
    "type": "window",
    "content": "js will\nautodetect `target` type and use `'file'` or `'dir'`. If the `target` does not\nexist, `'file'` will be used. Windows junction points require the destination\npath to be absolute.",
    "originalSentence": "js will\nautodetect `target` type and use `'file'` or `'dir'`. If the `target` does not\nexist, `'file'` will be used. Windows junction points require the destination\npath to be absolute.",
    "position": 4783,
    "id": "window_4783"
  },
  {
    "type": "window",
    "content": "If the `target` does not\nexist, `'file'` will be used. Windows junction points require the destination\npath to be absolute. When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path.",
    "originalSentence": "If the `target` does not\nexist, `'file'` will be used. Windows junction points require the destination\npath to be absolute. When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path.",
    "position": 4784,
    "id": "window_4784"
  },
  {
    "type": "window",
    "content": "Windows junction points require the destination\npath to be absolute. When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path. Junction points on NTFS volumes\ncan only point to directories.",
    "originalSentence": "Windows junction points require the destination\npath to be absolute. When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path. Junction points on NTFS volumes\ncan only point to directories.",
    "position": 4785,
    "id": "window_4785"
  },
  {
    "type": "window",
    "content": "When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path. Junction points on NTFS volumes\ncan only point to directories. ### `fsPromises.",
    "originalSentence": "When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path. Junction points on NTFS volumes\ncan only point to directories. ### `fsPromises.",
    "position": 4786,
    "id": "window_4786"
  },
  {
    "type": "window",
    "content": "Junction points on NTFS volumes\ncan only point to directories. ### `fsPromises. truncate(path[, len])`\n\n<!",
    "originalSentence": "Junction points on NTFS volumes\ncan only point to directories. ### `fsPromises. truncate(path[, len])`\n\n<!",
    "position": 4787,
    "id": "window_4787"
  },
  {
    "type": "window",
    "content": "### `fsPromises. truncate(path[, len])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. truncate(path[, len])`\n\n<! -- YAML\nadded: v10.",
    "position": 4788,
    "id": "window_4788"
  },
  {
    "type": "window",
    "content": "truncate(path[, len])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "truncate(path[, len])`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4789,
    "id": "window_4789"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes.",
    "position": 4790,
    "id": "window_4790"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes. ### `fsPromises.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success. Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes. ### `fsPromises.",
    "position": 4791,
    "id": "window_4791"
  },
  {
    "type": "window",
    "content": "Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes. ### `fsPromises. unlink(path)`\n\n<!",
    "originalSentence": "Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes. ### `fsPromises. unlink(path)`\n\n<!",
    "position": 4792,
    "id": "window_4792"
  },
  {
    "type": "window",
    "content": "### `fsPromises. unlink(path)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. unlink(path)`\n\n<! -- YAML\nadded: v10.",
    "position": 4793,
    "id": "window_4793"
  },
  {
    "type": "window",
    "content": "unlink(path)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "unlink(path)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4794,
    "id": "window_4794"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers.",
    "position": 4795,
    "id": "window_4795"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the `path` refers to a file\npath that is not a symbolic link, the file is deleted.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success. If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the `path` refers to a file\npath that is not a symbolic link, the file is deleted.",
    "position": 4796,
    "id": "window_4796"
  },
  {
    "type": "window",
    "content": "If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the `path` refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX unlink(2)\ndocumentation for more detail.",
    "originalSentence": "If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the `path` refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX unlink(2)\ndocumentation for more detail.",
    "position": 4797,
    "id": "window_4797"
  },
  {
    "type": "window",
    "content": "If the `path` refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX unlink(2)\ndocumentation for more detail. ### `fsPromises.",
    "originalSentence": "If the `path` refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX unlink(2)\ndocumentation for more detail. ### `fsPromises.",
    "position": 4798,
    "id": "window_4798"
  },
  {
    "type": "window",
    "content": "See the POSIX unlink(2)\ndocumentation for more detail. ### `fsPromises. utimes(path, atime, mtime)`\n\n<!",
    "originalSentence": "See the POSIX unlink(2)\ndocumentation for more detail. ### `fsPromises. utimes(path, atime, mtime)`\n\n<!",
    "position": 4799,
    "id": "window_4799"
  },
  {
    "type": "window",
    "content": "### `fsPromises. utimes(path, atime, mtime)`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. utimes(path, atime, mtime)`\n\n<! -- YAML\nadded: v10.",
    "position": 4800,
    "id": "window_4800"
  },
  {
    "type": "window",
    "content": "utimes(path, atime, mtime)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "utimes(path, atime, mtime)`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4801,
    "id": "window_4801"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success. Change the file system timestamps of the object referenced by `path`.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success. Change the file system timestamps of the object referenced by `path`.",
    "position": 4802,
    "id": "window_4802"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success. Change the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789.",
    "originalSentence": "0.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success. Change the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789.",
    "position": 4803,
    "id": "window_4803"
  },
  {
    "type": "window",
    "content": "Change the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789. 0'`.",
    "originalSentence": "Change the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789. 0'`.",
    "position": 4804,
    "id": "window_4804"
  },
  {
    "type": "window",
    "content": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789. 0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "originalSentence": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789. 0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "position": 4805,
    "id": "window_4805"
  },
  {
    "type": "window",
    "content": "0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fsPromises.",
    "originalSentence": "0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fsPromises.",
    "position": 4806,
    "id": "window_4806"
  },
  {
    "type": "window",
    "content": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fsPromises. watch(filename[, options])`\n\n<!",
    "originalSentence": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fsPromises. watch(filename[, options])`\n\n<!",
    "position": 4807,
    "id": "window_4807"
  },
  {
    "type": "window",
    "content": "### `fsPromises. watch(filename[, options])`\n\n<! -- YAML\nadded:\n  - v15.",
    "originalSentence": "### `fsPromises. watch(filename[, options])`\n\n<! -- YAML\nadded:\n  - v15.",
    "position": 4808,
    "id": "window_4808"
  },
  {
    "type": "window",
    "content": "watch(filename[, options])`\n\n<! -- YAML\nadded:\n  - v15. 9.0\n  - v14.",
    "originalSentence": "watch(filename[, options])`\n\n<! -- YAML\nadded:\n  - v15. 9.0\n  - v14.",
    "position": 4809,
    "id": "window_4809"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v15. 9.0\n  - v14. 18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "originalSentence": "-- YAML\nadded:\n  - v15. 9.0\n  - v14. 18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "position": 4810,
    "id": "window_4810"
  },
  {
    "type": "window",
    "content": "9.0\n  - v14. 18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.",
    "originalSentence": "9.0\n  - v14. 18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.",
    "position": 4811,
    "id": "window_4811"
  },
  {
    "type": "window",
    "content": "18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "originalSentence": "18.0\n-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "position": 4812,
    "id": "window_4812"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "originalSentence": "**Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "position": 4813,
    "id": "window_4813"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.",
    "originalSentence": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.",
    "position": 4814,
    "id": "window_4814"
  },
  {
    "type": "window",
    "content": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "originalSentence": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "position": 4815,
    "id": "window_4815"
  },
  {
    "type": "window",
    "content": "**Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.",
    "originalSentence": "**Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.",
    "position": 4816,
    "id": "window_4816"
  },
  {
    "type": "window",
    "content": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`. * `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop.",
    "originalSentence": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`. * `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop.",
    "position": 4817,
    "id": "window_4817"
  },
  {
    "type": "window",
    "content": "**Default:** `'utf8'`. * `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop. * `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned.",
    "originalSentence": "**Default:** `'utf8'`. * `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop. * `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned.",
    "position": 4818,
    "id": "window_4818"
  },
  {
    "type": "window",
    "content": "* `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop. * `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned. **Default:** `2048`.",
    "originalSentence": "* `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop. * `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned. **Default:** `2048`.",
    "position": 4819,
    "id": "window_4819"
  },
  {
    "type": "window",
    "content": "* `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned. **Default:** `2048`. * `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows.",
    "originalSentence": "* `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned. **Default:** `2048`. * `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows.",
    "position": 4820,
    "id": "window_4820"
  },
  {
    "type": "window",
    "content": "**Default:** `2048`. * `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows. `'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception.",
    "originalSentence": "**Default:** `2048`. * `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows. `'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception.",
    "position": 4821,
    "id": "window_4821"
  },
  {
    "type": "window",
    "content": "* `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows. `'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception. **Default:** `'ignore'`.",
    "originalSentence": "* `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows. `'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception. **Default:** `'ignore'`.",
    "position": 4822,
    "id": "window_4822"
  },
  {
    "type": "window",
    "content": "`'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception. **Default:** `'ignore'`. * Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed.",
    "originalSentence": "`'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception. **Default:** `'ignore'`. * Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed.",
    "position": 4823,
    "id": "window_4823"
  },
  {
    "type": "window",
    "content": "**Default:** `'ignore'`. * Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed. Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory.",
    "originalSentence": "**Default:** `'ignore'`. * Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed. Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory.",
    "position": 4824,
    "id": "window_4824"
  },
  {
    "type": "window",
    "content": "* Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed. Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory. ```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.",
    "originalSentence": "* Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed. Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory. ```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.",
    "position": 4825,
    "id": "window_4825"
  },
  {
    "type": "window",
    "content": "Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory. ```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac. abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.",
    "originalSentence": "Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory. ```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac. abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.",
    "position": 4826,
    "id": "window_4826"
  },
  {
    "type": "window",
    "content": "```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac. abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console. log(event);\n  } catch (err) {\n    if (err.",
    "originalSentence": "```js\nconst { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac. abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console. log(event);\n  } catch (err) {\n    if (err.",
    "position": 4827,
    "id": "window_4827"
  },
  {
    "type": "window",
    "content": "abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console. log(event);\n  } catch (err) {\n    if (err. name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "originalSentence": "abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console. log(event);\n  } catch (err) {\n    if (err. name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "position": 4828,
    "id": "window_4828"
  },
  {
    "type": "window",
    "content": "log(event);\n  } catch (err) {\n    if (err. name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. All the [caveats][] for `fs.",
    "originalSentence": "log(event);\n  } catch (err) {\n    if (err. name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. All the [caveats][] for `fs.",
    "position": 4829,
    "id": "window_4829"
  },
  {
    "type": "window",
    "content": "name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. All the [caveats][] for `fs. watch()` also apply to `fsPromises.",
    "originalSentence": "name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```\n\nOn most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. All the [caveats][] for `fs. watch()` also apply to `fsPromises.",
    "position": 4830,
    "id": "window_4830"
  },
  {
    "type": "window",
    "content": "All the [caveats][] for `fs. watch()` also apply to `fsPromises. watch()`.",
    "originalSentence": "All the [caveats][] for `fs. watch()` also apply to `fsPromises. watch()`.",
    "position": 4831,
    "id": "window_4831"
  },
  {
    "type": "window",
    "content": "watch()` also apply to `fsPromises. watch()`. ### `fsPromises.",
    "originalSentence": "watch()` also apply to `fsPromises. watch()`. ### `fsPromises.",
    "position": 4832,
    "id": "window_4832"
  },
  {
    "type": "window",
    "content": "watch()`. ### `fsPromises. writeFile(file, data[, options])`\n\n<!",
    "originalSentence": "watch()`. ### `fsPromises. writeFile(file, data[, options])`\n\n<!",
    "position": 4833,
    "id": "window_4833"
  },
  {
    "type": "window",
    "content": "### `fsPromises. writeFile(file, data[, options])`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "### `fsPromises. writeFile(file, data[, options])`\n\n<! -- YAML\nadded: v10.",
    "position": 4834,
    "id": "window_4834"
  },
  {
    "type": "window",
    "content": "writeFile(file, data[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "writeFile(file, data[, options])`\n\n<! -- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21.",
    "position": 4835,
    "id": "window_4835"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "position": 4836,
    "id": "window_4836"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "originalSentence": "0.0\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "position": 4837,
    "id": "window_4837"
  },
  {
    "type": "window",
    "content": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version:\n      - v15.",
    "originalSentence": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version:\n      - v15.",
    "position": 4838,
    "id": "window_4838"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version:\n      - v15. 14.0\n      - v14.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version:\n      - v15. 14.0\n      - v14.",
    "position": 4839,
    "id": "window_4839"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "originalSentence": "- version:\n      - v15. 14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.",
    "position": 4840,
    "id": "window_4840"
  },
  {
    "type": "window",
    "content": "14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version:\n      - v15.",
    "originalSentence": "14.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version:\n      - v15.",
    "position": 4841,
    "id": "window_4841"
  },
  {
    "type": "window",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version:\n      - v15. 2.0\n      - v14.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`. - version:\n      - v15. 2.0\n      - v14.",
    "position": 4842,
    "id": "window_4842"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "originalSentence": "- version:\n      - v15. 2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "position": 4843,
    "id": "window_4843"
  },
  {
    "type": "window",
    "content": "2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14.",
    "originalSentence": "2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14.",
    "position": 4844,
    "id": "window_4844"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 4845,
    "id": "window_4845"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 4846,
    "id": "window_4846"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. -->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.",
    "position": 4847,
    "id": "window_4847"
  },
  {
    "type": "window",
    "content": "-->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle.",
    "originalSentence": "-->\n\n* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle.",
    "position": 4848,
    "id": "window_4848"
  },
  {
    "type": "window",
    "content": "**Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle. sync()` is used to flush the data.",
    "originalSentence": "**Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle. sync()` is used to flush the data.",
    "position": 4849,
    "id": "window_4849"
  },
  {
    "type": "window",
    "content": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle. sync()` is used to flush the data. **Default:** `false`.",
    "originalSentence": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle. sync()` is used to flush the data. **Default:** `false`.",
    "position": 4850,
    "id": "window_4850"
  },
  {
    "type": "window",
    "content": "sync()` is used to flush the data. **Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "sync()` is used to flush the data. **Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 4851,
    "id": "window_4851"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously writes data to a file, replacing the file if it already exists.",
    "originalSentence": "**Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously writes data to a file, replacing the file if it already exists.",
    "position": 4852,
    "id": "window_4852"
  },
  {
    "type": "window",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success. Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "position": 4853,
    "id": "window_4853"
  },
  {
    "type": "window",
    "content": "Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The `encoding` option is ignored if `data` is a buffer.",
    "originalSentence": "Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The `encoding` option is ignored if `data` is a buffer.",
    "position": 4854,
    "id": "window_4854"
  },
  {
    "type": "window",
    "content": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The `encoding` option is ignored if `data` is a buffer. If `options` is a string, then it specifies the encoding.",
    "originalSentence": "`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object. The `encoding` option is ignored if `data` is a buffer. If `options` is a string, then it specifies the encoding.",
    "position": 4855,
    "id": "window_4855"
  },
  {
    "type": "window",
    "content": "The `encoding` option is ignored if `data` is a buffer. If `options` is a string, then it specifies the encoding. The `mode` option only affects the newly created file.",
    "originalSentence": "The `encoding` option is ignored if `data` is a buffer. If `options` is a string, then it specifies the encoding. The `mode` option only affects the newly created file.",
    "position": 4856,
    "id": "window_4856"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the encoding. The `mode` option only affects the newly created file. See [`fs.",
    "originalSentence": "If `options` is a string, then it specifies the encoding. The `mode` option only affects the newly created file. See [`fs.",
    "position": 4857,
    "id": "window_4857"
  },
  {
    "type": "window",
    "content": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "position": 4858,
    "id": "window_4858"
  },
  {
    "type": "window",
    "content": "See [`fs. open()`][]\nfor more details. Any specified {FileHandle} has to support writing.",
    "originalSentence": "See [`fs. open()`][]\nfor more details. Any specified {FileHandle} has to support writing.",
    "position": 4859,
    "id": "window_4859"
  },
  {
    "type": "window",
    "content": "open()`][]\nfor more details. Any specified {FileHandle} has to support writing. It is unsafe to use `fsPromises.",
    "originalSentence": "open()`][]\nfor more details. Any specified {FileHandle} has to support writing. It is unsafe to use `fsPromises.",
    "position": 4860,
    "id": "window_4860"
  },
  {
    "type": "window",
    "content": "Any specified {FileHandle} has to support writing. It is unsafe to use `fsPromises. writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled.",
    "originalSentence": "Any specified {FileHandle} has to support writing. It is unsafe to use `fsPromises. writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled.",
    "position": 4861,
    "id": "window_4861"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `fsPromises. writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled. Similarly to `fsPromises.",
    "originalSentence": "It is unsafe to use `fsPromises. writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled. Similarly to `fsPromises.",
    "position": 4862,
    "id": "window_4862"
  },
  {
    "type": "window",
    "content": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled. Similarly to `fsPromises. readFile` - `fsPromises.",
    "originalSentence": "writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled. Similarly to `fsPromises. readFile` - `fsPromises.",
    "position": 4863,
    "id": "window_4863"
  },
  {
    "type": "window",
    "content": "Similarly to `fsPromises. readFile` - `fsPromises. writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it.",
    "originalSentence": "Similarly to `fsPromises. readFile` - `fsPromises. writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it.",
    "position": 4864,
    "id": "window_4864"
  },
  {
    "type": "window",
    "content": "readFile` - `fsPromises. writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it. For performance sensitive code consider using\n[`fs.",
    "originalSentence": "readFile` - `fsPromises. writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it. For performance sensitive code consider using\n[`fs.",
    "position": 4865,
    "id": "window_4865"
  },
  {
    "type": "window",
    "content": "writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it. For performance sensitive code consider using\n[`fs. createWriteStream()`][] or [`filehandle.",
    "originalSentence": "writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it. For performance sensitive code consider using\n[`fs. createWriteStream()`][] or [`filehandle.",
    "position": 4866,
    "id": "window_4866"
  },
  {
    "type": "window",
    "content": "For performance sensitive code consider using\n[`fs. createWriteStream()`][] or [`filehandle. createWriteStream()`][].",
    "originalSentence": "For performance sensitive code consider using\n[`fs. createWriteStream()`][] or [`filehandle. createWriteStream()`][].",
    "position": 4867,
    "id": "window_4867"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][] or [`filehandle. createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fsPromises.",
    "originalSentence": "createWriteStream()`][] or [`filehandle. createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fsPromises.",
    "position": 4868,
    "id": "window_4868"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fsPromises. writeFile()`.",
    "originalSentence": "createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fsPromises. writeFile()`.",
    "position": 4869,
    "id": "window_4869"
  },
  {
    "type": "window",
    "content": "It is possible to use an {AbortSignal} to cancel an `fsPromises. writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "originalSentence": "It is possible to use an {AbortSignal} to cancel an `fsPromises. writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "position": 4870,
    "id": "window_4870"
  },
  {
    "type": "window",
    "content": "writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.",
    "originalSentence": "writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.",
    "position": 4871,
    "id": "window_4871"
  },
  {
    "type": "window",
    "content": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer. from('Hello Node.",
    "originalSentence": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer. from('Hello Node.",
    "position": 4872,
    "id": "window_4872"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer. from('Hello Node. js'));\n  const promise = writeFile('message.",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer. from('Hello Node. js'));\n  const promise = writeFile('message.",
    "position": 4873,
    "id": "window_4873"
  },
  {
    "type": "window",
    "content": "from('Hello Node. js'));\n  const promise = writeFile('message. txt', data, { signal });\n\n  // Abort the request before the promise settles.",
    "originalSentence": "from('Hello Node. js'));\n  const promise = writeFile('message. txt', data, { signal });\n\n  // Abort the request before the promise settles.",
    "position": 4874,
    "id": "window_4874"
  },
  {
    "type": "window",
    "content": "js'));\n  const promise = writeFile('message. txt', data, { signal });\n\n  // Abort the request before the promise settles. controller.",
    "originalSentence": "js'));\n  const promise = writeFile('message. txt', data, { signal });\n\n  // Abort the request before the promise settles. controller.",
    "position": 4875,
    "id": "window_4875"
  },
  {
    "type": "window",
    "content": "txt', data, { signal });\n\n  // Abort the request before the promise settles. controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "originalSentence": "txt', data, { signal });\n\n  // Abort the request before the promise settles. controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.",
    "position": 4876,
    "id": "window_4876"
  },
  {
    "type": "window",
    "content": "controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "controller. abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 4877,
    "id": "window_4877"
  },
  {
    "type": "window",
    "content": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs.",
    "originalSentence": "abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console. error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs.",
    "position": 4878,
    "id": "window_4878"
  },
  {
    "type": "window",
    "content": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs. ### `fsPromises.",
    "originalSentence": "error(err);\n}\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs. ### `fsPromises.",
    "position": 4879,
    "id": "window_4879"
  },
  {
    "type": "window",
    "content": "writeFile` performs. ### `fsPromises. constants`\n\n<!",
    "originalSentence": "writeFile` performs. ### `fsPromises. constants`\n\n<!",
    "position": 4880,
    "id": "window_4880"
  },
  {
    "type": "window",
    "content": "### `fsPromises. constants`\n\n<! -- YAML\nadded:\n  - v18.",
    "originalSentence": "### `fsPromises. constants`\n\n<! -- YAML\nadded:\n  - v18.",
    "position": 4881,
    "id": "window_4881"
  },
  {
    "type": "window",
    "content": "constants`\n\n<! -- YAML\nadded:\n  - v18. 4.0\n  - v16.",
    "originalSentence": "constants`\n\n<! -- YAML\nadded:\n  - v18. 4.0\n  - v16.",
    "position": 4882,
    "id": "window_4882"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v18. 4.0\n  - v16. 17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "originalSentence": "-- YAML\nadded:\n  - v18. 4.0\n  - v16. 17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "position": 4883,
    "id": "window_4883"
  },
  {
    "type": "window",
    "content": "4.0\n  - v16. 17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. The object is the same as `fs.",
    "originalSentence": "4.0\n  - v16. 17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. The object is the same as `fs.",
    "position": 4884,
    "id": "window_4884"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. The object is the same as `fs. constants`.",
    "originalSentence": "17.0\n-->\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. The object is the same as `fs. constants`.",
    "position": 4885,
    "id": "window_4885"
  },
  {
    "type": "window",
    "content": "The object is the same as `fs. constants`. See [FS constants][]\nfor more details.",
    "originalSentence": "The object is the same as `fs. constants`. See [FS constants][]\nfor more details.",
    "position": 4886,
    "id": "window_4886"
  },
  {
    "type": "window",
    "content": "constants`. See [FS constants][]\nfor more details. ## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error.",
    "originalSentence": "constants`. See [FS constants][]\nfor more details. ## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error.",
    "position": 4887,
    "id": "window_4887"
  },
  {
    "type": "window",
    "content": "See [FS constants][]\nfor more details. ## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error. The callback APIs use the underlying Node.",
    "originalSentence": "See [FS constants][]\nfor more details. ## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error. The callback APIs use the underlying Node.",
    "position": 4888,
    "id": "window_4888"
  },
  {
    "type": "window",
    "content": "## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error. The callback APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread.",
    "originalSentence": "## Callback API\n\nThe callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error. The callback APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread.",
    "position": 4889,
    "id": "window_4889"
  },
  {
    "type": "window",
    "content": "The callback APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe.",
    "originalSentence": "The callback APIs use the underlying Node. js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe.",
    "position": 4890,
    "id": "window_4890"
  },
  {
    "type": "window",
    "content": "js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "originalSentence": "js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "position": 4891,
    "id": "window_4891"
  },
  {
    "type": "window",
    "content": "These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### `fs.",
    "originalSentence": "These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### `fs.",
    "position": 4892,
    "id": "window_4892"
  },
  {
    "type": "window",
    "content": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### `fs. access(path[, mode], callback)`\n\n<!",
    "originalSentence": "Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur. ### `fs. access(path[, mode], callback)`\n\n<!",
    "position": 4893,
    "id": "window_4893"
  },
  {
    "type": "window",
    "content": "### `fs. access(path[, mode], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. access(path[, mode], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 4894,
    "id": "window_4894"
  },
  {
    "type": "window",
    "content": "access(path[, mode], callback)`\n\n<! -- YAML\nadded: v0. 11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs.",
    "originalSentence": "access(path[, mode], callback)`\n\n<! -- YAML\nadded: v0. 11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs.",
    "position": 4895,
    "id": "window_4895"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs. F_OK`, `fs.",
    "originalSentence": "-- YAML\nadded: v0. 11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs. F_OK`, `fs.",
    "position": 4896,
    "id": "window_4896"
  },
  {
    "type": "window",
    "content": "11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs. F_OK`, `fs. R_OK`, `fs.",
    "originalSentence": "11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs. F_OK`, `fs. R_OK`, `fs.",
    "position": 4897,
    "id": "window_4897"
  },
  {
    "type": "window",
    "content": "R_OK`, `fs. W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are removed.",
    "originalSentence": "R_OK`, `fs. W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are removed.",
    "position": 4898,
    "id": "window_4898"
  },
  {
    "type": "window",
    "content": "W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are removed. - version: v20.",
    "originalSentence": "W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are removed. - version: v20.",
    "position": 4899,
    "id": "window_4899"
  },
  {
    "type": "window",
    "content": "X_OK`\n                 which were present directly on `fs` are removed. - version: v20. 8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs.",
    "originalSentence": "X_OK`\n                 which were present directly on `fs` are removed. - version: v20. 8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs.",
    "position": 4900,
    "id": "window_4900"
  },
  {
    "type": "window",
    "content": "- version: v20. 8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs. F_OK`, `fs.",
    "originalSentence": "- version: v20. 8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs. F_OK`, `fs.",
    "position": 4901,
    "id": "window_4901"
  },
  {
    "type": "window",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs. F_OK`, `fs. R_OK`, `fs.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs. F_OK`, `fs. R_OK`, `fs.",
    "position": 4902,
    "id": "window_4902"
  },
  {
    "type": "window",
    "content": "R_OK`, `fs. W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are deprecated.",
    "originalSentence": "R_OK`, `fs. W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are deprecated.",
    "position": 4903,
    "id": "window_4903"
  },
  {
    "type": "window",
    "content": "W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are deprecated. - version: v18.",
    "originalSentence": "W_OK` and `fs. X_OK`\n                 which were present directly on `fs` are deprecated. - version: v18.",
    "position": 4904,
    "id": "window_4904"
  },
  {
    "type": "window",
    "content": "X_OK`\n                 which were present directly on `fs` are deprecated. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "X_OK`\n                 which were present directly on `fs` are deprecated. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 4905,
    "id": "window_4905"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7.",
    "position": 4906,
    "id": "window_4906"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 4907,
    "id": "window_4907"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v6.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v6.",
    "position": 4908,
    "id": "window_4908"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v6. 3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v6. 3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs.",
    "position": 4909,
    "id": "window_4909"
  },
  {
    "type": "window",
    "content": "- version: v6. 3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs. R_OK`, etc which were present directly\n                 on `fs` were moved into `fs.",
    "originalSentence": "- version: v6. 3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs. R_OK`, etc which were present directly\n                 on `fs` were moved into `fs.",
    "position": 4910,
    "id": "window_4910"
  },
  {
    "type": "window",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs. R_OK`, etc which were present directly\n                 on `fs` were moved into `fs. constants` as a soft deprecation.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs. R_OK`, etc which were present directly\n                 on `fs` were moved into `fs. constants` as a soft deprecation.",
    "position": 4911,
    "id": "window_4911"
  },
  {
    "type": "window",
    "content": "R_OK`, etc which were present directly\n                 on `fs` were moved into `fs. constants` as a soft deprecation. Thus for Node.",
    "originalSentence": "R_OK`, etc which were present directly\n                 on `fs` were moved into `fs. constants` as a soft deprecation. Thus for Node.",
    "position": 4912,
    "id": "window_4912"
  },
  {
    "type": "window",
    "content": "constants` as a soft deprecation. Thus for Node. js `< v6.",
    "originalSentence": "constants` as a soft deprecation. Thus for Node. js `< v6.",
    "position": 4913,
    "id": "window_4913"
  },
  {
    "type": "window",
    "content": "Thus for Node. js `< v6. 3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs.",
    "originalSentence": "Thus for Node. js `< v6. 3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs.",
    "position": 4914,
    "id": "window_4914"
  },
  {
    "type": "window",
    "content": "js `< v6. 3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs. constants || fs).",
    "originalSentence": "js `< v6. 3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs. constants || fs).",
    "position": 4915,
    "id": "window_4915"
  },
  {
    "type": "window",
    "content": "3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs. constants || fs). R_OK` to work with all\n                 versions.",
    "originalSentence": "3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs. constants || fs). R_OK` to work with all\n                 versions.",
    "position": 4916,
    "id": "window_4916"
  },
  {
    "type": "window",
    "content": "constants || fs). R_OK` to work with all\n                 versions. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "originalSentence": "constants || fs). R_OK` to work with all\n                 versions. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "position": 4917,
    "id": "window_4917"
  },
  {
    "type": "window",
    "content": "R_OK` to work with all\n                 versions. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants.",
    "originalSentence": "R_OK` to work with all\n                 versions. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants.",
    "position": 4918,
    "id": "window_4918"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants. F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants. F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`.",
    "position": 4919,
    "id": "window_4919"
  },
  {
    "type": "window",
    "content": "constants. F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "originalSentence": "constants. F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed.",
    "position": 4920,
    "id": "window_4920"
  },
  {
    "type": "window",
    "content": "F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.",
    "originalSentence": "F_OK`\n* `callback` {Function}\n  * `err` {Error}\n\nTests a user's permissions for the file or directory specified by `path`. The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.",
    "position": 4921,
    "id": "window_4921"
  },
  {
    "type": "window",
    "content": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs. constants.",
    "originalSentence": "The `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs. constants.",
    "position": 4922,
    "id": "window_4922"
  },
  {
    "type": "window",
    "content": "`mode` should be either the value `fs. constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "originalSentence": "`mode` should be either the value `fs. constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs.",
    "position": 4923,
    "id": "window_4923"
  },
  {
    "type": "window",
    "content": "constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants.",
    "originalSentence": "constants. F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants.",
    "position": 4924,
    "id": "window_4924"
  },
  {
    "type": "window",
    "content": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants. R_OK`,\n`fs.",
    "originalSentence": "F_OK`\nor a mask consisting of the bitwise OR of any of `fs. constants. R_OK`,\n`fs.",
    "position": 4925,
    "id": "window_4925"
  },
  {
    "type": "window",
    "content": "constants. R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "constants. R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "position": 4926,
    "id": "window_4926"
  },
  {
    "type": "window",
    "content": "R_OK`). Check [File access constants][] for\npossible values of `mode`. The final argument, `callback`, is a callback function that is invoked with\na possible error argument.",
    "originalSentence": "R_OK`). Check [File access constants][] for\npossible values of `mode`. The final argument, `callback`, is a callback function that is invoked with\na possible error argument.",
    "position": 4927,
    "id": "window_4927"
  },
  {
    "type": "window",
    "content": "Check [File access constants][] for\npossible values of `mode`. The final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object.",
    "originalSentence": "Check [File access constants][] for\npossible values of `mode`. The final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object.",
    "position": 4928,
    "id": "window_4928"
  },
  {
    "type": "window",
    "content": "The final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if\n`package.",
    "originalSentence": "The final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if\n`package.",
    "position": 4929,
    "id": "window_4929"
  },
  {
    "type": "window",
    "content": "If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if\n`package. json` exists, and if it is readable or writable.",
    "originalSentence": "If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if\n`package. json` exists, and if it is readable or writable.",
    "position": 4930,
    "id": "window_4930"
  },
  {
    "type": "window",
    "content": "The following examples check if\n`package. json` exists, and if it is readable or writable. ```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package.",
    "originalSentence": "The following examples check if\n`package. json` exists, and if it is readable or writable. ```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package.",
    "position": 4931,
    "id": "window_4931"
  },
  {
    "type": "window",
    "content": "json` exists, and if it is readable or writable. ```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package. json';\n\n// Check if the file exists in the current directory.",
    "originalSentence": "json` exists, and if it is readable or writable. ```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package. json';\n\n// Check if the file exists in the current directory.",
    "position": 4932,
    "id": "window_4932"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package. json';\n\n// Check if the file exists in the current directory. access(file, constants.",
    "originalSentence": "```mjs\nimport { access, constants } from 'node:fs';\n\nconst file = 'package. json';\n\n// Check if the file exists in the current directory. access(file, constants.",
    "position": 4933,
    "id": "window_4933"
  },
  {
    "type": "window",
    "content": "json';\n\n// Check if the file exists in the current directory. access(file, constants. F_OK, (err) => {\n  console.",
    "originalSentence": "json';\n\n// Check if the file exists in the current directory. access(file, constants. F_OK, (err) => {\n  console.",
    "position": 4934,
    "id": "window_4934"
  },
  {
    "type": "window",
    "content": "access(file, constants. F_OK, (err) => {\n  console. log(`${file} ${err ?",
    "originalSentence": "access(file, constants. F_OK, (err) => {\n  console. log(`${file} ${err ?",
    "position": 4935,
    "id": "window_4935"
  },
  {
    "type": "window",
    "content": "F_OK, (err) => {\n  console. log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.",
    "originalSentence": "F_OK, (err) => {\n  console. log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.",
    "position": 4936,
    "id": "window_4936"
  },
  {
    "type": "window",
    "content": "log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable. access(file, constants.",
    "originalSentence": "log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable. access(file, constants.",
    "position": 4937,
    "id": "window_4937"
  },
  {
    "type": "window",
    "content": "'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable. access(file, constants. R_OK, (err) => {\n  console.",
    "originalSentence": "'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable. access(file, constants. R_OK, (err) => {\n  console.",
    "position": 4938,
    "id": "window_4938"
  },
  {
    "type": "window",
    "content": "access(file, constants. R_OK, (err) => {\n  console. log(`${file} ${err ?",
    "originalSentence": "access(file, constants. R_OK, (err) => {\n  console. log(`${file} ${err ?",
    "position": 4939,
    "id": "window_4939"
  },
  {
    "type": "window",
    "content": "R_OK, (err) => {\n  console. log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.",
    "originalSentence": "R_OK, (err) => {\n  console. log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.",
    "position": 4940,
    "id": "window_4940"
  },
  {
    "type": "window",
    "content": "log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable. access(file, constants.",
    "originalSentence": "log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable. access(file, constants.",
    "position": 4941,
    "id": "window_4941"
  },
  {
    "type": "window",
    "content": "'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable. access(file, constants. W_OK, (err) => {\n  console.",
    "originalSentence": "'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable. access(file, constants. W_OK, (err) => {\n  console.",
    "position": 4942,
    "id": "window_4942"
  },
  {
    "type": "window",
    "content": "access(file, constants. W_OK, (err) => {\n  console. log(`${file} ${err ?",
    "originalSentence": "access(file, constants. W_OK, (err) => {\n  console. log(`${file} ${err ?",
    "position": 4943,
    "id": "window_4943"
  },
  {
    "type": "window",
    "content": "W_OK, (err) => {\n  console. log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable.",
    "originalSentence": "W_OK, (err) => {\n  console. log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable.",
    "position": 4944,
    "id": "window_4944"
  },
  {
    "type": "window",
    "content": "log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable. access(file, constants.",
    "originalSentence": "log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable. access(file, constants.",
    "position": 4945,
    "id": "window_4945"
  },
  {
    "type": "window",
    "content": "'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable. access(file, constants. R_OK | constants.",
    "originalSentence": "'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable. access(file, constants. R_OK | constants.",
    "position": 4946,
    "id": "window_4946"
  },
  {
    "type": "window",
    "content": "access(file, constants. R_OK | constants. W_OK, (err) => {\n  console.",
    "originalSentence": "access(file, constants. R_OK | constants. W_OK, (err) => {\n  console.",
    "position": 4947,
    "id": "window_4947"
  },
  {
    "type": "window",
    "content": "R_OK | constants. W_OK, (err) => {\n  console. log(`${file} ${err ?",
    "originalSentence": "R_OK | constants. W_OK, (err) => {\n  console. log(`${file} ${err ?",
    "position": 4948,
    "id": "window_4948"
  },
  {
    "type": "window",
    "content": "W_OK, (err) => {\n  console. log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs.",
    "originalSentence": "W_OK, (err) => {\n  console. log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs.",
    "position": 4949,
    "id": "window_4949"
  },
  {
    "type": "window",
    "content": "log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs. access()` to check for the accessibility of a file before calling\n`fs.",
    "originalSentence": "log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs. access()` to check for the accessibility of a file before calling\n`fs.",
    "position": 4950,
    "id": "window_4950"
  },
  {
    "type": "window",
    "content": "'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs. access()` to check for the accessibility of a file before calling\n`fs. open()`, `fs.",
    "originalSentence": "'is not' : 'is'} readable and writable`);\n});\n```\n\nDo not use `fs. access()` to check for the accessibility of a file before calling\n`fs. open()`, `fs.",
    "position": 4951,
    "id": "window_4951"
  },
  {
    "type": "window",
    "content": "access()` to check for the accessibility of a file before calling\n`fs. open()`, `fs. readFile()`, or `fs.",
    "originalSentence": "access()` to check for the accessibility of a file before calling\n`fs. open()`, `fs. readFile()`, or `fs.",
    "position": 4952,
    "id": "window_4952"
  },
  {
    "type": "window",
    "content": "readFile()`, or `fs. writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "originalSentence": "readFile()`, or `fs. writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "position": 4953,
    "id": "window_4953"
  },
  {
    "type": "window",
    "content": "writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.",
    "originalSentence": "writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.",
    "position": 4954,
    "id": "window_4954"
  },
  {
    "type": "window",
    "content": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (!",
    "originalSentence": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (!",
    "position": 4955,
    "id": "window_4955"
  },
  {
    "type": "window",
    "content": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (! err) {\n    console.",
    "originalSentence": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (! err) {\n    console.",
    "position": 4956,
    "id": "window_4956"
  },
  {
    "type": "window",
    "content": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (! err) {\n    console. error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (! err) {\n    console. error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 4957,
    "id": "window_4957"
  },
  {
    "type": "window",
    "content": "err) {\n    console. error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console.",
    "originalSentence": "err) {\n    console. error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console.",
    "position": 4958,
    "id": "window_4958"
  },
  {
    "type": "window",
    "content": "error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.",
    "position": 4959,
    "id": "window_4959"
  },
  {
    "type": "window",
    "content": "code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console.",
    "originalSentence": "code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console.",
    "position": 4960,
    "id": "window_4960"
  },
  {
    "type": "window",
    "content": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 4961,
    "id": "window_4961"
  },
  {
    "type": "window",
    "content": "code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console.",
    "originalSentence": "code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console.",
    "position": 4962,
    "id": "window_4962"
  },
  {
    "type": "window",
    "content": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "originalSentence": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "position": 4963,
    "id": "window_4963"
  },
  {
    "type": "window",
    "content": "code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.",
    "originalSentence": "code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.",
    "position": 4964,
    "id": "window_4964"
  },
  {
    "type": "window",
    "content": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess. On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory.",
    "originalSentence": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess. On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory.",
    "position": 4965,
    "id": "window_4965"
  },
  {
    "type": "window",
    "content": "In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess. On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs.",
    "originalSentence": "In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess. On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs.",
    "position": 4966,
    "id": "window_4966"
  },
  {
    "type": "window",
    "content": "On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs. access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.",
    "originalSentence": "On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs. access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.",
    "position": 4967,
    "id": "window_4967"
  },
  {
    "type": "window",
    "content": "The `fs. access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it. ### `fs.",
    "originalSentence": "The `fs. access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it. ### `fs.",
    "position": 4968,
    "id": "window_4968"
  },
  {
    "type": "window",
    "content": "access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it. ### `fs. appendFile(path, data[, options], callback)`\n\n<!",
    "originalSentence": "access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it. ### `fs. appendFile(path, data[, options], callback)`\n\n<!",
    "position": 4969,
    "id": "window_4969"
  },
  {
    "type": "window",
    "content": "### `fs. appendFile(path, data[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. appendFile(path, data[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 4970,
    "id": "window_4970"
  },
  {
    "type": "window",
    "content": "appendFile(path, data[, options], callback)`\n\n<! -- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "appendFile(path, data[, options], callback)`\n\n<! -- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21.",
    "position": 4971,
    "id": "window_4971"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "position": 4972,
    "id": "window_4972"
  },
  {
    "type": "window",
    "content": "6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 4973,
    "id": "window_4973"
  },
  {
    "type": "window",
    "content": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v18.",
    "originalSentence": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v18.",
    "position": 4974,
    "id": "window_4974"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 4975,
    "id": "window_4975"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 4976,
    "id": "window_4976"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 4977,
    "id": "window_4977"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 4978,
    "id": "window_4978"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 4979,
    "id": "window_4979"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 4980,
    "id": "window_4980"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 4981,
    "id": "window_4981"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v7.",
    "position": 4982,
    "id": "window_4982"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 4983,
    "id": "window_4983"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5.",
    "position": 4984,
    "id": "window_4984"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 4985,
    "id": "window_4985"
  },
  {
    "type": "window",
    "content": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 4986,
    "id": "window_4986"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.",
    "position": 4987,
    "id": "window_4987"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 4988,
    "id": "window_4988"
  },
  {
    "type": "window",
    "content": "**Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "originalSentence": "**Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "position": 4989,
    "id": "window_4989"
  },
  {
    "type": "window",
    "content": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist.",
    "originalSentence": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist.",
    "position": 4990,
    "id": "window_4990"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "position": 4991,
    "id": "window_4991"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}. The `mode` option only affects the newly created file.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}. The `mode` option only affects the newly created file.",
    "position": 4992,
    "id": "window_4992"
  },
  {
    "type": "window",
    "content": "`data` can be a string or a {Buffer}. The `mode` option only affects the newly created file. See [`fs.",
    "originalSentence": "`data` can be a string or a {Buffer}. The `mode` option only affects the newly created file. See [`fs.",
    "position": 4993,
    "id": "window_4993"
  },
  {
    "type": "window",
    "content": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "position": 4994,
    "id": "window_4994"
  },
  {
    "type": "window",
    "content": "See [`fs. open()`][]\nfor more details. ```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "originalSentence": "See [`fs. open()`][]\nfor more details. ```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "position": 4995,
    "id": "window_4995"
  },
  {
    "type": "window",
    "content": "open()`][]\nfor more details. ```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "open()`][]\nfor more details. ```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.",
    "position": 4996,
    "id": "window_4996"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', (err) => {\n  if (err) throw err;\n  console. log('The \"data to append\" was appended to file!'",
    "originalSentence": "```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', (err) => {\n  if (err) throw err;\n  console. log('The \"data to append\" was appended to file!'",
    "position": 4997,
    "id": "window_4997"
  },
  {
    "type": "window",
    "content": "txt', 'data to append', (err) => {\n  if (err) throw err;\n  console. log('The \"data to append\" was appended to file!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "originalSentence": "txt', 'data to append', (err) => {\n  if (err) throw err;\n  console. log('The \"data to append\" was appended to file!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message.",
    "position": 4998,
    "id": "window_4998"
  },
  {
    "type": "window",
    "content": "log('The \"data to append\" was appended to file!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "originalSentence": "log('The \"data to append\" was appended to file!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "position": 4999,
    "id": "window_4999"
  },
  {
    "type": "window",
    "content": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs.",
    "originalSentence": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFile } from 'node:fs';\n\nappendFile('message. txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs.",
    "position": 5000,
    "id": "window_5000"
  },
  {
    "type": "window",
    "content": "txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs. openSync()`).",
    "originalSentence": "txt', 'data to append', 'utf8', callback);\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs. openSync()`).",
    "position": 5001,
    "id": "window_5001"
  },
  {
    "type": "window",
    "content": "open()` or `fs. openSync()`). The file descriptor will\nnot be closed automatically.",
    "originalSentence": "open()` or `fs. openSync()`). The file descriptor will\nnot be closed automatically.",
    "position": 5002,
    "id": "window_5002"
  },
  {
    "type": "window",
    "content": "openSync()`). The file descriptor will\nnot be closed automatically. ```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message.",
    "originalSentence": "openSync()`). The file descriptor will\nnot be closed automatically. ```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message.",
    "position": 5003,
    "id": "window_5003"
  },
  {
    "type": "window",
    "content": "The file descriptor will\nnot be closed automatically. ```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message. txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs.",
    "originalSentence": "The file descriptor will\nnot be closed automatically. ```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message. txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs.",
    "position": 5004,
    "id": "window_5004"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message. txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs. chmod(path, mode, callback)`\n\n<!",
    "originalSentence": "```mjs\nimport { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message. txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs. chmod(path, mode, callback)`\n\n<!",
    "position": 5005,
    "id": "window_5005"
  },
  {
    "type": "window",
    "content": "txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs. chmod(path, mode, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\n### `fs. chmod(path, mode, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5006,
    "id": "window_5006"
  },
  {
    "type": "window",
    "content": "chmod(path, mode, callback)`\n\n<! -- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18.",
    "originalSentence": "chmod(path, mode, callback)`\n\n<! -- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18.",
    "position": 5007,
    "id": "window_5007"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5008,
    "id": "window_5008"
  },
  {
    "type": "window",
    "content": "1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5009,
    "id": "window_5009"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5010,
    "id": "window_5010"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5011,
    "id": "window_5011"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5012,
    "id": "window_5012"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5013,
    "id": "window_5013"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5014,
    "id": "window_5014"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5015,
    "id": "window_5015"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5016,
    "id": "window_5016"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file.",
    "position": 5017,
    "id": "window_5017"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 5018,
    "id": "window_5018"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file. No arguments other than a\npossible exception are given to the completion callback. See the POSIX chmod(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes the permissions of a file. No arguments other than a\npossible exception are given to the completion callback. See the POSIX chmod(2) documentation for more detail.",
    "position": 5019,
    "id": "window_5019"
  },
  {
    "type": "window",
    "content": "No arguments other than a\npossible exception are given to the completion callback. See the POSIX chmod(2) documentation for more detail. ```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback. See the POSIX chmod(2) documentation for more detail. ```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file.",
    "position": 5020,
    "id": "window_5020"
  },
  {
    "type": "window",
    "content": "See the POSIX chmod(2) documentation for more detail. ```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file. txt', 0o775, (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "See the POSIX chmod(2) documentation for more detail. ```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file. txt', 0o775, (err) => {\n  if (err) throw err;\n  console.",
    "position": 5021,
    "id": "window_5021"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file. txt', 0o775, (err) => {\n  if (err) throw err;\n  console. log('The permissions for file \"my_file.",
    "originalSentence": "```mjs\nimport { chmod } from 'node:fs';\n\nchmod('my_file. txt', 0o775, (err) => {\n  if (err) throw err;\n  console. log('The permissions for file \"my_file.",
    "position": 5022,
    "id": "window_5022"
  },
  {
    "type": "window",
    "content": "txt', 0o775, (err) => {\n  if (err) throw err;\n  console. log('The permissions for file \"my_file. txt\" have been changed!'",
    "originalSentence": "txt', 0o775, (err) => {\n  if (err) throw err;\n  console. log('The permissions for file \"my_file. txt\" have been changed!'",
    "position": 5023,
    "id": "window_5023"
  },
  {
    "type": "window",
    "content": "log('The permissions for file \"my_file. txt\" have been changed!' );\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs.",
    "originalSentence": "log('The permissions for file \"my_file. txt\" have been changed!' );\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs.",
    "position": 5024,
    "id": "window_5024"
  },
  {
    "type": "window",
    "content": "txt\" have been changed!' );\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs. chmod()` and `fs.",
    "originalSentence": "txt\" have been changed!' );\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs. chmod()` and `fs.",
    "position": 5025,
    "id": "window_5025"
  },
  {
    "type": "window",
    "content": ");\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs. chmod()` and `fs. chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs.",
    "originalSentence": ");\n});\n```\n\n#### File modes\n\nThe `mode` argument used in both the `fs. chmod()` and `fs. chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs.",
    "position": 5026,
    "id": "window_5026"
  },
  {
    "type": "window",
    "content": "chmod()` and `fs. chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs. constants.",
    "originalSentence": "chmod()` and `fs. chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs. constants.",
    "position": 5027,
    "id": "window_5027"
  },
  {
    "type": "window",
    "content": "chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs. constants. S_IRUSR` | `0o400` | read by owner            |\n| `fs.",
    "originalSentence": "chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:\n\n| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs. constants. S_IRUSR` | `0o400` | read by owner            |\n| `fs.",
    "position": 5028,
    "id": "window_5028"
  },
  {
    "type": "window",
    "content": "constants. S_IRUSR` | `0o400` | read by owner            |\n| `fs. constants.",
    "originalSentence": "constants. S_IRUSR` | `0o400` | read by owner            |\n| `fs. constants.",
    "position": 5029,
    "id": "window_5029"
  },
  {
    "type": "window",
    "content": "S_IRUSR` | `0o400` | read by owner            |\n| `fs. constants. S_IWUSR` | `0o200` | write by owner           |\n| `fs.",
    "originalSentence": "S_IRUSR` | `0o400` | read by owner            |\n| `fs. constants. S_IWUSR` | `0o200` | write by owner           |\n| `fs.",
    "position": 5030,
    "id": "window_5030"
  },
  {
    "type": "window",
    "content": "constants. S_IWUSR` | `0o200` | write by owner           |\n| `fs. constants.",
    "originalSentence": "constants. S_IWUSR` | `0o200` | write by owner           |\n| `fs. constants.",
    "position": 5031,
    "id": "window_5031"
  },
  {
    "type": "window",
    "content": "S_IWUSR` | `0o200` | write by owner           |\n| `fs. constants. S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs.",
    "originalSentence": "S_IWUSR` | `0o200` | write by owner           |\n| `fs. constants. S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs.",
    "position": 5032,
    "id": "window_5032"
  },
  {
    "type": "window",
    "content": "constants. S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs. constants.",
    "originalSentence": "constants. S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs. constants.",
    "position": 5033,
    "id": "window_5033"
  },
  {
    "type": "window",
    "content": "S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs. constants. S_IRGRP` | `0o40`  | read by group            |\n| `fs.",
    "originalSentence": "S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs. constants. S_IRGRP` | `0o40`  | read by group            |\n| `fs.",
    "position": 5034,
    "id": "window_5034"
  },
  {
    "type": "window",
    "content": "constants. S_IRGRP` | `0o40`  | read by group            |\n| `fs. constants.",
    "originalSentence": "constants. S_IRGRP` | `0o40`  | read by group            |\n| `fs. constants.",
    "position": 5035,
    "id": "window_5035"
  },
  {
    "type": "window",
    "content": "S_IRGRP` | `0o40`  | read by group            |\n| `fs. constants. S_IWGRP` | `0o20`  | write by group           |\n| `fs.",
    "originalSentence": "S_IRGRP` | `0o40`  | read by group            |\n| `fs. constants. S_IWGRP` | `0o20`  | write by group           |\n| `fs.",
    "position": 5036,
    "id": "window_5036"
  },
  {
    "type": "window",
    "content": "constants. S_IWGRP` | `0o20`  | write by group           |\n| `fs. constants.",
    "originalSentence": "constants. S_IWGRP` | `0o20`  | write by group           |\n| `fs. constants.",
    "position": 5037,
    "id": "window_5037"
  },
  {
    "type": "window",
    "content": "S_IWGRP` | `0o20`  | write by group           |\n| `fs. constants. S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs.",
    "originalSentence": "S_IWGRP` | `0o20`  | write by group           |\n| `fs. constants. S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs.",
    "position": 5038,
    "id": "window_5038"
  },
  {
    "type": "window",
    "content": "constants. S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs. constants.",
    "originalSentence": "constants. S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs. constants.",
    "position": 5039,
    "id": "window_5039"
  },
  {
    "type": "window",
    "content": "S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs. constants. S_IROTH` | `0o4`   | read by others           |\n| `fs.",
    "originalSentence": "S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs. constants. S_IROTH` | `0o4`   | read by others           |\n| `fs.",
    "position": 5040,
    "id": "window_5040"
  },
  {
    "type": "window",
    "content": "constants. S_IROTH` | `0o4`   | read by others           |\n| `fs. constants.",
    "originalSentence": "constants. S_IROTH` | `0o4`   | read by others           |\n| `fs. constants.",
    "position": 5041,
    "id": "window_5041"
  },
  {
    "type": "window",
    "content": "S_IROTH` | `0o4`   | read by others           |\n| `fs. constants. S_IWOTH` | `0o2`   | write by others          |\n| `fs.",
    "originalSentence": "S_IROTH` | `0o4`   | read by others           |\n| `fs. constants. S_IWOTH` | `0o2`   | write by others          |\n| `fs.",
    "position": 5042,
    "id": "window_5042"
  },
  {
    "type": "window",
    "content": "constants. S_IWOTH` | `0o2`   | write by others          |\n| `fs. constants.",
    "originalSentence": "constants. S_IWOTH` | `0o2`   | write by others          |\n| `fs. constants.",
    "position": 5043,
    "id": "window_5043"
  },
  {
    "type": "window",
    "content": "S_IWOTH` | `0o2`   | write by others          |\n| `fs. constants. S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e.",
    "originalSentence": "S_IWOTH` | `0o2`   | write by others          |\n| `fs. constants. S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e.",
    "position": 5044,
    "id": "window_5044"
  },
  {
    "type": "window",
    "content": "constants. S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e. g.",
    "originalSentence": "constants. S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e. g.",
    "position": 5045,
    "id": "window_5045"
  },
  {
    "type": "window",
    "content": "S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e. g. `765`).",
    "originalSentence": "S_IXOTH` | `0o1`   | execute/search by others |\n\nAn easier method of constructing the `mode` is to use a sequence of three\noctal digits (e. g. `765`).",
    "position": 5046,
    "id": "window_5046"
  },
  {
    "type": "window",
    "content": "g. `765`). The left-most digit (`7` in the example), specifies\nthe permissions for the file owner.",
    "originalSentence": "g. `765`). The left-most digit (`7` in the example), specifies\nthe permissions for the file owner.",
    "position": 5047,
    "id": "window_5047"
  },
  {
    "type": "window",
    "content": "`765`). The left-most digit (`7` in the example), specifies\nthe permissions for the file owner. The middle digit (`6` in the example),\nspecifies permissions for the group.",
    "originalSentence": "`765`). The left-most digit (`7` in the example), specifies\nthe permissions for the file owner. The middle digit (`6` in the example),\nspecifies permissions for the group.",
    "position": 5048,
    "id": "window_5048"
  },
  {
    "type": "window",
    "content": "The left-most digit (`7` in the example), specifies\nthe permissions for the file owner. The middle digit (`6` in the example),\nspecifies permissions for the group. The right-most digit (`5` in the example),\nspecifies the permissions for others.",
    "originalSentence": "The left-most digit (`7` in the example), specifies\nthe permissions for the file owner. The middle digit (`6` in the example),\nspecifies permissions for the group. The right-most digit (`5` in the example),\nspecifies the permissions for others.",
    "position": 5049,
    "id": "window_5049"
  },
  {
    "type": "window",
    "content": "The middle digit (`6` in the example),\nspecifies permissions for the group. The right-most digit (`5` in the example),\nspecifies the permissions for others. | Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file.",
    "originalSentence": "The middle digit (`6` in the example),\nspecifies permissions for the group. The right-most digit (`5` in the example),\nspecifies the permissions for others. | Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file.",
    "position": 5050,
    "id": "window_5050"
  },
  {
    "type": "window",
    "content": "The right-most digit (`5` in the example),\nspecifies the permissions for others. | Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file. * The group may read and write the file.",
    "originalSentence": "The right-most digit (`5` in the example),\nspecifies the permissions for others. | Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file. * The group may read and write the file.",
    "position": 5051,
    "id": "window_5051"
  },
  {
    "type": "window",
    "content": "| Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file. * The group may read and write the file. * Others may read and execute the file.",
    "originalSentence": "| Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |\n\nFor example, the octal value `0o765` means:\n\n* The owner may read, write, and execute the file. * The group may read and write the file. * Others may read and execute the file.",
    "position": 5052,
    "id": "window_5052"
  },
  {
    "type": "window",
    "content": "* The group may read and write the file. * Others may read and execute the file. When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently.",
    "originalSentence": "* The group may read and write the file. * Others may read and execute the file. When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently.",
    "position": 5053,
    "id": "window_5053"
  },
  {
    "type": "window",
    "content": "* Others may read and execute the file. When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently. Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs.",
    "originalSentence": "* Others may read and execute the file. When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently. Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs.",
    "position": 5054,
    "id": "window_5054"
  },
  {
    "type": "window",
    "content": "When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently. Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs. constants`.",
    "originalSentence": "When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently. Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs. constants`.",
    "position": 5055,
    "id": "window_5055"
  },
  {
    "type": "window",
    "content": "Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs. constants`. Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented.",
    "originalSentence": "Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs. constants`. Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented.",
    "position": 5056,
    "id": "window_5056"
  },
  {
    "type": "window",
    "content": "constants`. Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented. ### `fs.",
    "originalSentence": "constants`. Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented. ### `fs.",
    "position": 5057,
    "id": "window_5057"
  },
  {
    "type": "window",
    "content": "Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented. ### `fs. chown(path, uid, gid, callback)`\n\n<!",
    "originalSentence": "Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented. ### `fs. chown(path, uid, gid, callback)`\n\n<!",
    "position": 5058,
    "id": "window_5058"
  },
  {
    "type": "window",
    "content": "### `fs. chown(path, uid, gid, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. chown(path, uid, gid, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5059,
    "id": "window_5059"
  },
  {
    "type": "window",
    "content": "chown(path, uid, gid, callback)`\n\n<! -- YAML\nadded: v0. 1.97\nchanges:\n  - version: v18.",
    "originalSentence": "chown(path, uid, gid, callback)`\n\n<! -- YAML\nadded: v0. 1.97\nchanges:\n  - version: v18.",
    "position": 5060,
    "id": "window_5060"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.97\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.97\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5061,
    "id": "window_5061"
  },
  {
    "type": "window",
    "content": "1.97\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.97\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5062,
    "id": "window_5062"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5063,
    "id": "window_5063"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5064,
    "id": "window_5064"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5065,
    "id": "window_5065"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5066,
    "id": "window_5066"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5067,
    "id": "window_5067"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5068,
    "id": "window_5068"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5069,
    "id": "window_5069"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file.",
    "position": 5070,
    "id": "window_5070"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 5071,
    "id": "window_5071"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file. No arguments other than a\npossible exception are given to the completion callback. See the POSIX chown(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously changes owner and group of a file. No arguments other than a\npossible exception are given to the completion callback. See the POSIX chown(2) documentation for more detail.",
    "position": 5072,
    "id": "window_5072"
  },
  {
    "type": "window",
    "content": "No arguments other than a\npossible exception are given to the completion callback. See the POSIX chown(2) documentation for more detail. ### `fs.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback. See the POSIX chown(2) documentation for more detail. ### `fs.",
    "position": 5073,
    "id": "window_5073"
  },
  {
    "type": "window",
    "content": "See the POSIX chown(2) documentation for more detail. ### `fs. close(fd[, callback])`\n\n<!",
    "originalSentence": "See the POSIX chown(2) documentation for more detail. ### `fs. close(fd[, callback])`\n\n<!",
    "position": 5074,
    "id": "window_5074"
  },
  {
    "type": "window",
    "content": "### `fs. close(fd[, callback])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. close(fd[, callback])`\n\n<! -- YAML\nadded: v0.",
    "position": 5075,
    "id": "window_5075"
  },
  {
    "type": "window",
    "content": "close(fd[, callback])`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "close(fd[, callback])`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 5076,
    "id": "window_5076"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5077,
    "id": "window_5077"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v15.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v15.",
    "position": 5078,
    "id": "window_5078"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v15. 9.0\n      - v14.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v15. 9.0\n      - v14.",
    "position": 5079,
    "id": "window_5079"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided.",
    "originalSentence": "- version:\n      - v15. 9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided.",
    "position": 5080,
    "id": "window_5080"
  },
  {
    "type": "window",
    "content": "9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided. - version: v10.",
    "originalSentence": "9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided. - version: v10.",
    "position": 5081,
    "id": "window_5081"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5082,
    "id": "window_5082"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5083,
    "id": "window_5083"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5084,
    "id": "window_5084"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5085,
    "id": "window_5085"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5086,
    "id": "window_5086"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor.",
    "position": 5087,
    "id": "window_5087"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 5088,
    "id": "window_5088"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback. Calling `fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nCloses the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback. Calling `fs.",
    "position": 5089,
    "id": "window_5089"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback. Calling `fs. close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback. Calling `fs. close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "position": 5090,
    "id": "window_5090"
  },
  {
    "type": "window",
    "content": "Calling `fs. close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail.",
    "originalSentence": "Calling `fs. close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail.",
    "position": 5091,
    "id": "window_5091"
  },
  {
    "type": "window",
    "content": "close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail. ### `fs.",
    "originalSentence": "close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail. ### `fs.",
    "position": 5092,
    "id": "window_5092"
  },
  {
    "type": "window",
    "content": "See the POSIX close(2) documentation for more detail. ### `fs. copyFile(src, dest[, mode], callback)`\n\n<!",
    "originalSentence": "See the POSIX close(2) documentation for more detail. ### `fs. copyFile(src, dest[, mode], callback)`\n\n<!",
    "position": 5093,
    "id": "window_5093"
  },
  {
    "type": "window",
    "content": "### `fs. copyFile(src, dest[, mode], callback)`\n\n<! -- YAML\nadded: v8.",
    "originalSentence": "### `fs. copyFile(src, dest[, mode], callback)`\n\n<! -- YAML\nadded: v8.",
    "position": 5094,
    "id": "window_5094"
  },
  {
    "type": "window",
    "content": "copyFile(src, dest[, mode], callback)`\n\n<! -- YAML\nadded: v8. 5.0\nchanges:\n  - version: v18.",
    "originalSentence": "copyFile(src, dest[, mode], callback)`\n\n<! -- YAML\nadded: v8. 5.0\nchanges:\n  - version: v18.",
    "position": 5095,
    "id": "window_5095"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v8. 5.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v8. 5.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5096,
    "id": "window_5096"
  },
  {
    "type": "window",
    "content": "5.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14.",
    "originalSentence": "5.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14.",
    "position": 5097,
    "id": "window_5097"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "position": 5098,
    "id": "window_5098"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "position": 5099,
    "id": "window_5099"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "position": 5100,
    "id": "window_5100"
  },
  {
    "type": "window",
    "content": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`.",
    "originalSentence": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`.",
    "position": 5101,
    "id": "window_5101"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "**Default:** `0`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "position": 5102,
    "id": "window_5102"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. No arguments other than a possible exception are given to the\ncallback function.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. No arguments other than a possible exception are given to the\ncallback function.",
    "position": 5103,
    "id": "window_5103"
  },
  {
    "type": "window",
    "content": "By default, `dest` is overwritten if it\nalready exists. No arguments other than a possible exception are given to the\ncallback function. Node.",
    "originalSentence": "By default, `dest` is overwritten if it\nalready exists. No arguments other than a possible exception are given to the\ncallback function. Node.",
    "position": 5104,
    "id": "window_5104"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are given to the\ncallback function. Node. js makes no guarantees about the atomicity of the copy\noperation.",
    "originalSentence": "No arguments other than a possible exception are given to the\ncallback function. Node. js makes no guarantees about the atomicity of the copy\noperation.",
    "position": 5105,
    "id": "window_5105"
  },
  {
    "type": "window",
    "content": "Node. js makes no guarantees about the atomicity of the copy\noperation. If an error occurs after the destination file has been opened for\nwriting, Node.",
    "originalSentence": "Node. js makes no guarantees about the atomicity of the copy\noperation. If an error occurs after the destination file has been opened for\nwriting, Node.",
    "position": 5106,
    "id": "window_5106"
  },
  {
    "type": "window",
    "content": "js makes no guarantees about the atomicity of the copy\noperation. If an error occurs after the destination file has been opened for\nwriting, Node. js will attempt to remove the destination.",
    "originalSentence": "js makes no guarantees about the atomicity of the copy\noperation. If an error occurs after the destination file has been opened for\nwriting, Node. js will attempt to remove the destination.",
    "position": 5107,
    "id": "window_5107"
  },
  {
    "type": "window",
    "content": "If an error occurs after the destination file has been opened for\nwriting, Node. js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "originalSentence": "If an error occurs after the destination file has been opened for\nwriting, Node. js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "position": 5108,
    "id": "window_5108"
  },
  {
    "type": "window",
    "content": "js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "originalSentence": "js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "position": 5109,
    "id": "window_5109"
  },
  {
    "type": "window",
    "content": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g.",
    "originalSentence": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g.",
    "position": 5110,
    "id": "window_5110"
  },
  {
    "type": "window",
    "content": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g. `fs.",
    "originalSentence": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g. `fs.",
    "position": 5111,
    "id": "window_5111"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "originalSentence": "* `fs. constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "position": 5112,
    "id": "window_5112"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs.",
    "originalSentence": "constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs.",
    "position": 5113,
    "id": "window_5113"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs. constants.",
    "originalSentence": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs. constants.",
    "position": 5114,
    "id": "window_5114"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "originalSentence": "* `fs. constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "position": 5115,
    "id": "window_5115"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "originalSentence": "constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "position": 5116,
    "id": "window_5116"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs.",
    "originalSentence": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs.",
    "position": 5117,
    "id": "window_5117"
  },
  {
    "type": "window",
    "content": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs. constants.",
    "originalSentence": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs. constants.",
    "position": 5118,
    "id": "window_5118"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "originalSentence": "* `fs. constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "position": 5119,
    "id": "window_5119"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "originalSentence": "constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "position": 5120,
    "id": "window_5120"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console.",
    "originalSentence": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console.",
    "position": 5121,
    "id": "window_5121"
  },
  {
    "type": "window",
    "content": "If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console. log('source.",
    "originalSentence": "If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console. log('source.",
    "position": 5122,
    "id": "window_5122"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console. log('source. txt was copied to destination.",
    "originalSentence": "```mjs\nimport { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console. log('source. txt was copied to destination.",
    "position": 5123,
    "id": "window_5123"
  },
  {
    "type": "window",
    "content": "log('source. txt was copied to destination. txt');\n}\n\n// destination.",
    "originalSentence": "log('source. txt was copied to destination. txt');\n}\n\n// destination.",
    "position": 5124,
    "id": "window_5124"
  },
  {
    "type": "window",
    "content": "txt was copied to destination. txt');\n}\n\n// destination. txt will be created or overwritten by default.",
    "originalSentence": "txt was copied to destination. txt');\n}\n\n// destination. txt will be created or overwritten by default.",
    "position": 5125,
    "id": "window_5125"
  },
  {
    "type": "window",
    "content": "txt');\n}\n\n// destination. txt will be created or overwritten by default. copyFile('source.",
    "originalSentence": "txt');\n}\n\n// destination. txt will be created or overwritten by default. copyFile('source.",
    "position": 5126,
    "id": "window_5126"
  },
  {
    "type": "window",
    "content": "txt will be created or overwritten by default. copyFile('source. txt', 'destination.",
    "originalSentence": "txt will be created or overwritten by default. copyFile('source. txt', 'destination.",
    "position": 5127,
    "id": "window_5127"
  },
  {
    "type": "window",
    "content": "copyFile('source. txt', 'destination. txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "originalSentence": "copyFile('source. txt', 'destination. txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "position": 5128,
    "id": "window_5128"
  },
  {
    "type": "window",
    "content": "txt', 'destination. txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists.",
    "originalSentence": "txt', 'destination. txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists.",
    "position": 5129,
    "id": "window_5129"
  },
  {
    "type": "window",
    "content": "txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists. copyFile('source.",
    "originalSentence": "txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists. copyFile('source.",
    "position": 5130,
    "id": "window_5130"
  },
  {
    "type": "window",
    "content": "copyFile('source. txt', 'destination. txt', constants.",
    "originalSentence": "copyFile('source. txt', 'destination. txt', constants.",
    "position": 5131,
    "id": "window_5131"
  },
  {
    "type": "window",
    "content": "txt', 'destination. txt', constants. COPYFILE_EXCL, callback);\n```\n\n### `fs.",
    "originalSentence": "txt', 'destination. txt', constants. COPYFILE_EXCL, callback);\n```\n\n### `fs.",
    "position": 5132,
    "id": "window_5132"
  },
  {
    "type": "window",
    "content": "txt', constants. COPYFILE_EXCL, callback);\n```\n\n### `fs. cp(src, dest[, options], callback)`\n\n<!",
    "originalSentence": "txt', constants. COPYFILE_EXCL, callback);\n```\n\n### `fs. cp(src, dest[, options], callback)`\n\n<!",
    "position": 5133,
    "id": "window_5133"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL, callback);\n```\n\n### `fs. cp(src, dest[, options], callback)`\n\n<! -- YAML\nadded: v16.",
    "originalSentence": "COPYFILE_EXCL, callback);\n```\n\n### `fs. cp(src, dest[, options], callback)`\n\n<! -- YAML\nadded: v16.",
    "position": 5134,
    "id": "window_5134"
  },
  {
    "type": "window",
    "content": "cp(src, dest[, options], callback)`\n\n<! -- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22.",
    "originalSentence": "cp(src, dest[, options], callback)`\n\n<! -- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22.",
    "position": 5135,
    "id": "window_5135"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "originalSentence": "-- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "position": 5136,
    "id": "window_5136"
  },
  {
    "type": "window",
    "content": "7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20.",
    "originalSentence": "7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20.",
    "position": 5137,
    "id": "window_5137"
  },
  {
    "type": "window",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20. 1.0\n    - v18.",
    "position": 5138,
    "id": "window_5138"
  },
  {
    "type": "window",
    "content": "- version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "originalSentence": "- version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "position": 5139,
    "id": "window_5139"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`.",
    "position": 5140,
    "id": "window_5140"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`. - version: v18.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`. - version: v18.",
    "position": 5141,
    "id": "window_5141"
  },
  {
    "type": "window",
    "content": "copyFile()`. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "copyFile()`. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5142,
    "id": "window_5142"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n    - v17.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n    - v17.",
    "position": 5143,
    "id": "window_5143"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n    - v17. 6.0\n    - v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n    - v17. 6.0\n    - v16.",
    "position": 5144,
    "id": "window_5144"
  },
  {
    "type": "window",
    "content": "- version:\n    - v17. 6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "originalSentence": "- version:\n    - v17. 6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "position": 5145,
    "id": "window_5145"
  },
  {
    "type": "window",
    "content": "6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy.",
    "originalSentence": "6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy.",
    "position": 5146,
    "id": "window_5146"
  },
  {
    "type": "window",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to.",
    "position": 5147,
    "id": "window_5147"
  },
  {
    "type": "window",
    "content": "-->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "originalSentence": "-->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "position": 5148,
    "id": "window_5148"
  },
  {
    "type": "window",
    "content": "* `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.",
    "originalSentence": "* `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.",
    "position": 5149,
    "id": "window_5149"
  },
  {
    "type": "window",
    "content": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "originalSentence": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "position": 5150,
    "id": "window_5150"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.",
    "originalSentence": "**Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.",
    "position": 5151,
    "id": "window_5151"
  },
  {
    "type": "window",
    "content": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`. * `filter` {Function} Function to filter copied files/directories.",
    "originalSentence": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`. * `filter` {Function} Function to filter copied files/directories.",
    "position": 5152,
    "id": "window_5152"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it.",
    "originalSentence": "**Default:** `false`. * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it.",
    "position": 5153,
    "id": "window_5153"
  },
  {
    "type": "window",
    "content": "* `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well.",
    "originalSentence": "* `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well.",
    "position": 5154,
    "id": "window_5154"
  },
  {
    "type": "window",
    "content": "Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "originalSentence": "Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.",
    "position": 5155,
    "id": "window_5155"
  },
  {
    "type": "window",
    "content": "When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy.",
    "originalSentence": "When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy.",
    "position": 5156,
    "id": "window_5156"
  },
  {
    "type": "window",
    "content": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy. * `dest` {string} destination path to copy to.",
    "originalSentence": "Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`. * `src` {string} source path to copy. * `dest` {string} destination path to copy to.",
    "position": 5157,
    "id": "window_5157"
  },
  {
    "type": "window",
    "content": "* `src` {string} source path to copy. * `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "originalSentence": "* `src` {string} source path to copy. * `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.",
    "position": 5158,
    "id": "window_5158"
  },
  {
    "type": "window",
    "content": "* `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory.",
    "originalSentence": "* `dest` {string} destination path to copy to. * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory.",
    "position": 5159,
    "id": "window_5159"
  },
  {
    "type": "window",
    "content": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "originalSentence": "* Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value. * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "position": 5160,
    "id": "window_5160"
  },
  {
    "type": "window",
    "content": "* `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.",
    "originalSentence": "* `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.",
    "position": 5161,
    "id": "window_5161"
  },
  {
    "type": "window",
    "content": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior. **Default:** `true`.",
    "originalSentence": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior. **Default:** `true`.",
    "position": 5162,
    "id": "window_5162"
  },
  {
    "type": "window",
    "content": "Use the `errorOnExist` option to change this behavior. **Default:** `true`. * `mode` {integer} modifiers for copy operation.",
    "originalSentence": "Use the `errorOnExist` option to change this behavior. **Default:** `true`. * `mode` {integer} modifiers for copy operation.",
    "position": 5163,
    "id": "window_5163"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "originalSentence": "**Default:** `true`. * `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "position": 5164,
    "id": "window_5164"
  },
  {
    "type": "window",
    "content": "* `mode` {integer} modifiers for copy operation. **Default:** `0`. See `mode` flag of [`fs.",
    "originalSentence": "* `mode` {integer} modifiers for copy operation. **Default:** `0`. See `mode` flag of [`fs.",
    "position": 5165,
    "id": "window_5165"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. See `mode` flag of [`fs. copyFile()`][].",
    "originalSentence": "**Default:** `0`. See `mode` flag of [`fs. copyFile()`][].",
    "position": 5166,
    "id": "window_5166"
  },
  {
    "type": "window",
    "content": "See `mode` flag of [`fs. copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "originalSentence": "See `mode` flag of [`fs. copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "position": 5167,
    "id": "window_5167"
  },
  {
    "type": "window",
    "content": "copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.",
    "originalSentence": "copyFile()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.",
    "position": 5168,
    "id": "window_5168"
  },
  {
    "type": "window",
    "content": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "originalSentence": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "position": 5169,
    "id": "window_5169"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "**Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 5170,
    "id": "window_5170"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 5171,
    "id": "window_5171"
  },
  {
    "type": "window",
    "content": "**Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs.",
    "originalSentence": "**Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs.",
    "position": 5172,
    "id": "window_5172"
  },
  {
    "type": "window",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs. createReadStream(path[, options])`\n\n<!",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs. createReadStream(path[, options])`\n\n<!",
    "position": 5173,
    "id": "window_5173"
  },
  {
    "type": "window",
    "content": "### `fs. createReadStream(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. createReadStream(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 5174,
    "id": "window_5174"
  },
  {
    "type": "window",
    "content": "createReadStream(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v16.",
    "originalSentence": "createReadStream(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v16.",
    "position": 5175,
    "id": "window_5175"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "position": 5176,
    "id": "window_5176"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16.",
    "originalSentence": "1.31\nchanges:\n  - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16.",
    "position": 5177,
    "id": "window_5177"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "position": 5178,
    "id": "window_5178"
  },
  {
    "type": "window",
    "content": "- version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15.",
    "originalSentence": "- version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15.",
    "position": 5179,
    "id": "window_5179"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "position": 5180,
    "id": "window_5180"
  },
  {
    "type": "window",
    "content": "- version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15.",
    "originalSentence": "- version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15.",
    "position": 5181,
    "id": "window_5181"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "position": 5182,
    "id": "window_5182"
  },
  {
    "type": "window",
    "content": "- version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14.",
    "originalSentence": "- version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14.",
    "position": 5183,
    "id": "window_5183"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "position": 5184,
    "id": "window_5184"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13.",
    "position": 5185,
    "id": "window_5185"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13. 6.0\n     - v12.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13. 6.0\n     - v12.",
    "position": 5186,
    "id": "window_5186"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "originalSentence": "- version:\n     - v13. 6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "position": 5187,
    "id": "window_5187"
  },
  {
    "type": "window",
    "content": "6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12.",
    "originalSentence": "6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12.",
    "position": 5188,
    "id": "window_5188"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "position": 5189,
    "id": "window_5189"
  },
  {
    "type": "window",
    "content": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v11.",
    "originalSentence": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v11.",
    "position": 5190,
    "id": "window_5190"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v11. 0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v11. 0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values.",
    "position": 5191,
    "id": "window_5191"
  },
  {
    "type": "window",
    "content": "- version: v11. 0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values. - version: v7.",
    "originalSentence": "- version: v11. 0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values. - version: v7.",
    "position": 5192,
    "id": "window_5192"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 5193,
    "id": "window_5193"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "position": 5194,
    "id": "window_5194"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 5195,
    "id": "window_5195"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v2.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v2.",
    "position": 5196,
    "id": "window_5196"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "position": 5197,
    "id": "window_5197"
  },
  {
    "type": "window",
    "content": "- version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "position": 5198,
    "id": "window_5198"
  },
  {
    "type": "window",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'r'`.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'r'`.",
    "position": 5199,
    "id": "window_5199"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'r'`. * `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'r'`. * `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs.",
    "position": 5200,
    "id": "window_5200"
  },
  {
    "type": "window",
    "content": "**Default:**\n    `'r'`. * `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "originalSentence": "**Default:**\n    `'r'`. * `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file.",
    "position": 5201,
    "id": "window_5201"
  },
  {
    "type": "window",
    "content": "* `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "* `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs. ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.",
    "position": 5202,
    "id": "window_5202"
  },
  {
    "type": "window",
    "content": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "ReadStream}\n\n`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "position": 5203,
    "id": "window_5203"
  },
  {
    "type": "window",
    "content": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. If `fd` is specified and `start` is\nomitted or `undefined`, `fs.",
    "originalSentence": "Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. If `fd` is specified and `start` is\nomitted or `undefined`, `fs.",
    "position": 5204,
    "id": "window_5204"
  },
  {
    "type": "window",
    "content": "MAX_SAFE_INTEGER`][]] range. If `fd` is specified and `start` is\nomitted or `undefined`, `fs. createReadStream()` reads sequentially from the\ncurrent file position.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range. If `fd` is specified and `start` is\nomitted or `undefined`, `fs. createReadStream()` reads sequentially from the\ncurrent file position.",
    "position": 5205,
    "id": "window_5205"
  },
  {
    "type": "window",
    "content": "If `fd` is specified and `start` is\nomitted or `undefined`, `fs. createReadStream()` reads sequentially from the\ncurrent file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "originalSentence": "If `fd` is specified and `start` is\nomitted or `undefined`, `fs. createReadStream()` reads sequentially from the\ncurrent file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "position": 5206,
    "id": "window_5206"
  },
  {
    "type": "window",
    "content": "createReadStream()` reads sequentially from the\ncurrent file position. The `encoding` can be any one of those accepted by\n{Buffer}. If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor.",
    "originalSentence": "createReadStream()` reads sequentially from the\ncurrent file position. The `encoding` can be any one of those accepted by\n{Buffer}. If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor.",
    "position": 5207,
    "id": "window_5207"
  },
  {
    "type": "window",
    "content": "The `encoding` can be any one of those accepted by\n{Buffer}. If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor. This means that no `'open'` event will be\nemitted.",
    "originalSentence": "The `encoding` can be any one of those accepted by\n{Buffer}. If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor. This means that no `'open'` event will be\nemitted.",
    "position": 5208,
    "id": "window_5208"
  },
  {
    "type": "window",
    "content": "If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor. This means that no `'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s should be passed to\n{net.",
    "originalSentence": "If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor. This means that no `'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s should be passed to\n{net.",
    "position": 5209,
    "id": "window_5209"
  },
  {
    "type": "window",
    "content": "This means that no `'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s should be passed to\n{net. Socket}.",
    "originalSentence": "This means that no `'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s should be passed to\n{net. Socket}.",
    "position": 5210,
    "id": "window_5210"
  },
  {
    "type": "window",
    "content": "`fd` should be blocking; non-blocking `fd`s should be passed to\n{net. Socket}. If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable.",
    "originalSentence": "`fd` should be blocking; non-blocking `fd`s should be passed to\n{net. Socket}. If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable.",
    "position": 5211,
    "id": "window_5211"
  },
  {
    "type": "window",
    "content": "Socket}. If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "originalSentence": "Socket}. If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "position": 5212,
    "id": "window_5212"
  },
  {
    "type": "window",
    "content": "If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 5213,
    "id": "window_5213"
  },
  {
    "type": "window",
    "content": "This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "This can prevent the process from exiting and the stream from\nclosing naturally. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "position": 5214,
    "id": "window_5214"
  },
  {
    "type": "window",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`.",
    "position": 5215,
    "id": "window_5215"
  },
  {
    "type": "window",
    "content": "Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`. When providing the `fs` option,\nan override for `read` is required.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`. When providing the `fs` option,\nan override for `read` is required.",
    "position": 5216,
    "id": "window_5216"
  },
  {
    "type": "window",
    "content": "By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`. When providing the `fs` option,\nan override for `read` is required. If no `fd` is provided, an override for\n`open` is also required.",
    "originalSentence": "By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`. When providing the `fs` option,\nan override for `read` is required. If no `fd` is provided, an override for\n`open` is also required.",
    "position": 5217,
    "id": "window_5217"
  },
  {
    "type": "window",
    "content": "When providing the `fs` option,\nan override for `read` is required. If no `fd` is provided, an override for\n`open` is also required. If `autoClose` is `true`, an override for `close` is\nalso required.",
    "originalSentence": "When providing the `fs` option,\nan override for `read` is required. If no `fd` is provided, an override for\n`open` is also required. If `autoClose` is `true`, an override for `close` is\nalso required.",
    "position": 5218,
    "id": "window_5218"
  },
  {
    "type": "window",
    "content": "If no `fd` is provided, an override for\n`open` is also required. If `autoClose` is `true`, an override for `close` is\nalso required. ```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device.",
    "originalSentence": "If no `fd` is provided, an override for\n`open` is also required. If `autoClose` is `true`, an override for `close` is\nalso required. ```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device.",
    "position": 5219,
    "id": "window_5219"
  },
  {
    "type": "window",
    "content": "If `autoClose` is `true`, an override for `close` is\nalso required. ```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device. const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.",
    "originalSentence": "If `autoClose` is `true`, an override for `close` is\nalso required. ```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device. const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.",
    "position": 5220,
    "id": "window_5220"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device. const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream. close(); // This may not close the stream.",
    "originalSentence": "```mjs\nimport { createReadStream } from 'node:fs';\n\n// Create a stream from some character device. const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream. close(); // This may not close the stream.",
    "position": 5221,
    "id": "window_5221"
  },
  {
    "type": "window",
    "content": "const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream. close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "originalSentence": "const stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream. close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.",
    "position": 5222,
    "id": "window_5222"
  },
  {
    "type": "window",
    "content": "close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "originalSentence": "close(); // This may not close the stream. // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.",
    "position": 5223,
    "id": "window_5223"
  },
  {
    "type": "window",
    "content": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream.",
    "originalSentence": "// Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close. // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream.",
    "position": 5224,
    "id": "window_5224"
  },
  {
    "type": "window",
    "content": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream. push(null);\n  stream.",
    "originalSentence": "// This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes. stream. push(null);\n  stream.",
    "position": 5225,
    "id": "window_5225"
  },
  {
    "type": "window",
    "content": "stream. push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "originalSentence": "stream. push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error.",
    "position": 5226,
    "id": "window_5226"
  },
  {
    "type": "window",
    "content": "push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "originalSentence": "push(null);\n  stream. read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak.",
    "position": 5227,
    "id": "window_5227"
  },
  {
    "type": "window",
    "content": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "originalSentence": "read(0);\n}, 100);\n```\n\nIf `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "position": 5228,
    "id": "window_5228"
  },
  {
    "type": "window",
    "content": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. `mode` sets the file mode (permission and sticky bits), but only if the\nfile was created.",
    "originalSentence": "It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. `mode` sets the file mode (permission and sticky bits), but only if the\nfile was created.",
    "position": 5229,
    "id": "window_5229"
  },
  {
    "type": "window",
    "content": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. `mode` sets the file mode (permission and sticky bits), but only if the\nfile was created. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample.",
    "originalSentence": "If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically. `mode` sets the file mode (permission and sticky bits), but only if the\nfile was created. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample.",
    "position": 5230,
    "id": "window_5230"
  },
  {
    "type": "window",
    "content": "`mode` sets the file mode (permission and sticky bits), but only if the\nfile was created. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample. txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding.",
    "originalSentence": "`mode` sets the file mode (permission and sticky bits), but only if the\nfile was created. An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample. txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding.",
    "position": 5231,
    "id": "window_5231"
  },
  {
    "type": "window",
    "content": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample. txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding. ### `fs.",
    "originalSentence": "An example to read the last 10 bytes of a file which is 100 bytes long:\n\n```mjs\nimport { createReadStream } from 'node:fs';\n\ncreateReadStream('sample. txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding. ### `fs.",
    "position": 5232,
    "id": "window_5232"
  },
  {
    "type": "window",
    "content": "txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding. ### `fs. createWriteStream(path[, options])`\n\n<!",
    "originalSentence": "txt', { start: 90, end: 99 });\n```\n\nIf `options` is a string, then it specifies the encoding. ### `fs. createWriteStream(path[, options])`\n\n<!",
    "position": 5233,
    "id": "window_5233"
  },
  {
    "type": "window",
    "content": "### `fs. createWriteStream(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. createWriteStream(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 5234,
    "id": "window_5234"
  },
  {
    "type": "window",
    "content": "createWriteStream(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "createWriteStream(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version:\n    - v21.",
    "position": 5235,
    "id": "window_5235"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "position": 5236,
    "id": "window_5236"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "originalSentence": "1.31\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.",
    "position": 5237,
    "id": "window_5237"
  },
  {
    "type": "window",
    "content": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. - version: v16.",
    "originalSentence": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. - version: v16.",
    "position": 5238,
    "id": "window_5238"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported. - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.",
    "position": 5239,
    "id": "window_5239"
  },
  {
    "type": "window",
    "content": "- version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16.",
    "originalSentence": "- version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16.",
    "position": 5240,
    "id": "window_5240"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided. - version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.",
    "position": 5241,
    "id": "window_5241"
  },
  {
    "type": "window",
    "content": "- version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15.",
    "originalSentence": "- version: v16. 10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15.",
    "position": 5242,
    "id": "window_5242"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`. - version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.",
    "position": 5243,
    "id": "window_5243"
  },
  {
    "type": "window",
    "content": "- version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15.",
    "originalSentence": "- version: v15. 5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15.",
    "position": 5244,
    "id": "window_5244"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`. - version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.",
    "position": 5245,
    "id": "window_5245"
  },
  {
    "type": "window",
    "content": "- version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14.",
    "originalSentence": "- version:\n     - v15. 4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14.",
    "position": 5246,
    "id": "window_5246"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.",
    "position": 5247,
    "id": "window_5247"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13.",
    "position": 5248,
    "id": "window_5248"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13. 6.0\n     - v12.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`. - version:\n     - v13. 6.0\n     - v12.",
    "position": 5249,
    "id": "window_5249"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "originalSentence": "- version:\n     - v13. 6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.",
    "position": 5250,
    "id": "window_5250"
  },
  {
    "type": "window",
    "content": "6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12.",
    "originalSentence": "6.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12.",
    "position": 5251,
    "id": "window_5251"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.",
    "position": 5252,
    "id": "window_5252"
  },
  {
    "type": "window",
    "content": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v7.",
    "originalSentence": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v7.",
    "position": 5253,
    "id": "window_5253"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 5254,
    "id": "window_5254"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "position": 5255,
    "id": "window_5255"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 5256,
    "id": "window_5256"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5.",
    "position": 5257,
    "id": "window_5257"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5. 5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5. 5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now.",
    "position": 5258,
    "id": "window_5258"
  },
  {
    "type": "window",
    "content": "- version: v5. 5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now. - version: v2.",
    "originalSentence": "- version: v5. 5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now. - version: v2.",
    "position": 5259,
    "id": "window_5259"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now. - version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now. - version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.",
    "position": 5260,
    "id": "window_5260"
  },
  {
    "type": "window",
    "content": "- version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v2. 3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][].",
    "position": 5261,
    "id": "window_5261"
  },
  {
    "type": "window",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'w'`.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'w'`.",
    "position": 5262,
    "id": "window_5262"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'w'`. * `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'w'`. * `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 5263,
    "id": "window_5263"
  },
  {
    "type": "window",
    "content": "**Default:**\n    `'w'`. * `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "originalSentence": "**Default:**\n    `'w'`. * `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "position": 5264,
    "id": "window_5264"
  },
  {
    "type": "window",
    "content": "* `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * Returns: {fs.",
    "originalSentence": "* `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. * Returns: {fs.",
    "position": 5265,
    "id": "window_5265"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "originalSentence": "**Default:** `false`. * Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.",
    "position": 5266,
    "id": "window_5266"
  },
  {
    "type": "window",
    "content": "* Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "originalSentence": "* Returns: {fs. WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range.",
    "position": 5267,
    "id": "window_5267"
  },
  {
    "type": "window",
    "content": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`.",
    "originalSentence": "WriteStream}\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number. MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`.",
    "position": 5268,
    "id": "window_5268"
  },
  {
    "type": "window",
    "content": "MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`. The `encoding` can be any one of those accepted by {Buffer}.",
    "originalSentence": "MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`. The `encoding` can be any one of those accepted by {Buffer}.",
    "position": 5269,
    "id": "window_5269"
  },
  {
    "type": "window",
    "content": "Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`. The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "originalSentence": "Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`. The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically.",
    "position": 5270,
    "id": "window_5270"
  },
  {
    "type": "window",
    "content": "The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "originalSentence": "The `encoding` can be any one of those accepted by {Buffer}. If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.",
    "position": 5271,
    "id": "window_5271"
  },
  {
    "type": "window",
    "content": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "originalSentence": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "position": 5272,
    "id": "window_5272"
  },
  {
    "type": "window",
    "content": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "originalSentence": "If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed.",
    "position": 5273,
    "id": "window_5273"
  },
  {
    "type": "window",
    "content": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "It is the application's responsibility to close it and make sure there's no\nfile descriptor leak. By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior.",
    "position": 5274,
    "id": "window_5274"
  },
  {
    "type": "window",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed. Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`.",
    "position": 5275,
    "id": "window_5275"
  },
  {
    "type": "window",
    "content": "Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`. Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled.",
    "originalSentence": "Set the `emitClose` option to `false` to change this behavior. By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`. Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled.",
    "position": 5276,
    "id": "window_5276"
  },
  {
    "type": "window",
    "content": "By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`. Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required.",
    "originalSentence": "By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`. Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required.",
    "position": 5277,
    "id": "window_5277"
  },
  {
    "type": "window",
    "content": "Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required. If no `fd` option is supplied, an override\nfor `open` is also required.",
    "originalSentence": "Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required. If no `fd` option is supplied, an override\nfor `open` is also required.",
    "position": 5278,
    "id": "window_5278"
  },
  {
    "type": "window",
    "content": "When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required. If no `fd` option is supplied, an override\nfor `open` is also required. If `autoClose` is `true`, an override for `close`\nis also required.",
    "originalSentence": "When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required. If no `fd` option is supplied, an override\nfor `open` is also required. If `autoClose` is `true`, an override for `close`\nis also required.",
    "position": 5279,
    "id": "window_5279"
  },
  {
    "type": "window",
    "content": "If no `fd` option is supplied, an override\nfor `open` is also required. If `autoClose` is `true`, an override for `close`\nis also required. Like {fs.",
    "originalSentence": "If no `fd` option is supplied, an override\nfor `open` is also required. If `autoClose` is `true`, an override for `close`\nis also required. Like {fs.",
    "position": 5280,
    "id": "window_5280"
  },
  {
    "type": "window",
    "content": "If `autoClose` is `true`, an override for `close`\nis also required. Like {fs. ReadStream}, if `fd` is specified, {fs.",
    "originalSentence": "If `autoClose` is `true`, an override for `close`\nis also required. Like {fs. ReadStream}, if `fd` is specified, {fs.",
    "position": 5281,
    "id": "window_5281"
  },
  {
    "type": "window",
    "content": "Like {fs. ReadStream}, if `fd` is specified, {fs. WriteStream} will ignore the\n`path` argument and will use the specified file descriptor.",
    "originalSentence": "Like {fs. ReadStream}, if `fd` is specified, {fs. WriteStream} will ignore the\n`path` argument and will use the specified file descriptor.",
    "position": 5282,
    "id": "window_5282"
  },
  {
    "type": "window",
    "content": "ReadStream}, if `fd` is specified, {fs. WriteStream} will ignore the\n`path` argument and will use the specified file descriptor. This means that no\n`'open'` event will be emitted.",
    "originalSentence": "ReadStream}, if `fd` is specified, {fs. WriteStream} will ignore the\n`path` argument and will use the specified file descriptor. This means that no\n`'open'` event will be emitted.",
    "position": 5283,
    "id": "window_5283"
  },
  {
    "type": "window",
    "content": "WriteStream} will ignore the\n`path` argument and will use the specified file descriptor. This means that no\n`'open'` event will be emitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to {net.",
    "originalSentence": "WriteStream} will ignore the\n`path` argument and will use the specified file descriptor. This means that no\n`'open'` event will be emitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to {net.",
    "position": 5284,
    "id": "window_5284"
  },
  {
    "type": "window",
    "content": "This means that no\n`'open'` event will be emitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to {net. Socket}.",
    "originalSentence": "This means that no\n`'open'` event will be emitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to {net. Socket}.",
    "position": 5285,
    "id": "window_5285"
  },
  {
    "type": "window",
    "content": "`fd` should be blocking; non-blocking `fd`s\nshould be passed to {net. Socket}. If `options` is a string, then it specifies the encoding.",
    "originalSentence": "`fd` should be blocking; non-blocking `fd`s\nshould be passed to {net. Socket}. If `options` is a string, then it specifies the encoding.",
    "position": 5286,
    "id": "window_5286"
  },
  {
    "type": "window",
    "content": "Socket}. If `options` is a string, then it specifies the encoding. ### `fs.",
    "originalSentence": "Socket}. If `options` is a string, then it specifies the encoding. ### `fs.",
    "position": 5287,
    "id": "window_5287"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the encoding. ### `fs. exists(path, callback)`\n\n<!",
    "originalSentence": "If `options` is a string, then it specifies the encoding. ### `fs. exists(path, callback)`\n\n<!",
    "position": 5288,
    "id": "window_5288"
  },
  {
    "type": "window",
    "content": "### `fs. exists(path, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. exists(path, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5289,
    "id": "window_5289"
  },
  {
    "type": "window",
    "content": "exists(path, callback)`\n\n<! -- YAML\nadded: v0. 0.2\ndeprecated: v1.",
    "originalSentence": "exists(path, callback)`\n\n<! -- YAML\nadded: v0. 0.2\ndeprecated: v1.",
    "position": 5290,
    "id": "window_5290"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\ndeprecated: v1. 0.0\nchanges:\n  - version: v18.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\ndeprecated: v1. 0.0\nchanges:\n  - version: v18.",
    "position": 5291,
    "id": "window_5291"
  },
  {
    "type": "window",
    "content": "0.2\ndeprecated: v1. 0.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.2\ndeprecated: v1. 0.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5292,
    "id": "window_5292"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7.",
    "originalSentence": "0.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7.",
    "position": 5293,
    "id": "window_5293"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 5294,
    "id": "window_5294"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n> Stability: 0 - Deprecated: Use [`fs.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n> Stability: 0 - Deprecated: Use [`fs.",
    "position": 5295,
    "id": "window_5295"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n> Stability: 0 - Deprecated: Use [`fs. stat()`][] or [`fs.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n> Stability: 0 - Deprecated: Use [`fs. stat()`][] or [`fs.",
    "position": 5296,
    "id": "window_5296"
  },
  {
    "type": "window",
    "content": "-->\n\n> Stability: 0 - Deprecated: Use [`fs. stat()`][] or [`fs. access()`][] instead.",
    "originalSentence": "-->\n\n> Stability: 0 - Deprecated: Use [`fs. stat()`][] or [`fs. access()`][] instead.",
    "position": 5297,
    "id": "window_5297"
  },
  {
    "type": "window",
    "content": "stat()`][] or [`fs. access()`][] instead. * `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system.",
    "originalSentence": "stat()`][] or [`fs. access()`][] instead. * `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system.",
    "position": 5298,
    "id": "window_5298"
  },
  {
    "type": "window",
    "content": "access()`][] instead. * `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system. Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console.",
    "originalSentence": "access()`][] instead. * `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system. Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console.",
    "position": 5299,
    "id": "window_5299"
  },
  {
    "type": "window",
    "content": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system. Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console. log(e ?",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}\n\nTest whether or not the element at the given `path` exists by checking with the file system. Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console. log(e ?",
    "position": 5300,
    "id": "window_5300"
  },
  {
    "type": "window",
    "content": "Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console. log(e ? 'it exists' : 'no passwd!'",
    "originalSentence": "Then call the `callback` argument with either true or false:\n\n```mjs\nimport { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console. log(e ? 'it exists' : 'no passwd!'",
    "position": 5301,
    "id": "window_5301"
  },
  {
    "type": "window",
    "content": "log(e ? 'it exists' : 'no passwd!' );\n});\n```\n\n**The parameters for this callback are not consistent with other Node.",
    "originalSentence": "log(e ? 'it exists' : 'no passwd!' );\n});\n```\n\n**The parameters for this callback are not consistent with other Node.",
    "position": 5302,
    "id": "window_5302"
  },
  {
    "type": "window",
    "content": "'it exists' : 'no passwd!' );\n});\n```\n\n**The parameters for this callback are not consistent with other Node. js\ncallbacks.",
    "originalSentence": "'it exists' : 'no passwd!' );\n});\n```\n\n**The parameters for this callback are not consistent with other Node. js\ncallbacks.",
    "position": 5303,
    "id": "window_5303"
  },
  {
    "type": "window",
    "content": ");\n});\n```\n\n**The parameters for this callback are not consistent with other Node. js\ncallbacks. ** Normally, the first parameter to a Node.",
    "originalSentence": ");\n});\n```\n\n**The parameters for this callback are not consistent with other Node. js\ncallbacks. ** Normally, the first parameter to a Node.",
    "position": 5304,
    "id": "window_5304"
  },
  {
    "type": "window",
    "content": "js\ncallbacks. ** Normally, the first parameter to a Node. js callback is an `err`\nparameter, optionally followed by other parameters.",
    "originalSentence": "js\ncallbacks. ** Normally, the first parameter to a Node. js callback is an `err`\nparameter, optionally followed by other parameters.",
    "position": 5305,
    "id": "window_5305"
  },
  {
    "type": "window",
    "content": "** Normally, the first parameter to a Node. js callback is an `err`\nparameter, optionally followed by other parameters. The `fs.",
    "originalSentence": "** Normally, the first parameter to a Node. js callback is an `err`\nparameter, optionally followed by other parameters. The `fs.",
    "position": 5306,
    "id": "window_5306"
  },
  {
    "type": "window",
    "content": "js callback is an `err`\nparameter, optionally followed by other parameters. The `fs. exists()` callback\nhas only one boolean parameter.",
    "originalSentence": "js callback is an `err`\nparameter, optionally followed by other parameters. The `fs. exists()` callback\nhas only one boolean parameter.",
    "position": 5307,
    "id": "window_5307"
  },
  {
    "type": "window",
    "content": "The `fs. exists()` callback\nhas only one boolean parameter. This is one reason `fs.",
    "originalSentence": "The `fs. exists()` callback\nhas only one boolean parameter. This is one reason `fs.",
    "position": 5308,
    "id": "window_5308"
  },
  {
    "type": "window",
    "content": "exists()` callback\nhas only one boolean parameter. This is one reason `fs. access()` is recommended\ninstead of `fs.",
    "originalSentence": "exists()` callback\nhas only one boolean parameter. This is one reason `fs. access()` is recommended\ninstead of `fs.",
    "position": 5309,
    "id": "window_5309"
  },
  {
    "type": "window",
    "content": "This is one reason `fs. access()` is recommended\ninstead of `fs. exists()`.",
    "originalSentence": "This is one reason `fs. access()` is recommended\ninstead of `fs. exists()`.",
    "position": 5310,
    "id": "window_5310"
  },
  {
    "type": "window",
    "content": "access()` is recommended\ninstead of `fs. exists()`. If `path` is a symbolic link, it is followed.",
    "originalSentence": "access()` is recommended\ninstead of `fs. exists()`. If `path` is a symbolic link, it is followed.",
    "position": 5311,
    "id": "window_5311"
  },
  {
    "type": "window",
    "content": "exists()`. If `path` is a symbolic link, it is followed. Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`.",
    "originalSentence": "exists()`. If `path` is a symbolic link, it is followed. Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`.",
    "position": 5312,
    "id": "window_5312"
  },
  {
    "type": "window",
    "content": "If `path` is a symbolic link, it is followed. Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`. Using `fs.",
    "originalSentence": "If `path` is a symbolic link, it is followed. Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`. Using `fs.",
    "position": 5313,
    "id": "window_5313"
  },
  {
    "type": "window",
    "content": "Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`. Using `fs. exists()` to check for the existence of a file before calling\n`fs.",
    "originalSentence": "Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`. Using `fs. exists()` to check for the existence of a file before calling\n`fs.",
    "position": 5314,
    "id": "window_5314"
  },
  {
    "type": "window",
    "content": "Using `fs. exists()` to check for the existence of a file before calling\n`fs. open()`, `fs.",
    "originalSentence": "Using `fs. exists()` to check for the existence of a file before calling\n`fs. open()`, `fs.",
    "position": 5315,
    "id": "window_5315"
  },
  {
    "type": "window",
    "content": "exists()` to check for the existence of a file before calling\n`fs. open()`, `fs. readFile()`, or `fs.",
    "originalSentence": "exists()` to check for the existence of a file before calling\n`fs. open()`, `fs. readFile()`, or `fs.",
    "position": 5316,
    "id": "window_5316"
  },
  {
    "type": "window",
    "content": "open()`, `fs. readFile()`, or `fs. writeFile()` is not recommended.",
    "originalSentence": "open()`, `fs. readFile()`, or `fs. writeFile()` is not recommended.",
    "position": 5317,
    "id": "window_5317"
  },
  {
    "type": "window",
    "content": "readFile()`, or `fs. writeFile()` is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "originalSentence": "readFile()`, or `fs. writeFile()` is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls.",
    "position": 5318,
    "id": "window_5318"
  },
  {
    "type": "window",
    "content": "writeFile()` is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.",
    "originalSentence": "writeFile()` is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.",
    "position": 5319,
    "id": "window_5319"
  },
  {
    "type": "window",
    "content": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.",
    "originalSentence": "Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.",
    "position": 5320,
    "id": "window_5320"
  },
  {
    "type": "window",
    "content": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console. error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist. **write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console. error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 5321,
    "id": "window_5321"
  },
  {
    "type": "window",
    "content": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console. error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console.",
    "originalSentence": "**write (NOT RECOMMENDED)**\n\n```mjs\nimport { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console. error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console.",
    "position": 5322,
    "id": "window_5322"
  },
  {
    "type": "window",
    "content": "error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.",
    "originalSentence": "error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```\n\n**write (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err. code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.",
    "position": 5323,
    "id": "window_5323"
  },
  {
    "type": "window",
    "content": "code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console. error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "originalSentence": "code === 'EEXIST') {\n      console. error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console. error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.",
    "position": 5324,
    "id": "window_5324"
  },
  {
    "type": "window",
    "content": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console. error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console.",
    "originalSentence": "error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```mjs\nimport { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console. error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console.",
    "position": 5325,
    "id": "window_5325"
  },
  {
    "type": "window",
    "content": "error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "originalSentence": "error('myfile does not exist');\n  }\n});\n```\n\n**read (RECOMMENDED)**\n\n```mjs\nimport { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err. code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "position": 5326,
    "id": "window_5326"
  },
  {
    "type": "window",
    "content": "code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess.",
    "originalSentence": "code === 'ENOENT') {\n      console. error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess.",
    "position": 5327,
    "id": "window_5327"
  },
  {
    "type": "window",
    "content": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess. ### `fs.",
    "originalSentence": "error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any. In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess. ### `fs.",
    "position": 5328,
    "id": "window_5328"
  },
  {
    "type": "window",
    "content": "In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess. ### `fs. fchmod(fd, mode, callback)`\n\n<!",
    "originalSentence": "In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess. ### `fs. fchmod(fd, mode, callback)`\n\n<!",
    "position": 5329,
    "id": "window_5329"
  },
  {
    "type": "window",
    "content": "### `fs. fchmod(fd, mode, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fchmod(fd, mode, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5330,
    "id": "window_5330"
  },
  {
    "type": "window",
    "content": "fchmod(fd, mode, callback)`\n\n<! -- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18.",
    "originalSentence": "fchmod(fd, mode, callback)`\n\n<! -- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18.",
    "position": 5331,
    "id": "window_5331"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5332,
    "id": "window_5332"
  },
  {
    "type": "window",
    "content": "4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5333,
    "id": "window_5333"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5334,
    "id": "window_5334"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5335,
    "id": "window_5335"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5336,
    "id": "window_5336"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5337,
    "id": "window_5337"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5338,
    "id": "window_5338"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file.",
    "position": 5339,
    "id": "window_5339"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file. No arguments other than a possible exception\nare given to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file. No arguments other than a possible exception\nare given to the completion callback.",
    "position": 5340,
    "id": "window_5340"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file. No arguments other than a possible exception\nare given to the completion callback. See the POSIX fchmod(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the permissions on the file. No arguments other than a possible exception\nare given to the completion callback. See the POSIX fchmod(2) documentation for more detail.",
    "position": 5341,
    "id": "window_5341"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception\nare given to the completion callback. See the POSIX fchmod(2) documentation for more detail. ### `fs.",
    "originalSentence": "No arguments other than a possible exception\nare given to the completion callback. See the POSIX fchmod(2) documentation for more detail. ### `fs.",
    "position": 5342,
    "id": "window_5342"
  },
  {
    "type": "window",
    "content": "See the POSIX fchmod(2) documentation for more detail. ### `fs. fchown(fd, uid, gid, callback)`\n\n<!",
    "originalSentence": "See the POSIX fchmod(2) documentation for more detail. ### `fs. fchown(fd, uid, gid, callback)`\n\n<!",
    "position": 5343,
    "id": "window_5343"
  },
  {
    "type": "window",
    "content": "### `fs. fchown(fd, uid, gid, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fchown(fd, uid, gid, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5344,
    "id": "window_5344"
  },
  {
    "type": "window",
    "content": "fchown(fd, uid, gid, callback)`\n\n<! -- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18.",
    "originalSentence": "fchown(fd, uid, gid, callback)`\n\n<! -- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18.",
    "position": 5345,
    "id": "window_5345"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5346,
    "id": "window_5346"
  },
  {
    "type": "window",
    "content": "4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5347,
    "id": "window_5347"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5348,
    "id": "window_5348"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5349,
    "id": "window_5349"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5350,
    "id": "window_5350"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5351,
    "id": "window_5351"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5352,
    "id": "window_5352"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file.",
    "position": 5353,
    "id": "window_5353"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 5354,
    "id": "window_5354"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file. No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX fchown(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSets the owner of the file. No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX fchown(2) documentation for more detail.",
    "position": 5355,
    "id": "window_5355"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX fchown(2) documentation for more detail. ### `fs.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX fchown(2) documentation for more detail. ### `fs.",
    "position": 5356,
    "id": "window_5356"
  },
  {
    "type": "window",
    "content": "See the POSIX fchown(2) documentation for more detail. ### `fs. fdatasync(fd, callback)`\n\n<!",
    "originalSentence": "See the POSIX fchown(2) documentation for more detail. ### `fs. fdatasync(fd, callback)`\n\n<!",
    "position": 5357,
    "id": "window_5357"
  },
  {
    "type": "window",
    "content": "### `fs. fdatasync(fd, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fdatasync(fd, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5358,
    "id": "window_5358"
  },
  {
    "type": "window",
    "content": "fdatasync(fd, callback)`\n\n<! -- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18.",
    "originalSentence": "fdatasync(fd, callback)`\n\n<! -- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18.",
    "position": 5359,
    "id": "window_5359"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5360,
    "id": "window_5360"
  },
  {
    "type": "window",
    "content": "1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5361,
    "id": "window_5361"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5362,
    "id": "window_5362"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5363,
    "id": "window_5363"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5364,
    "id": "window_5364"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5365,
    "id": "window_5365"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5366,
    "id": "window_5366"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "position": 5367,
    "id": "window_5367"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 5368,
    "id": "window_5368"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 5369,
    "id": "window_5369"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX\nfdatasync(2) documentation for details. No arguments other than a possible\nexception are given to the completion callback. ### `fs.",
    "originalSentence": "Refer to the POSIX\nfdatasync(2) documentation for details. No arguments other than a possible\nexception are given to the completion callback. ### `fs.",
    "position": 5370,
    "id": "window_5370"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible\nexception are given to the completion callback. ### `fs. fstat(fd[, options], callback)`\n\n<!",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback. ### `fs. fstat(fd[, options], callback)`\n\n<!",
    "position": 5371,
    "id": "window_5371"
  },
  {
    "type": "window",
    "content": "### `fs. fstat(fd[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fstat(fd[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5372,
    "id": "window_5372"
  },
  {
    "type": "window",
    "content": "fstat(fd[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.95\nchanges:\n  - version: v18.",
    "originalSentence": "fstat(fd[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.95\nchanges:\n  - version: v18.",
    "position": 5373,
    "id": "window_5373"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.95\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.95\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5374,
    "id": "window_5374"
  },
  {
    "type": "window",
    "content": "1.95\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.95\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5375,
    "id": "window_5375"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 5376,
    "id": "window_5376"
  },
  {
    "type": "window",
    "content": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10.",
    "originalSentence": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10.",
    "position": 5377,
    "id": "window_5377"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5378,
    "id": "window_5378"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5379,
    "id": "window_5379"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5380,
    "id": "window_5380"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5381,
    "id": "window_5381"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5382,
    "id": "window_5382"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 5383,
    "id": "window_5383"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 5384,
    "id": "window_5384"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 5385,
    "id": "window_5385"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 5386,
    "id": "window_5386"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nInvokes the callback with the {fs.",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nInvokes the callback with the {fs.",
    "position": 5387,
    "id": "window_5387"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nInvokes the callback with the {fs. Stats} for the file descriptor.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nInvokes the callback with the {fs. Stats} for the file descriptor.",
    "position": 5388,
    "id": "window_5388"
  },
  {
    "type": "window",
    "content": "Stats}\n\nInvokes the callback with the {fs. Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail.",
    "originalSentence": "Stats}\n\nInvokes the callback with the {fs. Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail.",
    "position": 5389,
    "id": "window_5389"
  },
  {
    "type": "window",
    "content": "Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail. ### `fs.",
    "originalSentence": "Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail. ### `fs.",
    "position": 5390,
    "id": "window_5390"
  },
  {
    "type": "window",
    "content": "See the POSIX fstat(2) documentation for more detail. ### `fs. fsync(fd, callback)`\n\n<!",
    "originalSentence": "See the POSIX fstat(2) documentation for more detail. ### `fs. fsync(fd, callback)`\n\n<!",
    "position": 5391,
    "id": "window_5391"
  },
  {
    "type": "window",
    "content": "### `fs. fsync(fd, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fsync(fd, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5392,
    "id": "window_5392"
  },
  {
    "type": "window",
    "content": "fsync(fd, callback)`\n\n<! -- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18.",
    "originalSentence": "fsync(fd, callback)`\n\n<! -- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18.",
    "position": 5393,
    "id": "window_5393"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5394,
    "id": "window_5394"
  },
  {
    "type": "window",
    "content": "1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.96\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5395,
    "id": "window_5395"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5396,
    "id": "window_5396"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5397,
    "id": "window_5397"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5398,
    "id": "window_5398"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5399,
    "id": "window_5399"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5400,
    "id": "window_5400"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "position": 5401,
    "id": "window_5401"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.",
    "position": 5402,
    "id": "window_5402"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail.",
    "position": 5403,
    "id": "window_5403"
  },
  {
    "type": "window",
    "content": "The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail. No arguments other\nthan a possible exception are given to the completion callback.",
    "originalSentence": "The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail. No arguments other\nthan a possible exception are given to the completion callback.",
    "position": 5404,
    "id": "window_5404"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX fsync(2) documentation for more detail. No arguments other\nthan a possible exception are given to the completion callback. ### `fs.",
    "originalSentence": "Refer to the POSIX fsync(2) documentation for more detail. No arguments other\nthan a possible exception are given to the completion callback. ### `fs.",
    "position": 5405,
    "id": "window_5405"
  },
  {
    "type": "window",
    "content": "No arguments other\nthan a possible exception are given to the completion callback. ### `fs. ftruncate(fd[, len], callback)`\n\n<!",
    "originalSentence": "No arguments other\nthan a possible exception are given to the completion callback. ### `fs. ftruncate(fd[, len], callback)`\n\n<!",
    "position": 5406,
    "id": "window_5406"
  },
  {
    "type": "window",
    "content": "### `fs. ftruncate(fd[, len], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. ftruncate(fd[, len], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5407,
    "id": "window_5407"
  },
  {
    "type": "window",
    "content": "ftruncate(fd[, len], callback)`\n\n<! -- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18.",
    "originalSentence": "ftruncate(fd[, len], callback)`\n\n<! -- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18.",
    "position": 5408,
    "id": "window_5408"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5409,
    "id": "window_5409"
  },
  {
    "type": "window",
    "content": "8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5410,
    "id": "window_5410"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5411,
    "id": "window_5411"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5412,
    "id": "window_5412"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5413,
    "id": "window_5413"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5414,
    "id": "window_5414"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5415,
    "id": "window_5415"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor.",
    "position": 5416,
    "id": "window_5416"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 5417,
    "id": "window_5417"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX ftruncate(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}\n\nTruncates the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX ftruncate(2) documentation for more detail.",
    "position": 5418,
    "id": "window_5418"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX ftruncate(2) documentation for more detail. If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback. See the POSIX ftruncate(2) documentation for more detail. If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file.",
    "position": 5419,
    "id": "window_5419"
  },
  {
    "type": "window",
    "content": "See the POSIX ftruncate(2) documentation for more detail. If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file. For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp.",
    "originalSentence": "See the POSIX ftruncate(2) documentation for more detail. If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file. For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp.",
    "position": 5420,
    "id": "window_5420"
  },
  {
    "type": "window",
    "content": "If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file. For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp. txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "originalSentence": "If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file. For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp. txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used.",
    "position": 5421,
    "id": "window_5421"
  },
  {
    "type": "window",
    "content": "For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp. txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. ### `fs.",
    "originalSentence": "For example, the following program retains only the first four bytes of the\nfile:\n\n```mjs\nimport { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp. txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. ### `fs.",
    "position": 5422,
    "id": "window_5422"
  },
  {
    "type": "window",
    "content": "txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. ### `fs. futimes(fd, atime, mtime, callback)`\n\n<!",
    "originalSentence": "txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```\n\nIf the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):\n\nIf `len` is negative then `0` will be used. ### `fs. futimes(fd, atime, mtime, callback)`\n\n<!",
    "position": 5423,
    "id": "window_5423"
  },
  {
    "type": "window",
    "content": "### `fs. futimes(fd, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. futimes(fd, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5424,
    "id": "window_5424"
  },
  {
    "type": "window",
    "content": "futimes(fd, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18.",
    "originalSentence": "futimes(fd, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18.",
    "position": 5425,
    "id": "window_5425"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5426,
    "id": "window_5426"
  },
  {
    "type": "window",
    "content": "4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5427,
    "id": "window_5427"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5428,
    "id": "window_5428"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5429,
    "id": "window_5429"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5430,
    "id": "window_5430"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5431,
    "id": "window_5431"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5432,
    "id": "window_5432"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4.",
    "position": 5433,
    "id": "window_5433"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 5434,
    "id": "window_5434"
  },
  {
    "type": "window",
    "content": "- version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor.",
    "originalSentence": "- version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor.",
    "position": 5435,
    "id": "window_5435"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor. See [`fs.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor. See [`fs.",
    "position": 5436,
    "id": "window_5436"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor. See [`fs. utimes()`][].",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by the supplied file\ndescriptor. See [`fs. utimes()`][].",
    "position": 5437,
    "id": "window_5437"
  },
  {
    "type": "window",
    "content": "utimes()`][]. ### `fs. glob(pattern[, options], callback)`\n\n<!",
    "originalSentence": "utimes()`][]. ### `fs. glob(pattern[, options], callback)`\n\n<!",
    "position": 5438,
    "id": "window_5438"
  },
  {
    "type": "window",
    "content": "### `fs. glob(pattern[, options], callback)`\n\n<! -- YAML\nadded: v22.",
    "originalSentence": "### `fs. glob(pattern[, options], callback)`\n\n<! -- YAML\nadded: v22.",
    "position": 5439,
    "id": "window_5439"
  },
  {
    "type": "window",
    "content": "glob(pattern[, options], callback)`\n\n<! -- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "glob(pattern[, options], callback)`\n\n<! -- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24.",
    "position": 5440,
    "id": "window_5440"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22.",
    "originalSentence": "-- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22.",
    "position": 5441,
    "id": "window_5441"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "position": 5442,
    "id": "window_5442"
  },
  {
    "type": "window",
    "content": "1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24.",
    "originalSentence": "1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24.",
    "position": 5443,
    "id": "window_5443"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24. 0.0\n      - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24. 0.0\n      - v22.",
    "position": 5444,
    "id": "window_5444"
  },
  {
    "type": "window",
    "content": "- version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "- version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 5445,
    "id": "window_5445"
  },
  {
    "type": "window",
    "content": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "originalSentence": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "position": 5446,
    "id": "window_5446"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 7.0\n    - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 7.0\n    - v22.",
    "position": 5447,
    "id": "window_5447"
  },
  {
    "type": "window",
    "content": "- version:\n    - v23. 7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "originalSentence": "- version:\n    - v23. 7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "position": 5448,
    "id": "window_5448"
  },
  {
    "type": "window",
    "content": "7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22.",
    "originalSentence": "7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22.",
    "position": 5449,
    "id": "window_5449"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "position": 5450,
    "id": "window_5450"
  },
  {
    "type": "window",
    "content": "- version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "originalSentence": "- version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "position": 5451,
    "id": "window_5451"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.",
    "position": 5452,
    "id": "window_5452"
  },
  {
    "type": "window",
    "content": "-->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "originalSentence": "-->\n\n* `pattern` {string|string\\[]}\n\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "position": 5453,
    "id": "window_5453"
  },
  {
    "type": "window",
    "content": "**Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "originalSentence": "**Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "position": 5454,
    "id": "window_5454"
  },
  {
    "type": "window",
    "content": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.",
    "originalSentence": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.",
    "position": 5455,
    "id": "window_5455"
  },
  {
    "type": "window",
    "content": "If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "originalSentence": "If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "position": 5456,
    "id": "window_5456"
  },
  {
    "type": "window",
    "content": "**Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "originalSentence": "**Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "position": 5457,
    "id": "window_5457"
  },
  {
    "type": "window",
    "content": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern.",
    "originalSentence": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern.",
    "position": 5458,
    "id": "window_5458"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern. ```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*.",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern. ```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*.",
    "position": 5459,
    "id": "window_5459"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern. ```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\n* Retrieves the files matching the specified pattern. ```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "position": 5460,
    "id": "window_5460"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*.",
    "originalSentence": "```mjs\nimport { glob } from 'node:fs';\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*.",
    "position": 5461,
    "id": "window_5461"
  },
  {
    "type": "window",
    "content": "js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console.",
    "position": 5462,
    "id": "window_5462"
  },
  {
    "type": "window",
    "content": "log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n### `fs.",
    "originalSentence": "log(matches);\n});\n```\n\n```cjs\nconst { glob } = require('node:fs');\n\nglob('**/*. js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n### `fs.",
    "position": 5463,
    "id": "window_5463"
  },
  {
    "type": "window",
    "content": "js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n### `fs. lchmod(path, mode, callback)`\n\n<!",
    "originalSentence": "js', (err, matches) => {\n  if (err) throw err;\n  console. log(matches);\n});\n```\n\n### `fs. lchmod(path, mode, callback)`\n\n<!",
    "position": 5464,
    "id": "window_5464"
  },
  {
    "type": "window",
    "content": "log(matches);\n});\n```\n\n### `fs. lchmod(path, mode, callback)`\n\n<! -- YAML\ndeprecated: v0.",
    "originalSentence": "log(matches);\n});\n```\n\n### `fs. lchmod(path, mode, callback)`\n\n<! -- YAML\ndeprecated: v0.",
    "position": 5465,
    "id": "window_5465"
  },
  {
    "type": "window",
    "content": "lchmod(path, mode, callback)`\n\n<! -- YAML\ndeprecated: v0. 4.7\nchanges:\n  - version: v18.",
    "originalSentence": "lchmod(path, mode, callback)`\n\n<! -- YAML\ndeprecated: v0. 4.7\nchanges:\n  - version: v18.",
    "position": 5466,
    "id": "window_5466"
  },
  {
    "type": "window",
    "content": "-- YAML\ndeprecated: v0. 4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\ndeprecated: v0. 4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5467,
    "id": "window_5467"
  },
  {
    "type": "window",
    "content": "4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "originalSentence": "4.7\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "position": 5468,
    "id": "window_5468"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 5469,
    "id": "window_5469"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10.",
    "position": 5470,
    "id": "window_5470"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5471,
    "id": "window_5471"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5472,
    "id": "window_5472"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5473,
    "id": "window_5473"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5474,
    "id": "window_5474"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5475,
    "id": "window_5475"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link.",
    "position": 5476,
    "id": "window_5476"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 5477,
    "id": "window_5477"
  },
  {
    "type": "window",
    "content": "-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback. This method is only implemented on macOS.",
    "originalSentence": "-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nChanges the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback. This method is only implemented on macOS.",
    "position": 5478,
    "id": "window_5478"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible\nexception are given to the completion callback. This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail.",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback. This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail.",
    "position": 5479,
    "id": "window_5479"
  },
  {
    "type": "window",
    "content": "This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail. ### `fs.",
    "originalSentence": "This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail. ### `fs.",
    "position": 5480,
    "id": "window_5480"
  },
  {
    "type": "window",
    "content": "See the POSIX lchmod(2) documentation for more detail. ### `fs. lchown(path, uid, gid, callback)`\n\n<!",
    "originalSentence": "See the POSIX lchmod(2) documentation for more detail. ### `fs. lchown(path, uid, gid, callback)`\n\n<!",
    "position": 5481,
    "id": "window_5481"
  },
  {
    "type": "window",
    "content": "### `fs. lchown(path, uid, gid, callback)`\n\n<! -- YAML\nchanges:\n  - version: v18.",
    "originalSentence": "### `fs. lchown(path, uid, gid, callback)`\n\n<! -- YAML\nchanges:\n  - version: v18.",
    "position": 5482,
    "id": "window_5482"
  },
  {
    "type": "window",
    "content": "lchown(path, uid, gid, callback)`\n\n<! -- YAML\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "lchown(path, uid, gid, callback)`\n\n<! -- YAML\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5483,
    "id": "window_5483"
  },
  {
    "type": "window",
    "content": "-- YAML\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "-- YAML\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5484,
    "id": "window_5484"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "position": 5485,
    "id": "window_5485"
  },
  {
    "type": "window",
    "content": "- version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v10.",
    "originalSentence": "- version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v10.",
    "position": 5486,
    "id": "window_5486"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5487,
    "id": "window_5487"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5488,
    "id": "window_5488"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5489,
    "id": "window_5489"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5490,
    "id": "window_5490"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5491,
    "id": "window_5491"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v0.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v0.",
    "position": 5492,
    "id": "window_5492"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v0. 4.7\n    description: Documentation-only deprecation.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v0. 4.7\n    description: Documentation-only deprecation.",
    "position": 5493,
    "id": "window_5493"
  },
  {
    "type": "window",
    "content": "- version: v0. 4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link.",
    "originalSentence": "- version: v0. 4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link.",
    "position": 5494,
    "id": "window_5494"
  },
  {
    "type": "window",
    "content": "4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 5495,
    "id": "window_5495"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link. No arguments other than a possible\nexception are given to the completion callback. See the POSIX lchown(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}\n\nSet the owner of the symbolic link. No arguments other than a possible\nexception are given to the completion callback. See the POSIX lchown(2) documentation for more detail.",
    "position": 5496,
    "id": "window_5496"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible\nexception are given to the completion callback. See the POSIX lchown(2) documentation for more detail. ### `fs.",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback. See the POSIX lchown(2) documentation for more detail. ### `fs.",
    "position": 5497,
    "id": "window_5497"
  },
  {
    "type": "window",
    "content": "See the POSIX lchown(2) documentation for more detail. ### `fs. lutimes(path, atime, mtime, callback)`\n\n<!",
    "originalSentence": "See the POSIX lchown(2) documentation for more detail. ### `fs. lutimes(path, atime, mtime, callback)`\n\n<!",
    "position": 5498,
    "id": "window_5498"
  },
  {
    "type": "window",
    "content": "### `fs. lutimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded:\n  - v14.",
    "originalSentence": "### `fs. lutimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded:\n  - v14.",
    "position": 5499,
    "id": "window_5499"
  },
  {
    "type": "window",
    "content": "lutimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded:\n  - v14. 5.0\n  - v12.",
    "originalSentence": "lutimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded:\n  - v14. 5.0\n  - v12.",
    "position": 5500,
    "id": "window_5500"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 5.0\n  - v12. 19.0\nchanges:\n  - version: v18.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 5.0\n  - v12. 19.0\nchanges:\n  - version: v18.",
    "position": 5501,
    "id": "window_5501"
  },
  {
    "type": "window",
    "content": "5.0\n  - v12. 19.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "5.0\n  - v12. 19.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5502,
    "id": "window_5502"
  },
  {
    "type": "window",
    "content": "19.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs.",
    "originalSentence": "19.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs.",
    "position": 5503,
    "id": "window_5503"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs. utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs. utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.",
    "position": 5504,
    "id": "window_5504"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs. utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed. No arguments other than a possible exception are given to the completion\ncallback.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChanges the access and modification times of a file in the same way as\n[`fs. utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed. No arguments other than a possible exception are given to the completion\ncallback.",
    "position": 5505,
    "id": "window_5505"
  },
  {
    "type": "window",
    "content": "utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed. No arguments other than a possible exception are given to the completion\ncallback. ### `fs.",
    "originalSentence": "utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed. No arguments other than a possible exception are given to the completion\ncallback. ### `fs.",
    "position": 5506,
    "id": "window_5506"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are given to the completion\ncallback. ### `fs. link(existingPath, newPath, callback)`\n\n<!",
    "originalSentence": "No arguments other than a possible exception are given to the completion\ncallback. ### `fs. link(existingPath, newPath, callback)`\n\n<!",
    "position": 5507,
    "id": "window_5507"
  },
  {
    "type": "window",
    "content": "### `fs. link(existingPath, newPath, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. link(existingPath, newPath, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5508,
    "id": "window_5508"
  },
  {
    "type": "window",
    "content": "link(existingPath, newPath, callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "originalSentence": "link(existingPath, newPath, callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "position": 5509,
    "id": "window_5509"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5510,
    "id": "window_5510"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5511,
    "id": "window_5511"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5512,
    "id": "window_5512"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5513,
    "id": "window_5513"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5514,
    "id": "window_5514"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "position": 5515,
    "id": "window_5515"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.",
    "position": 5516,
    "id": "window_5516"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*. - version: v7.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*. - version: v7.",
    "position": 5517,
    "id": "window_5517"
  },
  {
    "type": "window",
    "content": "Support is currently\n                 still *experimental*. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Support is currently\n                 still *experimental*. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5518,
    "id": "window_5518"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5519,
    "id": "window_5519"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "position": 5520,
    "id": "window_5520"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "position": 5521,
    "id": "window_5521"
  },
  {
    "type": "window",
    "content": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 5522,
    "id": "window_5522"
  },
  {
    "type": "window",
    "content": "See the POSIX\nlink(2) documentation for more detail. No arguments other than a possible\nexception are given to the completion callback. ### `fs.",
    "originalSentence": "See the POSIX\nlink(2) documentation for more detail. No arguments other than a possible\nexception are given to the completion callback. ### `fs.",
    "position": 5523,
    "id": "window_5523"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible\nexception are given to the completion callback. ### `fs. lstat(path[, options], callback)`\n\n<!",
    "originalSentence": "No arguments other than a possible\nexception are given to the completion callback. ### `fs. lstat(path[, options], callback)`\n\n<!",
    "position": 5524,
    "id": "window_5524"
  },
  {
    "type": "window",
    "content": "### `fs. lstat(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. lstat(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5525,
    "id": "window_5525"
  },
  {
    "type": "window",
    "content": "lstat(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18.",
    "originalSentence": "lstat(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18.",
    "position": 5526,
    "id": "window_5526"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5527,
    "id": "window_5527"
  },
  {
    "type": "window",
    "content": "1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.30\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5528,
    "id": "window_5528"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 5529,
    "id": "window_5529"
  },
  {
    "type": "window",
    "content": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10.",
    "originalSentence": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10.",
    "position": 5530,
    "id": "window_5530"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5531,
    "id": "window_5531"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5532,
    "id": "window_5532"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5533,
    "id": "window_5533"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5534,
    "id": "window_5534"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5535,
    "id": "window_5535"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5536,
    "id": "window_5536"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5537,
    "id": "window_5537"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 5538,
    "id": "window_5538"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 5539,
    "id": "window_5539"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 5540,
    "id": "window_5540"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 5541,
    "id": "window_5541"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nRetrieves the {fs.",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nRetrieves the {fs.",
    "position": 5542,
    "id": "window_5542"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by the path.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by the path.",
    "position": 5543,
    "id": "window_5543"
  },
  {
    "type": "window",
    "content": "Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by the path. The callback gets two arguments `(err, stats)` where `stats` is a {fs.",
    "originalSentence": "Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by the path. The callback gets two arguments `(err, stats)` where `stats` is a {fs.",
    "position": 5544,
    "id": "window_5544"
  },
  {
    "type": "window",
    "content": "Stats} for the symbolic link referred to by the path. The callback gets two arguments `(err, stats)` where `stats` is a {fs. Stats}\nobject.",
    "originalSentence": "Stats} for the symbolic link referred to by the path. The callback gets two arguments `(err, stats)` where `stats` is a {fs. Stats}\nobject.",
    "position": 5545,
    "id": "window_5545"
  },
  {
    "type": "window",
    "content": "The callback gets two arguments `(err, stats)` where `stats` is a {fs. Stats}\nobject. `lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to.",
    "originalSentence": "The callback gets two arguments `(err, stats)` where `stats` is a {fs. Stats}\nobject. `lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to.",
    "position": 5546,
    "id": "window_5546"
  },
  {
    "type": "window",
    "content": "Stats}\nobject. `lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to. See the POSIX lstat(2) documentation for more details.",
    "originalSentence": "Stats}\nobject. `lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to. See the POSIX lstat(2) documentation for more details.",
    "position": 5547,
    "id": "window_5547"
  },
  {
    "type": "window",
    "content": "`lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to. See the POSIX lstat(2) documentation for more details. ### `fs.",
    "originalSentence": "`lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to. See the POSIX lstat(2) documentation for more details. ### `fs.",
    "position": 5548,
    "id": "window_5548"
  },
  {
    "type": "window",
    "content": "See the POSIX lstat(2) documentation for more details. ### `fs. mkdir(path[, options], callback)`\n\n<!",
    "originalSentence": "See the POSIX lstat(2) documentation for more details. ### `fs. mkdir(path[, options], callback)`\n\n<!",
    "position": 5549,
    "id": "window_5549"
  },
  {
    "type": "window",
    "content": "### `fs. mkdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. mkdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5550,
    "id": "window_5550"
  },
  {
    "type": "window",
    "content": "mkdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.8\nchanges:\n  - version: v18.",
    "originalSentence": "mkdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.8\nchanges:\n  - version: v18.",
    "position": 5551,
    "id": "window_5551"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.8\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.8\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5552,
    "id": "window_5552"
  },
  {
    "type": "window",
    "content": "1.8\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13.",
    "originalSentence": "1.8\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13.",
    "position": 5553,
    "id": "window_5553"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13. 11.0\n     - v12.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13. 11.0\n     - v12.",
    "position": 5554,
    "id": "window_5554"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument.",
    "originalSentence": "- version:\n     - v13. 11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument.",
    "position": 5555,
    "id": "window_5555"
  },
  {
    "type": "window",
    "content": "11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument. - version: v10.",
    "originalSentence": "11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument. - version: v10.",
    "position": 5556,
    "id": "window_5556"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument. - version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument. - version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "position": 5557,
    "id": "window_5557"
  },
  {
    "type": "window",
    "content": "- version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v10.",
    "originalSentence": "- version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v10.",
    "position": 5558,
    "id": "window_5558"
  },
  {
    "type": "window",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5559,
    "id": "window_5559"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5560,
    "id": "window_5560"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5561,
    "id": "window_5561"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5562,
    "id": "window_5562"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5563,
    "id": "window_5563"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5564,
    "id": "window_5564"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5565,
    "id": "window_5565"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "position": 5566,
    "id": "window_5566"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.",
    "position": 5567,
    "id": "window_5567"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`. * `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`. * `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`.",
    "position": 5568,
    "id": "window_5568"
  },
  {
    "type": "window",
    "content": "**Default:** `0o777`. * `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`. Asynchronously creates a directory.",
    "originalSentence": "**Default:** `0o777`. * `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`. Asynchronously creates a directory.",
    "position": 5569,
    "id": "window_5569"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`. Asynchronously creates a directory. The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`. Asynchronously creates a directory. The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`.",
    "position": 5570,
    "id": "window_5570"
  },
  {
    "type": "window",
    "content": "Asynchronously creates a directory. The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`. `path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created).",
    "originalSentence": "Asynchronously creates a directory. The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`. `path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created).",
    "position": 5571,
    "id": "window_5571"
  },
  {
    "type": "window",
    "content": "The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`. `path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created). The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "originalSentence": "The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`. `path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created). The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created.",
    "position": 5572,
    "id": "window_5572"
  },
  {
    "type": "window",
    "content": "`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created). The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fs.",
    "originalSentence": "`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created). The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fs.",
    "position": 5573,
    "id": "window_5573"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fs. mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false.",
    "originalSentence": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fs. mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false.",
    "position": 5574,
    "id": "window_5574"
  },
  {
    "type": "window",
    "content": "Calling\n`fs. mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false. If `recursive` is false and the directory exists,\nan `EEXIST` error occurs.",
    "originalSentence": "Calling\n`fs. mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false. If `recursive` is false and the directory exists,\nan `EEXIST` error occurs.",
    "position": 5575,
    "id": "window_5575"
  },
  {
    "type": "window",
    "content": "mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false. If `recursive` is false and the directory exists,\nan `EEXIST` error occurs. ```mjs\nimport { mkdir } from 'node:fs';\n\n// Create .",
    "originalSentence": "mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false. If `recursive` is false and the directory exists,\nan `EEXIST` error occurs. ```mjs\nimport { mkdir } from 'node:fs';\n\n// Create .",
    "position": 5576,
    "id": "window_5576"
  },
  {
    "type": "window",
    "content": "If `recursive` is false and the directory exists,\nan `EEXIST` error occurs. ```mjs\nimport { mkdir } from 'node:fs';\n\n// Create . /tmp/a/apple, regardless of whether .",
    "originalSentence": "If `recursive` is false and the directory exists,\nan `EEXIST` error occurs. ```mjs\nimport { mkdir } from 'node:fs';\n\n// Create . /tmp/a/apple, regardless of whether .",
    "position": 5577,
    "id": "window_5577"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { mkdir } from 'node:fs';\n\n// Create . /tmp/a/apple, regardless of whether . /tmp and .",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs';\n\n// Create . /tmp/a/apple, regardless of whether . /tmp and .",
    "position": 5578,
    "id": "window_5578"
  },
  {
    "type": "window",
    "content": "/tmp/a/apple, regardless of whether . /tmp and . /tmp/a exist.",
    "originalSentence": "/tmp/a/apple, regardless of whether . /tmp and . /tmp/a exist.",
    "position": 5579,
    "id": "window_5579"
  },
  {
    "type": "window",
    "content": "/tmp/a exist. mkdir('. /tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs.",
    "originalSentence": "/tmp/a exist. mkdir('. /tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs.",
    "position": 5580,
    "id": "window_5580"
  },
  {
    "type": "window",
    "content": "mkdir('. /tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs. mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details.",
    "originalSentence": "mkdir('. /tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs. mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details.",
    "position": 5581,
    "id": "window_5581"
  },
  {
    "type": "window",
    "content": "/tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs. mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details. ### `fs.",
    "originalSentence": "/tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs. mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details. ### `fs.",
    "position": 5582,
    "id": "window_5582"
  },
  {
    "type": "window",
    "content": "mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details. ### `fs. mkdtemp(prefix[, options], callback)`\n\n<!",
    "originalSentence": "mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```mjs\nimport { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX mkdir(2) documentation for more details. ### `fs. mkdtemp(prefix[, options], callback)`\n\n<!",
    "position": 5583,
    "id": "window_5583"
  },
  {
    "type": "window",
    "content": "### `fs. mkdtemp(prefix[, options], callback)`\n\n<! -- YAML\nadded: v5.",
    "originalSentence": "### `fs. mkdtemp(prefix[, options], callback)`\n\n<! -- YAML\nadded: v5.",
    "position": 5584,
    "id": "window_5584"
  },
  {
    "type": "window",
    "content": "mkdtemp(prefix[, options], callback)`\n\n<! -- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "mkdtemp(prefix[, options], callback)`\n\n<! -- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20.",
    "position": 5585,
    "id": "window_5585"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18.",
    "position": 5586,
    "id": "window_5586"
  },
  {
    "type": "window",
    "content": "10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "originalSentence": "10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "position": 5587,
    "id": "window_5587"
  },
  {
    "type": "window",
    "content": "6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version: v18.",
    "originalSentence": "6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version: v18.",
    "position": 5588,
    "id": "window_5588"
  },
  {
    "type": "window",
    "content": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5589,
    "id": "window_5589"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v16.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v16.",
    "position": 5590,
    "id": "window_5590"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v16. 5.0\n      - v14.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n      - v16. 5.0\n      - v14.",
    "position": 5591,
    "id": "window_5591"
  },
  {
    "type": "window",
    "content": "- version:\n      - v16. 5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "originalSentence": "- version:\n      - v16. 5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "position": 5592,
    "id": "window_5592"
  },
  {
    "type": "window",
    "content": "5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. - version: v10.",
    "originalSentence": "5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. - version: v10.",
    "position": 5593,
    "id": "window_5593"
  },
  {
    "type": "window",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5594,
    "id": "window_5594"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5595,
    "id": "window_5595"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5596,
    "id": "window_5596"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5597,
    "id": "window_5597"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5598,
    "id": "window_5598"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6.",
    "position": 5599,
    "id": "window_5599"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6. 2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6. 2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now.",
    "position": 5600,
    "id": "window_5600"
  },
  {
    "type": "window",
    "content": "- version: v6. 2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory.",
    "originalSentence": "- version: v6. 2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory.",
    "position": 5601,
    "id": "window_5601"
  },
  {
    "type": "window",
    "content": "2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory. Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory.",
    "originalSentence": "2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory. Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory.",
    "position": 5602,
    "id": "window_5602"
  },
  {
    "type": "window",
    "content": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory. Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory. Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`.",
    "originalSentence": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}\n\nCreates a unique temporary directory. Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory. Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`.",
    "position": 5603,
    "id": "window_5603"
  },
  {
    "type": "window",
    "content": "Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory. Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters.",
    "originalSentence": "Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory. Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters.",
    "position": 5604,
    "id": "window_5604"
  },
  {
    "type": "window",
    "content": "Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters. The created directory path is passed as a string to the callback's second\nparameter.",
    "originalSentence": "Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters. The created directory path is passed as a string to the callback's second\nparameter.",
    "position": 5605,
    "id": "window_5605"
  },
  {
    "type": "window",
    "content": "Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters. The created directory path is passed as a string to the callback's second\nparameter. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters. The created directory path is passed as a string to the callback's second\nparameter. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 5606,
    "id": "window_5606"
  },
  {
    "type": "window",
    "content": "The created directory path is passed as a string to the callback's second\nparameter. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "The created directory path is passed as a string to the callback's second\nparameter. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.",
    "position": 5607,
    "id": "window_5607"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...",
    "position": 5608,
    "id": "window_5608"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\... \\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs.",
    "originalSentence": "```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\... \\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs.",
    "position": 5609,
    "id": "window_5609"
  },
  {
    "type": "window",
    "content": "log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\... \\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs. mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string.",
    "originalSentence": "log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\... \\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs. mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string.",
    "position": 5610,
    "id": "window_5610"
  },
  {
    "type": "window",
    "content": "\\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs. mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string. For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path').",
    "originalSentence": "\\AppData\\Local\\Temp\\foo-itXde2\n});\n```\n\nThe `fs. mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string. For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path').",
    "position": 5611,
    "id": "window_5611"
  },
  {
    "type": "window",
    "content": "mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string. For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path'). sep`).",
    "originalSentence": "mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string. For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path'). sep`).",
    "position": 5612,
    "id": "window_5612"
  },
  {
    "type": "window",
    "content": "For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path'). sep`). ```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path'). sep`). ```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.",
    "position": 5613,
    "id": "window_5613"
  },
  {
    "type": "window",
    "content": "sep`). ```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmpabc123`.",
    "originalSentence": "sep`). ```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmpabc123`.",
    "position": 5614,
    "id": "window_5614"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmpabc123`. // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.",
    "originalSentence": "```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmpabc123`. // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.",
    "position": 5615,
    "id": "window_5615"
  },
  {
    "type": "window",
    "content": "log(directory);\n  // Will print something similar to `/tmpabc123`. // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory. });\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "log(directory);\n  // Will print something similar to `/tmpabc123`. // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory. });\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.",
    "position": 5616,
    "id": "window_5616"
  },
  {
    "type": "window",
    "content": "// A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory. });\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmp/abc123`.",
    "originalSentence": "// A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory. });\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmp/abc123`.",
    "position": 5617,
    "id": "window_5617"
  },
  {
    "type": "window",
    "content": "});\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmp/abc123`. // A new temporary directory is created within\n  // the /tmp directory.",
    "originalSentence": "});\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console. log(directory);\n  // Will print something similar to `/tmp/abc123`. // A new temporary directory is created within\n  // the /tmp directory.",
    "position": 5618,
    "id": "window_5618"
  },
  {
    "type": "window",
    "content": "log(directory);\n  // Will print something similar to `/tmp/abc123`. // A new temporary directory is created within\n  // the /tmp directory. });\n```\n\n### `fs.",
    "originalSentence": "log(directory);\n  // Will print something similar to `/tmp/abc123`. // A new temporary directory is created within\n  // the /tmp directory. });\n```\n\n### `fs.",
    "position": 5619,
    "id": "window_5619"
  },
  {
    "type": "window",
    "content": "// A new temporary directory is created within\n  // the /tmp directory. });\n```\n\n### `fs. open(path[, flags[, mode]], callback)`\n\n<!",
    "originalSentence": "// A new temporary directory is created within\n  // the /tmp directory. });\n```\n\n### `fs. open(path[, flags[, mode]], callback)`\n\n<!",
    "position": 5620,
    "id": "window_5620"
  },
  {
    "type": "window",
    "content": "});\n```\n\n### `fs. open(path[, flags[, mode]], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "});\n```\n\n### `fs. open(path[, flags[, mode]], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5621,
    "id": "window_5621"
  },
  {
    "type": "window",
    "content": "open(path[, flags[, mode]], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "open(path[, flags[, mode]], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 5622,
    "id": "window_5622"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5623,
    "id": "window_5623"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v11.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v11.",
    "position": 5624,
    "id": "window_5624"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "position": 5625,
    "id": "window_5625"
  },
  {
    "type": "window",
    "content": "- version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9.",
    "originalSentence": "- version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9.",
    "position": 5626,
    "id": "window_5626"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "position": 5627,
    "id": "window_5627"
  },
  {
    "type": "window",
    "content": "- version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7.",
    "originalSentence": "- version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7.",
    "position": 5628,
    "id": "window_5628"
  },
  {
    "type": "window",
    "content": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5629,
    "id": "window_5629"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].",
    "position": 5630,
    "id": "window_5630"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`.",
    "position": 5631,
    "id": "window_5631"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`. * `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][]. **Default:** `'r'`. * `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open.",
    "position": 5632,
    "id": "window_5632"
  },
  {
    "type": "window",
    "content": "**Default:** `'r'`. * `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open. See the POSIX open(2) documentation for more details.",
    "originalSentence": "**Default:** `'r'`. * `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open. See the POSIX open(2) documentation for more details.",
    "position": 5633,
    "id": "window_5633"
  },
  {
    "type": "window",
    "content": "* `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open. See the POSIX open(2) documentation for more details. `mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated.",
    "originalSentence": "* `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}\n\nAsynchronous file open. See the POSIX open(2) documentation for more details. `mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated.",
    "position": 5634,
    "id": "window_5634"
  },
  {
    "type": "window",
    "content": "See the POSIX open(2) documentation for more details. `mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated. On Windows, only the write permission can be manipulated; see\n[`fs.",
    "originalSentence": "See the POSIX open(2) documentation for more details. `mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated. On Windows, only the write permission can be manipulated; see\n[`fs.",
    "position": 5635,
    "id": "window_5635"
  },
  {
    "type": "window",
    "content": "`mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated. On Windows, only the write permission can be manipulated; see\n[`fs. chmod()`][].",
    "originalSentence": "`mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated. On Windows, only the write permission can be manipulated; see\n[`fs. chmod()`][].",
    "position": 5636,
    "id": "window_5636"
  },
  {
    "type": "window",
    "content": "On Windows, only the write permission can be manipulated; see\n[`fs. chmod()`][]. The callback gets two arguments `(err, fd)`.",
    "originalSentence": "On Windows, only the write permission can be manipulated; see\n[`fs. chmod()`][]. The callback gets two arguments `(err, fd)`.",
    "position": 5637,
    "id": "window_5637"
  },
  {
    "type": "window",
    "content": "chmod()`][]. The callback gets two arguments `(err, fd)`. Some characters (`< > : \" / \\ | ?",
    "originalSentence": "chmod()`][]. The callback gets two arguments `(err, fd)`. Some characters (`< > : \" / \\ | ?",
    "position": 5638,
    "id": "window_5638"
  },
  {
    "type": "window",
    "content": "The callback gets two arguments `(err, fd)`. Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "originalSentence": "The callback gets two arguments `(err, fd)`. Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][].",
    "position": 5639,
    "id": "window_5639"
  },
  {
    "type": "window",
    "content": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.",
    "originalSentence": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.",
    "position": 5640,
    "id": "window_5640"
  },
  {
    "type": "window",
    "content": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "originalSentence": "*`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "position": 5641,
    "id": "window_5641"
  },
  {
    "type": "window",
    "content": "Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. Functions based on `fs.",
    "originalSentence": "Under NTFS, if the filename contains\na colon, Node. js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. Functions based on `fs.",
    "position": 5642,
    "id": "window_5642"
  },
  {
    "type": "window",
    "content": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. Functions based on `fs. open()` exhibit this behavior as well:\n`fs.",
    "originalSentence": "js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams]. Functions based on `fs. open()` exhibit this behavior as well:\n`fs.",
    "position": 5643,
    "id": "window_5643"
  },
  {
    "type": "window",
    "content": "Functions based on `fs. open()` exhibit this behavior as well:\n`fs. writeFile()`, `fs.",
    "originalSentence": "Functions based on `fs. open()` exhibit this behavior as well:\n`fs. writeFile()`, `fs.",
    "position": 5644,
    "id": "window_5644"
  },
  {
    "type": "window",
    "content": "open()` exhibit this behavior as well:\n`fs. writeFile()`, `fs. readFile()`, etc.",
    "originalSentence": "open()` exhibit this behavior as well:\n`fs. writeFile()`, `fs. readFile()`, etc.",
    "position": 5645,
    "id": "window_5645"
  },
  {
    "type": "window",
    "content": "readFile()`, etc. ### `fs. openAsBlob(path[, options])`\n\n<!",
    "originalSentence": "readFile()`, etc. ### `fs. openAsBlob(path[, options])`\n\n<!",
    "position": 5646,
    "id": "window_5646"
  },
  {
    "type": "window",
    "content": "### `fs. openAsBlob(path[, options])`\n\n<! -- YAML\nadded: v19.",
    "originalSentence": "### `fs. openAsBlob(path[, options])`\n\n<! -- YAML\nadded: v19.",
    "position": 5647,
    "id": "window_5647"
  },
  {
    "type": "window",
    "content": "openAsBlob(path[, options])`\n\n<! -- YAML\nadded: v19. 8.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "openAsBlob(path[, options])`\n\n<! -- YAML\nadded: v19. 8.0\nchanges:\n  - version:\n      - v24.",
    "position": 5648,
    "id": "window_5648"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v19. 8.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22.",
    "originalSentence": "-- YAML\nadded: v19. 8.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22.",
    "position": 5649,
    "id": "window_5649"
  },
  {
    "type": "window",
    "content": "8.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "8.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 5650,
    "id": "window_5650"
  },
  {
    "type": "window",
    "content": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob.",
    "originalSentence": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob.",
    "position": 5651,
    "id": "window_5651"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob. * Returns: {Promise} Fulfills with a {Blob} upon success.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob. * Returns: {Promise} Fulfills with a {Blob} upon success.",
    "position": 5652,
    "id": "window_5652"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob. * Returns: {Promise} Fulfills with a {Blob} upon success. Returns a {Blob} whose data is backed by the given file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob. * Returns: {Promise} Fulfills with a {Blob} upon success. Returns a {Blob} whose data is backed by the given file.",
    "position": 5653,
    "id": "window_5653"
  },
  {
    "type": "window",
    "content": "* Returns: {Promise} Fulfills with a {Blob} upon success. Returns a {Blob} whose data is backed by the given file. The file must not be modified after the {Blob} is created.",
    "originalSentence": "* Returns: {Promise} Fulfills with a {Blob} upon success. Returns a {Blob} whose data is backed by the given file. The file must not be modified after the {Blob} is created.",
    "position": 5654,
    "id": "window_5654"
  },
  {
    "type": "window",
    "content": "Returns a {Blob} whose data is backed by the given file. The file must not be modified after the {Blob} is created. Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error.",
    "originalSentence": "Returns a {Blob} whose data is backed by the given file. The file must not be modified after the {Blob} is created. Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error.",
    "position": 5655,
    "id": "window_5655"
  },
  {
    "type": "window",
    "content": "The file must not be modified after the {Blob} is created. Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error. Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk.",
    "originalSentence": "The file must not be modified after the {Blob} is created. Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error. Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk.",
    "position": 5656,
    "id": "window_5656"
  },
  {
    "type": "window",
    "content": "Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error. Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk. ```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the.",
    "originalSentence": "Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error. Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk. ```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the.",
    "position": 5657,
    "id": "window_5657"
  },
  {
    "type": "window",
    "content": "Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk. ```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the. file.",
    "originalSentence": "Synchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk. ```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the. file.",
    "position": 5658,
    "id": "window_5658"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the. file. txt');\nconst ab = await blob.",
    "originalSentence": "```mjs\nimport { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the. file. txt');\nconst ab = await blob.",
    "position": 5659,
    "id": "window_5659"
  },
  {
    "type": "window",
    "content": "file. txt');\nconst ab = await blob. arrayBuffer();\nblob.",
    "originalSentence": "file. txt');\nconst ab = await blob. arrayBuffer();\nblob.",
    "position": 5660,
    "id": "window_5660"
  },
  {
    "type": "window",
    "content": "txt');\nconst ab = await blob. arrayBuffer();\nblob. stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the.",
    "originalSentence": "txt');\nconst ab = await blob. arrayBuffer();\nblob. stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the.",
    "position": 5661,
    "id": "window_5661"
  },
  {
    "type": "window",
    "content": "arrayBuffer();\nblob. stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the. file.",
    "originalSentence": "arrayBuffer();\nblob. stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the. file.",
    "position": 5662,
    "id": "window_5662"
  },
  {
    "type": "window",
    "content": "stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the. file. txt');\n  const ab = await blob.",
    "originalSentence": "stream();\n```\n\n```cjs\nconst { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the. file. txt');\n  const ab = await blob.",
    "position": 5663,
    "id": "window_5663"
  },
  {
    "type": "window",
    "content": "file. txt');\n  const ab = await blob. arrayBuffer();\n  blob.",
    "originalSentence": "file. txt');\n  const ab = await blob. arrayBuffer();\n  blob.",
    "position": 5664,
    "id": "window_5664"
  },
  {
    "type": "window",
    "content": "txt');\n  const ab = await blob. arrayBuffer();\n  blob. stream();\n})();\n```\n\n### `fs.",
    "originalSentence": "txt');\n  const ab = await blob. arrayBuffer();\n  blob. stream();\n})();\n```\n\n### `fs.",
    "position": 5665,
    "id": "window_5665"
  },
  {
    "type": "window",
    "content": "arrayBuffer();\n  blob. stream();\n})();\n```\n\n### `fs. opendir(path[, options], callback)`\n\n<!",
    "originalSentence": "arrayBuffer();\n  blob. stream();\n})();\n```\n\n### `fs. opendir(path[, options], callback)`\n\n<!",
    "position": 5666,
    "id": "window_5666"
  },
  {
    "type": "window",
    "content": "stream();\n})();\n```\n\n### `fs. opendir(path[, options], callback)`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "stream();\n})();\n```\n\n### `fs. opendir(path[, options], callback)`\n\n<! -- YAML\nadded: v12.",
    "position": 5667,
    "id": "window_5667"
  },
  {
    "type": "window",
    "content": "opendir(path[, options], callback)`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "opendir(path[, options], callback)`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20.",
    "position": 5668,
    "id": "window_5668"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "position": 5669,
    "id": "window_5669"
  },
  {
    "type": "window",
    "content": "12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 5670,
    "id": "window_5670"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18.",
    "position": 5671,
    "id": "window_5671"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5672,
    "id": "window_5672"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13.",
    "position": 5673,
    "id": "window_5673"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13. 1.0\n     - v12.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version:\n     - v13. 1.0\n     - v12.",
    "position": 5674,
    "id": "window_5674"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "originalSentence": "- version:\n     - v13. 1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "position": 5675,
    "id": "window_5675"
  },
  {
    "type": "window",
    "content": "1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "originalSentence": "1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "position": 5676,
    "id": "window_5676"
  },
  {
    "type": "window",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage.",
    "position": 5677,
    "id": "window_5677"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs.",
    "position": 5678,
    "id": "window_5678"
  },
  {
    "type": "window",
    "content": "Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs. Dir}\n\nAsynchronously open a directory.",
    "originalSentence": "Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs. Dir}\n\nAsynchronously open a directory.",
    "position": 5679,
    "id": "window_5679"
  },
  {
    "type": "window",
    "content": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs. Dir}\n\nAsynchronously open a directory. See the POSIX opendir(3) documentation for\nmore details.",
    "originalSentence": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs. Dir}\n\nAsynchronously open a directory. See the POSIX opendir(3) documentation for\nmore details.",
    "position": 5680,
    "id": "window_5680"
  },
  {
    "type": "window",
    "content": "Dir}\n\nAsynchronously open a directory. See the POSIX opendir(3) documentation for\nmore details. Creates an {fs.",
    "originalSentence": "Dir}\n\nAsynchronously open a directory. See the POSIX opendir(3) documentation for\nmore details. Creates an {fs.",
    "position": 5681,
    "id": "window_5681"
  },
  {
    "type": "window",
    "content": "See the POSIX opendir(3) documentation for\nmore details. Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "See the POSIX opendir(3) documentation for\nmore details. Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 5682,
    "id": "window_5682"
  },
  {
    "type": "window",
    "content": "Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 5683,
    "id": "window_5683"
  },
  {
    "type": "window",
    "content": "Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs.",
    "originalSentence": "Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs.",
    "position": 5684,
    "id": "window_5684"
  },
  {
    "type": "window",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs. read(fd, buffer, offset, length, position, callback)`\n\n<!",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs. read(fd, buffer, offset, length, position, callback)`\n\n<!",
    "position": 5685,
    "id": "window_5685"
  },
  {
    "type": "window",
    "content": "### `fs. read(fd, buffer, offset, length, position, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. read(fd, buffer, offset, length, position, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5686,
    "id": "window_5686"
  },
  {
    "type": "window",
    "content": "read(fd, buffer, offset, length, position, callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "read(fd, buffer, offset, length, position, callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 5687,
    "id": "window_5687"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5688,
    "id": "window_5688"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5689,
    "id": "window_5689"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`.",
    "position": 5690,
    "id": "window_5690"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`. - version: v7.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`. - version: v7.",
    "position": 5691,
    "id": "window_5691"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "position": 5692,
    "id": "window_5692"
  },
  {
    "type": "window",
    "content": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v6.",
    "originalSentence": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v6.",
    "position": 5693,
    "id": "window_5693"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "position": 5694,
    "id": "window_5694"
  },
  {
    "type": "window",
    "content": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "originalSentence": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "position": 5695,
    "id": "window_5695"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `offset` {integer} The position in `buffer` to write the data to.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `offset` {integer} The position in `buffer` to write the data to.",
    "position": 5696,
    "id": "window_5696"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `offset` {integer} The position in `buffer` to write the data to. * `length` {integer} The number of bytes to read.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `offset` {integer} The position in `buffer` to write the data to. * `length` {integer} The number of bytes to read.",
    "position": 5697,
    "id": "window_5697"
  },
  {
    "type": "window",
    "content": "* `offset` {integer} The position in `buffer` to write the data to. * `length` {integer} The number of bytes to read. * `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file.",
    "originalSentence": "* `offset` {integer} The position in `buffer` to write the data to. * `length` {integer} The number of bytes to read. * `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file.",
    "position": 5698,
    "id": "window_5698"
  },
  {
    "type": "window",
    "content": "* `length` {integer} The number of bytes to read. * `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file. If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated.",
    "originalSentence": "* `length` {integer} The number of bytes to read. * `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file. If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated.",
    "position": 5699,
    "id": "window_5699"
  },
  {
    "type": "window",
    "content": "* `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file. If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated. If `position` is\n  a non-negative integer, the file position will be unchanged.",
    "originalSentence": "* `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file. If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated. If `position` is\n  a non-negative integer, the file position will be unchanged.",
    "position": 5700,
    "id": "window_5700"
  },
  {
    "type": "window",
    "content": "If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated. If `position` is\n  a non-negative integer, the file position will be unchanged. * `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`.",
    "originalSentence": "If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated. If `position` is\n  a non-negative integer, the file position will be unchanged. * `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`.",
    "position": 5701,
    "id": "window_5701"
  },
  {
    "type": "window",
    "content": "If `position` is\n  a non-negative integer, the file position will be unchanged. * `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`. The callback is given the three arguments, `(err, bytesRead, buffer)`.",
    "originalSentence": "If `position` is\n  a non-negative integer, the file position will be unchanged. * `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`. The callback is given the three arguments, `(err, bytesRead, buffer)`.",
    "position": 5702,
    "id": "window_5702"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`. The callback is given the three arguments, `(err, bytesRead, buffer)`. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nRead data from the file specified by `fd`. The callback is given the three arguments, `(err, bytesRead, buffer)`. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 5703,
    "id": "window_5703"
  },
  {
    "type": "window",
    "content": "The callback is given the three arguments, `(err, bytesRead, buffer)`. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. If this method is invoked as its [`util.",
    "originalSentence": "The callback is given the three arguments, `(err, bytesRead, buffer)`. If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. If this method is invoked as its [`util.",
    "position": 5704,
    "id": "window_5704"
  },
  {
    "type": "window",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero. If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties.",
    "position": 5705,
    "id": "window_5705"
  },
  {
    "type": "window",
    "content": "If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties. The `fs.",
    "originalSentence": "If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties. The `fs.",
    "position": 5706,
    "id": "window_5706"
  },
  {
    "type": "window",
    "content": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties. The `fs. read()` method reads data from the file specified\nby the file descriptor (`fd`).",
    "originalSentence": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties. The `fs. read()` method reads data from the file specified\nby the file descriptor (`fd`).",
    "position": 5707,
    "id": "window_5707"
  },
  {
    "type": "window",
    "content": "The `fs. read()` method reads data from the file specified\nby the file descriptor (`fd`). The `length` argument indicates the maximum number\nof bytes that Node.",
    "originalSentence": "The `fs. read()` method reads data from the file specified\nby the file descriptor (`fd`). The `length` argument indicates the maximum number\nof bytes that Node.",
    "position": 5708,
    "id": "window_5708"
  },
  {
    "type": "window",
    "content": "read()` method reads data from the file specified\nby the file descriptor (`fd`). The `length` argument indicates the maximum number\nof bytes that Node. js\nwill attempt to read from the kernel.",
    "originalSentence": "read()` method reads data from the file specified\nby the file descriptor (`fd`). The `length` argument indicates the maximum number\nof bytes that Node. js\nwill attempt to read from the kernel.",
    "position": 5709,
    "id": "window_5709"
  },
  {
    "type": "window",
    "content": "The `length` argument indicates the maximum number\nof bytes that Node. js\nwill attempt to read from the kernel. However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons.",
    "originalSentence": "The `length` argument indicates the maximum number\nof bytes that Node. js\nwill attempt to read from the kernel. However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons.",
    "position": 5710,
    "id": "window_5710"
  },
  {
    "type": "window",
    "content": "js\nwill attempt to read from the kernel. However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons. For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read.",
    "originalSentence": "js\nwill attempt to read from the kernel. However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons. For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read.",
    "position": 5711,
    "id": "window_5711"
  },
  {
    "type": "window",
    "content": "However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons. For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read. * If the file encounters EOF (End of File) before the buffer could\n  be filled, Node.",
    "originalSentence": "However, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons. For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read. * If the file encounters EOF (End of File) before the buffer could\n  be filled, Node.",
    "position": 5712,
    "id": "window_5712"
  },
  {
    "type": "window",
    "content": "For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read. * If the file encounters EOF (End of File) before the buffer could\n  be filled, Node. js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`.",
    "originalSentence": "For example:\n\n* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read. * If the file encounters EOF (End of File) before the buffer could\n  be filled, Node. js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`.",
    "position": 5713,
    "id": "window_5713"
  },
  {
    "type": "window",
    "content": "* If the file encounters EOF (End of File) before the buffer could\n  be filled, Node. js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`. * If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`.",
    "originalSentence": "* If the file encounters EOF (End of File) before the buffer could\n  be filled, Node. js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`. * If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`.",
    "position": 5714,
    "id": "window_5714"
  },
  {
    "type": "window",
    "content": "js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`. * If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`. Therefore, when using `fs.",
    "originalSentence": "js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`. * If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`. Therefore, when using `fs.",
    "position": 5715,
    "id": "window_5715"
  },
  {
    "type": "window",
    "content": "* If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`. Therefore, when using `fs. read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file.",
    "originalSentence": "* If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`. Therefore, when using `fs. read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file.",
    "position": 5716,
    "id": "window_5716"
  },
  {
    "type": "window",
    "content": "Therefore, when using `fs. read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file. Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes.",
    "originalSentence": "Therefore, when using `fs. read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file. Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes.",
    "position": 5717,
    "id": "window_5717"
  },
  {
    "type": "window",
    "content": "read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file. Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes. This behavior is similar to the POSIX `preadv2` function.",
    "originalSentence": "read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file. Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes. This behavior is similar to the POSIX `preadv2` function.",
    "position": 5718,
    "id": "window_5718"
  },
  {
    "type": "window",
    "content": "Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes. This behavior is similar to the POSIX `preadv2` function. ### `fs.",
    "originalSentence": "Depending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes. This behavior is similar to the POSIX `preadv2` function. ### `fs.",
    "position": 5719,
    "id": "window_5719"
  },
  {
    "type": "window",
    "content": "This behavior is similar to the POSIX `preadv2` function. ### `fs. read(fd[, options], callback)`\n\n<!",
    "originalSentence": "This behavior is similar to the POSIX `preadv2` function. ### `fs. read(fd[, options], callback)`\n\n<!",
    "position": 5720,
    "id": "window_5720"
  },
  {
    "type": "window",
    "content": "### `fs. read(fd[, options], callback)`\n\n<! -- YAML\nadded:\n - v13.",
    "originalSentence": "### `fs. read(fd[, options], callback)`\n\n<! -- YAML\nadded:\n - v13.",
    "position": 5721,
    "id": "window_5721"
  },
  {
    "type": "window",
    "content": "read(fd[, options], callback)`\n\n<! -- YAML\nadded:\n - v13. 11.0\n - v12.",
    "originalSentence": "read(fd[, options], callback)`\n\n<! -- YAML\nadded:\n - v13. 11.0\n - v12.",
    "position": 5722,
    "id": "window_5722"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v13. 11.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13. 11.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13.",
    "position": 5723,
    "id": "window_5723"
  },
  {
    "type": "window",
    "content": "11.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13. 11.0\n     - v12.",
    "originalSentence": "11.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13. 11.0\n     - v12.",
    "position": 5724,
    "id": "window_5724"
  },
  {
    "type": "window",
    "content": "17.0\nchanges:\n  - version:\n     - v13. 11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional.",
    "originalSentence": "17.0\nchanges:\n  - version:\n     - v13. 11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional.",
    "position": 5725,
    "id": "window_5725"
  },
  {
    "type": "window",
    "content": "11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer.",
    "originalSentence": "11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer.",
    "position": 5726,
    "id": "window_5726"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 5727,
    "id": "window_5727"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer. alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "position": 5728,
    "id": "window_5728"
  },
  {
    "type": "window",
    "content": "alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object.",
    "originalSentence": "alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object.",
    "position": 5729,
    "id": "window_5729"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "position": 5730,
    "id": "window_5730"
  },
  {
    "type": "window",
    "content": "read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values. ### `fs.",
    "originalSentence": "read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values. ### `fs.",
    "position": 5731,
    "id": "window_5731"
  },
  {
    "type": "window",
    "content": "If no `options` object is specified, it will default with the\nabove values. ### `fs. read(fd, buffer[, options], callback)`\n\n<!",
    "originalSentence": "If no `options` object is specified, it will default with the\nabove values. ### `fs. read(fd, buffer[, options], callback)`\n\n<!",
    "position": 5732,
    "id": "window_5732"
  },
  {
    "type": "window",
    "content": "### `fs. read(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18.",
    "originalSentence": "### `fs. read(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18.",
    "position": 5733,
    "id": "window_5733"
  },
  {
    "type": "window",
    "content": "read(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18. 2.0\n  - v16.",
    "originalSentence": "read(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18. 2.0\n  - v16.",
    "position": 5734,
    "id": "window_5734"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v18. 2.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "originalSentence": "-- YAML\nadded:\n  - v18. 2.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.",
    "position": 5735,
    "id": "window_5735"
  },
  {
    "type": "window",
    "content": "2.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "2.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 5736,
    "id": "window_5736"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to. * `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs.",
    "position": 5737,
    "id": "window_5737"
  },
  {
    "type": "window",
    "content": "* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object.",
    "originalSentence": "* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object.",
    "position": 5738,
    "id": "window_5738"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}\n\nSimilar to the [`fs. read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "position": 5739,
    "id": "window_5739"
  },
  {
    "type": "window",
    "content": "read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values. ### `fs.",
    "originalSentence": "read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values. ### `fs.",
    "position": 5740,
    "id": "window_5740"
  },
  {
    "type": "window",
    "content": "If no `options` object is specified, it will default with the\nabove values. ### `fs. readdir(path[, options], callback)`\n\n<!",
    "originalSentence": "If no `options` object is specified, it will default with the\nabove values. ### `fs. readdir(path[, options], callback)`\n\n<!",
    "position": 5741,
    "id": "window_5741"
  },
  {
    "type": "window",
    "content": "### `fs. readdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. readdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5742,
    "id": "window_5742"
  },
  {
    "type": "window",
    "content": "readdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.8\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "readdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.8\nchanges:\n  - version:\n    - v20.",
    "position": 5743,
    "id": "window_5743"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.8\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v0. 1.8\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "position": 5744,
    "id": "window_5744"
  },
  {
    "type": "window",
    "content": "1.8\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "1.8\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 5745,
    "id": "window_5745"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18.",
    "position": 5746,
    "id": "window_5746"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5747,
    "id": "window_5747"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5748,
    "id": "window_5748"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "position": 5749,
    "id": "window_5749"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v10.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v10.",
    "position": 5750,
    "id": "window_5750"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5751,
    "id": "window_5751"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5752,
    "id": "window_5752"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5753,
    "id": "window_5753"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5754,
    "id": "window_5754"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5755,
    "id": "window_5755"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5756,
    "id": "window_5756"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5757,
    "id": "window_5757"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6.",
    "position": 5758,
    "id": "window_5758"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added.",
    "position": 5759,
    "id": "window_5759"
  },
  {
    "type": "window",
    "content": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "originalSentence": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "position": 5760,
    "id": "window_5760"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files and\n    directories.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files and\n    directories.",
    "position": 5761,
    "id": "window_5761"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files and\n    directories. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files and\n    directories. **Default:** `false`.",
    "position": 5762,
    "id": "window_5762"
  },
  {
    "type": "window",
    "content": "In recursive mode, it will list all files, sub files and\n    directories. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs.",
    "originalSentence": "In recursive mode, it will list all files, sub files and\n    directories. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs.",
    "position": 5763,
    "id": "window_5763"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of a directory.",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of a directory.",
    "position": 5764,
    "id": "window_5764"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of a directory. The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.'",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of a directory. The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.'",
    "position": 5765,
    "id": "window_5765"
  },
  {
    "type": "window",
    "content": "Dirent\\[]}\n\nReads the contents of a directory. The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.' ` and `'..'",
    "originalSentence": "Dirent\\[]}\n\nReads the contents of a directory. The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.' ` and `'..'",
    "position": 5766,
    "id": "window_5766"
  },
  {
    "type": "window",
    "content": "The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.' ` and `'..' `.",
    "originalSentence": "The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.' ` and `'..' `.",
    "position": 5767,
    "id": "window_5767"
  },
  {
    "type": "window",
    "content": "` and `'..' `. See the POSIX readdir(3) documentation for more details.",
    "originalSentence": "` and `'..' `. See the POSIX readdir(3) documentation for more details.",
    "position": 5768,
    "id": "window_5768"
  },
  {
    "type": "window",
    "content": "`. See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback.",
    "originalSentence": "`. See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback.",
    "position": 5769,
    "id": "window_5769"
  },
  {
    "type": "window",
    "content": "See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "originalSentence": "See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "position": 5770,
    "id": "window_5770"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options.",
    "position": 5771,
    "id": "window_5771"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options. withFileTypes` is set to `true`, the `files` array will contain\n{fs.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options. withFileTypes` is set to `true`, the `files` array will contain\n{fs.",
    "position": 5772,
    "id": "window_5772"
  },
  {
    "type": "window",
    "content": "If `options. withFileTypes` is set to `true`, the `files` array will contain\n{fs. Dirent} objects.",
    "originalSentence": "If `options. withFileTypes` is set to `true`, the `files` array will contain\n{fs. Dirent} objects.",
    "position": 5773,
    "id": "window_5773"
  },
  {
    "type": "window",
    "content": "withFileTypes` is set to `true`, the `files` array will contain\n{fs. Dirent} objects. ### `fs.",
    "originalSentence": "withFileTypes` is set to `true`, the `files` array will contain\n{fs. Dirent} objects. ### `fs.",
    "position": 5774,
    "id": "window_5774"
  },
  {
    "type": "window",
    "content": "Dirent} objects. ### `fs. readFile(path[, options], callback)`\n\n<!",
    "originalSentence": "Dirent} objects. ### `fs. readFile(path[, options], callback)`\n\n<!",
    "position": 5775,
    "id": "window_5775"
  },
  {
    "type": "window",
    "content": "### `fs. readFile(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. readFile(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5776,
    "id": "window_5776"
  },
  {
    "type": "window",
    "content": "readFile(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.29\nchanges:\n  - version: v18.",
    "originalSentence": "readFile(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.29\nchanges:\n  - version: v18.",
    "position": 5777,
    "id": "window_5777"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.29\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.29\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5778,
    "id": "window_5778"
  },
  {
    "type": "window",
    "content": "1.29\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "originalSentence": "1.29\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "position": 5779,
    "id": "window_5779"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 5780,
    "id": "window_5780"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15.",
    "position": 5781,
    "id": "window_5781"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15. 2.0\n      - v14.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15. 2.0\n      - v14.",
    "position": 5782,
    "id": "window_5782"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "originalSentence": "- version:\n      - v15. 2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.",
    "position": 5783,
    "id": "window_5783"
  },
  {
    "type": "window",
    "content": "2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. - version: v10.",
    "originalSentence": "2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. - version: v10.",
    "position": 5784,
    "id": "window_5784"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5785,
    "id": "window_5785"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5786,
    "id": "window_5786"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5787,
    "id": "window_5787"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5788,
    "id": "window_5788"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5789,
    "id": "window_5789"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5790,
    "id": "window_5790"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5791,
    "id": "window_5791"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5.",
    "position": 5792,
    "id": "window_5792"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5. 1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5. 1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success.",
    "position": 5793,
    "id": "window_5793"
  },
  {
    "type": "window",
    "content": "- version: v5. 1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success. - version: v5.",
    "originalSentence": "- version: v5. 1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success. - version: v5.",
    "position": 5794,
    "id": "window_5794"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "position": 5795,
    "id": "window_5795"
  },
  {
    "type": "window",
    "content": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 5796,
    "id": "window_5796"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.",
    "position": 5797,
    "id": "window_5797"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file.",
    "position": 5798,
    "id": "window_5798"
  },
  {
    "type": "window",
    "content": "**Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file. ```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "**Default:** `'r'`. * `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file. ```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.",
    "position": 5799,
    "id": "window_5799"
  },
  {
    "type": "window",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file. ```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console. log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}\n\nAsynchronously reads the entire contents of a file. ```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console. log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.",
    "position": 5800,
    "id": "window_5800"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console. log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file. If no encoding is specified, then the raw buffer is returned.",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console. log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file. If no encoding is specified, then the raw buffer is returned.",
    "position": 5801,
    "id": "window_5801"
  },
  {
    "type": "window",
    "content": "log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file. If no encoding is specified, then the raw buffer is returned. If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs.",
    "originalSentence": "log(data);\n});\n```\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file. If no encoding is specified, then the raw buffer is returned. If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs.",
    "position": 5802,
    "id": "window_5802"
  },
  {
    "type": "window",
    "content": "If no encoding is specified, then the raw buffer is returned. If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs. readFile()` and\n[`fs.",
    "originalSentence": "If no encoding is specified, then the raw buffer is returned. If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs. readFile()` and\n[`fs.",
    "position": 5803,
    "id": "window_5803"
  },
  {
    "type": "window",
    "content": "If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs. readFile()` and\n[`fs. readFileSync()`][] is platform-specific.",
    "originalSentence": "If `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);\n```\n\nWhen the path is a directory, the behavior of `fs. readFile()` and\n[`fs. readFileSync()`][] is platform-specific.",
    "position": 5804,
    "id": "window_5804"
  },
  {
    "type": "window",
    "content": "readFile()` and\n[`fs. readFileSync()`][] is platform-specific. On macOS, Linux, and Windows, an\nerror will be returned.",
    "originalSentence": "readFile()` and\n[`fs. readFileSync()`][] is platform-specific. On macOS, Linux, and Windows, an\nerror will be returned.",
    "position": 5805,
    "id": "window_5805"
  },
  {
    "type": "window",
    "content": "readFileSync()`][] is platform-specific. On macOS, Linux, and Windows, an\nerror will be returned. On FreeBSD, a representation of the directory's contents\nwill be returned.",
    "originalSentence": "readFileSync()`][] is platform-specific. On macOS, Linux, and Windows, an\nerror will be returned. On FreeBSD, a representation of the directory's contents\nwill be returned.",
    "position": 5806,
    "id": "window_5806"
  },
  {
    "type": "window",
    "content": "On macOS, Linux, and Windows, an\nerror will be returned. On FreeBSD, a representation of the directory's contents\nwill be returned. ```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`.",
    "originalSentence": "On macOS, Linux, and Windows, an\nerror will be returned. On FreeBSD, a representation of the directory's contents\nwill be returned. ```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`.",
    "position": 5807,
    "id": "window_5807"
  },
  {
    "type": "window",
    "content": "On FreeBSD, a representation of the directory's contents\nwill be returned. ```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`. If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller.",
    "originalSentence": "On FreeBSD, a representation of the directory's contents\nwill be returned. ```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`. If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller.",
    "position": 5808,
    "id": "window_5808"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`. If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller. signal;\nreadFile(fileInfo[0].",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```\n\nIt is possible to abort an ongoing request using an `AbortSignal`. If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller. signal;\nreadFile(fileInfo[0].",
    "position": 5809,
    "id": "window_5809"
  },
  {
    "type": "window",
    "content": "If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller. signal;\nreadFile(fileInfo[0]. name, { signal }, (err, buf) => {\n  // ...",
    "originalSentence": "If a\nrequest is aborted the callback is called with an `AbortError`:\n\n```mjs\nimport { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller. signal;\nreadFile(fileInfo[0]. name, { signal }, (err, buf) => {\n  // ...",
    "position": 5810,
    "id": "window_5810"
  },
  {
    "type": "window",
    "content": "signal;\nreadFile(fileInfo[0]. name, { signal }, (err, buf) => {\n  // ... });\n// When you want to abort the request\ncontroller.",
    "originalSentence": "signal;\nreadFile(fileInfo[0]. name, { signal }, (err, buf) => {\n  // ... });\n// When you want to abort the request\ncontroller.",
    "position": 5811,
    "id": "window_5811"
  },
  {
    "type": "window",
    "content": "name, { signal }, (err, buf) => {\n  // ... });\n// When you want to abort the request\ncontroller. abort();\n```\n\nThe `fs.",
    "originalSentence": "name, { signal }, (err, buf) => {\n  // ... });\n// When you want to abort the request\ncontroller. abort();\n```\n\nThe `fs.",
    "position": 5812,
    "id": "window_5812"
  },
  {
    "type": "window",
    "content": "});\n// When you want to abort the request\ncontroller. abort();\n```\n\nThe `fs. readFile()` function buffers the entire file.",
    "originalSentence": "});\n// When you want to abort the request\ncontroller. abort();\n```\n\nThe `fs. readFile()` function buffers the entire file.",
    "position": 5813,
    "id": "window_5813"
  },
  {
    "type": "window",
    "content": "abort();\n```\n\nThe `fs. readFile()` function buffers the entire file. To minimize memory costs,\nwhen possible prefer streaming via `fs.",
    "originalSentence": "abort();\n```\n\nThe `fs. readFile()` function buffers the entire file. To minimize memory costs,\nwhen possible prefer streaming via `fs.",
    "position": 5814,
    "id": "window_5814"
  },
  {
    "type": "window",
    "content": "readFile()` function buffers the entire file. To minimize memory costs,\nwhen possible prefer streaming via `fs. createReadStream()`.",
    "originalSentence": "readFile()` function buffers the entire file. To minimize memory costs,\nwhen possible prefer streaming via `fs. createReadStream()`.",
    "position": 5815,
    "id": "window_5815"
  },
  {
    "type": "window",
    "content": "To minimize memory costs,\nwhen possible prefer streaming via `fs. createReadStream()`. Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "To minimize memory costs,\nwhen possible prefer streaming via `fs. createReadStream()`. Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 5816,
    "id": "window_5816"
  },
  {
    "type": "window",
    "content": "createReadStream()`. Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs.",
    "originalSentence": "createReadStream()`. Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs.",
    "position": 5817,
    "id": "window_5817"
  },
  {
    "type": "window",
    "content": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs. #### File descriptors\n\n1.",
    "originalSentence": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. readFile` performs. #### File descriptors\n\n1.",
    "position": 5818,
    "id": "window_5818"
  },
  {
    "type": "window",
    "content": "readFile` performs. #### File descriptors\n\n1. Any specified file descriptor has to support reading.",
    "originalSentence": "readFile` performs. #### File descriptors\n\n1. Any specified file descriptor has to support reading.",
    "position": 5819,
    "id": "window_5819"
  },
  {
    "type": "window",
    "content": "#### File descriptors\n\n1. Any specified file descriptor has to support reading. 2.",
    "originalSentence": "#### File descriptors\n\n1. Any specified file descriptor has to support reading. 2.",
    "position": 5820,
    "id": "window_5820"
  },
  {
    "type": "window",
    "content": "Any specified file descriptor has to support reading. 2. If a file descriptor is specified as the `path`, it will not be closed\n   automatically.",
    "originalSentence": "Any specified file descriptor has to support reading. 2. If a file descriptor is specified as the `path`, it will not be closed\n   automatically.",
    "position": 5821,
    "id": "window_5821"
  },
  {
    "type": "window",
    "content": "2. If a file descriptor is specified as the `path`, it will not be closed\n   automatically. 3.",
    "originalSentence": "2. If a file descriptor is specified as the `path`, it will not be closed\n   automatically. 3.",
    "position": 5822,
    "id": "window_5822"
  },
  {
    "type": "window",
    "content": "If a file descriptor is specified as the `path`, it will not be closed\n   automatically. 3. The reading will begin at the current position.",
    "originalSentence": "If a file descriptor is specified as the `path`, it will not be closed\n   automatically. 3. The reading will begin at the current position.",
    "position": 5823,
    "id": "window_5823"
  },
  {
    "type": "window",
    "content": "3. The reading will begin at the current position. For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs.",
    "originalSentence": "3. The reading will begin at the current position. For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs.",
    "position": 5824,
    "id": "window_5824"
  },
  {
    "type": "window",
    "content": "The reading will begin at the current position. For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs. readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`.",
    "originalSentence": "The reading will begin at the current position. For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs. readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`.",
    "position": 5825,
    "id": "window_5825"
  },
  {
    "type": "window",
    "content": "For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs. readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`. #### Performance Considerations\n\nThe `fs.",
    "originalSentence": "For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs. readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`. #### Performance Considerations\n\nThe `fs.",
    "position": 5826,
    "id": "window_5826"
  },
  {
    "type": "window",
    "content": "readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`. #### Performance Considerations\n\nThe `fs. readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk.",
    "originalSentence": "readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`. #### Performance Considerations\n\nThe `fs. readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk.",
    "position": 5827,
    "id": "window_5827"
  },
  {
    "type": "window",
    "content": "#### Performance Considerations\n\nThe `fs. readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk. This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory.",
    "originalSentence": "#### Performance Considerations\n\nThe `fs. readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk. This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory.",
    "position": 5828,
    "id": "window_5828"
  },
  {
    "type": "window",
    "content": "readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk. This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory. The additional read overhead can vary broadly on different systems and depends\non the type of file being read.",
    "originalSentence": "readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk. This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory. The additional read overhead can vary broadly on different systems and depends\non the type of file being read.",
    "position": 5829,
    "id": "window_5829"
  },
  {
    "type": "window",
    "content": "This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory. The additional read overhead can vary broadly on different systems and depends\non the type of file being read. If the file type is not a regular file (a pipe\nfor instance) and Node.",
    "originalSentence": "This allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory. The additional read overhead can vary broadly on different systems and depends\non the type of file being read. If the file type is not a regular file (a pipe\nfor instance) and Node.",
    "position": 5830,
    "id": "window_5830"
  },
  {
    "type": "window",
    "content": "The additional read overhead can vary broadly on different systems and depends\non the type of file being read. If the file type is not a regular file (a pipe\nfor instance) and Node. js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data.",
    "originalSentence": "The additional read overhead can vary broadly on different systems and depends\non the type of file being read. If the file type is not a regular file (a pipe\nfor instance) and Node. js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data.",
    "position": 5831,
    "id": "window_5831"
  },
  {
    "type": "window",
    "content": "If the file type is not a regular file (a pipe\nfor instance) and Node. js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data. For regular files, each read will process\n512 KiB of data.",
    "originalSentence": "If the file type is not a regular file (a pipe\nfor instance) and Node. js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data. For regular files, each read will process\n512 KiB of data.",
    "position": 5832,
    "id": "window_5832"
  },
  {
    "type": "window",
    "content": "js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data. For regular files, each read will process\n512 KiB of data. For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs.",
    "originalSentence": "js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data. For regular files, each read will process\n512 KiB of data. For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs.",
    "position": 5833,
    "id": "window_5833"
  },
  {
    "type": "window",
    "content": "For regular files, each read will process\n512 KiB of data. For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs. read()` directly and for application code to manage\nreading the full contents of the file itself.",
    "originalSentence": "For regular files, each read will process\n512 KiB of data. For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs. read()` directly and for application code to manage\nreading the full contents of the file itself.",
    "position": 5834,
    "id": "window_5834"
  },
  {
    "type": "window",
    "content": "For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs. read()` directly and for application code to manage\nreading the full contents of the file itself. The Node.",
    "originalSentence": "For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs. read()` directly and for application code to manage\nreading the full contents of the file itself. The Node.",
    "position": 5835,
    "id": "window_5835"
  },
  {
    "type": "window",
    "content": "read()` directly and for application code to manage\nreading the full contents of the file itself. The Node. js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs.",
    "originalSentence": "read()` directly and for application code to manage\nreading the full contents of the file itself. The Node. js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs.",
    "position": 5836,
    "id": "window_5836"
  },
  {
    "type": "window",
    "content": "The Node. js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs. readFile()` for multiple file sizes in\ndifferent Node.",
    "originalSentence": "The Node. js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs. readFile()` for multiple file sizes in\ndifferent Node.",
    "position": 5837,
    "id": "window_5837"
  },
  {
    "type": "window",
    "content": "js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs. readFile()` for multiple file sizes in\ndifferent Node. js versions.",
    "originalSentence": "js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs. readFile()` for multiple file sizes in\ndifferent Node. js versions.",
    "position": 5838,
    "id": "window_5838"
  },
  {
    "type": "window",
    "content": "readFile()` for multiple file sizes in\ndifferent Node. js versions. ### `fs.",
    "originalSentence": "readFile()` for multiple file sizes in\ndifferent Node. js versions. ### `fs.",
    "position": 5839,
    "id": "window_5839"
  },
  {
    "type": "window",
    "content": "js versions. ### `fs. readlink(path[, options], callback)`\n\n<!",
    "originalSentence": "js versions. ### `fs. readlink(path[, options], callback)`\n\n<!",
    "position": 5840,
    "id": "window_5840"
  },
  {
    "type": "window",
    "content": "### `fs. readlink(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. readlink(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5841,
    "id": "window_5841"
  },
  {
    "type": "window",
    "content": "readlink(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "originalSentence": "readlink(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "position": 5842,
    "id": "window_5842"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5843,
    "id": "window_5843"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5844,
    "id": "window_5844"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5845,
    "id": "window_5845"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5846,
    "id": "window_5846"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5847,
    "id": "window_5847"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5848,
    "id": "window_5848"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 5849,
    "id": "window_5849"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5850,
    "id": "window_5850"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5851,
    "id": "window_5851"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`.",
    "position": 5852,
    "id": "window_5852"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`. The callback gets\ntwo arguments `(err, linkString)`.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`. The callback gets\ntwo arguments `(err, linkString)`.",
    "position": 5853,
    "id": "window_5853"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`. The callback gets\ntwo arguments `(err, linkString)`. See the POSIX readlink(2) documentation for more details.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}\n\nReads the contents of the symbolic link referred to by `path`. The callback gets\ntwo arguments `(err, linkString)`. See the POSIX readlink(2) documentation for more details.",
    "position": 5854,
    "id": "window_5854"
  },
  {
    "type": "window",
    "content": "The callback gets\ntwo arguments `(err, linkString)`. See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback.",
    "originalSentence": "The callback gets\ntwo arguments `(err, linkString)`. See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback.",
    "position": 5855,
    "id": "window_5855"
  },
  {
    "type": "window",
    "content": "See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "originalSentence": "See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "position": 5856,
    "id": "window_5856"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs.",
    "position": 5857,
    "id": "window_5857"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs. readv(fd, buffers[, position], callback)`\n\n<!",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs. readv(fd, buffers[, position], callback)`\n\n<!",
    "position": 5858,
    "id": "window_5858"
  },
  {
    "type": "window",
    "content": "### `fs. readv(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded:\n  - v13.",
    "originalSentence": "### `fs. readv(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded:\n  - v13.",
    "position": 5859,
    "id": "window_5859"
  },
  {
    "type": "window",
    "content": "readv(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded:\n  - v13. 13.0\n  - v12.",
    "originalSentence": "readv(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded:\n  - v13. 13.0\n  - v12.",
    "position": 5860,
    "id": "window_5860"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v13. 13.0\n  - v12. 17.0\nchanges:\n  - version: v18.",
    "originalSentence": "-- YAML\nadded:\n  - v13. 13.0\n  - v12. 17.0\nchanges:\n  - version: v18.",
    "position": 5861,
    "id": "window_5861"
  },
  {
    "type": "window",
    "content": "13.0\n  - v12. 17.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "13.0\n  - v12. 17.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5862,
    "id": "window_5862"
  },
  {
    "type": "window",
    "content": "17.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`.",
    "originalSentence": "17.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`.",
    "position": 5863,
    "id": "window_5863"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`. `position` is the offset from the beginning of the file from where data\nshould be read.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`. `position` is the offset from the beginning of the file from where data\nshould be read.",
    "position": 5864,
    "id": "window_5864"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`. `position` is the offset from the beginning of the file from where data\nshould be read. If `typeof position !",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nRead from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`. `position` is the offset from the beginning of the file from where data\nshould be read. If `typeof position !",
    "position": 5865,
    "id": "window_5865"
  },
  {
    "type": "window",
    "content": "`position` is the offset from the beginning of the file from where data\nshould be read. If `typeof position ! == 'number'`, the data will be read\nfrom the current position.",
    "originalSentence": "`position` is the offset from the beginning of the file from where data\nshould be read. If `typeof position ! == 'number'`, the data will be read\nfrom the current position.",
    "position": 5866,
    "id": "window_5866"
  },
  {
    "type": "window",
    "content": "If `typeof position ! == 'number'`, the data will be read\nfrom the current position. The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`.",
    "originalSentence": "If `typeof position ! == 'number'`, the data will be read\nfrom the current position. The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`.",
    "position": 5867,
    "id": "window_5867"
  },
  {
    "type": "window",
    "content": "== 'number'`, the data will be read\nfrom the current position. The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`. `bytesRead` is how many bytes were read from the file.",
    "originalSentence": "== 'number'`, the data will be read\nfrom the current position. The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`. `bytesRead` is how many bytes were read from the file.",
    "position": 5868,
    "id": "window_5868"
  },
  {
    "type": "window",
    "content": "The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`. `bytesRead` is how many bytes were read from the file. If this method is invoked as its [`util.",
    "originalSentence": "The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`. `bytesRead` is how many bytes were read from the file. If this method is invoked as its [`util.",
    "position": 5869,
    "id": "window_5869"
  },
  {
    "type": "window",
    "content": "`bytesRead` is how many bytes were read from the file. If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties.",
    "originalSentence": "`bytesRead` is how many bytes were read from the file. If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties.",
    "position": 5870,
    "id": "window_5870"
  },
  {
    "type": "window",
    "content": "If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties. ### `fs.",
    "originalSentence": "If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties. ### `fs.",
    "position": 5871,
    "id": "window_5871"
  },
  {
    "type": "window",
    "content": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties. ### `fs. realpath(path[, options], callback)`\n\n<!",
    "originalSentence": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties. ### `fs. realpath(path[, options], callback)`\n\n<!",
    "position": 5872,
    "id": "window_5872"
  },
  {
    "type": "window",
    "content": "### `fs. realpath(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. realpath(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5873,
    "id": "window_5873"
  },
  {
    "type": "window",
    "content": "realpath(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "originalSentence": "realpath(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "position": 5874,
    "id": "window_5874"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5875,
    "id": "window_5875"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5876,
    "id": "window_5876"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5877,
    "id": "window_5877"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5878,
    "id": "window_5878"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v8.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v8.",
    "position": 5879,
    "id": "window_5879"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "position": 5880,
    "id": "window_5880"
  },
  {
    "type": "window",
    "content": "- version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7.",
    "originalSentence": "- version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7.",
    "position": 5881,
    "id": "window_5881"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 5882,
    "id": "window_5882"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "position": 5883,
    "id": "window_5883"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5884,
    "id": "window_5884"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5885,
    "id": "window_5885"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6.",
    "position": 5886,
    "id": "window_5886"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows.",
    "position": 5887,
    "id": "window_5887"
  },
  {
    "type": "window",
    "content": "- version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows. - version: v6.",
    "originalSentence": "- version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows. - version: v6.",
    "position": 5888,
    "id": "window_5888"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "position": 5889,
    "id": "window_5889"
  },
  {
    "type": "window",
    "content": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `.",
    "originalSentence": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `.",
    "position": 5890,
    "id": "window_5890"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `. `, `..",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `. `, `..",
    "position": 5891,
    "id": "window_5891"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `. `, `.. `, and\nsymbolic links.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronously computes the canonical pathname by resolving `. `, `.. `, and\nsymbolic links.",
    "position": 5892,
    "id": "window_5892"
  },
  {
    "type": "window",
    "content": "`, `.. `, and\nsymbolic links. A canonical pathname is not necessarily unique.",
    "originalSentence": "`, `.. `, and\nsymbolic links. A canonical pathname is not necessarily unique.",
    "position": 5893,
    "id": "window_5893"
  },
  {
    "type": "window",
    "content": "`, and\nsymbolic links. A canonical pathname is not necessarily unique. Hard links and bind mounts can\nexpose a file system entity through many pathnames.",
    "originalSentence": "`, and\nsymbolic links. A canonical pathname is not necessarily unique. Hard links and bind mounts can\nexpose a file system entity through many pathnames.",
    "position": 5894,
    "id": "window_5894"
  },
  {
    "type": "window",
    "content": "A canonical pathname is not necessarily unique. Hard links and bind mounts can\nexpose a file system entity through many pathnames. This function behaves like realpath(3), with some exceptions:\n\n1.",
    "originalSentence": "A canonical pathname is not necessarily unique. Hard links and bind mounts can\nexpose a file system entity through many pathnames. This function behaves like realpath(3), with some exceptions:\n\n1.",
    "position": 5895,
    "id": "window_5895"
  },
  {
    "type": "window",
    "content": "Hard links and bind mounts can\nexpose a file system entity through many pathnames. This function behaves like realpath(3), with some exceptions:\n\n1. No case conversion is performed on case-insensitive file systems.",
    "originalSentence": "Hard links and bind mounts can\nexpose a file system entity through many pathnames. This function behaves like realpath(3), with some exceptions:\n\n1. No case conversion is performed on case-insensitive file systems.",
    "position": 5896,
    "id": "window_5896"
  },
  {
    "type": "window",
    "content": "This function behaves like realpath(3), with some exceptions:\n\n1. No case conversion is performed on case-insensitive file systems. 2.",
    "originalSentence": "This function behaves like realpath(3), with some exceptions:\n\n1. No case conversion is performed on case-insensitive file systems. 2.",
    "position": 5897,
    "id": "window_5897"
  },
  {
    "type": "window",
    "content": "No case conversion is performed on case-insensitive file systems. 2. The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports.",
    "originalSentence": "No case conversion is performed on case-insensitive file systems. 2. The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports.",
    "position": 5898,
    "id": "window_5898"
  },
  {
    "type": "window",
    "content": "2. The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports. The `callback` gets two arguments `(err, resolvedPath)`.",
    "originalSentence": "2. The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports. The `callback` gets two arguments `(err, resolvedPath)`.",
    "position": 5899,
    "id": "window_5899"
  },
  {
    "type": "window",
    "content": "The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports. The `callback` gets two arguments `(err, resolvedPath)`. May use `process.",
    "originalSentence": "The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports. The `callback` gets two arguments `(err, resolvedPath)`. May use `process.",
    "position": 5900,
    "id": "window_5900"
  },
  {
    "type": "window",
    "content": "The `callback` gets two arguments `(err, resolvedPath)`. May use `process. cwd`\nto resolve relative paths.",
    "originalSentence": "The `callback` gets two arguments `(err, resolvedPath)`. May use `process. cwd`\nto resolve relative paths.",
    "position": 5901,
    "id": "window_5901"
  },
  {
    "type": "window",
    "content": "May use `process. cwd`\nto resolve relative paths. Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "May use `process. cwd`\nto resolve relative paths. Only paths that can be converted to UTF8 strings are supported.",
    "position": 5902,
    "id": "window_5902"
  },
  {
    "type": "window",
    "content": "cwd`\nto resolve relative paths. Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "originalSentence": "cwd`\nto resolve relative paths. Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "position": 5903,
    "id": "window_5903"
  },
  {
    "type": "window",
    "content": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 5904,
    "id": "window_5904"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object.",
    "position": 5905,
    "id": "window_5905"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object. A path that does not exist results in an ENOENT error.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object. A path that does not exist results in an ENOENT error.",
    "position": 5906,
    "id": "window_5906"
  },
  {
    "type": "window",
    "content": "If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object. A path that does not exist results in an ENOENT error. `error.",
    "originalSentence": "If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object. A path that does not exist results in an ENOENT error. `error.",
    "position": 5907,
    "id": "window_5907"
  },
  {
    "type": "window",
    "content": "A path that does not exist results in an ENOENT error. `error. path` is the absolute file path.",
    "originalSentence": "A path that does not exist results in an ENOENT error. `error. path` is the absolute file path.",
    "position": 5908,
    "id": "window_5908"
  },
  {
    "type": "window",
    "content": "path` is the absolute file path. ### `fs. realpath.",
    "originalSentence": "path` is the absolute file path. ### `fs. realpath.",
    "position": 5909,
    "id": "window_5909"
  },
  {
    "type": "window",
    "content": "### `fs. realpath. native(path[, options], callback)`\n\n<!",
    "originalSentence": "### `fs. realpath. native(path[, options], callback)`\n\n<!",
    "position": 5910,
    "id": "window_5910"
  },
  {
    "type": "window",
    "content": "realpath. native(path[, options], callback)`\n\n<! -- YAML\nadded: v9.",
    "originalSentence": "realpath. native(path[, options], callback)`\n\n<! -- YAML\nadded: v9.",
    "position": 5911,
    "id": "window_5911"
  },
  {
    "type": "window",
    "content": "native(path[, options], callback)`\n\n<! -- YAML\nadded: v9. 2.0\nchanges:\n  - version: v18.",
    "originalSentence": "native(path[, options], callback)`\n\n<! -- YAML\nadded: v9. 2.0\nchanges:\n  - version: v18.",
    "position": 5912,
    "id": "window_5912"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v9. 2.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v9. 2.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5913,
    "id": "window_5913"
  },
  {
    "type": "window",
    "content": "2.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3).",
    "originalSentence": "2.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3).",
    "position": 5914,
    "id": "window_5914"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3). The `callback` gets two arguments `(err, resolvedPath)`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3). The `callback` gets two arguments `(err, resolvedPath)`.",
    "position": 5915,
    "id": "window_5915"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3). The `callback` gets two arguments `(err, resolvedPath)`. Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}\n\nAsynchronous realpath(3). The `callback` gets two arguments `(err, resolvedPath)`. Only paths that can be converted to UTF8 strings are supported.",
    "position": 5916,
    "id": "window_5916"
  },
  {
    "type": "window",
    "content": "The `callback` gets two arguments `(err, resolvedPath)`. Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "originalSentence": "The `callback` gets two arguments `(err, resolvedPath)`. Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback.",
    "position": 5917,
    "id": "window_5917"
  },
  {
    "type": "window",
    "content": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 5918,
    "id": "window_5918"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node.",
    "position": 5919,
    "id": "window_5919"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "position": 5920,
    "id": "window_5920"
  },
  {
    "type": "window",
    "content": "On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "originalSentence": "On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "position": 5921,
    "id": "window_5921"
  },
  {
    "type": "window",
    "content": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction. ### `fs.",
    "originalSentence": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction. ### `fs.",
    "position": 5922,
    "id": "window_5922"
  },
  {
    "type": "window",
    "content": "Glibc does not have\nthis restriction. ### `fs. rename(oldPath, newPath, callback)`\n\n<!",
    "originalSentence": "Glibc does not have\nthis restriction. ### `fs. rename(oldPath, newPath, callback)`\n\n<!",
    "position": 5923,
    "id": "window_5923"
  },
  {
    "type": "window",
    "content": "### `fs. rename(oldPath, newPath, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. rename(oldPath, newPath, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5924,
    "id": "window_5924"
  },
  {
    "type": "window",
    "content": "rename(oldPath, newPath, callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "rename(oldPath, newPath, callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 5925,
    "id": "window_5925"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5926,
    "id": "window_5926"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 5927,
    "id": "window_5927"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5928,
    "id": "window_5928"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5929,
    "id": "window_5929"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5930,
    "id": "window_5930"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "position": 5931,
    "id": "window_5931"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.",
    "position": 5932,
    "id": "window_5932"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*. - version: v7.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*. - version: v7.",
    "position": 5933,
    "id": "window_5933"
  },
  {
    "type": "window",
    "content": "Support is currently still\n                 *experimental*. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Support is currently still\n                 *experimental*. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5934,
    "id": "window_5934"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5935,
    "id": "window_5935"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`.",
    "position": 5936,
    "id": "window_5936"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`. In the case that `newPath` already exists, it will\nbe overwritten.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`. In the case that `newPath` already exists, it will\nbe overwritten.",
    "position": 5937,
    "id": "window_5937"
  },
  {
    "type": "window",
    "content": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`. In the case that `newPath` already exists, it will\nbe overwritten. If there is a directory at `newPath`, an error will\nbe raised instead.",
    "originalSentence": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously rename file at `oldPath` to the pathname provided\nas `newPath`. In the case that `newPath` already exists, it will\nbe overwritten. If there is a directory at `newPath`, an error will\nbe raised instead.",
    "position": 5938,
    "id": "window_5938"
  },
  {
    "type": "window",
    "content": "In the case that `newPath` already exists, it will\nbe overwritten. If there is a directory at `newPath`, an error will\nbe raised instead. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "In the case that `newPath` already exists, it will\nbe overwritten. If there is a directory at `newPath`, an error will\nbe raised instead. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 5939,
    "id": "window_5939"
  },
  {
    "type": "window",
    "content": "If there is a directory at `newPath`, an error will\nbe raised instead. No arguments other than a possible exception are\ngiven to the completion callback. See also: rename(2).",
    "originalSentence": "If there is a directory at `newPath`, an error will\nbe raised instead. No arguments other than a possible exception are\ngiven to the completion callback. See also: rename(2).",
    "position": 5940,
    "id": "window_5940"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback. See also: rename(2). ```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback. See also: rename(2). ```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile.",
    "position": 5941,
    "id": "window_5941"
  },
  {
    "type": "window",
    "content": "See also: rename(2). ```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile. txt', 'newFile.",
    "originalSentence": "See also: rename(2). ```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile. txt', 'newFile.",
    "position": 5942,
    "id": "window_5942"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile. txt', 'newFile. txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "```mjs\nimport { rename } from 'node:fs';\n\nrename('oldFile. txt', 'newFile. txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 5943,
    "id": "window_5943"
  },
  {
    "type": "window",
    "content": "txt', 'newFile. txt', (err) => {\n  if (err) throw err;\n  console. log('Rename complete!'",
    "originalSentence": "txt', 'newFile. txt', (err) => {\n  if (err) throw err;\n  console. log('Rename complete!'",
    "position": 5944,
    "id": "window_5944"
  },
  {
    "type": "window",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console. log('Rename complete!' );\n});\n```\n\n### `fs.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console. log('Rename complete!' );\n});\n```\n\n### `fs.",
    "position": 5945,
    "id": "window_5945"
  },
  {
    "type": "window",
    "content": "log('Rename complete!' );\n});\n```\n\n### `fs. rmdir(path[, options], callback)`\n\n<!",
    "originalSentence": "log('Rename complete!' );\n});\n```\n\n### `fs. rmdir(path[, options], callback)`\n\n<!",
    "position": 5946,
    "id": "window_5946"
  },
  {
    "type": "window",
    "content": ");\n});\n```\n\n### `fs. rmdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": ");\n});\n```\n\n### `fs. rmdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 5947,
    "id": "window_5947"
  },
  {
    "type": "window",
    "content": "rmdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "originalSentence": "rmdir(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "position": 5948,
    "id": "window_5948"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v18.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v18.",
    "position": 5949,
    "id": "window_5949"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 5950,
    "id": "window_5950"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "position": 5951,
    "id": "window_5951"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 5952,
    "id": "window_5952"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\"",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\"",
    "position": 5953,
    "id": "window_5953"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\" - version: v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\" - version: v16.",
    "position": 5954,
    "id": "window_5954"
  },
  {
    "type": "window",
    "content": "rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 5955,
    "id": "window_5955"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\"",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\"",
    "position": 5956,
    "id": "window_5956"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\" - version: v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\" - version: v16.",
    "position": 5957,
    "id": "window_5957"
  },
  {
    "type": "window",
    "content": "rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "originalSentence": "rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "position": 5958,
    "id": "window_5958"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14.",
    "position": 5959,
    "id": "window_5959"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "position": 5960,
    "id": "window_5960"
  },
  {
    "type": "window",
    "content": "- version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rm` instead.",
    "originalSentence": "- version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rm` instead.",
    "position": 5961,
    "id": "window_5961"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rm` instead. - version:\n     - v13.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rm` instead. - version:\n     - v13.",
    "position": 5962,
    "id": "window_5962"
  },
  {
    "type": "window",
    "content": "rm` instead. - version:\n     - v13. 3.0\n     - v12.",
    "originalSentence": "rm` instead. - version:\n     - v13. 3.0\n     - v12.",
    "position": 5963,
    "id": "window_5963"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "originalSentence": "- version:\n     - v13. 3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "position": 5964,
    "id": "window_5964"
  },
  {
    "type": "window",
    "content": "3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "originalSentence": "3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "position": 5965,
    "id": "window_5965"
  },
  {
    "type": "window",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported.",
    "position": 5966,
    "id": "window_5966"
  },
  {
    "type": "window",
    "content": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.",
    "originalSentence": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.",
    "position": 5967,
    "id": "window_5967"
  },
  {
    "type": "window",
    "content": "The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried. - version: v12.",
    "originalSentence": "The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried. - version: v12.",
    "position": 5968,
    "id": "window_5968"
  },
  {
    "type": "window",
    "content": "`ENFILE` errors are now\n                 retried. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "originalSentence": "`ENFILE` errors are now\n                 retried. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "position": 5969,
    "id": "window_5969"
  },
  {
    "type": "window",
    "content": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v10.",
    "originalSentence": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v10.",
    "position": 5970,
    "id": "window_5970"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 5971,
    "id": "window_5971"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 5972,
    "id": "window_5972"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 5973,
    "id": "window_5973"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 5974,
    "id": "window_5974"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "position": 5975,
    "id": "window_5975"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 5976,
    "id": "window_5976"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 5977,
    "id": "window_5977"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "position": 5978,
    "id": "window_5978"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "position": 5979,
    "id": "window_5979"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 5980,
    "id": "window_5980"
  },
  {
    "type": "window",
    "content": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2).",
    "originalSentence": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2).",
    "position": 5981,
    "id": "window_5981"
  },
  {
    "type": "window",
    "content": "The `options` argument is still accepted for\n  backwards compatibility but it is not used. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2). No arguments other than a possible exception are given\nto the completion callback.",
    "originalSentence": "The `options` argument is still accepted for\n  backwards compatibility but it is not used. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2). No arguments other than a possible exception are given\nto the completion callback.",
    "position": 5982,
    "id": "window_5982"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2). No arguments other than a possible exception are given\nto the completion callback. Using `fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronous rmdir(2). No arguments other than a possible exception are given\nto the completion callback. Using `fs.",
    "position": 5983,
    "id": "window_5983"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are given\nto the completion callback. Using `fs. rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX.",
    "originalSentence": "No arguments other than a possible exception are given\nto the completion callback. Using `fs. rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX.",
    "position": 5984,
    "id": "window_5984"
  },
  {
    "type": "window",
    "content": "Using `fs. rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "originalSentence": "Using `fs. rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "position": 5985,
    "id": "window_5985"
  },
  {
    "type": "window",
    "content": "rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs. rm()`][]\nwith options `{ recursive: true, force: true }`.",
    "originalSentence": "rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs. rm()`][]\nwith options `{ recursive: true, force: true }`.",
    "position": 5986,
    "id": "window_5986"
  },
  {
    "type": "window",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use [`fs. rm()`][]\nwith options `{ recursive: true, force: true }`. ### `fs.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use [`fs. rm()`][]\nwith options `{ recursive: true, force: true }`. ### `fs.",
    "position": 5987,
    "id": "window_5987"
  },
  {
    "type": "window",
    "content": "rm()`][]\nwith options `{ recursive: true, force: true }`. ### `fs. rm(path[, options], callback)`\n\n<!",
    "originalSentence": "rm()`][]\nwith options `{ recursive: true, force: true }`. ### `fs. rm(path[, options], callback)`\n\n<!",
    "position": 5988,
    "id": "window_5988"
  },
  {
    "type": "window",
    "content": "### `fs. rm(path[, options], callback)`\n\n<! -- YAML\nadded: v14.",
    "originalSentence": "### `fs. rm(path[, options], callback)`\n\n<! -- YAML\nadded: v14.",
    "position": 5989,
    "id": "window_5989"
  },
  {
    "type": "window",
    "content": "rm(path[, options], callback)`\n\n<! -- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17.",
    "originalSentence": "rm(path[, options], callback)`\n\n<! -- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17.",
    "position": 5990,
    "id": "window_5990"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16.",
    "originalSentence": "-- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16.",
    "position": 5991,
    "id": "window_5991"
  },
  {
    "type": "window",
    "content": "14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 5992,
    "id": "window_5992"
  },
  {
    "type": "window",
    "content": "3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "originalSentence": "3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "position": 5993,
    "id": "window_5993"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.",
    "position": 5994,
    "id": "window_5994"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "position": 5995,
    "id": "window_5995"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "originalSentence": "**Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "position": 5996,
    "id": "window_5996"
  },
  {
    "type": "window",
    "content": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries.",
    "originalSentence": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries.",
    "position": 5997,
    "id": "window_5997"
  },
  {
    "type": "window",
    "content": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`.",
    "originalSentence": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`.",
    "position": 5998,
    "id": "window_5998"
  },
  {
    "type": "window",
    "content": "This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.",
    "originalSentence": "This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.",
    "position": 5999,
    "id": "window_5999"
  },
  {
    "type": "window",
    "content": "This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive removal.",
    "originalSentence": "This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive removal.",
    "position": 6000,
    "id": "window_6000"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive removal. In\n    recursive mode operations are retried on failure.",
    "originalSentence": "**Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive removal. In\n    recursive mode operations are retried on failure.",
    "position": 6001,
    "id": "window_6001"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} If `true`, perform a recursive removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.",
    "originalSentence": "* `recursive` {boolean} If `true`, perform a recursive removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.",
    "position": 6002,
    "id": "window_6002"
  },
  {
    "type": "window",
    "content": "In\n    recursive mode operations are retried on failure. **Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "originalSentence": "In\n    recursive mode operations are retried on failure. **Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "position": 6003,
    "id": "window_6003"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.",
    "originalSentence": "**Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.",
    "position": 6004,
    "id": "window_6004"
  },
  {
    "type": "window",
    "content": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`. **Default:** `100`.",
    "originalSentence": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`. **Default:** `100`.",
    "position": 6005,
    "id": "window_6005"
  },
  {
    "type": "window",
    "content": "This option is ignored if the `recursive` option is not `true`. **Default:** `100`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "originalSentence": "This option is ignored if the `recursive` option is not `true`. **Default:** `100`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "position": 6006,
    "id": "window_6006"
  },
  {
    "type": "window",
    "content": "**Default:** `100`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). No arguments other than a possible exception are given to the\ncompletion callback.",
    "originalSentence": "**Default:** `100`. * `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). No arguments other than a possible exception are given to the\ncompletion callback.",
    "position": 6007,
    "id": "window_6007"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). No arguments other than a possible exception are given to the\ncompletion callback. ### `fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). No arguments other than a possible exception are given to the\ncompletion callback. ### `fs.",
    "position": 6008,
    "id": "window_6008"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are given to the\ncompletion callback. ### `fs. stat(path[, options], callback)`\n\n<!",
    "originalSentence": "No arguments other than a possible exception are given to the\ncompletion callback. ### `fs. stat(path[, options], callback)`\n\n<!",
    "position": 6009,
    "id": "window_6009"
  },
  {
    "type": "window",
    "content": "### `fs. stat(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. stat(path[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6010,
    "id": "window_6010"
  },
  {
    "type": "window",
    "content": "stat(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "stat(path[, options], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 6011,
    "id": "window_6011"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6012,
    "id": "window_6012"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 6013,
    "id": "window_6013"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 6014,
    "id": "window_6014"
  },
  {
    "type": "window",
    "content": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10.",
    "originalSentence": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10.",
    "position": 6015,
    "id": "window_6015"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6016,
    "id": "window_6016"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6017,
    "id": "window_6017"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 6018,
    "id": "window_6018"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6019,
    "id": "window_6019"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 6020,
    "id": "window_6020"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6021,
    "id": "window_6021"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6022,
    "id": "window_6022"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 6023,
    "id": "window_6023"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 6024,
    "id": "window_6024"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 6025,
    "id": "window_6025"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 6026,
    "id": "window_6026"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nAsynchronous stat(2).",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nAsynchronous stat(2).",
    "position": 6027,
    "id": "window_6027"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nAsynchronous stat(2). The callback gets two arguments `(err, stats)` where\n`stats` is an {fs.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. Stats}\n\nAsynchronous stat(2). The callback gets two arguments `(err, stats)` where\n`stats` is an {fs.",
    "position": 6028,
    "id": "window_6028"
  },
  {
    "type": "window",
    "content": "Stats}\n\nAsynchronous stat(2). The callback gets two arguments `(err, stats)` where\n`stats` is an {fs. Stats} object.",
    "originalSentence": "Stats}\n\nAsynchronous stat(2). The callback gets two arguments `(err, stats)` where\n`stats` is an {fs. Stats} object.",
    "position": 6029,
    "id": "window_6029"
  },
  {
    "type": "window",
    "content": "The callback gets two arguments `(err, stats)` where\n`stats` is an {fs. Stats} object. In case of an error, the `err.",
    "originalSentence": "The callback gets two arguments `(err, stats)` where\n`stats` is an {fs. Stats} object. In case of an error, the `err.",
    "position": 6030,
    "id": "window_6030"
  },
  {
    "type": "window",
    "content": "Stats} object. In case of an error, the `err. code` will be one of [Common System Errors][].",
    "originalSentence": "Stats} object. In case of an error, the `err. code` will be one of [Common System Errors][].",
    "position": 6031,
    "id": "window_6031"
  },
  {
    "type": "window",
    "content": "In case of an error, the `err. code` will be one of [Common System Errors][]. [`fs.",
    "originalSentence": "In case of an error, the `err. code` will be one of [Common System Errors][]. [`fs.",
    "position": 6032,
    "id": "window_6032"
  },
  {
    "type": "window",
    "content": "code` will be one of [Common System Errors][]. [`fs. stat()`][] follows symbolic links.",
    "originalSentence": "code` will be one of [Common System Errors][]. [`fs. stat()`][] follows symbolic links.",
    "position": 6033,
    "id": "window_6033"
  },
  {
    "type": "window",
    "content": "stat()`][] follows symbolic links. Use [`fs. lstat()`][] to look at the\nlinks themselves.",
    "originalSentence": "stat()`][] follows symbolic links. Use [`fs. lstat()`][] to look at the\nlinks themselves.",
    "position": 6034,
    "id": "window_6034"
  },
  {
    "type": "window",
    "content": "Use [`fs. lstat()`][] to look at the\nlinks themselves. Using `fs.",
    "originalSentence": "Use [`fs. lstat()`][] to look at the\nlinks themselves. Using `fs.",
    "position": 6035,
    "id": "window_6035"
  },
  {
    "type": "window",
    "content": "lstat()`][] to look at the\nlinks themselves. Using `fs. stat()` to check for the existence of a file before calling\n`fs.",
    "originalSentence": "lstat()`][] to look at the\nlinks themselves. Using `fs. stat()` to check for the existence of a file before calling\n`fs.",
    "position": 6036,
    "id": "window_6036"
  },
  {
    "type": "window",
    "content": "Using `fs. stat()` to check for the existence of a file before calling\n`fs. open()`, `fs.",
    "originalSentence": "Using `fs. stat()` to check for the existence of a file before calling\n`fs. open()`, `fs.",
    "position": 6037,
    "id": "window_6037"
  },
  {
    "type": "window",
    "content": "stat()` to check for the existence of a file before calling\n`fs. open()`, `fs. readFile()`, or `fs.",
    "originalSentence": "stat()` to check for the existence of a file before calling\n`fs. open()`, `fs. readFile()`, or `fs.",
    "position": 6038,
    "id": "window_6038"
  },
  {
    "type": "window",
    "content": "open()`, `fs. readFile()`, or `fs. writeFile()` is not recommended.",
    "originalSentence": "open()`, `fs. readFile()`, or `fs. writeFile()` is not recommended.",
    "position": 6039,
    "id": "window_6039"
  },
  {
    "type": "window",
    "content": "readFile()`, or `fs. writeFile()` is not recommended. Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available.",
    "originalSentence": "readFile()`, or `fs. writeFile()` is not recommended. Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available.",
    "position": 6040,
    "id": "window_6040"
  },
  {
    "type": "window",
    "content": "writeFile()` is not recommended. Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available. To check if a file exists without manipulating it afterwards, [`fs.",
    "originalSentence": "writeFile()` is not recommended. Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available. To check if a file exists without manipulating it afterwards, [`fs.",
    "position": 6041,
    "id": "window_6041"
  },
  {
    "type": "window",
    "content": "Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available. To check if a file exists without manipulating it afterwards, [`fs. access()`][]\nis recommended.",
    "originalSentence": "Instead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available. To check if a file exists without manipulating it afterwards, [`fs. access()`][]\nis recommended.",
    "position": 6042,
    "id": "window_6042"
  },
  {
    "type": "window",
    "content": "To check if a file exists without manipulating it afterwards, [`fs. access()`][]\nis recommended. For example, given the following directory structure:\n\n```text\n- txtDir\n-- file.",
    "originalSentence": "To check if a file exists without manipulating it afterwards, [`fs. access()`][]\nis recommended. For example, given the following directory structure:\n\n```text\n- txtDir\n-- file.",
    "position": 6043,
    "id": "window_6043"
  },
  {
    "type": "window",
    "content": "access()`][]\nis recommended. For example, given the following directory structure:\n\n```text\n- txtDir\n-- file. txt\n- app.",
    "originalSentence": "access()`][]\nis recommended. For example, given the following directory structure:\n\n```text\n- txtDir\n-- file. txt\n- app.",
    "position": 6044,
    "id": "window_6044"
  },
  {
    "type": "window",
    "content": "For example, given the following directory structure:\n\n```text\n- txtDir\n-- file. txt\n- app. js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['.",
    "originalSentence": "For example, given the following directory structure:\n\n```text\n- txtDir\n-- file. txt\n- app. js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['.",
    "position": 6045,
    "id": "window_6045"
  },
  {
    "type": "window",
    "content": "txt\n- app. js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['. /txtDir', '.",
    "originalSentence": "txt\n- app. js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['. /txtDir', '.",
    "position": 6046,
    "id": "window_6046"
  },
  {
    "type": "window",
    "content": "js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['. /txtDir', '. /txtDir/file.",
    "originalSentence": "js\n```\n\nThe next program will check for the stats of the given paths:\n\n```mjs\nimport { stat } from 'node:fs';\n\nconst pathsToCheck = ['. /txtDir', '. /txtDir/file.",
    "position": 6047,
    "id": "window_6047"
  },
  {
    "type": "window",
    "content": "/txtDir', '. /txtDir/file. txt'];\n\nfor (let i = 0; i < pathsToCheck.",
    "originalSentence": "/txtDir', '. /txtDir/file. txt'];\n\nfor (let i = 0; i < pathsToCheck.",
    "position": 6048,
    "id": "window_6048"
  },
  {
    "type": "window",
    "content": "/txtDir/file. txt'];\n\nfor (let i = 0; i < pathsToCheck. length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.",
    "originalSentence": "/txtDir/file. txt'];\n\nfor (let i = 0; i < pathsToCheck. length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.",
    "position": 6049,
    "id": "window_6049"
  },
  {
    "type": "window",
    "content": "txt'];\n\nfor (let i = 0; i < pathsToCheck. length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console. log(stats.",
    "originalSentence": "txt'];\n\nfor (let i = 0; i < pathsToCheck. length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console. log(stats.",
    "position": 6050,
    "id": "window_6050"
  },
  {
    "type": "window",
    "content": "length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console. log(stats. isDirectory());\n    console.",
    "originalSentence": "length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console. log(stats. isDirectory());\n    console.",
    "position": 6051,
    "id": "window_6051"
  },
  {
    "type": "window",
    "content": "log(stats. isDirectory());\n    console. log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.",
    "originalSentence": "log(stats. isDirectory());\n    console. log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.",
    "position": 6052,
    "id": "window_6052"
  },
  {
    "type": "window",
    "content": "isDirectory());\n    console. log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071. 963,\n  mtimeMs: 1561174614583.",
    "originalSentence": "isDirectory());\n    console. log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071. 963,\n  mtimeMs: 1561174614583.",
    "position": 6053,
    "id": "window_6053"
  },
  {
    "type": "window",
    "content": "log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071. 963,\n  mtimeMs: 1561174614583. 3518,\n  ctimeMs: 1561174626623.",
    "originalSentence": "log(stats);\n  });\n}\n```\n\nThe resulting output will resemble:\n\n```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071. 963,\n  mtimeMs: 1561174614583. 3518,\n  ctimeMs: 1561174626623.",
    "position": 6054,
    "id": "window_6054"
  },
  {
    "type": "window",
    "content": "963,\n  mtimeMs: 1561174614583. 3518,\n  ctimeMs: 1561174626623. 5366,\n  birthtimeMs: 1561174126937.",
    "originalSentence": "963,\n  mtimeMs: 1561174614583. 3518,\n  ctimeMs: 1561174626623. 5366,\n  birthtimeMs: 1561174126937.",
    "position": 6055,
    "id": "window_6055"
  },
  {
    "type": "window",
    "content": "3518,\n  ctimeMs: 1561174626623. 5366,\n  birthtimeMs: 1561174126937. 2893,\n  atime: 2019-06-22T03:37:33.",
    "originalSentence": "3518,\n  ctimeMs: 1561174626623. 5366,\n  birthtimeMs: 1561174126937. 2893,\n  atime: 2019-06-22T03:37:33.",
    "position": 6056,
    "id": "window_6056"
  },
  {
    "type": "window",
    "content": "5366,\n  birthtimeMs: 1561174126937. 2893,\n  atime: 2019-06-22T03:37:33. 072Z,\n  mtime: 2019-06-22T03:36:54.",
    "originalSentence": "5366,\n  birthtimeMs: 1561174126937. 2893,\n  atime: 2019-06-22T03:37:33. 072Z,\n  mtime: 2019-06-22T03:36:54.",
    "position": 6057,
    "id": "window_6057"
  },
  {
    "type": "window",
    "content": "2893,\n  atime: 2019-06-22T03:37:33. 072Z,\n  mtime: 2019-06-22T03:36:54. 583Z,\n  ctime: 2019-06-22T03:37:06.",
    "originalSentence": "2893,\n  atime: 2019-06-22T03:37:33. 072Z,\n  mtime: 2019-06-22T03:36:54. 583Z,\n  ctime: 2019-06-22T03:37:06.",
    "position": 6058,
    "id": "window_6058"
  },
  {
    "type": "window",
    "content": "072Z,\n  mtime: 2019-06-22T03:36:54. 583Z,\n  ctime: 2019-06-22T03:37:06. 624Z,\n  birthtime: 2019-06-22T03:28:46.",
    "originalSentence": "072Z,\n  mtime: 2019-06-22T03:36:54. 583Z,\n  ctime: 2019-06-22T03:37:06. 624Z,\n  birthtime: 2019-06-22T03:28:46.",
    "position": 6059,
    "id": "window_6059"
  },
  {
    "type": "window",
    "content": "583Z,\n  ctime: 2019-06-22T03:37:06. 624Z,\n  birthtime: 2019-06-22T03:28:46. 937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.",
    "originalSentence": "583Z,\n  ctime: 2019-06-22T03:37:06. 624Z,\n  birthtime: 2019-06-22T03:28:46. 937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.",
    "position": 6060,
    "id": "window_6060"
  },
  {
    "type": "window",
    "content": "624Z,\n  birthtime: 2019-06-22T03:28:46. 937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618. 8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.",
    "originalSentence": "624Z,\n  birthtime: 2019-06-22T03:28:46. 937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618. 8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.",
    "position": 6061,
    "id": "window_6061"
  },
  {
    "type": "window",
    "content": "937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618. 8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583. 8145,\n  birthtimeMs: 1561174007710.",
    "originalSentence": "937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618. 8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583. 8145,\n  birthtimeMs: 1561174007710.",
    "position": 6062,
    "id": "window_6062"
  },
  {
    "type": "window",
    "content": "8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583. 8145,\n  birthtimeMs: 1561174007710. 7478,\n  atime: 2019-06-22T03:36:56.",
    "originalSentence": "8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583. 8145,\n  birthtimeMs: 1561174007710. 7478,\n  atime: 2019-06-22T03:36:56.",
    "position": 6063,
    "id": "window_6063"
  },
  {
    "type": "window",
    "content": "8145,\n  birthtimeMs: 1561174007710. 7478,\n  atime: 2019-06-22T03:36:56. 619Z,\n  mtime: 2019-06-22T03:36:54.",
    "originalSentence": "8145,\n  birthtimeMs: 1561174007710. 7478,\n  atime: 2019-06-22T03:36:56. 619Z,\n  mtime: 2019-06-22T03:36:54.",
    "position": 6064,
    "id": "window_6064"
  },
  {
    "type": "window",
    "content": "7478,\n  atime: 2019-06-22T03:36:56. 619Z,\n  mtime: 2019-06-22T03:36:54. 584Z,\n  ctime: 2019-06-22T03:36:54.",
    "originalSentence": "7478,\n  atime: 2019-06-22T03:36:56. 619Z,\n  mtime: 2019-06-22T03:36:54. 584Z,\n  ctime: 2019-06-22T03:36:54.",
    "position": 6065,
    "id": "window_6065"
  },
  {
    "type": "window",
    "content": "619Z,\n  mtime: 2019-06-22T03:36:54. 584Z,\n  ctime: 2019-06-22T03:36:54. 584Z,\n  birthtime: 2019-06-22T03:26:47.",
    "originalSentence": "619Z,\n  mtime: 2019-06-22T03:36:54. 584Z,\n  ctime: 2019-06-22T03:36:54. 584Z,\n  birthtime: 2019-06-22T03:26:47.",
    "position": 6066,
    "id": "window_6066"
  },
  {
    "type": "window",
    "content": "584Z,\n  ctime: 2019-06-22T03:36:54. 584Z,\n  birthtime: 2019-06-22T03:26:47. 711Z\n}\n```\n\n### `fs.",
    "originalSentence": "584Z,\n  ctime: 2019-06-22T03:36:54. 584Z,\n  birthtime: 2019-06-22T03:26:47. 711Z\n}\n```\n\n### `fs.",
    "position": 6067,
    "id": "window_6067"
  },
  {
    "type": "window",
    "content": "584Z,\n  birthtime: 2019-06-22T03:26:47. 711Z\n}\n```\n\n### `fs. statfs(path[, options], callback)`\n\n<!",
    "originalSentence": "584Z,\n  birthtime: 2019-06-22T03:26:47. 711Z\n}\n```\n\n### `fs. statfs(path[, options], callback)`\n\n<!",
    "position": 6068,
    "id": "window_6068"
  },
  {
    "type": "window",
    "content": "711Z\n}\n```\n\n### `fs. statfs(path[, options], callback)`\n\n<! -- YAML\nadded:\n  - v19.",
    "originalSentence": "711Z\n}\n```\n\n### `fs. statfs(path[, options], callback)`\n\n<! -- YAML\nadded:\n  - v19.",
    "position": 6069,
    "id": "window_6069"
  },
  {
    "type": "window",
    "content": "statfs(path[, options], callback)`\n\n<! -- YAML\nadded:\n  - v19. 6.0\n  - v18.",
    "originalSentence": "statfs(path[, options], callback)`\n\n<! -- YAML\nadded:\n  - v19. 6.0\n  - v18.",
    "position": 6070,
    "id": "window_6070"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 6071,
    "id": "window_6071"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`.",
    "position": 6072,
    "id": "window_6072"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`. **Default:** `false`.",
    "position": 6073,
    "id": "window_6073"
  },
  {
    "type": "window",
    "content": "StatFs} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "originalSentence": "StatFs} object should be `bigint`. **Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.",
    "position": 6074,
    "id": "window_6074"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. StatFs}\n\nAsynchronous statfs(2).",
    "originalSentence": "**Default:** `false`. * `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. StatFs}\n\nAsynchronous statfs(2).",
    "position": 6075,
    "id": "window_6075"
  },
  {
    "type": "window",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. StatFs}\n\nAsynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs. StatFs}\n\nAsynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`.",
    "position": 6076,
    "id": "window_6076"
  },
  {
    "type": "window",
    "content": "StatFs}\n\nAsynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`. The callback gets two arguments `(err, stats)` where `stats`\nis an {fs.",
    "originalSentence": "StatFs}\n\nAsynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`. The callback gets two arguments `(err, stats)` where `stats`\nis an {fs.",
    "position": 6077,
    "id": "window_6077"
  },
  {
    "type": "window",
    "content": "Returns information about the mounted file system which\ncontains `path`. The callback gets two arguments `(err, stats)` where `stats`\nis an {fs. StatFs} object.",
    "originalSentence": "Returns information about the mounted file system which\ncontains `path`. The callback gets two arguments `(err, stats)` where `stats`\nis an {fs. StatFs} object.",
    "position": 6078,
    "id": "window_6078"
  },
  {
    "type": "window",
    "content": "The callback gets two arguments `(err, stats)` where `stats`\nis an {fs. StatFs} object. In case of an error, the `err.",
    "originalSentence": "The callback gets two arguments `(err, stats)` where `stats`\nis an {fs. StatFs} object. In case of an error, the `err.",
    "position": 6079,
    "id": "window_6079"
  },
  {
    "type": "window",
    "content": "StatFs} object. In case of an error, the `err. code` will be one of [Common System Errors][].",
    "originalSentence": "StatFs} object. In case of an error, the `err. code` will be one of [Common System Errors][].",
    "position": 6080,
    "id": "window_6080"
  },
  {
    "type": "window",
    "content": "In case of an error, the `err. code` will be one of [Common System Errors][]. ### `fs.",
    "originalSentence": "In case of an error, the `err. code` will be one of [Common System Errors][]. ### `fs.",
    "position": 6081,
    "id": "window_6081"
  },
  {
    "type": "window",
    "content": "code` will be one of [Common System Errors][]. ### `fs. symlink(target, path[, type], callback)`\n\n<!",
    "originalSentence": "code` will be one of [Common System Errors][]. ### `fs. symlink(target, path[, type], callback)`\n\n<!",
    "position": 6082,
    "id": "window_6082"
  },
  {
    "type": "window",
    "content": "### `fs. symlink(target, path[, type], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. symlink(target, path[, type], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6083,
    "id": "window_6083"
  },
  {
    "type": "window",
    "content": "symlink(target, path[, type], callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "originalSentence": "symlink(target, path[, type], callback)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18.",
    "position": 6084,
    "id": "window_6084"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6085,
    "id": "window_6085"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v12.",
    "originalSentence": "1.31\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v12.",
    "position": 6086,
    "id": "window_6086"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "position": 6087,
    "id": "window_6087"
  },
  {
    "type": "window",
    "content": "- version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7.",
    "originalSentence": "- version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7.",
    "position": 6088,
    "id": "window_6088"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "position": 6089,
    "id": "window_6089"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.",
    "position": 6090,
    "id": "window_6090"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`.",
    "position": 6091,
    "id": "window_6091"
  },
  {
    "type": "window",
    "content": "Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 6092,
    "id": "window_6092"
  },
  {
    "type": "window",
    "content": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`. No arguments other than a\npossible exception are given to the completion callback. See the POSIX symlink(2) documentation for more details.",
    "originalSentence": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n\nCreates the link called `path` pointing to `target`. No arguments other than a\npossible exception are given to the completion callback. See the POSIX symlink(2) documentation for more details.",
    "position": 6093,
    "id": "window_6093"
  },
  {
    "type": "window",
    "content": "No arguments other than a\npossible exception are given to the completion callback. See the POSIX symlink(2) documentation for more details. The `type` argument is only available on Windows and ignored on other platforms.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback. See the POSIX symlink(2) documentation for more details. The `type` argument is only available on Windows and ignored on other platforms.",
    "position": 6094,
    "id": "window_6094"
  },
  {
    "type": "window",
    "content": "See the POSIX symlink(2) documentation for more details. The `type` argument is only available on Windows and ignored on other platforms. It can be set to `'dir'`, `'file'`, or `'junction'`.",
    "originalSentence": "See the POSIX symlink(2) documentation for more details. The `type` argument is only available on Windows and ignored on other platforms. It can be set to `'dir'`, `'file'`, or `'junction'`.",
    "position": 6095,
    "id": "window_6095"
  },
  {
    "type": "window",
    "content": "The `type` argument is only available on Windows and ignored on other platforms. It can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is\n`null`, Node.",
    "originalSentence": "The `type` argument is only available on Windows and ignored on other platforms. It can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is\n`null`, Node.",
    "position": 6096,
    "id": "window_6096"
  },
  {
    "type": "window",
    "content": "It can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is\n`null`, Node. js will autodetect `target` type and use `'file'` or `'dir'`.",
    "originalSentence": "It can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is\n`null`, Node. js will autodetect `target` type and use `'file'` or `'dir'`.",
    "position": 6097,
    "id": "window_6097"
  },
  {
    "type": "window",
    "content": "If the `type` argument is\n`null`, Node. js will autodetect `target` type and use `'file'` or `'dir'`. If the `target` does not exist, `'file'` will be used.",
    "originalSentence": "If the `type` argument is\n`null`, Node. js will autodetect `target` type and use `'file'` or `'dir'`. If the `target` does not exist, `'file'` will be used.",
    "position": 6098,
    "id": "window_6098"
  },
  {
    "type": "window",
    "content": "js will autodetect `target` type and use `'file'` or `'dir'`. If the `target` does not exist, `'file'` will be used. Windows junction points\nrequire the destination path to be absolute.",
    "originalSentence": "js will autodetect `target` type and use `'file'` or `'dir'`. If the `target` does not exist, `'file'` will be used. Windows junction points\nrequire the destination path to be absolute.",
    "position": 6099,
    "id": "window_6099"
  },
  {
    "type": "window",
    "content": "If the `target` does not exist, `'file'` will be used. Windows junction points\nrequire the destination path to be absolute. When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path.",
    "originalSentence": "If the `target` does not exist, `'file'` will be used. Windows junction points\nrequire the destination path to be absolute. When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path.",
    "position": 6100,
    "id": "window_6100"
  },
  {
    "type": "window",
    "content": "Windows junction points\nrequire the destination path to be absolute. When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path. Junction\npoints on NTFS volumes can only point to directories.",
    "originalSentence": "Windows junction points\nrequire the destination path to be absolute. When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path. Junction\npoints on NTFS volumes can only point to directories.",
    "position": 6101,
    "id": "window_6101"
  },
  {
    "type": "window",
    "content": "When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path. Junction\npoints on NTFS volumes can only point to directories. Relative targets are relative to the link's parent directory.",
    "originalSentence": "When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path. Junction\npoints on NTFS volumes can only point to directories. Relative targets are relative to the link's parent directory.",
    "position": 6102,
    "id": "window_6102"
  },
  {
    "type": "window",
    "content": "Junction\npoints on NTFS volumes can only point to directories. Relative targets are relative to the link's parent directory. ```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('.",
    "originalSentence": "Junction\npoints on NTFS volumes can only point to directories. Relative targets are relative to the link's parent directory. ```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('.",
    "position": 6103,
    "id": "window_6103"
  },
  {
    "type": "window",
    "content": "Relative targets are relative to the link's parent directory. ```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('. /mew', '.",
    "originalSentence": "Relative targets are relative to the link's parent directory. ```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('. /mew', '.",
    "position": 6104,
    "id": "window_6104"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('. /mew', '. /mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree .",
    "originalSentence": "```mjs\nimport { symlink } from 'node:fs';\n\nsymlink('. /mew', '. /mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree .",
    "position": 6105,
    "id": "window_6105"
  },
  {
    "type": "window",
    "content": "/mew', '. /mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree . .",
    "originalSentence": "/mew', '. /mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree . .",
    "position": 6106,
    "id": "window_6106"
  },
  {
    "type": "window",
    "content": "/mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree . . ├── mew\n└── mewtwo -> .",
    "originalSentence": "/mewtwo', callback);\n```\n\nThe above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:\n\n```bash\n$ tree . . ├── mew\n└── mewtwo -> .",
    "position": 6107,
    "id": "window_6107"
  },
  {
    "type": "window",
    "content": "├── mew\n└── mewtwo -> . /mew\n```\n\n### `fs. truncate(path[, len], callback)`\n\n<!",
    "originalSentence": "├── mew\n└── mewtwo -> . /mew\n```\n\n### `fs. truncate(path[, len], callback)`\n\n<!",
    "position": 6108,
    "id": "window_6108"
  },
  {
    "type": "window",
    "content": "/mew\n```\n\n### `fs. truncate(path[, len], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "/mew\n```\n\n### `fs. truncate(path[, len], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6109,
    "id": "window_6109"
  },
  {
    "type": "window",
    "content": "truncate(path[, len], callback)`\n\n<! -- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18.",
    "originalSentence": "truncate(path[, len], callback)`\n\n<! -- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18.",
    "position": 6110,
    "id": "window_6110"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6111,
    "id": "window_6111"
  },
  {
    "type": "window",
    "content": "8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "originalSentence": "8.6\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16.",
    "position": 6112,
    "id": "window_6112"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 6113,
    "id": "window_6113"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10.",
    "position": 6114,
    "id": "window_6114"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6115,
    "id": "window_6115"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6116,
    "id": "window_6116"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 6117,
    "id": "window_6117"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6118,
    "id": "window_6118"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6119,
    "id": "window_6119"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file.",
    "position": 6120,
    "id": "window_6120"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 6121,
    "id": "window_6121"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file. No arguments other than a possible exception are\ngiven to the completion callback. A file descriptor can also be passed as the\nfirst argument.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nTruncates the file. No arguments other than a possible exception are\ngiven to the completion callback. A file descriptor can also be passed as the\nfirst argument.",
    "position": 6122,
    "id": "window_6122"
  },
  {
    "type": "window",
    "content": "No arguments other than a possible exception are\ngiven to the completion callback. A file descriptor can also be passed as the\nfirst argument. In this case, `fs.",
    "originalSentence": "No arguments other than a possible exception are\ngiven to the completion callback. A file descriptor can also be passed as the\nfirst argument. In this case, `fs.",
    "position": 6123,
    "id": "window_6123"
  },
  {
    "type": "window",
    "content": "A file descriptor can also be passed as the\nfirst argument. In this case, `fs. ftruncate()` is called.",
    "originalSentence": "A file descriptor can also be passed as the\nfirst argument. In this case, `fs. ftruncate()` is called.",
    "position": 6124,
    "id": "window_6124"
  },
  {
    "type": "window",
    "content": "In this case, `fs. ftruncate()` is called. ```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file.",
    "originalSentence": "In this case, `fs. ftruncate()` is called. ```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file.",
    "position": 6125,
    "id": "window_6125"
  },
  {
    "type": "window",
    "content": "ftruncate()` is called. ```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file.",
    "originalSentence": "ftruncate()` is called. ```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file.",
    "position": 6126,
    "id": "window_6126"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file. truncate('path/file.",
    "originalSentence": "```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file. truncate('path/file.",
    "position": 6127,
    "id": "window_6127"
  },
  {
    "type": "window",
    "content": "txt' is a regular file. truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt' is a regular file. truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 6128,
    "id": "window_6128"
  },
  {
    "type": "window",
    "content": "truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console. log('path/file.",
    "originalSentence": "truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console. log('path/file.",
    "position": 6129,
    "id": "window_6129"
  },
  {
    "type": "window",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console. log('path/file. txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console. log('path/file. txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file.",
    "position": 6130,
    "id": "window_6130"
  },
  {
    "type": "window",
    "content": "log('path/file. txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file. txt' is a regular file.",
    "originalSentence": "log('path/file. txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file. txt' is a regular file.",
    "position": 6131,
    "id": "window_6131"
  },
  {
    "type": "window",
    "content": "txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file. txt' is a regular file. truncate('path/file.",
    "originalSentence": "txt was truncated');\n});\n```\n\n```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file. txt' is a regular file. truncate('path/file.",
    "position": 6132,
    "id": "window_6132"
  },
  {
    "type": "window",
    "content": "txt' is a regular file. truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt' is a regular file. truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 6133,
    "id": "window_6133"
  },
  {
    "type": "window",
    "content": "truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console. log('path/file.",
    "originalSentence": "truncate('path/file. txt', (err) => {\n  if (err) throw err;\n  console. log('path/file.",
    "position": 6134,
    "id": "window_6134"
  },
  {
    "type": "window",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console. log('path/file. txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console. log('path/file. txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "position": 6135,
    "id": "window_6135"
  },
  {
    "type": "window",
    "content": "log('path/file. txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future. See the POSIX truncate(2) documentation for more details.",
    "originalSentence": "log('path/file. txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future. See the POSIX truncate(2) documentation for more details.",
    "position": 6136,
    "id": "window_6136"
  },
  {
    "type": "window",
    "content": "txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future. See the POSIX truncate(2) documentation for more details. ### `fs.",
    "originalSentence": "txt was truncated');\n});\n```\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future. See the POSIX truncate(2) documentation for more details. ### `fs.",
    "position": 6137,
    "id": "window_6137"
  },
  {
    "type": "window",
    "content": "See the POSIX truncate(2) documentation for more details. ### `fs. unlink(path, callback)`\n\n<!",
    "originalSentence": "See the POSIX truncate(2) documentation for more details. ### `fs. unlink(path, callback)`\n\n<!",
    "position": 6138,
    "id": "window_6138"
  },
  {
    "type": "window",
    "content": "### `fs. unlink(path, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. unlink(path, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6139,
    "id": "window_6139"
  },
  {
    "type": "window",
    "content": "unlink(path, callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "unlink(path, callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 6140,
    "id": "window_6140"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6141,
    "id": "window_6141"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 6142,
    "id": "window_6142"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6143,
    "id": "window_6143"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6144,
    "id": "window_6144"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 6145,
    "id": "window_6145"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6146,
    "id": "window_6146"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 6147,
    "id": "window_6147"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6148,
    "id": "window_6148"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6149,
    "id": "window_6149"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link.",
    "position": 6150,
    "id": "window_6150"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 6151,
    "id": "window_6151"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link. No arguments other than a\npossible exception are given to the completion callback. ```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously removes a file or symbolic link. No arguments other than a\npossible exception are given to the completion callback. ```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file.",
    "position": 6152,
    "id": "window_6152"
  },
  {
    "type": "window",
    "content": "No arguments other than a\npossible exception are given to the completion callback. ```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file.",
    "originalSentence": "No arguments other than a\npossible exception are given to the completion callback. ```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file.",
    "position": 6153,
    "id": "window_6153"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file. unlink('path/file.",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file. txt' is a regular file. unlink('path/file.",
    "position": 6154,
    "id": "window_6154"
  },
  {
    "type": "window",
    "content": "txt' is a regular file. unlink('path/file. txt', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "txt' is a regular file. unlink('path/file. txt', (err) => {\n  if (err) throw err;\n  console.",
    "position": 6155,
    "id": "window_6155"
  },
  {
    "type": "window",
    "content": "unlink('path/file. txt', (err) => {\n  if (err) throw err;\n  console. log('path/file.",
    "originalSentence": "unlink('path/file. txt', (err) => {\n  if (err) throw err;\n  console. log('path/file.",
    "position": 6156,
    "id": "window_6156"
  },
  {
    "type": "window",
    "content": "txt', (err) => {\n  if (err) throw err;\n  console. log('path/file. txt was deleted');\n});\n```\n\n`fs.",
    "originalSentence": "txt', (err) => {\n  if (err) throw err;\n  console. log('path/file. txt was deleted');\n});\n```\n\n`fs.",
    "position": 6157,
    "id": "window_6157"
  },
  {
    "type": "window",
    "content": "log('path/file. txt was deleted');\n});\n```\n\n`fs. unlink()` will not work on a directory, empty or otherwise.",
    "originalSentence": "log('path/file. txt was deleted');\n});\n```\n\n`fs. unlink()` will not work on a directory, empty or otherwise.",
    "position": 6158,
    "id": "window_6158"
  },
  {
    "type": "window",
    "content": "txt was deleted');\n});\n```\n\n`fs. unlink()` will not work on a directory, empty or otherwise. To remove a\ndirectory, use [`fs.",
    "originalSentence": "txt was deleted');\n});\n```\n\n`fs. unlink()` will not work on a directory, empty or otherwise. To remove a\ndirectory, use [`fs.",
    "position": 6159,
    "id": "window_6159"
  },
  {
    "type": "window",
    "content": "unlink()` will not work on a directory, empty or otherwise. To remove a\ndirectory, use [`fs. rmdir()`][].",
    "originalSentence": "unlink()` will not work on a directory, empty or otherwise. To remove a\ndirectory, use [`fs. rmdir()`][].",
    "position": 6160,
    "id": "window_6160"
  },
  {
    "type": "window",
    "content": "To remove a\ndirectory, use [`fs. rmdir()`][]. See the POSIX unlink(2) documentation for more details.",
    "originalSentence": "To remove a\ndirectory, use [`fs. rmdir()`][]. See the POSIX unlink(2) documentation for more details.",
    "position": 6161,
    "id": "window_6161"
  },
  {
    "type": "window",
    "content": "rmdir()`][]. See the POSIX unlink(2) documentation for more details. ### `fs.",
    "originalSentence": "rmdir()`][]. See the POSIX unlink(2) documentation for more details. ### `fs.",
    "position": 6162,
    "id": "window_6162"
  },
  {
    "type": "window",
    "content": "See the POSIX unlink(2) documentation for more details. ### `fs. unwatchFile(filename[, listener])`\n\n<!",
    "originalSentence": "See the POSIX unlink(2) documentation for more details. ### `fs. unwatchFile(filename[, listener])`\n\n<!",
    "position": 6163,
    "id": "window_6163"
  },
  {
    "type": "window",
    "content": "### `fs. unwatchFile(filename[, listener])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. unwatchFile(filename[, listener])`\n\n<! -- YAML\nadded: v0.",
    "position": 6164,
    "id": "window_6164"
  },
  {
    "type": "window",
    "content": "unwatchFile(filename[, listener])`\n\n<! -- YAML\nadded: v0. 1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs.",
    "originalSentence": "unwatchFile(filename[, listener])`\n\n<! -- YAML\nadded: v0. 1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs.",
    "position": 6165,
    "id": "window_6165"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs. watchFile()`\n\nStop watching for changes on `filename`.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs. watchFile()`\n\nStop watching for changes on `filename`.",
    "position": 6166,
    "id": "window_6166"
  },
  {
    "type": "window",
    "content": "1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs. watchFile()`\n\nStop watching for changes on `filename`. If `listener` is specified, only that\nparticular listener is removed.",
    "originalSentence": "1.31\n-->\n\n* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs. watchFile()`\n\nStop watching for changes on `filename`. If `listener` is specified, only that\nparticular listener is removed.",
    "position": 6167,
    "id": "window_6167"
  },
  {
    "type": "window",
    "content": "watchFile()`\n\nStop watching for changes on `filename`. If `listener` is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`.",
    "originalSentence": "watchFile()`\n\nStop watching for changes on `filename`. If `listener` is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`.",
    "position": 6168,
    "id": "window_6168"
  },
  {
    "type": "window",
    "content": "If `listener` is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`. Calling `fs.",
    "originalSentence": "If `listener` is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`. Calling `fs.",
    "position": 6169,
    "id": "window_6169"
  },
  {
    "type": "window",
    "content": "Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`. Calling `fs. unwatchFile()` with a filename that is not being watched is a\nno-op, not an error.",
    "originalSentence": "Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`. Calling `fs. unwatchFile()` with a filename that is not being watched is a\nno-op, not an error.",
    "position": 6170,
    "id": "window_6170"
  },
  {
    "type": "window",
    "content": "Calling `fs. unwatchFile()` with a filename that is not being watched is a\nno-op, not an error. Using [`fs.",
    "originalSentence": "Calling `fs. unwatchFile()` with a filename that is not being watched is a\nno-op, not an error. Using [`fs.",
    "position": 6171,
    "id": "window_6171"
  },
  {
    "type": "window",
    "content": "unwatchFile()` with a filename that is not being watched is a\nno-op, not an error. Using [`fs. watch()`][] is more efficient than `fs.",
    "originalSentence": "unwatchFile()` with a filename that is not being watched is a\nno-op, not an error. Using [`fs. watch()`][] is more efficient than `fs.",
    "position": 6172,
    "id": "window_6172"
  },
  {
    "type": "window",
    "content": "Using [`fs. watch()`][] is more efficient than `fs. watchFile()` and\n`fs.",
    "originalSentence": "Using [`fs. watch()`][] is more efficient than `fs. watchFile()` and\n`fs.",
    "position": 6173,
    "id": "window_6173"
  },
  {
    "type": "window",
    "content": "watch()`][] is more efficient than `fs. watchFile()` and\n`fs. unwatchFile()`.",
    "originalSentence": "watch()`][] is more efficient than `fs. watchFile()` and\n`fs. unwatchFile()`.",
    "position": 6174,
    "id": "window_6174"
  },
  {
    "type": "window",
    "content": "unwatchFile()`. `fs. watch()` should be used instead of `fs.",
    "originalSentence": "unwatchFile()`. `fs. watch()` should be used instead of `fs.",
    "position": 6175,
    "id": "window_6175"
  },
  {
    "type": "window",
    "content": "`fs. watch()` should be used instead of `fs. watchFile()`\nand `fs.",
    "originalSentence": "`fs. watch()` should be used instead of `fs. watchFile()`\nand `fs.",
    "position": 6176,
    "id": "window_6176"
  },
  {
    "type": "window",
    "content": "watch()` should be used instead of `fs. watchFile()`\nand `fs. unwatchFile()` when possible.",
    "originalSentence": "watch()` should be used instead of `fs. watchFile()`\nand `fs. unwatchFile()` when possible.",
    "position": 6177,
    "id": "window_6177"
  },
  {
    "type": "window",
    "content": "watchFile()`\nand `fs. unwatchFile()` when possible. ### `fs.",
    "originalSentence": "watchFile()`\nand `fs. unwatchFile()` when possible. ### `fs.",
    "position": 6178,
    "id": "window_6178"
  },
  {
    "type": "window",
    "content": "unwatchFile()` when possible. ### `fs. utimes(path, atime, mtime, callback)`\n\n<!",
    "originalSentence": "unwatchFile()` when possible. ### `fs. utimes(path, atime, mtime, callback)`\n\n<!",
    "position": 6179,
    "id": "window_6179"
  },
  {
    "type": "window",
    "content": "### `fs. utimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. utimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6180,
    "id": "window_6180"
  },
  {
    "type": "window",
    "content": "utimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18.",
    "originalSentence": "utimes(path, atime, mtime, callback)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18.",
    "position": 6181,
    "id": "window_6181"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6182,
    "id": "window_6182"
  },
  {
    "type": "window",
    "content": "4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "originalSentence": "4.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10.",
    "position": 6183,
    "id": "window_6183"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6184,
    "id": "window_6184"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6185,
    "id": "window_6185"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v8.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v8.",
    "position": 6186,
    "id": "window_6186"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "position": 6187,
    "id": "window_6187"
  },
  {
    "type": "window",
    "content": "- version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7.",
    "originalSentence": "- version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7.",
    "position": 6188,
    "id": "window_6188"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6189,
    "id": "window_6189"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7.",
    "position": 6190,
    "id": "window_6190"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6191,
    "id": "window_6191"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6192,
    "id": "window_6192"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4.",
    "position": 6193,
    "id": "window_6193"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 6194,
    "id": "window_6194"
  },
  {
    "type": "window",
    "content": "- version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`.",
    "originalSentence": "- version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`.",
    "position": 6195,
    "id": "window_6195"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789.",
    "position": 6196,
    "id": "window_6196"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789. 0'`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}\n\nChange the file system timestamps of the object referenced by `path`. The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789. 0'`.",
    "position": 6197,
    "id": "window_6197"
  },
  {
    "type": "window",
    "content": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789. 0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "originalSentence": "The `atime` and `mtime` arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789. 0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "position": 6198,
    "id": "window_6198"
  },
  {
    "type": "window",
    "content": "0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fs.",
    "originalSentence": "0'`. * If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fs.",
    "position": 6199,
    "id": "window_6199"
  },
  {
    "type": "window",
    "content": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fs. watch(filename[, options][, listener])`\n\n<!",
    "originalSentence": "* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown. ### `fs. watch(filename[, options][, listener])`\n\n<!",
    "position": 6200,
    "id": "window_6200"
  },
  {
    "type": "window",
    "content": "### `fs. watch(filename[, options][, listener])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. watch(filename[, options][, listener])`\n\n<! -- YAML\nadded: v0.",
    "position": 6201,
    "id": "window_6201"
  },
  {
    "type": "window",
    "content": "watch(filename[, options][, listener])`\n\n<! -- YAML\nadded: v0. 5.10\nchanges:\n  - version: v19.",
    "originalSentence": "watch(filename[, options][, listener])`\n\n<! -- YAML\nadded: v0. 5.10\nchanges:\n  - version: v19.",
    "position": 6202,
    "id": "window_6202"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 5.10\nchanges:\n  - version: v19. 1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi.",
    "originalSentence": "-- YAML\nadded: v0. 5.10\nchanges:\n  - version: v19. 1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi.",
    "position": 6203,
    "id": "window_6203"
  },
  {
    "type": "window",
    "content": "5.10\nchanges:\n  - version: v19. 1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi. - version:\n      - v15.",
    "originalSentence": "5.10\nchanges:\n  - version: v19. 1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi. - version:\n      - v15.",
    "position": 6204,
    "id": "window_6204"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi. - version:\n      - v15. 9.0\n      - v14.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi. - version:\n      - v15. 9.0\n      - v14.",
    "position": 6205,
    "id": "window_6205"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal.",
    "originalSentence": "- version:\n      - v15. 9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal.",
    "position": 6206,
    "id": "window_6206"
  },
  {
    "type": "window",
    "content": "9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal. - version: v7.",
    "originalSentence": "9.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal. - version: v7.",
    "position": 6207,
    "id": "window_6207"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 6208,
    "id": "window_6208"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7.",
    "position": 6209,
    "id": "window_6209"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 6210,
    "id": "window_6210"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched.",
    "position": 6211,
    "id": "window_6211"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.",
    "position": 6212,
    "id": "window_6212"
  },
  {
    "type": "window",
    "content": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "originalSentence": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory.",
    "position": 6213,
    "id": "window_6213"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "originalSentence": "**Default:** `true`. * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]).",
    "position": 6214,
    "id": "window_6214"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.",
    "originalSentence": "* `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.",
    "position": 6215,
    "id": "window_6215"
  },
  {
    "type": "window",
    "content": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "originalSentence": "This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener.",
    "position": 6216,
    "id": "window_6216"
  },
  {
    "type": "window",
    "content": "**Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.",
    "originalSentence": "**Default:**\n    `false`. * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.",
    "position": 6217,
    "id": "window_6217"
  },
  {
    "type": "window",
    "content": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`. * `signal` {AbortSignal} allows closing the watcher with an AbortSignal.",
    "originalSentence": "* `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`. * `signal` {AbortSignal} allows closing the watcher with an AbortSignal.",
    "position": 6218,
    "id": "window_6218"
  },
  {
    "type": "window",
    "content": "**Default:** `'utf8'`. * `signal` {AbortSignal} allows closing the watcher with an AbortSignal. * `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs.",
    "originalSentence": "**Default:** `'utf8'`. * `signal` {AbortSignal} allows closing the watcher with an AbortSignal. * `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs.",
    "position": 6219,
    "id": "window_6219"
  },
  {
    "type": "window",
    "content": "* `signal` {AbortSignal} allows closing the watcher with an AbortSignal. * `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs. FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory.",
    "originalSentence": "* `signal` {AbortSignal} allows closing the watcher with an AbortSignal. * `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs. FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory.",
    "position": 6220,
    "id": "window_6220"
  },
  {
    "type": "window",
    "content": "* `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs. FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory. The second argument is optional.",
    "originalSentence": "* `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs. FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory. The second argument is optional.",
    "position": 6221,
    "id": "window_6221"
  },
  {
    "type": "window",
    "content": "FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory. The second argument is optional. If `options` is provided as a string, it\nspecifies the `encoding`.",
    "originalSentence": "FSWatcher}\n\nWatch for changes on `filename`, where `filename` is either a file or a\ndirectory. The second argument is optional. If `options` is provided as a string, it\nspecifies the `encoding`.",
    "position": 6222,
    "id": "window_6222"
  },
  {
    "type": "window",
    "content": "The second argument is optional. If `options` is provided as a string, it\nspecifies the `encoding`. Otherwise `options` should be passed as an object.",
    "originalSentence": "The second argument is optional. If `options` is provided as a string, it\nspecifies the `encoding`. Otherwise `options` should be passed as an object.",
    "position": 6223,
    "id": "window_6223"
  },
  {
    "type": "window",
    "content": "If `options` is provided as a string, it\nspecifies the `encoding`. Otherwise `options` should be passed as an object. The listener callback gets two arguments `(eventType, filename)`.",
    "originalSentence": "If `options` is provided as a string, it\nspecifies the `encoding`. Otherwise `options` should be passed as an object. The listener callback gets two arguments `(eventType, filename)`.",
    "position": 6224,
    "id": "window_6224"
  },
  {
    "type": "window",
    "content": "Otherwise `options` should be passed as an object. The listener callback gets two arguments `(eventType, filename)`. `eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event.",
    "originalSentence": "Otherwise `options` should be passed as an object. The listener callback gets two arguments `(eventType, filename)`. `eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event.",
    "position": 6225,
    "id": "window_6225"
  },
  {
    "type": "window",
    "content": "The listener callback gets two arguments `(eventType, filename)`. `eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event. On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "originalSentence": "The listener callback gets two arguments `(eventType, filename)`. `eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event. On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "position": 6226,
    "id": "window_6226"
  },
  {
    "type": "window",
    "content": "`eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event. On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. The listener callback is attached to the `'change'` event fired by\n{fs.",
    "originalSentence": "`eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event. On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. The listener callback is attached to the `'change'` event fired by\n{fs.",
    "position": 6227,
    "id": "window_6227"
  },
  {
    "type": "window",
    "content": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. The listener callback is attached to the `'change'` event fired by\n{fs. FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`.",
    "originalSentence": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory. The listener callback is attached to the `'change'` event fired by\n{fs. FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`.",
    "position": 6228,
    "id": "window_6228"
  },
  {
    "type": "window",
    "content": "The listener callback is attached to the `'change'` event fired by\n{fs. FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`. If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs.",
    "originalSentence": "The listener callback is attached to the `'change'` event fired by\n{fs. FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`. If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs.",
    "position": 6229,
    "id": "window_6229"
  },
  {
    "type": "window",
    "content": "FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`. If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs. FSWatcher}.",
    "originalSentence": "FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`. If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs. FSWatcher}.",
    "position": 6230,
    "id": "window_6230"
  },
  {
    "type": "window",
    "content": "If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs. FSWatcher}. #### Caveats\n\n<!",
    "originalSentence": "If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs. FSWatcher}. #### Caveats\n\n<!",
    "position": 6231,
    "id": "window_6231"
  },
  {
    "type": "window",
    "content": "FSWatcher}. #### Caveats\n\n<! --type=misc-->\n\nThe `fs.",
    "originalSentence": "FSWatcher}. #### Caveats\n\n<! --type=misc-->\n\nThe `fs.",
    "position": 6232,
    "id": "window_6232"
  },
  {
    "type": "window",
    "content": "#### Caveats\n\n<! --type=misc-->\n\nThe `fs. watch` API is not 100% consistent across platforms, and is\nunavailable in some situations.",
    "originalSentence": "#### Caveats\n\n<! --type=misc-->\n\nThe `fs. watch` API is not 100% consistent across platforms, and is\nunavailable in some situations.",
    "position": 6233,
    "id": "window_6233"
  },
  {
    "type": "window",
    "content": "--type=misc-->\n\nThe `fs. watch` API is not 100% consistent across platforms, and is\nunavailable in some situations. On Windows, no events will be emitted if the watched directory is moved or\nrenamed.",
    "originalSentence": "--type=misc-->\n\nThe `fs. watch` API is not 100% consistent across platforms, and is\nunavailable in some situations. On Windows, no events will be emitted if the watched directory is moved or\nrenamed.",
    "position": 6234,
    "id": "window_6234"
  },
  {
    "type": "window",
    "content": "watch` API is not 100% consistent across platforms, and is\nunavailable in some situations. On Windows, no events will be emitted if the watched directory is moved or\nrenamed. An `EPERM` error is reported when the watched directory is deleted.",
    "originalSentence": "watch` API is not 100% consistent across platforms, and is\nunavailable in some situations. On Windows, no events will be emitted if the watched directory is moved or\nrenamed. An `EPERM` error is reported when the watched directory is deleted.",
    "position": 6235,
    "id": "window_6235"
  },
  {
    "type": "window",
    "content": "On Windows, no events will be emitted if the watched directory is moved or\nrenamed. An `EPERM` error is reported when the watched directory is deleted. The `fs.",
    "originalSentence": "On Windows, no events will be emitted if the watched directory is moved or\nrenamed. An `EPERM` error is reported when the watched directory is deleted. The `fs.",
    "position": 6236,
    "id": "window_6236"
  },
  {
    "type": "window",
    "content": "An `EPERM` error is reported when the watched directory is deleted. The `fs. watch` API does not provide any protection with respect\nto malicious actions on the file system.",
    "originalSentence": "An `EPERM` error is reported when the watched directory is deleted. The `fs. watch` API does not provide any protection with respect\nto malicious actions on the file system.",
    "position": 6237,
    "id": "window_6237"
  },
  {
    "type": "window",
    "content": "The `fs. watch` API does not provide any protection with respect\nto malicious actions on the file system. For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files.",
    "originalSentence": "The `fs. watch` API does not provide any protection with respect\nto malicious actions on the file system. For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files.",
    "position": 6238,
    "id": "window_6238"
  },
  {
    "type": "window",
    "content": "watch` API does not provide any protection with respect\nto malicious actions on the file system. For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files. This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename.",
    "originalSentence": "watch` API does not provide any protection with respect\nto malicious actions on the file system. For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files. This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename.",
    "position": 6239,
    "id": "window_6239"
  },
  {
    "type": "window",
    "content": "For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files. This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename. ##### Availability\n\n<!",
    "originalSentence": "For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files. This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename. ##### Availability\n\n<!",
    "position": 6240,
    "id": "window_6240"
  },
  {
    "type": "window",
    "content": "This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename. ##### Availability\n\n<! --type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes.",
    "originalSentence": "This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename. ##### Availability\n\n<! --type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes.",
    "position": 6241,
    "id": "window_6241"
  },
  {
    "type": "window",
    "content": "##### Availability\n\n<! --type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes. * On Linux systems, this uses [`inotify(7)`][].",
    "originalSentence": "##### Availability\n\n<! --type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes. * On Linux systems, this uses [`inotify(7)`][].",
    "position": 6242,
    "id": "window_6242"
  },
  {
    "type": "window",
    "content": "--type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes. * On Linux systems, this uses [`inotify(7)`][]. * On BSD systems, this uses [`kqueue(2)`][].",
    "originalSentence": "--type=misc-->\n\nThis feature depends on the underlying operating system providing a way\nto be notified of file system changes. * On Linux systems, this uses [`inotify(7)`][]. * On BSD systems, this uses [`kqueue(2)`][].",
    "position": 6243,
    "id": "window_6243"
  },
  {
    "type": "window",
    "content": "* On Linux systems, this uses [`inotify(7)`][]. * On BSD systems, this uses [`kqueue(2)`][]. * On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories.",
    "originalSentence": "* On Linux systems, this uses [`inotify(7)`][]. * On BSD systems, this uses [`kqueue(2)`][]. * On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories.",
    "position": 6244,
    "id": "window_6244"
  },
  {
    "type": "window",
    "content": "* On BSD systems, this uses [`kqueue(2)`][]. * On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories. * On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][].",
    "originalSentence": "* On BSD systems, this uses [`kqueue(2)`][]. * On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories. * On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][].",
    "position": 6245,
    "id": "window_6245"
  },
  {
    "type": "window",
    "content": "* On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories. * On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][]. * On Windows systems, this feature depends on [`ReadDirectoryChangesW`][].",
    "originalSentence": "* On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories. * On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][]. * On Windows systems, this feature depends on [`ReadDirectoryChangesW`][].",
    "position": 6246,
    "id": "window_6246"
  },
  {
    "type": "window",
    "content": "* On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][]. * On Windows systems, this feature depends on [`ReadDirectoryChangesW`][]. * On AIX systems, this feature depends on [`AHAFS`][], which must be enabled.",
    "originalSentence": "* On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][]. * On Windows systems, this feature depends on [`ReadDirectoryChangesW`][]. * On AIX systems, this feature depends on [`AHAFS`][], which must be enabled.",
    "position": 6247,
    "id": "window_6247"
  },
  {
    "type": "window",
    "content": "* On Windows systems, this feature depends on [`ReadDirectoryChangesW`][]. * On AIX systems, this feature depends on [`AHAFS`][], which must be enabled. * On IBM i systems, this feature is not supported.",
    "originalSentence": "* On Windows systems, this feature depends on [`ReadDirectoryChangesW`][]. * On AIX systems, this feature depends on [`AHAFS`][], which must be enabled. * On IBM i systems, this feature is not supported.",
    "position": 6248,
    "id": "window_6248"
  },
  {
    "type": "window",
    "content": "* On AIX systems, this feature depends on [`AHAFS`][], which must be enabled. * On IBM i systems, this feature is not supported. If the underlying functionality is not available for some reason, then\n`fs.",
    "originalSentence": "* On AIX systems, this feature depends on [`AHAFS`][], which must be enabled. * On IBM i systems, this feature is not supported. If the underlying functionality is not available for some reason, then\n`fs.",
    "position": 6249,
    "id": "window_6249"
  },
  {
    "type": "window",
    "content": "* On IBM i systems, this feature is not supported. If the underlying functionality is not available for some reason, then\n`fs. watch()` will not be able to function and may throw an exception.",
    "originalSentence": "* On IBM i systems, this feature is not supported. If the underlying functionality is not available for some reason, then\n`fs. watch()` will not be able to function and may throw an exception.",
    "position": 6250,
    "id": "window_6250"
  },
  {
    "type": "window",
    "content": "If the underlying functionality is not available for some reason, then\n`fs. watch()` will not be able to function and may throw an exception. For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker.",
    "originalSentence": "If the underlying functionality is not available for some reason, then\n`fs. watch()` will not be able to function and may throw an exception. For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker.",
    "position": 6251,
    "id": "window_6251"
  },
  {
    "type": "window",
    "content": "watch()` will not be able to function and may throw an exception. For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker. It is still possible to use `fs.",
    "originalSentence": "watch()` will not be able to function and may throw an exception. For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker. It is still possible to use `fs.",
    "position": 6252,
    "id": "window_6252"
  },
  {
    "type": "window",
    "content": "For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker. It is still possible to use `fs. watchFile()`, which uses stat polling, but\nthis method is slower and less reliable.",
    "originalSentence": "For example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker. It is still possible to use `fs. watchFile()`, which uses stat polling, but\nthis method is slower and less reliable.",
    "position": 6253,
    "id": "window_6253"
  },
  {
    "type": "window",
    "content": "It is still possible to use `fs. watchFile()`, which uses stat polling, but\nthis method is slower and less reliable. ##### Inodes\n\n<!",
    "originalSentence": "It is still possible to use `fs. watchFile()`, which uses stat polling, but\nthis method is slower and less reliable. ##### Inodes\n\n<!",
    "position": 6254,
    "id": "window_6254"
  },
  {
    "type": "window",
    "content": "watchFile()`, which uses stat polling, but\nthis method is slower and less reliable. ##### Inodes\n\n<! --type=misc-->\n\nOn Linux and macOS systems, `fs.",
    "originalSentence": "watchFile()`, which uses stat polling, but\nthis method is slower and less reliable. ##### Inodes\n\n<! --type=misc-->\n\nOn Linux and macOS systems, `fs.",
    "position": 6255,
    "id": "window_6255"
  },
  {
    "type": "window",
    "content": "##### Inodes\n\n<! --type=misc-->\n\nOn Linux and macOS systems, `fs. watch()` resolves the path to an [inode][] and\nwatches the inode.",
    "originalSentence": "##### Inodes\n\n<! --type=misc-->\n\nOn Linux and macOS systems, `fs. watch()` resolves the path to an [inode][] and\nwatches the inode.",
    "position": 6256,
    "id": "window_6256"
  },
  {
    "type": "window",
    "content": "--type=misc-->\n\nOn Linux and macOS systems, `fs. watch()` resolves the path to an [inode][] and\nwatches the inode. If the watched path is deleted and recreated, it is assigned\na new inode.",
    "originalSentence": "--type=misc-->\n\nOn Linux and macOS systems, `fs. watch()` resolves the path to an [inode][] and\nwatches the inode. If the watched path is deleted and recreated, it is assigned\na new inode.",
    "position": 6257,
    "id": "window_6257"
  },
  {
    "type": "window",
    "content": "watch()` resolves the path to an [inode][] and\nwatches the inode. If the watched path is deleted and recreated, it is assigned\na new inode. The watch will emit an event for the delete but will continue\nwatching the _original_ inode.",
    "originalSentence": "watch()` resolves the path to an [inode][] and\nwatches the inode. If the watched path is deleted and recreated, it is assigned\na new inode. The watch will emit an event for the delete but will continue\nwatching the _original_ inode.",
    "position": 6258,
    "id": "window_6258"
  },
  {
    "type": "window",
    "content": "If the watched path is deleted and recreated, it is assigned\na new inode. The watch will emit an event for the delete but will continue\nwatching the _original_ inode. Events for the new inode will not be emitted.",
    "originalSentence": "If the watched path is deleted and recreated, it is assigned\na new inode. The watch will emit an event for the delete but will continue\nwatching the _original_ inode. Events for the new inode will not be emitted.",
    "position": 6259,
    "id": "window_6259"
  },
  {
    "type": "window",
    "content": "The watch will emit an event for the delete but will continue\nwatching the _original_ inode. Events for the new inode will not be emitted. This is expected behavior.",
    "originalSentence": "The watch will emit an event for the delete but will continue\nwatching the _original_ inode. Events for the new inode will not be emitted. This is expected behavior.",
    "position": 6260,
    "id": "window_6260"
  },
  {
    "type": "window",
    "content": "Events for the new inode will not be emitted. This is expected behavior. AIX files retain the same inode for the lifetime of a file.",
    "originalSentence": "Events for the new inode will not be emitted. This is expected behavior. AIX files retain the same inode for the lifetime of a file.",
    "position": 6261,
    "id": "window_6261"
  },
  {
    "type": "window",
    "content": "This is expected behavior. AIX files retain the same inode for the lifetime of a file. Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation).",
    "originalSentence": "This is expected behavior. AIX files retain the same inode for the lifetime of a file. Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation).",
    "position": 6262,
    "id": "window_6262"
  },
  {
    "type": "window",
    "content": "AIX files retain the same inode for the lifetime of a file. Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation). ##### Filename argument\n\n<!",
    "originalSentence": "AIX files retain the same inode for the lifetime of a file. Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation). ##### Filename argument\n\n<!",
    "position": 6263,
    "id": "window_6263"
  },
  {
    "type": "window",
    "content": "Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation). ##### Filename argument\n\n<! --type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX.",
    "originalSentence": "Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation). ##### Filename argument\n\n<! --type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX.",
    "position": 6264,
    "id": "window_6264"
  },
  {
    "type": "window",
    "content": "##### Filename argument\n\n<! --type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX. Even on supported platforms, `filename` is not always\nguaranteed to be provided.",
    "originalSentence": "##### Filename argument\n\n<! --type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX. Even on supported platforms, `filename` is not always\nguaranteed to be provided.",
    "position": 6265,
    "id": "window_6265"
  },
  {
    "type": "window",
    "content": "--type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX. Even on supported platforms, `filename` is not always\nguaranteed to be provided. Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`.",
    "originalSentence": "--type=misc-->\n\nProviding `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX. Even on supported platforms, `filename` is not always\nguaranteed to be provided. Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`.",
    "position": 6266,
    "id": "window_6266"
  },
  {
    "type": "window",
    "content": "Even on supported platforms, `filename` is not always\nguaranteed to be provided. Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`. ```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.",
    "originalSentence": "Even on supported platforms, `filename` is not always\nguaranteed to be provided. Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`. ```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.",
    "position": 6267,
    "id": "window_6267"
  },
  {
    "type": "window",
    "content": "Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`. ```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console. log(`event type is: ${eventType}`);\n  if (filename) {\n    console.",
    "originalSentence": "Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`. ```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console. log(`event type is: ${eventType}`);\n  if (filename) {\n    console.",
    "position": 6268,
    "id": "window_6268"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console. log(`event type is: ${eventType}`);\n  if (filename) {\n    console. log(`filename provided: ${filename}`);\n  } else {\n    console.",
    "originalSentence": "```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console. log(`event type is: ${eventType}`);\n  if (filename) {\n    console. log(`filename provided: ${filename}`);\n  } else {\n    console.",
    "position": 6269,
    "id": "window_6269"
  },
  {
    "type": "window",
    "content": "log(`event type is: ${eventType}`);\n  if (filename) {\n    console. log(`filename provided: ${filename}`);\n  } else {\n    console. log('filename not provided');\n  }\n});\n```\n\n### `fs.",
    "originalSentence": "log(`event type is: ${eventType}`);\n  if (filename) {\n    console. log(`filename provided: ${filename}`);\n  } else {\n    console. log('filename not provided');\n  }\n});\n```\n\n### `fs.",
    "position": 6270,
    "id": "window_6270"
  },
  {
    "type": "window",
    "content": "log(`filename provided: ${filename}`);\n  } else {\n    console. log('filename not provided');\n  }\n});\n```\n\n### `fs. watchFile(filename[, options], listener)`\n\n<!",
    "originalSentence": "log(`filename provided: ${filename}`);\n  } else {\n    console. log('filename not provided');\n  }\n});\n```\n\n### `fs. watchFile(filename[, options], listener)`\n\n<!",
    "position": 6271,
    "id": "window_6271"
  },
  {
    "type": "window",
    "content": "log('filename not provided');\n  }\n});\n```\n\n### `fs. watchFile(filename[, options], listener)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "log('filename not provided');\n  }\n});\n```\n\n### `fs. watchFile(filename[, options], listener)`\n\n<! -- YAML\nadded: v0.",
    "position": 6272,
    "id": "window_6272"
  },
  {
    "type": "window",
    "content": "watchFile(filename[, options], listener)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v10.",
    "originalSentence": "watchFile(filename[, options], listener)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v10.",
    "position": 6273,
    "id": "window_6273"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported.",
    "position": 6274,
    "id": "window_6274"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported. - version: v7.",
    "originalSentence": "1.31\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported. - version: v7.",
    "position": 6275,
    "id": "window_6275"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 6276,
    "id": "window_6276"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs.",
    "position": 6277,
    "id": "window_6277"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs. Stats}\n  * `previous` {fs.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs. Stats}\n  * `previous` {fs.",
    "position": 6278,
    "id": "window_6278"
  },
  {
    "type": "window",
    "content": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs. Stats}\n  * `previous` {fs. Stats}\n* Returns: {fs.",
    "originalSentence": "-->\n\n* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs. Stats}\n  * `previous` {fs. Stats}\n* Returns: {fs.",
    "position": 6279,
    "id": "window_6279"
  },
  {
    "type": "window",
    "content": "Stats}\n  * `previous` {fs. Stats}\n* Returns: {fs. StatWatcher}\n\nWatch for changes on `filename`.",
    "originalSentence": "Stats}\n  * `previous` {fs. Stats}\n* Returns: {fs. StatWatcher}\n\nWatch for changes on `filename`.",
    "position": 6280,
    "id": "window_6280"
  },
  {
    "type": "window",
    "content": "Stats}\n* Returns: {fs. StatWatcher}\n\nWatch for changes on `filename`. The callback `listener` will be called each\ntime the file is accessed.",
    "originalSentence": "Stats}\n* Returns: {fs. StatWatcher}\n\nWatch for changes on `filename`. The callback `listener` will be called each\ntime the file is accessed.",
    "position": 6281,
    "id": "window_6281"
  },
  {
    "type": "window",
    "content": "StatWatcher}\n\nWatch for changes on `filename`. The callback `listener` will be called each\ntime the file is accessed. The `options` argument may be omitted.",
    "originalSentence": "StatWatcher}\n\nWatch for changes on `filename`. The callback `listener` will be called each\ntime the file is accessed. The `options` argument may be omitted.",
    "position": 6282,
    "id": "window_6282"
  },
  {
    "type": "window",
    "content": "The callback `listener` will be called each\ntime the file is accessed. The `options` argument may be omitted. If provided, it should be an object.",
    "originalSentence": "The callback `listener` will be called each\ntime the file is accessed. The `options` argument may be omitted. If provided, it should be an object.",
    "position": 6283,
    "id": "window_6283"
  },
  {
    "type": "window",
    "content": "The `options` argument may be omitted. If provided, it should be an object. The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched.",
    "originalSentence": "The `options` argument may be omitted. If provided, it should be an object. The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched.",
    "position": 6284,
    "id": "window_6284"
  },
  {
    "type": "window",
    "content": "If provided, it should be an object. The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched. The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds.",
    "originalSentence": "If provided, it should be an object. The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched. The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds.",
    "position": 6285,
    "id": "window_6285"
  },
  {
    "type": "window",
    "content": "The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched. The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds. The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message.",
    "originalSentence": "The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched. The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds. The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message.",
    "position": 6286,
    "id": "window_6286"
  },
  {
    "type": "window",
    "content": "The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds. The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message. text', (curr, prev) => {\n  console.",
    "originalSentence": "The `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds. The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message. text', (curr, prev) => {\n  console.",
    "position": 6287,
    "id": "window_6287"
  },
  {
    "type": "window",
    "content": "The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message. text', (curr, prev) => {\n  console. log(`the current mtime is: ${curr.",
    "originalSentence": "The `listener` gets two arguments the current stat object and the previous\nstat object:\n\n```mjs\nimport { watchFile } from 'node:fs';\n\nwatchFile('message. text', (curr, prev) => {\n  console. log(`the current mtime is: ${curr.",
    "position": 6288,
    "id": "window_6288"
  },
  {
    "type": "window",
    "content": "text', (curr, prev) => {\n  console. log(`the current mtime is: ${curr. mtime}`);\n  console.",
    "originalSentence": "text', (curr, prev) => {\n  console. log(`the current mtime is: ${curr. mtime}`);\n  console.",
    "position": 6289,
    "id": "window_6289"
  },
  {
    "type": "window",
    "content": "log(`the current mtime is: ${curr. mtime}`);\n  console. log(`the previous mtime was: ${prev.",
    "originalSentence": "log(`the current mtime is: ${curr. mtime}`);\n  console. log(`the previous mtime was: ${prev.",
    "position": 6290,
    "id": "window_6290"
  },
  {
    "type": "window",
    "content": "mtime}`);\n  console. log(`the previous mtime was: ${prev. mtime}`);\n});\n```\n\nThese stat objects are instances of `fs.",
    "originalSentence": "mtime}`);\n  console. log(`the previous mtime was: ${prev. mtime}`);\n});\n```\n\nThese stat objects are instances of `fs.",
    "position": 6291,
    "id": "window_6291"
  },
  {
    "type": "window",
    "content": "log(`the previous mtime was: ${prev. mtime}`);\n});\n```\n\nThese stat objects are instances of `fs. Stat`.",
    "originalSentence": "log(`the previous mtime was: ${prev. mtime}`);\n});\n```\n\nThese stat objects are instances of `fs. Stat`.",
    "position": 6292,
    "id": "window_6292"
  },
  {
    "type": "window",
    "content": "mtime}`);\n});\n```\n\nThese stat objects are instances of `fs. Stat`. If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s.",
    "originalSentence": "mtime}`);\n});\n```\n\nThese stat objects are instances of `fs. Stat`. If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s.",
    "position": 6293,
    "id": "window_6293"
  },
  {
    "type": "window",
    "content": "Stat`. If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s. To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr.",
    "originalSentence": "Stat`. If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s. To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr.",
    "position": 6294,
    "id": "window_6294"
  },
  {
    "type": "window",
    "content": "If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s. To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr. mtimeMs` and `prev.",
    "originalSentence": "If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s. To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr. mtimeMs` and `prev.",
    "position": 6295,
    "id": "window_6295"
  },
  {
    "type": "window",
    "content": "To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr. mtimeMs` and `prev. mtimeMs`.",
    "originalSentence": "To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr. mtimeMs` and `prev. mtimeMs`.",
    "position": 6296,
    "id": "window_6296"
  },
  {
    "type": "window",
    "content": "mtimeMs`. When an `fs. watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch).",
    "originalSentence": "mtimeMs`. When an `fs. watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch).",
    "position": 6297,
    "id": "window_6297"
  },
  {
    "type": "window",
    "content": "When an `fs. watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects.",
    "originalSentence": "When an `fs. watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects.",
    "position": 6298,
    "id": "window_6298"
  },
  {
    "type": "window",
    "content": "watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0.",
    "originalSentence": "watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0.",
    "position": 6299,
    "id": "window_6299"
  },
  {
    "type": "window",
    "content": "If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0. 10.",
    "originalSentence": "If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0. 10.",
    "position": 6300,
    "id": "window_6300"
  },
  {
    "type": "window",
    "content": "This is a change in functionality since\nv0. 10. Using [`fs.",
    "originalSentence": "This is a change in functionality since\nv0. 10. Using [`fs.",
    "position": 6301,
    "id": "window_6301"
  },
  {
    "type": "window",
    "content": "10. Using [`fs. watch()`][] is more efficient than `fs.",
    "originalSentence": "10. Using [`fs. watch()`][] is more efficient than `fs.",
    "position": 6302,
    "id": "window_6302"
  },
  {
    "type": "window",
    "content": "Using [`fs. watch()`][] is more efficient than `fs. watchFile` and\n`fs.",
    "originalSentence": "Using [`fs. watch()`][] is more efficient than `fs. watchFile` and\n`fs.",
    "position": 6303,
    "id": "window_6303"
  },
  {
    "type": "window",
    "content": "watch()`][] is more efficient than `fs. watchFile` and\n`fs. unwatchFile`.",
    "originalSentence": "watch()`][] is more efficient than `fs. watchFile` and\n`fs. unwatchFile`.",
    "position": 6304,
    "id": "window_6304"
  },
  {
    "type": "window",
    "content": "unwatchFile`. `fs. watch` should be used instead of `fs.",
    "originalSentence": "unwatchFile`. `fs. watch` should be used instead of `fs.",
    "position": 6305,
    "id": "window_6305"
  },
  {
    "type": "window",
    "content": "`fs. watch` should be used instead of `fs. watchFile` and\n`fs.",
    "originalSentence": "`fs. watch` should be used instead of `fs. watchFile` and\n`fs.",
    "position": 6306,
    "id": "window_6306"
  },
  {
    "type": "window",
    "content": "watch` should be used instead of `fs. watchFile` and\n`fs. unwatchFile` when possible.",
    "originalSentence": "watch` should be used instead of `fs. watchFile` and\n`fs. unwatchFile` when possible.",
    "position": 6307,
    "id": "window_6307"
  },
  {
    "type": "window",
    "content": "watchFile` and\n`fs. unwatchFile` when possible. When a file being watched by `fs.",
    "originalSentence": "watchFile` and\n`fs. unwatchFile` when possible. When a file being watched by `fs.",
    "position": 6308,
    "id": "window_6308"
  },
  {
    "type": "window",
    "content": "unwatchFile` when possible. When a file being watched by `fs. watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance).",
    "originalSentence": "unwatchFile` when possible. When a file being watched by `fs. watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance).",
    "position": 6309,
    "id": "window_6309"
  },
  {
    "type": "window",
    "content": "When a file being watched by `fs. watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance). This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs.",
    "originalSentence": "When a file being watched by `fs. watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance). This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs.",
    "position": 6310,
    "id": "window_6310"
  },
  {
    "type": "window",
    "content": "watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance). This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs. write(fd, buffer, offset[, length[, position]], callback)`\n\n<!",
    "originalSentence": "watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance). This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs. write(fd, buffer, offset[, length[, position]], callback)`\n\n<!",
    "position": 6311,
    "id": "window_6311"
  },
  {
    "type": "window",
    "content": "This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs. write(fd, buffer, offset[, length[, position]], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "This happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name\n\n### `fs. write(fd, buffer, offset[, length[, position]], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6312,
    "id": "window_6312"
  },
  {
    "type": "window",
    "content": "write(fd, buffer, offset[, length[, position]], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "originalSentence": "write(fd, buffer, offset[, length[, position]], callback)`\n\n<! -- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18.",
    "position": 6313,
    "id": "window_6313"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v0. 0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6314,
    "id": "window_6314"
  },
  {
    "type": "window",
    "content": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14.",
    "originalSentence": "0.2\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14.",
    "position": 6315,
    "id": "window_6315"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 6316,
    "id": "window_6316"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "position": 6317,
    "id": "window_6317"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 6318,
    "id": "window_6318"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10.",
    "position": 6319,
    "id": "window_6319"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6320,
    "id": "window_6320"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6321,
    "id": "window_6321"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 6322,
    "id": "window_6322"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "position": 6323,
    "id": "window_6323"
  },
  {
    "type": "window",
    "content": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7.",
    "originalSentence": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7.",
    "position": 6324,
    "id": "window_6324"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "position": 6325,
    "id": "window_6325"
  },
  {
    "type": "window",
    "content": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. - version: v7.",
    "originalSentence": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. - version: v7.",
    "position": 6326,
    "id": "window_6326"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6327,
    "id": "window_6327"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6328,
    "id": "window_6328"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "position": 6329,
    "id": "window_6329"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "position": 6330,
    "id": "window_6330"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. `offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. `offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write.",
    "position": 6331,
    "id": "window_6331"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. `offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write. `position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "originalSentence": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. `offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write. `position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "position": 6332,
    "id": "window_6332"
  },
  {
    "type": "window",
    "content": "`offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write. `position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !",
    "originalSentence": "`offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write. `position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !",
    "position": 6333,
    "id": "window_6333"
  },
  {
    "type": "window",
    "content": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position ! == 'number'`, the data will be written\nat the current position.",
    "originalSentence": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position ! == 'number'`, the data will be written\nat the current position.",
    "position": 6334,
    "id": "window_6334"
  },
  {
    "type": "window",
    "content": "If `typeof position ! == 'number'`, the data will be written\nat the current position. See pwrite(2).",
    "originalSentence": "If `typeof position ! == 'number'`, the data will be written\nat the current position. See pwrite(2).",
    "position": 6335,
    "id": "window_6335"
  },
  {
    "type": "window",
    "content": "== 'number'`, the data will be written\nat the current position. See pwrite(2). The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`.",
    "originalSentence": "== 'number'`, the data will be written\nat the current position. See pwrite(2). The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`.",
    "position": 6336,
    "id": "window_6336"
  },
  {
    "type": "window",
    "content": "See pwrite(2). The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`. If this method is invoked as its [`util.",
    "originalSentence": "See pwrite(2). The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`. If this method is invoked as its [`util.",
    "position": 6337,
    "id": "window_6337"
  },
  {
    "type": "window",
    "content": "The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`. If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties.",
    "originalSentence": "The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`. If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties.",
    "position": 6338,
    "id": "window_6338"
  },
  {
    "type": "window",
    "content": "If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties. It is unsafe to use `fs.",
    "originalSentence": "If this method is invoked as its [`util. promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties. It is unsafe to use `fs.",
    "position": 6339,
    "id": "window_6339"
  },
  {
    "type": "window",
    "content": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties. It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback.",
    "originalSentence": "promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties. It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback.",
    "position": 6340,
    "id": "window_6340"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.",
    "originalSentence": "It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.",
    "position": 6341,
    "id": "window_6341"
  },
  {
    "type": "window",
    "content": "write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs. createWriteStream()`][] is\nrecommended.",
    "originalSentence": "write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs. createWriteStream()`][] is\nrecommended.",
    "position": 6342,
    "id": "window_6342"
  },
  {
    "type": "window",
    "content": "For this scenario, [`fs. createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "For this scenario, [`fs. createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 6343,
    "id": "window_6343"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 6344,
    "id": "window_6344"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. ### `fs.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. ### `fs.",
    "position": 6345,
    "id": "window_6345"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. ### `fs. write(fd, buffer[, options], callback)`\n\n<!",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. ### `fs. write(fd, buffer[, options], callback)`\n\n<!",
    "position": 6346,
    "id": "window_6346"
  },
  {
    "type": "window",
    "content": "### `fs. write(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18.",
    "originalSentence": "### `fs. write(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18.",
    "position": 6347,
    "id": "window_6347"
  },
  {
    "type": "window",
    "content": "write(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18. 3.0\n  - v16.",
    "originalSentence": "write(fd, buffer[, options], callback)`\n\n<! -- YAML\nadded:\n  - v18. 3.0\n  - v16.",
    "position": 6348,
    "id": "window_6348"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v18. 3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "-- YAML\nadded:\n  - v18. 3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 6349,
    "id": "window_6349"
  },
  {
    "type": "window",
    "content": "3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "originalSentence": "3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`.",
    "position": 6350,
    "id": "window_6350"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. Similar to the above `fs.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. Similar to the above `fs.",
    "position": 6351,
    "id": "window_6351"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. Similar to the above `fs. write` function, this version takes an\noptional `options` object.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}\n\nWrite `buffer` to the file specified by `fd`. Similar to the above `fs. write` function, this version takes an\noptional `options` object.",
    "position": 6352,
    "id": "window_6352"
  },
  {
    "type": "window",
    "content": "Similar to the above `fs. write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "originalSentence": "Similar to the above `fs. write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "position": 6353,
    "id": "window_6353"
  },
  {
    "type": "window",
    "content": "write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values. ### `fs.",
    "originalSentence": "write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values. ### `fs.",
    "position": 6354,
    "id": "window_6354"
  },
  {
    "type": "window",
    "content": "If no `options` object is specified, it will\ndefault with the above values. ### `fs. write(fd, string[, position[, encoding]], callback)`\n\n<!",
    "originalSentence": "If no `options` object is specified, it will\ndefault with the above values. ### `fs. write(fd, string[, position[, encoding]], callback)`\n\n<!",
    "position": 6355,
    "id": "window_6355"
  },
  {
    "type": "window",
    "content": "### `fs. write(fd, string[, position[, encoding]], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. write(fd, string[, position[, encoding]], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6356,
    "id": "window_6356"
  },
  {
    "type": "window",
    "content": "write(fd, string[, position[, encoding]], callback)`\n\n<! -- YAML\nadded: v0. 11.5\nchanges:\n  - version: v19.",
    "originalSentence": "write(fd, string[, position[, encoding]], callback)`\n\n<! -- YAML\nadded: v0. 11.5\nchanges:\n  - version: v19.",
    "position": 6357,
    "id": "window_6357"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.5\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "originalSentence": "-- YAML\nadded: v0. 11.5\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "position": 6358,
    "id": "window_6358"
  },
  {
    "type": "window",
    "content": "11.5\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17.",
    "originalSentence": "11.5\nchanges:\n  - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17.",
    "position": 6359,
    "id": "window_6359"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "position": 6360,
    "id": "window_6360"
  },
  {
    "type": "window",
    "content": "- version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v14.",
    "originalSentence": "- version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v14.",
    "position": 6361,
    "id": "window_6361"
  },
  {
    "type": "window",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function.",
    "position": 6362,
    "id": "window_6362"
  },
  {
    "type": "window",
    "content": "- version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14.",
    "originalSentence": "- version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14.",
    "position": 6363,
    "id": "window_6363"
  },
  {
    "type": "window",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 6364,
    "id": "window_6364"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "position": 6365,
    "id": "window_6365"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6366,
    "id": "window_6366"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6367,
    "id": "window_6367"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 6368,
    "id": "window_6368"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "position": 6369,
    "id": "window_6369"
  },
  {
    "type": "window",
    "content": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. - version: v7.",
    "originalSentence": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. - version: v7.",
    "position": 6370,
    "id": "window_6370"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6371,
    "id": "window_6371"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6372,
    "id": "window_6372"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`.",
    "position": 6373,
    "id": "window_6373"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`. If `string` is not a string,\nan exception is thrown.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`. If `string` is not a string,\nan exception is thrown.",
    "position": 6374,
    "id": "window_6374"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`. If `string` is not a string,\nan exception is thrown. `position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}\n\nWrite `string` to the file specified by `fd`. If `string` is not a string,\nan exception is thrown. `position` refers to the offset from the beginning of the file where this data\nshould be written.",
    "position": 6375,
    "id": "window_6375"
  },
  {
    "type": "window",
    "content": "If `string` is not a string,\nan exception is thrown. `position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !",
    "originalSentence": "If `string` is not a string,\nan exception is thrown. `position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !",
    "position": 6376,
    "id": "window_6376"
  },
  {
    "type": "window",
    "content": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position ! == 'number'` the data will be written at\nthe current position.",
    "originalSentence": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position ! == 'number'` the data will be written at\nthe current position.",
    "position": 6377,
    "id": "window_6377"
  },
  {
    "type": "window",
    "content": "If `typeof position ! == 'number'` the data will be written at\nthe current position. See pwrite(2).",
    "originalSentence": "If `typeof position ! == 'number'` the data will be written at\nthe current position. See pwrite(2).",
    "position": 6378,
    "id": "window_6378"
  },
  {
    "type": "window",
    "content": "== 'number'` the data will be written at\nthe current position. See pwrite(2). `encoding` is the expected string encoding.",
    "originalSentence": "== 'number'` the data will be written at\nthe current position. See pwrite(2). `encoding` is the expected string encoding.",
    "position": 6379,
    "id": "window_6379"
  },
  {
    "type": "window",
    "content": "See pwrite(2). `encoding` is the expected string encoding. The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written.",
    "originalSentence": "See pwrite(2). `encoding` is the expected string encoding. The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written.",
    "position": 6380,
    "id": "window_6380"
  },
  {
    "type": "window",
    "content": "`encoding` is the expected string encoding. The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written. Bytes\nwritten is not necessarily the same as string characters written.",
    "originalSentence": "`encoding` is the expected string encoding. The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written. Bytes\nwritten is not necessarily the same as string characters written.",
    "position": 6381,
    "id": "window_6381"
  },
  {
    "type": "window",
    "content": "The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written. Bytes\nwritten is not necessarily the same as string characters written. See\n[`Buffer.",
    "originalSentence": "The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written. Bytes\nwritten is not necessarily the same as string characters written. See\n[`Buffer.",
    "position": 6382,
    "id": "window_6382"
  },
  {
    "type": "window",
    "content": "Bytes\nwritten is not necessarily the same as string characters written. See\n[`Buffer. byteLength`][].",
    "originalSentence": "Bytes\nwritten is not necessarily the same as string characters written. See\n[`Buffer. byteLength`][].",
    "position": 6383,
    "id": "window_6383"
  },
  {
    "type": "window",
    "content": "See\n[`Buffer. byteLength`][]. It is unsafe to use `fs.",
    "originalSentence": "See\n[`Buffer. byteLength`][]. It is unsafe to use `fs.",
    "position": 6384,
    "id": "window_6384"
  },
  {
    "type": "window",
    "content": "byteLength`][]. It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback.",
    "originalSentence": "byteLength`][]. It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback.",
    "position": 6385,
    "id": "window_6385"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.",
    "originalSentence": "It is unsafe to use `fs. write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.",
    "position": 6386,
    "id": "window_6386"
  },
  {
    "type": "window",
    "content": "write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs. createWriteStream()`][] is\nrecommended.",
    "originalSentence": "write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs. createWriteStream()`][] is\nrecommended.",
    "position": 6387,
    "id": "window_6387"
  },
  {
    "type": "window",
    "content": "For this scenario, [`fs. createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "For this scenario, [`fs. createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 6388,
    "id": "window_6388"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "createWriteStream()`][] is\nrecommended. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 6389,
    "id": "window_6389"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. On Windows, if the file descriptor is connected to the console (e.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. On Windows, if the file descriptor is connected to the console (e.",
    "position": 6390,
    "id": "window_6390"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. On Windows, if the file descriptor is connected to the console (e. g.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. On Windows, if the file descriptor is connected to the console (e. g.",
    "position": 6391,
    "id": "window_6391"
  },
  {
    "type": "window",
    "content": "On Windows, if the file descriptor is connected to the console (e. g. `fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used.",
    "originalSentence": "On Windows, if the file descriptor is connected to the console (e. g. `fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used.",
    "position": 6392,
    "id": "window_6392"
  },
  {
    "type": "window",
    "content": "g. `fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used. It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command.",
    "originalSentence": "g. `fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used. It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command.",
    "position": 6393,
    "id": "window_6393"
  },
  {
    "type": "window",
    "content": "`fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used. It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command. See the [chcp][] docs for more\ndetails.",
    "originalSentence": "`fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used. It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command. See the [chcp][] docs for more\ndetails.",
    "position": 6394,
    "id": "window_6394"
  },
  {
    "type": "window",
    "content": "It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command. See the [chcp][] docs for more\ndetails. ### `fs.",
    "originalSentence": "It is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command. See the [chcp][] docs for more\ndetails. ### `fs.",
    "position": 6395,
    "id": "window_6395"
  },
  {
    "type": "window",
    "content": "See the [chcp][] docs for more\ndetails. ### `fs. writeFile(file, data[, options], callback)`\n\n<!",
    "originalSentence": "See the [chcp][] docs for more\ndetails. ### `fs. writeFile(file, data[, options], callback)`\n\n<!",
    "position": 6396,
    "id": "window_6396"
  },
  {
    "type": "window",
    "content": "### `fs. writeFile(file, data[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. writeFile(file, data[, options], callback)`\n\n<! -- YAML\nadded: v0.",
    "position": 6397,
    "id": "window_6397"
  },
  {
    "type": "window",
    "content": "writeFile(file, data[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "writeFile(file, data[, options], callback)`\n\n<! -- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21.",
    "position": 6398,
    "id": "window_6398"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "position": 6399,
    "id": "window_6399"
  },
  {
    "type": "window",
    "content": "1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "originalSentence": "1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "position": 6400,
    "id": "window_6400"
  },
  {
    "type": "window",
    "content": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19.",
    "originalSentence": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19.",
    "position": 6401,
    "id": "window_6401"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.",
    "position": 6402,
    "id": "window_6402"
  },
  {
    "type": "window",
    "content": "- version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v18.",
    "originalSentence": "- version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v18.",
    "position": 6403,
    "id": "window_6403"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported. - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6404,
    "id": "window_6404"
  },
  {
    "type": "window",
    "content": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v17.",
    "originalSentence": "- version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v17.",
    "position": 6405,
    "id": "window_6405"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. - version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.",
    "position": 6406,
    "id": "window_6406"
  },
  {
    "type": "window",
    "content": "- version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v16.",
    "originalSentence": "- version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v16.",
    "position": 6407,
    "id": "window_6407"
  },
  {
    "type": "window",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.",
    "position": 6408,
    "id": "window_6408"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15.",
    "position": 6409,
    "id": "window_6409"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15. 2.0\n      - v14.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned. - version:\n      - v15. 2.0\n      - v14.",
    "position": 6410,
    "id": "window_6410"
  },
  {
    "type": "window",
    "content": "- version:\n      - v15. 2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "originalSentence": "- version:\n      - v15. 2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.",
    "position": 6411,
    "id": "window_6411"
  },
  {
    "type": "window",
    "content": "2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14.",
    "originalSentence": "2.0\n      - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14.",
    "position": 6412,
    "id": "window_6412"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request. - version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "position": 6413,
    "id": "window_6413"
  },
  {
    "type": "window",
    "content": "- version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14.",
    "originalSentence": "- version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14.",
    "position": 6414,
    "id": "window_6414"
  },
  {
    "type": "window",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 6415,
    "id": "window_6415"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "position": 6416,
    "id": "window_6416"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 6417,
    "id": "window_6417"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10.",
    "position": 6418,
    "id": "window_6418"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional.",
    "position": 6419,
    "id": "window_6419"
  },
  {
    "type": "window",
    "content": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "originalSentence": "- version: v10. 0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.",
    "position": 6420,
    "id": "window_6420"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime. - version: v7.",
    "position": 6421,
    "id": "window_6421"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "originalSentence": "Not passing\n                 it will throw a `TypeError` at runtime. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "position": 6422,
    "id": "window_6422"
  },
  {
    "type": "window",
    "content": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v7.",
    "originalSentence": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v7.",
    "position": 6423,
    "id": "window_6423"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional.",
    "position": 6424,
    "id": "window_6424"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.",
    "position": 6425,
    "id": "window_6425"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5.",
    "position": 6426,
    "id": "window_6426"
  },
  {
    "type": "window",
    "content": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "Not passing\n                 it will emit a deprecation warning with id DEP0013. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 6427,
    "id": "window_6427"
  },
  {
    "type": "window",
    "content": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 6428,
    "id": "window_6428"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.",
    "position": 6429,
    "id": "window_6429"
  },
  {
    "type": "window",
    "content": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "originalSentence": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "position": 6430,
    "id": "window_6430"
  },
  {
    "type": "window",
    "content": "**Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsync()` is used to flush the data.",
    "originalSentence": "**Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsync()` is used to flush the data.",
    "position": 6431,
    "id": "window_6431"
  },
  {
    "type": "window",
    "content": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsync()` is used to flush the data. **Default:** `false`.",
    "originalSentence": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsync()` is used to flush the data. **Default:** `false`.",
    "position": 6432,
    "id": "window_6432"
  },
  {
    "type": "window",
    "content": "fsync()` is used to flush the data. **Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists.",
    "originalSentence": "fsync()` is used to flush the data. **Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists.",
    "position": 6433,
    "id": "window_6433"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists. `data` can be a string or a buffer.",
    "originalSentence": "**Default:** `false`. * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists. `data` can be a string or a buffer.",
    "position": 6434,
    "id": "window_6434"
  },
  {
    "type": "window",
    "content": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists. `data` can be a string or a buffer. When `file` is a file descriptor, the behavior is similar to calling\n`fs.",
    "originalSentence": "* `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n\nWhen `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists. `data` can be a string or a buffer. When `file` is a file descriptor, the behavior is similar to calling\n`fs.",
    "position": 6435,
    "id": "window_6435"
  },
  {
    "type": "window",
    "content": "`data` can be a string or a buffer. When `file` is a file descriptor, the behavior is similar to calling\n`fs. write()` directly (which is recommended).",
    "originalSentence": "`data` can be a string or a buffer. When `file` is a file descriptor, the behavior is similar to calling\n`fs. write()` directly (which is recommended).",
    "position": 6436,
    "id": "window_6436"
  },
  {
    "type": "window",
    "content": "When `file` is a file descriptor, the behavior is similar to calling\n`fs. write()` directly (which is recommended). See the notes below on using\na file descriptor.",
    "originalSentence": "When `file` is a file descriptor, the behavior is similar to calling\n`fs. write()` directly (which is recommended). See the notes below on using\na file descriptor.",
    "position": 6437,
    "id": "window_6437"
  },
  {
    "type": "window",
    "content": "write()` directly (which is recommended). See the notes below on using\na file descriptor. The `encoding` option is ignored if `data` is a buffer.",
    "originalSentence": "write()` directly (which is recommended). See the notes below on using\na file descriptor. The `encoding` option is ignored if `data` is a buffer.",
    "position": 6438,
    "id": "window_6438"
  },
  {
    "type": "window",
    "content": "See the notes below on using\na file descriptor. The `encoding` option is ignored if `data` is a buffer. The `mode` option only affects the newly created file.",
    "originalSentence": "See the notes below on using\na file descriptor. The `encoding` option is ignored if `data` is a buffer. The `mode` option only affects the newly created file.",
    "position": 6439,
    "id": "window_6439"
  },
  {
    "type": "window",
    "content": "The `encoding` option is ignored if `data` is a buffer. The `mode` option only affects the newly created file. See [`fs.",
    "originalSentence": "The `encoding` option is ignored if `data` is a buffer. The `mode` option only affects the newly created file. See [`fs.",
    "position": 6440,
    "id": "window_6440"
  },
  {
    "type": "window",
    "content": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "position": 6441,
    "id": "window_6441"
  },
  {
    "type": "window",
    "content": "See [`fs. open()`][]\nfor more details. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer.",
    "originalSentence": "See [`fs. open()`][]\nfor more details. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer.",
    "position": 6442,
    "id": "window_6442"
  },
  {
    "type": "window",
    "content": "open()`][]\nfor more details. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer. from('Hello Node.",
    "originalSentence": "open()`][]\nfor more details. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer. from('Hello Node.",
    "position": 6443,
    "id": "window_6443"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer. from('Hello Node. js'));\nwriteFile('message.",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer. from('Hello Node. js'));\nwriteFile('message.",
    "position": 6444,
    "id": "window_6444"
  },
  {
    "type": "window",
    "content": "from('Hello Node. js'));\nwriteFile('message. txt', data, (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "from('Hello Node. js'));\nwriteFile('message. txt', data, (err) => {\n  if (err) throw err;\n  console.",
    "position": 6445,
    "id": "window_6445"
  },
  {
    "type": "window",
    "content": "js'));\nwriteFile('message. txt', data, (err) => {\n  if (err) throw err;\n  console. log('The file has been saved!'",
    "originalSentence": "js'));\nwriteFile('message. txt', data, (err) => {\n  if (err) throw err;\n  console. log('The file has been saved!'",
    "position": 6446,
    "id": "window_6446"
  },
  {
    "type": "window",
    "content": "txt', data, (err) => {\n  if (err) throw err;\n  console. log('The file has been saved!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message.",
    "originalSentence": "txt', data, (err) => {\n  if (err) throw err;\n  console. log('The file has been saved!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message.",
    "position": 6447,
    "id": "window_6447"
  },
  {
    "type": "window",
    "content": "log('The file has been saved!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message. txt', 'Hello Node.",
    "originalSentence": "log('The file has been saved!' );\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message. txt', 'Hello Node.",
    "position": 6448,
    "id": "window_6448"
  },
  {
    "type": "window",
    "content": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message. txt', 'Hello Node. js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs.",
    "originalSentence": ");\n});\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { writeFile } from 'node:fs';\n\nwriteFile('message. txt', 'Hello Node. js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs.",
    "position": 6449,
    "id": "window_6449"
  },
  {
    "type": "window",
    "content": "txt', 'Hello Node. js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs. writeFile()` multiple times on the same file without\nwaiting for the callback.",
    "originalSentence": "txt', 'Hello Node. js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs. writeFile()` multiple times on the same file without\nwaiting for the callback.",
    "position": 6450,
    "id": "window_6450"
  },
  {
    "type": "window",
    "content": "js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs. writeFile()` multiple times on the same file without\nwaiting for the callback. For this scenario, [`fs.",
    "originalSentence": "js', 'utf8', callback);\n```\n\nIt is unsafe to use `fs. writeFile()` multiple times on the same file without\nwaiting for the callback. For this scenario, [`fs.",
    "position": 6451,
    "id": "window_6451"
  },
  {
    "type": "window",
    "content": "writeFile()` multiple times on the same file without\nwaiting for the callback. For this scenario, [`fs. createWriteStream()`][] is\nrecommended.",
    "originalSentence": "writeFile()` multiple times on the same file without\nwaiting for the callback. For this scenario, [`fs. createWriteStream()`][] is\nrecommended.",
    "position": 6452,
    "id": "window_6452"
  },
  {
    "type": "window",
    "content": "For this scenario, [`fs. createWriteStream()`][] is\nrecommended. Similarly to `fs.",
    "originalSentence": "For this scenario, [`fs. createWriteStream()`][] is\nrecommended. Similarly to `fs.",
    "position": 6453,
    "id": "window_6453"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][] is\nrecommended. Similarly to `fs. readFile` - `fs.",
    "originalSentence": "createWriteStream()`][] is\nrecommended. Similarly to `fs. readFile` - `fs.",
    "position": 6454,
    "id": "window_6454"
  },
  {
    "type": "window",
    "content": "Similarly to `fs. readFile` - `fs. writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it.",
    "originalSentence": "Similarly to `fs. readFile` - `fs. writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it.",
    "position": 6455,
    "id": "window_6455"
  },
  {
    "type": "window",
    "content": "readFile` - `fs. writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it. For performance sensitive code consider using [`fs.",
    "originalSentence": "readFile` - `fs. writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it. For performance sensitive code consider using [`fs.",
    "position": 6456,
    "id": "window_6456"
  },
  {
    "type": "window",
    "content": "writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it. For performance sensitive code consider using [`fs. createWriteStream()`][].",
    "originalSentence": "writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it. For performance sensitive code consider using [`fs. createWriteStream()`][].",
    "position": 6457,
    "id": "window_6457"
  },
  {
    "type": "window",
    "content": "For performance sensitive code consider using [`fs. createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fs.",
    "originalSentence": "For performance sensitive code consider using [`fs. createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fs.",
    "position": 6458,
    "id": "window_6458"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fs. writeFile()`.",
    "originalSentence": "createWriteStream()`][]. It is possible to use an {AbortSignal} to cancel an `fs. writeFile()`.",
    "position": 6459,
    "id": "window_6459"
  },
  {
    "type": "window",
    "content": "It is possible to use an {AbortSignal} to cancel an `fs. writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "originalSentence": "It is possible to use an {AbortSignal} to cancel an `fs. writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "position": 6460,
    "id": "window_6460"
  },
  {
    "type": "window",
    "content": "writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.",
    "originalSentence": "writeFile()`. Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.",
    "position": 6461,
    "id": "window_6461"
  },
  {
    "type": "window",
    "content": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer. from('Hello Node.",
    "originalSentence": "Cancelation is \"best effort\", and some amount of data is likely still\nto be written. ```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer. from('Hello Node.",
    "position": 6462,
    "id": "window_6462"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer. from('Hello Node. js'));\nwriteFile('message.",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer. from('Hello Node. js'));\nwriteFile('message.",
    "position": 6463,
    "id": "window_6463"
  },
  {
    "type": "window",
    "content": "from('Hello Node. js'));\nwriteFile('message. txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.",
    "originalSentence": "from('Hello Node. js'));\nwriteFile('message. txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.",
    "position": 6464,
    "id": "window_6464"
  },
  {
    "type": "window",
    "content": "js'));\nwriteFile('message. txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller. abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "originalSentence": "js'));\nwriteFile('message. txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller. abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.",
    "position": 6465,
    "id": "window_6465"
  },
  {
    "type": "window",
    "content": "txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller. abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs.",
    "originalSentence": "txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller. abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs.",
    "position": 6466,
    "id": "window_6466"
  },
  {
    "type": "window",
    "content": "abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs. #### Using `fs.",
    "originalSentence": "abort();\n```\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs. writeFile` performs. #### Using `fs.",
    "position": 6467,
    "id": "window_6467"
  },
  {
    "type": "window",
    "content": "writeFile` performs. #### Using `fs. writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs.",
    "originalSentence": "writeFile` performs. #### Using `fs. writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs.",
    "position": 6468,
    "id": "window_6468"
  },
  {
    "type": "window",
    "content": "#### Using `fs. writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs. write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer.",
    "originalSentence": "#### Using `fs. writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs. write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer.",
    "position": 6469,
    "id": "window_6469"
  },
  {
    "type": "window",
    "content": "writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs. write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer. from(data, options.",
    "originalSentence": "writeFile()` with file descriptors\n\nWhen `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs. write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer. from(data, options.",
    "position": 6470,
    "id": "window_6470"
  },
  {
    "type": "window",
    "content": "write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer. from(data, options. encoding), callback);\n```\n\nThe difference from directly calling `fs.",
    "originalSentence": "write()` like:\n\n```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer. from(data, options. encoding), callback);\n```\n\nThe difference from directly calling `fs.",
    "position": 6471,
    "id": "window_6471"
  },
  {
    "type": "window",
    "content": "from(data, options. encoding), callback);\n```\n\nThe difference from directly calling `fs. write()` is that under some unusual\nconditions, `fs.",
    "originalSentence": "from(data, options. encoding), callback);\n```\n\nThe difference from directly calling `fs. write()` is that under some unusual\nconditions, `fs.",
    "position": 6472,
    "id": "window_6472"
  },
  {
    "type": "window",
    "content": "encoding), callback);\n```\n\nThe difference from directly calling `fs. write()` is that under some unusual\nconditions, `fs. write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs.",
    "originalSentence": "encoding), callback);\n```\n\nThe difference from directly calling `fs. write()` is that under some unusual\nconditions, `fs. write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs.",
    "position": 6473,
    "id": "window_6473"
  },
  {
    "type": "window",
    "content": "write()` is that under some unusual\nconditions, `fs. write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs. writeFile()` retries until\nthe data is entirely written (or an error occurs).",
    "originalSentence": "write()` is that under some unusual\nconditions, `fs. write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs. writeFile()` retries until\nthe data is entirely written (or an error occurs).",
    "position": 6474,
    "id": "window_6474"
  },
  {
    "type": "window",
    "content": "write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs. writeFile()` retries until\nthe data is entirely written (or an error occurs). The implications of this are a common source of confusion.",
    "originalSentence": "write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs. writeFile()` retries until\nthe data is entirely written (or an error occurs). The implications of this are a common source of confusion.",
    "position": 6475,
    "id": "window_6475"
  },
  {
    "type": "window",
    "content": "writeFile()` retries until\nthe data is entirely written (or an error occurs). The implications of this are a common source of confusion. In\nthe file descriptor case, the file is not replaced!",
    "originalSentence": "writeFile()` retries until\nthe data is entirely written (or an error occurs). The implications of this are a common source of confusion. In\nthe file descriptor case, the file is not replaced!",
    "position": 6476,
    "id": "window_6476"
  },
  {
    "type": "window",
    "content": "The implications of this are a common source of confusion. In\nthe file descriptor case, the file is not replaced! The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data.",
    "originalSentence": "The implications of this are a common source of confusion. In\nthe file descriptor case, the file is not replaced! The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data.",
    "position": 6477,
    "id": "window_6477"
  },
  {
    "type": "window",
    "content": "In\nthe file descriptor case, the file is not replaced! The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data. For example, if `fs.",
    "originalSentence": "In\nthe file descriptor case, the file is not replaced! The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data. For example, if `fs.",
    "position": 6478,
    "id": "window_6478"
  },
  {
    "type": "window",
    "content": "The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data. For example, if `fs. writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor).",
    "originalSentence": "The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data. For example, if `fs. writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor).",
    "position": 6479,
    "id": "window_6479"
  },
  {
    "type": "window",
    "content": "For example, if `fs. writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor). If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`.",
    "originalSentence": "For example, if `fs. writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor). If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`.",
    "position": 6480,
    "id": "window_6480"
  },
  {
    "type": "window",
    "content": "writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor). If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`. ### `fs.",
    "originalSentence": "writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor). If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`. ### `fs.",
    "position": 6481,
    "id": "window_6481"
  },
  {
    "type": "window",
    "content": "If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`. ### `fs. writev(fd, buffers[, position], callback)`\n\n<!",
    "originalSentence": "If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`. ### `fs. writev(fd, buffers[, position], callback)`\n\n<!",
    "position": 6482,
    "id": "window_6482"
  },
  {
    "type": "window",
    "content": "### `fs. writev(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "### `fs. writev(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded: v12.",
    "position": 6483,
    "id": "window_6483"
  },
  {
    "type": "window",
    "content": "writev(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded: v12. 9.0\nchanges:\n  - version: v18.",
    "originalSentence": "writev(fd, buffers[, position], callback)`\n\n<! -- YAML\nadded: v12. 9.0\nchanges:\n  - version: v18.",
    "position": 6484,
    "id": "window_6484"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 9.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v12. 9.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 6485,
    "id": "window_6485"
  },
  {
    "type": "window",
    "content": "9.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`.",
    "originalSentence": "9.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`.",
    "position": 6486,
    "id": "window_6486"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`. `position` is the offset from the beginning of the file where this data\nshould be written.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`. `position` is the offset from the beginning of the file where this data\nshould be written.",
    "position": 6487,
    "id": "window_6487"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`. `position` is the offset from the beginning of the file where this data\nshould be written. If `typeof position !",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}\n\nWrite an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`. `position` is the offset from the beginning of the file where this data\nshould be written. If `typeof position !",
    "position": 6488,
    "id": "window_6488"
  },
  {
    "type": "window",
    "content": "`position` is the offset from the beginning of the file where this data\nshould be written. If `typeof position ! == 'number'`, the data will be written\nat the current position.",
    "originalSentence": "`position` is the offset from the beginning of the file where this data\nshould be written. If `typeof position ! == 'number'`, the data will be written\nat the current position.",
    "position": 6489,
    "id": "window_6489"
  },
  {
    "type": "window",
    "content": "If `typeof position ! == 'number'`, the data will be written\nat the current position. The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`.",
    "originalSentence": "If `typeof position ! == 'number'`, the data will be written\nat the current position. The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`.",
    "position": 6490,
    "id": "window_6490"
  },
  {
    "type": "window",
    "content": "== 'number'`, the data will be written\nat the current position. The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`. `bytesWritten` is how many bytes were written from `buffers`.",
    "originalSentence": "== 'number'`, the data will be written\nat the current position. The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`. `bytesWritten` is how many bytes were written from `buffers`.",
    "position": 6491,
    "id": "window_6491"
  },
  {
    "type": "window",
    "content": "The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`. `bytesWritten` is how many bytes were written from `buffers`. If this method is [`util.",
    "originalSentence": "The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`. `bytesWritten` is how many bytes were written from `buffers`. If this method is [`util.",
    "position": 6492,
    "id": "window_6492"
  },
  {
    "type": "window",
    "content": "`bytesWritten` is how many bytes were written from `buffers`. If this method is [`util. promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties.",
    "originalSentence": "`bytesWritten` is how many bytes were written from `buffers`. If this method is [`util. promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties.",
    "position": 6493,
    "id": "window_6493"
  },
  {
    "type": "window",
    "content": "If this method is [`util. promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties. It is unsafe to use `fs.",
    "originalSentence": "If this method is [`util. promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties. It is unsafe to use `fs.",
    "position": 6494,
    "id": "window_6494"
  },
  {
    "type": "window",
    "content": "promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties. It is unsafe to use `fs. writev()` multiple times on the same file without\nwaiting for the callback.",
    "originalSentence": "promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties. It is unsafe to use `fs. writev()` multiple times on the same file without\nwaiting for the callback.",
    "position": 6495,
    "id": "window_6495"
  },
  {
    "type": "window",
    "content": "It is unsafe to use `fs. writev()` multiple times on the same file without\nwaiting for the callback. For this scenario, use [`fs.",
    "originalSentence": "It is unsafe to use `fs. writev()` multiple times on the same file without\nwaiting for the callback. For this scenario, use [`fs.",
    "position": 6496,
    "id": "window_6496"
  },
  {
    "type": "window",
    "content": "writev()` multiple times on the same file without\nwaiting for the callback. For this scenario, use [`fs. createWriteStream()`][].",
    "originalSentence": "writev()` multiple times on the same file without\nwaiting for the callback. For this scenario, use [`fs. createWriteStream()`][].",
    "position": 6497,
    "id": "window_6497"
  },
  {
    "type": "window",
    "content": "For this scenario, use [`fs. createWriteStream()`][]. On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "For this scenario, use [`fs. createWriteStream()`][]. On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 6498,
    "id": "window_6498"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][]. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "createWriteStream()`][]. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 6499,
    "id": "window_6499"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. ## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. ## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails.",
    "position": 6500,
    "id": "window_6500"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. ## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails. ### `fs.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. ## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails. ### `fs.",
    "position": 6501,
    "id": "window_6501"
  },
  {
    "type": "window",
    "content": "## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails. ### `fs. accessSync(path[, mode])`\n\n<!",
    "originalSentence": "## Synchronous API\n\nThe synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails. ### `fs. accessSync(path[, mode])`\n\n<!",
    "position": 6502,
    "id": "window_6502"
  },
  {
    "type": "window",
    "content": "### `fs. accessSync(path[, mode])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. accessSync(path[, mode])`\n\n<! -- YAML\nadded: v0.",
    "position": 6503,
    "id": "window_6503"
  },
  {
    "type": "window",
    "content": "accessSync(path[, mode])`\n\n<! -- YAML\nadded: v0. 11.15\nchanges:\n  - version: v7.",
    "originalSentence": "accessSync(path[, mode])`\n\n<! -- YAML\nadded: v0. 11.15\nchanges:\n  - version: v7.",
    "position": 6504,
    "id": "window_6504"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.15\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "-- YAML\nadded: v0. 11.15\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6505,
    "id": "window_6505"
  },
  {
    "type": "window",
    "content": "11.15\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "originalSentence": "11.15\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.",
    "position": 6506,
    "id": "window_6506"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants.",
    "position": 6507,
    "id": "window_6507"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants. F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs. constants. F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`.",
    "position": 6508,
    "id": "window_6508"
  },
  {
    "type": "window",
    "content": "constants. F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`. The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed.",
    "originalSentence": "constants. F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`. The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed.",
    "position": 6509,
    "id": "window_6509"
  },
  {
    "type": "window",
    "content": "F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`. The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed. `mode` should be either the value\n`fs.",
    "originalSentence": "F_OK`\n\nSynchronously tests a user's permissions for the file or directory specified\nby `path`. The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed. `mode` should be either the value\n`fs.",
    "position": 6510,
    "id": "window_6510"
  },
  {
    "type": "window",
    "content": "The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed. `mode` should be either the value\n`fs. constants.",
    "originalSentence": "The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed. `mode` should be either the value\n`fs. constants.",
    "position": 6511,
    "id": "window_6511"
  },
  {
    "type": "window",
    "content": "`mode` should be either the value\n`fs. constants. F_OK` or a mask consisting of the bitwise OR of any of\n`fs.",
    "originalSentence": "`mode` should be either the value\n`fs. constants. F_OK` or a mask consisting of the bitwise OR of any of\n`fs.",
    "position": 6512,
    "id": "window_6512"
  },
  {
    "type": "window",
    "content": "constants. F_OK` or a mask consisting of the bitwise OR of any of\n`fs. constants.",
    "originalSentence": "constants. F_OK` or a mask consisting of the bitwise OR of any of\n`fs. constants.",
    "position": 6513,
    "id": "window_6513"
  },
  {
    "type": "window",
    "content": "F_OK` or a mask consisting of the bitwise OR of any of\n`fs. constants. R_OK`, `fs.",
    "originalSentence": "F_OK` or a mask consisting of the bitwise OR of any of\n`fs. constants. R_OK`, `fs.",
    "position": 6514,
    "id": "window_6514"
  },
  {
    "type": "window",
    "content": "constants. R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "constants. R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "position": 6515,
    "id": "window_6515"
  },
  {
    "type": "window",
    "content": "R_OK`). Check [File access constants][] for\npossible values of `mode`. If any of the accessibility checks fail, an `Error` will be thrown.",
    "originalSentence": "R_OK`). Check [File access constants][] for\npossible values of `mode`. If any of the accessibility checks fail, an `Error` will be thrown.",
    "position": 6516,
    "id": "window_6516"
  },
  {
    "type": "window",
    "content": "Check [File access constants][] for\npossible values of `mode`. If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,\nthe method will return `undefined`.",
    "originalSentence": "Check [File access constants][] for\npossible values of `mode`. If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,\nthe method will return `undefined`.",
    "position": 6517,
    "id": "window_6517"
  },
  {
    "type": "window",
    "content": "If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,\nthe method will return `undefined`. ```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants.",
    "originalSentence": "If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,\nthe method will return `undefined`. ```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants.",
    "position": 6518,
    "id": "window_6518"
  },
  {
    "type": "window",
    "content": "Otherwise,\nthe method will return `undefined`. ```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants. R_OK | constants.",
    "originalSentence": "Otherwise,\nthe method will return `undefined`. ```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants. R_OK | constants.",
    "position": 6519,
    "id": "window_6519"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants. R_OK | constants. W_OK);\n  console.",
    "originalSentence": "```mjs\nimport { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants. R_OK | constants. W_OK);\n  console.",
    "position": 6520,
    "id": "window_6520"
  },
  {
    "type": "window",
    "content": "R_OK | constants. W_OK);\n  console. log('can read/write');\n} catch (err) {\n  console.",
    "originalSentence": "R_OK | constants. W_OK);\n  console. log('can read/write');\n} catch (err) {\n  console.",
    "position": 6521,
    "id": "window_6521"
  },
  {
    "type": "window",
    "content": "W_OK);\n  console. log('can read/write');\n} catch (err) {\n  console. error('no access!'",
    "originalSentence": "W_OK);\n  console. log('can read/write');\n} catch (err) {\n  console. error('no access!'",
    "position": 6522,
    "id": "window_6522"
  },
  {
    "type": "window",
    "content": "log('can read/write');\n} catch (err) {\n  console. error('no access!' );\n}\n```\n\n### `fs.",
    "originalSentence": "log('can read/write');\n} catch (err) {\n  console. error('no access!' );\n}\n```\n\n### `fs.",
    "position": 6523,
    "id": "window_6523"
  },
  {
    "type": "window",
    "content": "error('no access!' );\n}\n```\n\n### `fs. appendFileSync(path, data[, options])`\n\n<!",
    "originalSentence": "error('no access!' );\n}\n```\n\n### `fs. appendFileSync(path, data[, options])`\n\n<!",
    "position": 6524,
    "id": "window_6524"
  },
  {
    "type": "window",
    "content": ");\n}\n```\n\n### `fs. appendFileSync(path, data[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": ");\n}\n```\n\n### `fs. appendFileSync(path, data[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6525,
    "id": "window_6525"
  },
  {
    "type": "window",
    "content": "appendFileSync(path, data[, options])`\n\n<! -- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "appendFileSync(path, data[, options])`\n\n<! -- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21.",
    "position": 6526,
    "id": "window_6526"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v0. 6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20.",
    "position": 6527,
    "id": "window_6527"
  },
  {
    "type": "window",
    "content": "6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "originalSentence": "6.7\nchanges:\n  - version:\n    - v21. 1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.",
    "position": 6528,
    "id": "window_6528"
  },
  {
    "type": "window",
    "content": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v7.",
    "originalSentence": "1.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v7.",
    "position": 6529,
    "id": "window_6529"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported. - version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.",
    "position": 6530,
    "id": "window_6530"
  },
  {
    "type": "window",
    "content": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5.",
    "originalSentence": "- version: v7. 0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5.",
    "position": 6531,
    "id": "window_6531"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 6532,
    "id": "window_6532"
  },
  {
    "type": "window",
    "content": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 6533,
    "id": "window_6533"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.",
    "position": 6534,
    "id": "window_6534"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it.",
    "position": 6535,
    "id": "window_6535"
  },
  {
    "type": "window",
    "content": "**Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "originalSentence": "**Default:** `'a'`. * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "position": 6536,
    "id": "window_6536"
  },
  {
    "type": "window",
    "content": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. Synchronously append data to a file, creating the file if it does not yet\nexist.",
    "originalSentence": "* `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`. Synchronously append data to a file, creating the file if it does not yet\nexist.",
    "position": 6537,
    "id": "window_6537"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. Synchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "originalSentence": "**Default:** `false`. Synchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "position": 6538,
    "id": "window_6538"
  },
  {
    "type": "window",
    "content": "Synchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}. The `mode` option only affects the newly created file.",
    "originalSentence": "Synchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}. The `mode` option only affects the newly created file.",
    "position": 6539,
    "id": "window_6539"
  },
  {
    "type": "window",
    "content": "`data` can be a string or a {Buffer}. The `mode` option only affects the newly created file. See [`fs.",
    "originalSentence": "`data` can be a string or a {Buffer}. The `mode` option only affects the newly created file. See [`fs.",
    "position": 6540,
    "id": "window_6540"
  },
  {
    "type": "window",
    "content": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "position": 6541,
    "id": "window_6541"
  },
  {
    "type": "window",
    "content": "See [`fs. open()`][]\nfor more details. ```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message.",
    "originalSentence": "See [`fs. open()`][]\nfor more details. ```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message.",
    "position": 6542,
    "id": "window_6542"
  },
  {
    "type": "window",
    "content": "open()`][]\nfor more details. ```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message. txt', 'data to append');\n  console.",
    "originalSentence": "open()`][]\nfor more details. ```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message. txt', 'data to append');\n  console.",
    "position": 6543,
    "id": "window_6543"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message. txt', 'data to append');\n  console. log('The \"data to append\" was appended to file!'",
    "originalSentence": "```mjs\nimport { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message. txt', 'data to append');\n  console. log('The \"data to append\" was appended to file!'",
    "position": 6544,
    "id": "window_6544"
  },
  {
    "type": "window",
    "content": "txt', 'data to append');\n  console. log('The \"data to append\" was appended to file!' );\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message.",
    "originalSentence": "txt', 'data to append');\n  console. log('The \"data to append\" was appended to file!' );\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message.",
    "position": 6545,
    "id": "window_6545"
  },
  {
    "type": "window",
    "content": "log('The \"data to append\" was appended to file!' );\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message. txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "originalSentence": "log('The \"data to append\" was appended to file!' );\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message. txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.",
    "position": 6546,
    "id": "window_6546"
  },
  {
    "type": "window",
    "content": ");\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message. txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs.",
    "originalSentence": ");\n} catch (err) {\n  /* Handle the error */\n}\n```\n\nIf `options` is a string, then it specifies the encoding:\n\n```mjs\nimport { appendFileSync } from 'node:fs';\n\nappendFileSync('message. txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs.",
    "position": 6547,
    "id": "window_6547"
  },
  {
    "type": "window",
    "content": "txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs. openSync()`).",
    "originalSentence": "txt', 'data to append', 'utf8');\n```\n\nThe `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs. open()` or `fs. openSync()`).",
    "position": 6548,
    "id": "window_6548"
  },
  {
    "type": "window",
    "content": "open()` or `fs. openSync()`). The file descriptor will\nnot be closed automatically.",
    "originalSentence": "open()` or `fs. openSync()`). The file descriptor will\nnot be closed automatically.",
    "position": 6549,
    "id": "window_6549"
  },
  {
    "type": "window",
    "content": "openSync()`). The file descriptor will\nnot be closed automatically. ```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.",
    "originalSentence": "openSync()`). The file descriptor will\nnot be closed automatically. ```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.",
    "position": 6550,
    "id": "window_6550"
  },
  {
    "type": "window",
    "content": "The file descriptor will\nnot be closed automatically. ```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message. txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !",
    "originalSentence": "The file descriptor will\nnot be closed automatically. ```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message. txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !",
    "position": 6551,
    "id": "window_6551"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message. txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd ! == undefined)\n    closeSync(fd);\n}\n```\n\n### `fs.",
    "originalSentence": "```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message. txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd ! == undefined)\n    closeSync(fd);\n}\n```\n\n### `fs.",
    "position": 6552,
    "id": "window_6552"
  },
  {
    "type": "window",
    "content": "txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd ! == undefined)\n    closeSync(fd);\n}\n```\n\n### `fs. chmodSync(path, mode)`\n\n<!",
    "originalSentence": "txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd ! == undefined)\n    closeSync(fd);\n}\n```\n\n### `fs. chmodSync(path, mode)`\n\n<!",
    "position": 6553,
    "id": "window_6553"
  },
  {
    "type": "window",
    "content": "== undefined)\n    closeSync(fd);\n}\n```\n\n### `fs. chmodSync(path, mode)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "== undefined)\n    closeSync(fd);\n}\n```\n\n### `fs. chmodSync(path, mode)`\n\n<! -- YAML\nadded: v0.",
    "position": 6554,
    "id": "window_6554"
  },
  {
    "type": "window",
    "content": "chmodSync(path, mode)`\n\n<! -- YAML\nadded: v0. 6.7\nchanges:\n  - version: v7.",
    "originalSentence": "chmodSync(path, mode)`\n\n<! -- YAML\nadded: v0. 6.7\nchanges:\n  - version: v7.",
    "position": 6555,
    "id": "window_6555"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 6.7\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "-- YAML\nadded: v0. 6.7\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6556,
    "id": "window_6556"
  },
  {
    "type": "window",
    "content": "6.7\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "6.7\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6557,
    "id": "window_6557"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. chmod()`][].",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. chmod()`][].",
    "position": 6558,
    "id": "window_6558"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. chmod()`][]. See the POSIX chmod(2) documentation for more detail.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. chmod()`][]. See the POSIX chmod(2) documentation for more detail.",
    "position": 6559,
    "id": "window_6559"
  },
  {
    "type": "window",
    "content": "chmod()`][]. See the POSIX chmod(2) documentation for more detail. ### `fs.",
    "originalSentence": "chmod()`][]. See the POSIX chmod(2) documentation for more detail. ### `fs.",
    "position": 6560,
    "id": "window_6560"
  },
  {
    "type": "window",
    "content": "See the POSIX chmod(2) documentation for more detail. ### `fs. chownSync(path, uid, gid)`\n\n<!",
    "originalSentence": "See the POSIX chmod(2) documentation for more detail. ### `fs. chownSync(path, uid, gid)`\n\n<!",
    "position": 6561,
    "id": "window_6561"
  },
  {
    "type": "window",
    "content": "### `fs. chownSync(path, uid, gid)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. chownSync(path, uid, gid)`\n\n<! -- YAML\nadded: v0.",
    "position": 6562,
    "id": "window_6562"
  },
  {
    "type": "window",
    "content": "chownSync(path, uid, gid)`\n\n<! -- YAML\nadded: v0. 1.97\nchanges:\n  - version: v7.",
    "originalSentence": "chownSync(path, uid, gid)`\n\n<! -- YAML\nadded: v0. 1.97\nchanges:\n  - version: v7.",
    "position": 6563,
    "id": "window_6563"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.97\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.97\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6564,
    "id": "window_6564"
  },
  {
    "type": "window",
    "content": "1.97\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file.",
    "originalSentence": "1.97\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file.",
    "position": 6565,
    "id": "window_6565"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file. Returns `undefined`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file. Returns `undefined`.",
    "position": 6566,
    "id": "window_6566"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file. Returns `undefined`. This is the synchronous version of [`fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n\nSynchronously changes owner and group of a file. Returns `undefined`. This is the synchronous version of [`fs.",
    "position": 6567,
    "id": "window_6567"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. This is the synchronous version of [`fs. chown()`][].",
    "originalSentence": "Returns `undefined`. This is the synchronous version of [`fs. chown()`][].",
    "position": 6568,
    "id": "window_6568"
  },
  {
    "type": "window",
    "content": "This is the synchronous version of [`fs. chown()`][]. See the POSIX chown(2) documentation for more detail.",
    "originalSentence": "This is the synchronous version of [`fs. chown()`][]. See the POSIX chown(2) documentation for more detail.",
    "position": 6569,
    "id": "window_6569"
  },
  {
    "type": "window",
    "content": "chown()`][]. See the POSIX chown(2) documentation for more detail. ### `fs.",
    "originalSentence": "chown()`][]. See the POSIX chown(2) documentation for more detail. ### `fs.",
    "position": 6570,
    "id": "window_6570"
  },
  {
    "type": "window",
    "content": "See the POSIX chown(2) documentation for more detail. ### `fs. closeSync(fd)`\n\n<!",
    "originalSentence": "See the POSIX chown(2) documentation for more detail. ### `fs. closeSync(fd)`\n\n<!",
    "position": 6571,
    "id": "window_6571"
  },
  {
    "type": "window",
    "content": "closeSync(fd)`\n\n<! -- YAML\nadded: v0. 1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor.",
    "originalSentence": "closeSync(fd)`\n\n<! -- YAML\nadded: v0. 1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor.",
    "position": 6572,
    "id": "window_6572"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor. Returns `undefined`.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor. Returns `undefined`.",
    "position": 6573,
    "id": "window_6573"
  },
  {
    "type": "window",
    "content": "1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor. Returns `undefined`. Calling `fs.",
    "originalSentence": "1.21\n-->\n\n* `fd` {integer}\n\nCloses the file descriptor. Returns `undefined`. Calling `fs.",
    "position": 6574,
    "id": "window_6574"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. Calling `fs. closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "originalSentence": "Returns `undefined`. Calling `fs. closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "position": 6575,
    "id": "window_6575"
  },
  {
    "type": "window",
    "content": "Calling `fs. closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail.",
    "originalSentence": "Calling `fs. closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail.",
    "position": 6576,
    "id": "window_6576"
  },
  {
    "type": "window",
    "content": "closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail. ### `fs.",
    "originalSentence": "closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior. See the POSIX close(2) documentation for more detail. ### `fs.",
    "position": 6577,
    "id": "window_6577"
  },
  {
    "type": "window",
    "content": "See the POSIX close(2) documentation for more detail. ### `fs. copyFileSync(src, dest[, mode])`\n\n<!",
    "originalSentence": "See the POSIX close(2) documentation for more detail. ### `fs. copyFileSync(src, dest[, mode])`\n\n<!",
    "position": 6578,
    "id": "window_6578"
  },
  {
    "type": "window",
    "content": "### `fs. copyFileSync(src, dest[, mode])`\n\n<! -- YAML\nadded: v8.",
    "originalSentence": "### `fs. copyFileSync(src, dest[, mode])`\n\n<! -- YAML\nadded: v8.",
    "position": 6579,
    "id": "window_6579"
  },
  {
    "type": "window",
    "content": "copyFileSync(src, dest[, mode])`\n\n<! -- YAML\nadded: v8. 5.0\nchanges:\n  - version: v14.",
    "originalSentence": "copyFileSync(src, dest[, mode])`\n\n<! -- YAML\nadded: v8. 5.0\nchanges:\n  - version: v14.",
    "position": 6580,
    "id": "window_6580"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v8. 5.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "originalSentence": "-- YAML\nadded: v8. 5.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.",
    "position": 6581,
    "id": "window_6581"
  },
  {
    "type": "window",
    "content": "5.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "originalSentence": "5.0\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation.",
    "position": 6582,
    "id": "window_6582"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation. -->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "position": 6583,
    "id": "window_6583"
  },
  {
    "type": "window",
    "content": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`. Synchronously copies `src` to `dest`.",
    "originalSentence": "-->\n\n* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`. Synchronously copies `src` to `dest`.",
    "position": 6584,
    "id": "window_6584"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "**Default:** `0`. Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "position": 6585,
    "id": "window_6585"
  },
  {
    "type": "window",
    "content": "Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. Returns `undefined`.",
    "originalSentence": "Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. Returns `undefined`.",
    "position": 6586,
    "id": "window_6586"
  },
  {
    "type": "window",
    "content": "By default, `dest` is overwritten if it\nalready exists. Returns `undefined`. Node.",
    "originalSentence": "By default, `dest` is overwritten if it\nalready exists. Returns `undefined`. Node.",
    "position": 6587,
    "id": "window_6587"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. Node. js makes no guarantees about the\natomicity of the copy operation.",
    "originalSentence": "Returns `undefined`. Node. js makes no guarantees about the\natomicity of the copy operation.",
    "position": 6588,
    "id": "window_6588"
  },
  {
    "type": "window",
    "content": "Node. js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node.",
    "originalSentence": "Node. js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node.",
    "position": 6589,
    "id": "window_6589"
  },
  {
    "type": "window",
    "content": "js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node. js will attempt to remove the destination.",
    "originalSentence": "js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node. js will attempt to remove the destination.",
    "position": 6590,
    "id": "window_6590"
  },
  {
    "type": "window",
    "content": "If an error occurs after the destination file\nhas been opened for writing, Node. js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "originalSentence": "If an error occurs after the destination file\nhas been opened for writing, Node. js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation.",
    "position": 6591,
    "id": "window_6591"
  },
  {
    "type": "window",
    "content": "js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "originalSentence": "js will attempt to remove the destination. `mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.",
    "position": 6592,
    "id": "window_6592"
  },
  {
    "type": "window",
    "content": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g.",
    "originalSentence": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g.",
    "position": 6593,
    "id": "window_6593"
  },
  {
    "type": "window",
    "content": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g. `fs.",
    "originalSentence": "It is possible to create a mask consisting of the bitwise\nOR of two or more values (e. g. `fs.",
    "position": 6594,
    "id": "window_6594"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "originalSentence": "* `fs. constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.",
    "position": 6595,
    "id": "window_6595"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs.",
    "originalSentence": "constants. COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs.",
    "position": 6596,
    "id": "window_6596"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs. constants.",
    "originalSentence": "COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists. * `fs. constants.",
    "position": 6597,
    "id": "window_6597"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "originalSentence": "* `fs. constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink.",
    "position": 6598,
    "id": "window_6598"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "originalSentence": "constants. COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.",
    "position": 6599,
    "id": "window_6599"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs.",
    "originalSentence": "COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs.",
    "position": 6600,
    "id": "window_6600"
  },
  {
    "type": "window",
    "content": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs. constants.",
    "originalSentence": "If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used. * `fs. constants.",
    "position": 6601,
    "id": "window_6601"
  },
  {
    "type": "window",
    "content": "* `fs. constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "originalSentence": "* `fs. constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink.",
    "position": 6602,
    "id": "window_6602"
  },
  {
    "type": "window",
    "content": "constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "originalSentence": "constants. COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "position": 6603,
    "id": "window_6603"
  },
  {
    "type": "window",
    "content": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination.",
    "originalSentence": "COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination.",
    "position": 6604,
    "id": "window_6604"
  },
  {
    "type": "window",
    "content": "If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination. txt will be created or overwritten by default.",
    "originalSentence": "If the platform does not support\n  copy-on-write, then the operation will fail. ```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination. txt will be created or overwritten by default.",
    "position": 6605,
    "id": "window_6605"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination. txt will be created or overwritten by default. copyFileSync('source.",
    "originalSentence": "```mjs\nimport { copyFileSync, constants } from 'node:fs';\n\n// destination. txt will be created or overwritten by default. copyFileSync('source.",
    "position": 6606,
    "id": "window_6606"
  },
  {
    "type": "window",
    "content": "txt will be created or overwritten by default. copyFileSync('source. txt', 'destination.",
    "originalSentence": "txt will be created or overwritten by default. copyFileSync('source. txt', 'destination.",
    "position": 6607,
    "id": "window_6607"
  },
  {
    "type": "window",
    "content": "copyFileSync('source. txt', 'destination. txt');\nconsole.",
    "originalSentence": "copyFileSync('source. txt', 'destination. txt');\nconsole.",
    "position": 6608,
    "id": "window_6608"
  },
  {
    "type": "window",
    "content": "txt');\nconsole. log('source. txt was copied to destination.",
    "originalSentence": "txt');\nconsole. log('source. txt was copied to destination.",
    "position": 6609,
    "id": "window_6609"
  },
  {
    "type": "window",
    "content": "log('source. txt was copied to destination. txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "originalSentence": "log('source. txt was copied to destination. txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.",
    "position": 6610,
    "id": "window_6610"
  },
  {
    "type": "window",
    "content": "txt was copied to destination. txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists.",
    "originalSentence": "txt was copied to destination. txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists.",
    "position": 6611,
    "id": "window_6611"
  },
  {
    "type": "window",
    "content": "txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists. copyFileSync('source.",
    "originalSentence": "txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination. txt exists. copyFileSync('source.",
    "position": 6612,
    "id": "window_6612"
  },
  {
    "type": "window",
    "content": "txt exists. copyFileSync('source. txt', 'destination.",
    "originalSentence": "txt exists. copyFileSync('source. txt', 'destination.",
    "position": 6613,
    "id": "window_6613"
  },
  {
    "type": "window",
    "content": "copyFileSync('source. txt', 'destination. txt', constants.",
    "originalSentence": "copyFileSync('source. txt', 'destination. txt', constants.",
    "position": 6614,
    "id": "window_6614"
  },
  {
    "type": "window",
    "content": "txt', 'destination. txt', constants. COPYFILE_EXCL);\n```\n\n### `fs.",
    "originalSentence": "txt', 'destination. txt', constants. COPYFILE_EXCL);\n```\n\n### `fs.",
    "position": 6615,
    "id": "window_6615"
  },
  {
    "type": "window",
    "content": "txt', constants. COPYFILE_EXCL);\n```\n\n### `fs. cpSync(src, dest[, options])`\n\n<!",
    "originalSentence": "txt', constants. COPYFILE_EXCL);\n```\n\n### `fs. cpSync(src, dest[, options])`\n\n<!",
    "position": 6616,
    "id": "window_6616"
  },
  {
    "type": "window",
    "content": "COPYFILE_EXCL);\n```\n\n### `fs. cpSync(src, dest[, options])`\n\n<! -- YAML\nadded: v16.",
    "originalSentence": "COPYFILE_EXCL);\n```\n\n### `fs. cpSync(src, dest[, options])`\n\n<! -- YAML\nadded: v16.",
    "position": 6617,
    "id": "window_6617"
  },
  {
    "type": "window",
    "content": "cpSync(src, dest[, options])`\n\n<! -- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22.",
    "originalSentence": "cpSync(src, dest[, options])`\n\n<! -- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22.",
    "position": 6618,
    "id": "window_6618"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "originalSentence": "-- YAML\nadded: v16. 7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.",
    "position": 6619,
    "id": "window_6619"
  },
  {
    "type": "window",
    "content": "7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20.",
    "originalSentence": "7.0\nchanges:\n  - version: v22. 3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20.",
    "position": 6620,
    "id": "window_6620"
  },
  {
    "type": "window",
    "content": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental. - version:\n    - v20. 1.0\n    - v18.",
    "position": 6621,
    "id": "window_6621"
  },
  {
    "type": "window",
    "content": "- version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "originalSentence": "- version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.",
    "position": 6622,
    "id": "window_6622"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`.",
    "position": 6623,
    "id": "window_6623"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`. - version:\n    - v17.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs. copyFile()`. - version:\n    - v17.",
    "position": 6624,
    "id": "window_6624"
  },
  {
    "type": "window",
    "content": "- version:\n    - v17. 6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "originalSentence": "- version:\n    - v17. 6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.",
    "position": 6625,
    "id": "window_6625"
  },
  {
    "type": "window",
    "content": "6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy.",
    "originalSentence": "6.0\n    - v16. 15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy.",
    "position": 6626,
    "id": "window_6626"
  },
  {
    "type": "window",
    "content": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to.",
    "originalSentence": "15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks. -->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to.",
    "position": 6627,
    "id": "window_6627"
  },
  {
    "type": "window",
    "content": "-->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "originalSentence": "-->\n\n* `src` {string|URL} source path to copy. * `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks.",
    "position": 6628,
    "id": "window_6628"
  },
  {
    "type": "window",
    "content": "* `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.",
    "originalSentence": "* `dest` {string|URL} destination path to copy to. * `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.",
    "position": 6629,
    "id": "window_6629"
  },
  {
    "type": "window",
    "content": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "originalSentence": "* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error.",
    "position": 6630,
    "id": "window_6630"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.",
    "originalSentence": "**Default:** `false`. * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.",
    "position": 6631,
    "id": "window_6631"
  },
  {
    "type": "window",
    "content": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`. * `filter` {Function} Function to filter copied files/directories.",
    "originalSentence": "* `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`. * `filter` {Function} Function to filter copied files/directories.",
    "position": 6632,
    "id": "window_6632"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it.",
    "originalSentence": "**Default:** `false`. * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it.",
    "position": 6633,
    "id": "window_6633"
  },
  {
    "type": "window",
    "content": "* `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well.",
    "originalSentence": "* `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well.",
    "position": 6634,
    "id": "window_6634"
  },
  {
    "type": "window",
    "content": "Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. **Default:** `undefined`\n    * `src` {string} source path to copy.",
    "originalSentence": "Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. **Default:** `undefined`\n    * `src` {string} source path to copy.",
    "position": 6635,
    "id": "window_6635"
  },
  {
    "type": "window",
    "content": "When ignoring a directory,\n    all of its contents will be skipped as well. **Default:** `undefined`\n    * `src` {string} source path to copy. * `dest` {string} destination path to copy to.",
    "originalSentence": "When ignoring a directory,\n    all of its contents will be skipped as well. **Default:** `undefined`\n    * `src` {string} source path to copy. * `dest` {string} destination path to copy to.",
    "position": 6636,
    "id": "window_6636"
  },
  {
    "type": "window",
    "content": "**Default:** `undefined`\n    * `src` {string} source path to copy. * `dest` {string} destination path to copy to. * Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`.",
    "originalSentence": "**Default:** `undefined`\n    * `src` {string} source path to copy. * `dest` {string} destination path to copy to. * Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`.",
    "position": 6637,
    "id": "window_6637"
  },
  {
    "type": "window",
    "content": "* `dest` {string} destination path to copy to. * Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`. * `force` {boolean} overwrite existing file or directory.",
    "originalSentence": "* `dest` {string} destination path to copy to. * Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`. * `force` {boolean} overwrite existing file or directory.",
    "position": 6638,
    "id": "window_6638"
  },
  {
    "type": "window",
    "content": "* Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`. * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "originalSentence": "* Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`. * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists.",
    "position": 6639,
    "id": "window_6639"
  },
  {
    "type": "window",
    "content": "* `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.",
    "originalSentence": "* `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.",
    "position": 6640,
    "id": "window_6640"
  },
  {
    "type": "window",
    "content": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior. **Default:** `true`.",
    "originalSentence": "The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior. **Default:** `true`.",
    "position": 6641,
    "id": "window_6641"
  },
  {
    "type": "window",
    "content": "Use the `errorOnExist` option to change this behavior. **Default:** `true`. * `mode` {integer} modifiers for copy operation.",
    "originalSentence": "Use the `errorOnExist` option to change this behavior. **Default:** `true`. * `mode` {integer} modifiers for copy operation.",
    "position": 6642,
    "id": "window_6642"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "originalSentence": "**Default:** `true`. * `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "position": 6643,
    "id": "window_6643"
  },
  {
    "type": "window",
    "content": "* `mode` {integer} modifiers for copy operation. **Default:** `0`. See `mode` flag of [`fs.",
    "originalSentence": "* `mode` {integer} modifiers for copy operation. **Default:** `0`. See `mode` flag of [`fs.",
    "position": 6644,
    "id": "window_6644"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. See `mode` flag of [`fs. copyFileSync()`][].",
    "originalSentence": "**Default:** `0`. See `mode` flag of [`fs. copyFileSync()`][].",
    "position": 6645,
    "id": "window_6645"
  },
  {
    "type": "window",
    "content": "See `mode` flag of [`fs. copyFileSync()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "originalSentence": "See `mode` flag of [`fs. copyFileSync()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved.",
    "position": 6646,
    "id": "window_6646"
  },
  {
    "type": "window",
    "content": "copyFileSync()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.",
    "originalSentence": "copyFileSync()`][]. * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.",
    "position": 6647,
    "id": "window_6647"
  },
  {
    "type": "window",
    "content": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "originalSentence": "* `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped.",
    "position": 6648,
    "id": "window_6648"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "**Default:** `false`. * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 6649,
    "id": "window_6649"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "* `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 6650,
    "id": "window_6650"
  },
  {
    "type": "window",
    "content": "**Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs.",
    "originalSentence": "**Default:** `false`\n\nSynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files. When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs.",
    "position": 6651,
    "id": "window_6651"
  },
  {
    "type": "window",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs. existsSync(path)`\n\n<!",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`. ### `fs. existsSync(path)`\n\n<!",
    "position": 6652,
    "id": "window_6652"
  },
  {
    "type": "window",
    "content": "existsSync(path)`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7.",
    "originalSentence": "existsSync(path)`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7.",
    "position": 6653,
    "id": "window_6653"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 6654,
    "id": "window_6654"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise.",
    "originalSentence": "1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise.",
    "position": 6655,
    "id": "window_6655"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6656,
    "id": "window_6656"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. exists()`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* Returns: {boolean}\n\nReturns `true` if the path exists, `false` otherwise. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. exists()`][].",
    "position": 6657,
    "id": "window_6657"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. exists()`][]. `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. exists()`][]. `fs.",
    "position": 6658,
    "id": "window_6658"
  },
  {
    "type": "window",
    "content": "exists()`][]. `fs. exists()` is deprecated, but `fs.",
    "originalSentence": "exists()`][]. `fs. exists()` is deprecated, but `fs.",
    "position": 6659,
    "id": "window_6659"
  },
  {
    "type": "window",
    "content": "`fs. exists()` is deprecated, but `fs. existsSync()` is not.",
    "originalSentence": "`fs. exists()` is deprecated, but `fs. existsSync()` is not.",
    "position": 6660,
    "id": "window_6660"
  },
  {
    "type": "window",
    "content": "exists()` is deprecated, but `fs. existsSync()` is not. The `callback`\nparameter to `fs.",
    "originalSentence": "exists()` is deprecated, but `fs. existsSync()` is not. The `callback`\nparameter to `fs.",
    "position": 6661,
    "id": "window_6661"
  },
  {
    "type": "window",
    "content": "existsSync()` is not. The `callback`\nparameter to `fs. exists()` accepts parameters that are inconsistent with other\nNode.",
    "originalSentence": "existsSync()` is not. The `callback`\nparameter to `fs. exists()` accepts parameters that are inconsistent with other\nNode.",
    "position": 6662,
    "id": "window_6662"
  },
  {
    "type": "window",
    "content": "The `callback`\nparameter to `fs. exists()` accepts parameters that are inconsistent with other\nNode. js callbacks.",
    "originalSentence": "The `callback`\nparameter to `fs. exists()` accepts parameters that are inconsistent with other\nNode. js callbacks.",
    "position": 6663,
    "id": "window_6663"
  },
  {
    "type": "window",
    "content": "exists()` accepts parameters that are inconsistent with other\nNode. js callbacks. `fs.",
    "originalSentence": "exists()` accepts parameters that are inconsistent with other\nNode. js callbacks. `fs.",
    "position": 6664,
    "id": "window_6664"
  },
  {
    "type": "window",
    "content": "js callbacks. `fs. existsSync()` does not use a callback.",
    "originalSentence": "js callbacks. `fs. existsSync()` does not use a callback.",
    "position": 6665,
    "id": "window_6665"
  },
  {
    "type": "window",
    "content": "`fs. existsSync()` does not use a callback. ```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console.",
    "originalSentence": "`fs. existsSync()` does not use a callback. ```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console.",
    "position": 6666,
    "id": "window_6666"
  },
  {
    "type": "window",
    "content": "existsSync()` does not use a callback. ```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console. log('The path exists.'",
    "originalSentence": "existsSync()` does not use a callback. ```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console. log('The path exists.'",
    "position": 6667,
    "id": "window_6667"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console. log('The path exists.' );\n```\n\n### `fs.",
    "originalSentence": "```mjs\nimport { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console. log('The path exists.' );\n```\n\n### `fs.",
    "position": 6668,
    "id": "window_6668"
  },
  {
    "type": "window",
    "content": "log('The path exists.' );\n```\n\n### `fs. fchmodSync(fd, mode)`\n\n<!",
    "originalSentence": "log('The path exists.' );\n```\n\n### `fs. fchmodSync(fd, mode)`\n\n<!",
    "position": 6669,
    "id": "window_6669"
  },
  {
    "type": "window",
    "content": ");\n```\n\n### `fs. fchmodSync(fd, mode)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": ");\n```\n\n### `fs. fchmodSync(fd, mode)`\n\n<! -- YAML\nadded: v0.",
    "position": 6670,
    "id": "window_6670"
  },
  {
    "type": "window",
    "content": "fchmodSync(fd, mode)`\n\n<! -- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file.",
    "originalSentence": "fchmodSync(fd, mode)`\n\n<! -- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file.",
    "position": 6671,
    "id": "window_6671"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file. Returns `undefined`.",
    "originalSentence": "-- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file. Returns `undefined`.",
    "position": 6672,
    "id": "window_6672"
  },
  {
    "type": "window",
    "content": "4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file. Returns `undefined`. See the POSIX fchmod(2) documentation for more detail.",
    "originalSentence": "4.7\n-->\n\n* `fd` {integer}\n* `mode` {string|integer}\n\nSets the permissions on the file. Returns `undefined`. See the POSIX fchmod(2) documentation for more detail.",
    "position": 6673,
    "id": "window_6673"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. See the POSIX fchmod(2) documentation for more detail. ### `fs.",
    "originalSentence": "Returns `undefined`. See the POSIX fchmod(2) documentation for more detail. ### `fs.",
    "position": 6674,
    "id": "window_6674"
  },
  {
    "type": "window",
    "content": "See the POSIX fchmod(2) documentation for more detail. ### `fs. fchownSync(fd, uid, gid)`\n\n<!",
    "originalSentence": "See the POSIX fchmod(2) documentation for more detail. ### `fs. fchownSync(fd, uid, gid)`\n\n<!",
    "position": 6675,
    "id": "window_6675"
  },
  {
    "type": "window",
    "content": "### `fs. fchownSync(fd, uid, gid)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fchownSync(fd, uid, gid)`\n\n<! -- YAML\nadded: v0.",
    "position": 6676,
    "id": "window_6676"
  },
  {
    "type": "window",
    "content": "fchownSync(fd, uid, gid)`\n\n<! -- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id.",
    "originalSentence": "fchownSync(fd, uid, gid)`\n\n<! -- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id.",
    "position": 6677,
    "id": "window_6677"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id.",
    "originalSentence": "-- YAML\nadded: v0. 4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id.",
    "position": 6678,
    "id": "window_6678"
  },
  {
    "type": "window",
    "content": "4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id. Sets the owner of the file.",
    "originalSentence": "4.7\n-->\n\n* `fd` {integer}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id. Sets the owner of the file.",
    "position": 6679,
    "id": "window_6679"
  },
  {
    "type": "window",
    "content": "* `gid` {integer} The file's new group's group id. Sets the owner of the file. Returns `undefined`.",
    "originalSentence": "* `gid` {integer} The file's new group's group id. Sets the owner of the file. Returns `undefined`.",
    "position": 6680,
    "id": "window_6680"
  },
  {
    "type": "window",
    "content": "Sets the owner of the file. Returns `undefined`. See the POSIX fchown(2) documentation for more detail.",
    "originalSentence": "Sets the owner of the file. Returns `undefined`. See the POSIX fchown(2) documentation for more detail.",
    "position": 6681,
    "id": "window_6681"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. See the POSIX fchown(2) documentation for more detail. ### `fs.",
    "originalSentence": "Returns `undefined`. See the POSIX fchown(2) documentation for more detail. ### `fs.",
    "position": 6682,
    "id": "window_6682"
  },
  {
    "type": "window",
    "content": "See the POSIX fchown(2) documentation for more detail. ### `fs. fdatasyncSync(fd)`\n\n<!",
    "originalSentence": "See the POSIX fchown(2) documentation for more detail. ### `fs. fdatasyncSync(fd)`\n\n<!",
    "position": 6683,
    "id": "window_6683"
  },
  {
    "type": "window",
    "content": "fdatasyncSync(fd)`\n\n<! -- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "originalSentence": "fdatasyncSync(fd)`\n\n<! -- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state.",
    "position": 6684,
    "id": "window_6684"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "-- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 6685,
    "id": "window_6685"
  },
  {
    "type": "window",
    "content": "1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. Returns `undefined`.",
    "originalSentence": "1.96\n-->\n\n* `fd` {integer}\n\nForces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. Returns `undefined`.",
    "position": 6686,
    "id": "window_6686"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX\nfdatasync(2) documentation for details. Returns `undefined`. ### `fs.",
    "originalSentence": "Refer to the POSIX\nfdatasync(2) documentation for details. Returns `undefined`. ### `fs.",
    "position": 6687,
    "id": "window_6687"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. ### `fs. fstatSync(fd[, options])`\n\n<!",
    "originalSentence": "Returns `undefined`. ### `fs. fstatSync(fd[, options])`\n\n<!",
    "position": 6688,
    "id": "window_6688"
  },
  {
    "type": "window",
    "content": "### `fs. fstatSync(fd[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. fstatSync(fd[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6689,
    "id": "window_6689"
  },
  {
    "type": "window",
    "content": "fstatSync(fd[, options])`\n\n<! -- YAML\nadded: v0. 1.95\nchanges:\n  - version: v10.",
    "originalSentence": "fstatSync(fd[, options])`\n\n<! -- YAML\nadded: v0. 1.95\nchanges:\n  - version: v10.",
    "position": 6690,
    "id": "window_6690"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.95\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "-- YAML\nadded: v0. 1.95\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 6691,
    "id": "window_6691"
  },
  {
    "type": "window",
    "content": "1.95\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "1.95\nchanges:\n  - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 6692,
    "id": "window_6692"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. -->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 6693,
    "id": "window_6693"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 6694,
    "id": "window_6694"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {fs.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * Returns: {fs.",
    "position": 6695,
    "id": "window_6695"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {fs. Stats}\n\nRetrieves the {fs.",
    "originalSentence": "**Default:** `false`. * Returns: {fs. Stats}\n\nRetrieves the {fs.",
    "position": 6696,
    "id": "window_6696"
  },
  {
    "type": "window",
    "content": "* Returns: {fs. Stats}\n\nRetrieves the {fs. Stats} for the file descriptor.",
    "originalSentence": "* Returns: {fs. Stats}\n\nRetrieves the {fs. Stats} for the file descriptor.",
    "position": 6697,
    "id": "window_6697"
  },
  {
    "type": "window",
    "content": "Stats}\n\nRetrieves the {fs. Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail.",
    "originalSentence": "Stats}\n\nRetrieves the {fs. Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail.",
    "position": 6698,
    "id": "window_6698"
  },
  {
    "type": "window",
    "content": "Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail. ### `fs.",
    "originalSentence": "Stats} for the file descriptor. See the POSIX fstat(2) documentation for more detail. ### `fs.",
    "position": 6699,
    "id": "window_6699"
  },
  {
    "type": "window",
    "content": "See the POSIX fstat(2) documentation for more detail. ### `fs. fsyncSync(fd)`\n\n<!",
    "originalSentence": "See the POSIX fstat(2) documentation for more detail. ### `fs. fsyncSync(fd)`\n\n<!",
    "position": 6700,
    "id": "window_6700"
  },
  {
    "type": "window",
    "content": "fsyncSync(fd)`\n\n<! -- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "originalSentence": "fsyncSync(fd)`\n\n<! -- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice.",
    "position": 6701,
    "id": "window_6701"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.",
    "originalSentence": "-- YAML\nadded: v0. 1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.",
    "position": 6702,
    "id": "window_6702"
  },
  {
    "type": "window",
    "content": "1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "1.96\n-->\n\n* `fd` {integer}\n\nRequest that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail.",
    "position": 6703,
    "id": "window_6703"
  },
  {
    "type": "window",
    "content": "The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail. Returns `undefined`.",
    "originalSentence": "The specific implementation is operating system and device specific. Refer to the POSIX fsync(2) documentation for more detail. Returns `undefined`.",
    "position": 6704,
    "id": "window_6704"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX fsync(2) documentation for more detail. Returns `undefined`. ### `fs.",
    "originalSentence": "Refer to the POSIX fsync(2) documentation for more detail. Returns `undefined`. ### `fs.",
    "position": 6705,
    "id": "window_6705"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. ### `fs. ftruncateSync(fd[, len])`\n\n<!",
    "originalSentence": "Returns `undefined`. ### `fs. ftruncateSync(fd[, len])`\n\n<!",
    "position": 6706,
    "id": "window_6706"
  },
  {
    "type": "window",
    "content": "### `fs. ftruncateSync(fd[, len])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. ftruncateSync(fd[, len])`\n\n<! -- YAML\nadded: v0.",
    "position": 6707,
    "id": "window_6707"
  },
  {
    "type": "window",
    "content": "ftruncateSync(fd[, len])`\n\n<! -- YAML\nadded: v0. 8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor.",
    "originalSentence": "ftruncateSync(fd[, len])`\n\n<! -- YAML\nadded: v0. 8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor.",
    "position": 6708,
    "id": "window_6708"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor. Returns `undefined`.",
    "originalSentence": "-- YAML\nadded: v0. 8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor. Returns `undefined`.",
    "position": 6709,
    "id": "window_6709"
  },
  {
    "type": "window",
    "content": "8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor. Returns `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "8.6\n-->\n\n* `fd` {integer}\n* `len` {integer} **Default:** `0`\n\nTruncates the file descriptor. Returns `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6710,
    "id": "window_6710"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. ftruncate()`][].",
    "originalSentence": "Returns `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. ftruncate()`][].",
    "position": 6711,
    "id": "window_6711"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. ftruncate()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. ftruncate()`][]. ### `fs.",
    "position": 6712,
    "id": "window_6712"
  },
  {
    "type": "window",
    "content": "ftruncate()`][]. ### `fs. futimesSync(fd, atime, mtime)`\n\n<!",
    "originalSentence": "ftruncate()`][]. ### `fs. futimesSync(fd, atime, mtime)`\n\n<!",
    "position": 6713,
    "id": "window_6713"
  },
  {
    "type": "window",
    "content": "### `fs. futimesSync(fd, atime, mtime)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. futimesSync(fd, atime, mtime)`\n\n<! -- YAML\nadded: v0.",
    "position": 6714,
    "id": "window_6714"
  },
  {
    "type": "window",
    "content": "futimesSync(fd, atime, mtime)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v4.",
    "originalSentence": "futimesSync(fd, atime, mtime)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v4.",
    "position": 6715,
    "id": "window_6715"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 6716,
    "id": "window_6716"
  },
  {
    "type": "window",
    "content": "4.2\nchanges:\n  - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs.",
    "originalSentence": "4.2\nchanges:\n  - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs.",
    "position": 6717,
    "id": "window_6717"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs. futimes()`][].",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs. futimes()`][].",
    "position": 6718,
    "id": "window_6718"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs. futimes()`][]. Returns `undefined`.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nSynchronous version of [`fs. futimes()`][]. Returns `undefined`.",
    "position": 6719,
    "id": "window_6719"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. ### `fs. globSync(pattern[, options])`\n\n<!",
    "originalSentence": "Returns `undefined`. ### `fs. globSync(pattern[, options])`\n\n<!",
    "position": 6720,
    "id": "window_6720"
  },
  {
    "type": "window",
    "content": "### `fs. globSync(pattern[, options])`\n\n<! -- YAML\nadded: v22.",
    "originalSentence": "### `fs. globSync(pattern[, options])`\n\n<! -- YAML\nadded: v22.",
    "position": 6721,
    "id": "window_6721"
  },
  {
    "type": "window",
    "content": "globSync(pattern[, options])`\n\n<! -- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "globSync(pattern[, options])`\n\n<! -- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24.",
    "position": 6722,
    "id": "window_6722"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22.",
    "originalSentence": "-- YAML\nadded: v22. 0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22.",
    "position": 6723,
    "id": "window_6723"
  },
  {
    "type": "window",
    "content": "0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "originalSentence": "0.0\nchanges:\n  - version:\n      - v24. 1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.",
    "position": 6724,
    "id": "window_6724"
  },
  {
    "type": "window",
    "content": "1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24.",
    "originalSentence": "1.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24.",
    "position": 6725,
    "id": "window_6725"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24. 0.0\n      - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option. - version:\n      - v24. 0.0\n      - v22.",
    "position": 6726,
    "id": "window_6726"
  },
  {
    "type": "window",
    "content": "- version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "- version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 6727,
    "id": "window_6727"
  },
  {
    "type": "window",
    "content": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "originalSentence": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23.",
    "position": 6728,
    "id": "window_6728"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 7.0\n    - v22.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. - version:\n    - v23. 7.0\n    - v22.",
    "position": 6729,
    "id": "window_6729"
  },
  {
    "type": "window",
    "content": "- version:\n    - v23. 7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "originalSentence": "- version:\n    - v23. 7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.",
    "position": 6730,
    "id": "window_6730"
  },
  {
    "type": "window",
    "content": "7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22.",
    "originalSentence": "7.0\n    - v22. 14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22.",
    "position": 6731,
    "id": "window_6731"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns. - version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.",
    "position": 6732,
    "id": "window_6732"
  },
  {
    "type": "window",
    "content": "- version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "originalSentence": "- version: v22. 2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory.",
    "position": 6733,
    "id": "window_6733"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option. -->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.",
    "position": 6734,
    "id": "window_6734"
  },
  {
    "type": "window",
    "content": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "originalSentence": "-->\n\n* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded.",
    "position": 6735,
    "id": "window_6735"
  },
  {
    "type": "window",
    "content": "**Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "originalSentence": "**Default:** `process. cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it.",
    "position": 6736,
    "id": "window_6736"
  },
  {
    "type": "window",
    "content": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.",
    "originalSentence": "cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.",
    "position": 6737,
    "id": "window_6737"
  },
  {
    "type": "window",
    "content": "If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "originalSentence": "If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise.",
    "position": 6738,
    "id": "window_6738"
  },
  {
    "type": "window",
    "content": "**Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "originalSentence": "**Default:** `undefined`. * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "position": 6739,
    "id": "window_6739"
  },
  {
    "type": "window",
    "content": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`. * Returns: {string\\[]} paths of files that match the pattern.",
    "originalSentence": "* `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`. * Returns: {string\\[]} paths of files that match the pattern.",
    "position": 6740,
    "id": "window_6740"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {string\\[]} paths of files that match the pattern. ```mjs\nimport { globSync } from 'node:fs';\n\nconsole.",
    "originalSentence": "**Default:** `false`. * Returns: {string\\[]} paths of files that match the pattern. ```mjs\nimport { globSync } from 'node:fs';\n\nconsole.",
    "position": 6741,
    "id": "window_6741"
  },
  {
    "type": "window",
    "content": "* Returns: {string\\[]} paths of files that match the pattern. ```mjs\nimport { globSync } from 'node:fs';\n\nconsole. log(globSync('**/*.",
    "originalSentence": "* Returns: {string\\[]} paths of files that match the pattern. ```mjs\nimport { globSync } from 'node:fs';\n\nconsole. log(globSync('**/*.",
    "position": 6742,
    "id": "window_6742"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { globSync } from 'node:fs';\n\nconsole. log(globSync('**/*. js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole.",
    "originalSentence": "```mjs\nimport { globSync } from 'node:fs';\n\nconsole. log(globSync('**/*. js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole.",
    "position": 6743,
    "id": "window_6743"
  },
  {
    "type": "window",
    "content": "log(globSync('**/*. js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole. log(globSync('**/*.",
    "originalSentence": "log(globSync('**/*. js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole. log(globSync('**/*.",
    "position": 6744,
    "id": "window_6744"
  },
  {
    "type": "window",
    "content": "js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole. log(globSync('**/*. js'));\n```\n\n### `fs.",
    "originalSentence": "js'));\n```\n\n```cjs\nconst { globSync } = require('node:fs');\n\nconsole. log(globSync('**/*. js'));\n```\n\n### `fs.",
    "position": 6745,
    "id": "window_6745"
  },
  {
    "type": "window",
    "content": "log(globSync('**/*. js'));\n```\n\n### `fs. lchmodSync(path, mode)`\n\n<!",
    "originalSentence": "log(globSync('**/*. js'));\n```\n\n### `fs. lchmodSync(path, mode)`\n\n<!",
    "position": 6746,
    "id": "window_6746"
  },
  {
    "type": "window",
    "content": "js'));\n```\n\n### `fs. lchmodSync(path, mode)`\n\n<! -- YAML\ndeprecated: v0.",
    "originalSentence": "js'));\n```\n\n### `fs. lchmodSync(path, mode)`\n\n<! -- YAML\ndeprecated: v0.",
    "position": 6747,
    "id": "window_6747"
  },
  {
    "type": "window",
    "content": "lchmodSync(path, mode)`\n\n<! -- YAML\ndeprecated: v0. 4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link.",
    "originalSentence": "lchmodSync(path, mode)`\n\n<! -- YAML\ndeprecated: v0. 4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link.",
    "position": 6748,
    "id": "window_6748"
  },
  {
    "type": "window",
    "content": "-- YAML\ndeprecated: v0. 4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link. Returns `undefined`.",
    "originalSentence": "-- YAML\ndeprecated: v0. 4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link. Returns `undefined`.",
    "position": 6749,
    "id": "window_6749"
  },
  {
    "type": "window",
    "content": "4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link. Returns `undefined`. This method is only implemented on macOS.",
    "originalSentence": "4.7\n-->\n\n> Stability: 0 - Deprecated\n\n* `path` {string|Buffer|URL}\n* `mode` {integer}\n\nChanges the permissions on a symbolic link. Returns `undefined`. This method is only implemented on macOS.",
    "position": 6750,
    "id": "window_6750"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail.",
    "originalSentence": "Returns `undefined`. This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail.",
    "position": 6751,
    "id": "window_6751"
  },
  {
    "type": "window",
    "content": "This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail. ### `fs.",
    "originalSentence": "This method is only implemented on macOS. See the POSIX lchmod(2) documentation for more detail. ### `fs.",
    "position": 6752,
    "id": "window_6752"
  },
  {
    "type": "window",
    "content": "See the POSIX lchmod(2) documentation for more detail. ### `fs. lchownSync(path, uid, gid)`\n\n<!",
    "originalSentence": "See the POSIX lchmod(2) documentation for more detail. ### `fs. lchownSync(path, uid, gid)`\n\n<!",
    "position": 6753,
    "id": "window_6753"
  },
  {
    "type": "window",
    "content": "### `fs. lchownSync(path, uid, gid)`\n\n<! -- YAML\nchanges:\n  - version: v10.",
    "originalSentence": "### `fs. lchownSync(path, uid, gid)`\n\n<! -- YAML\nchanges:\n  - version: v10.",
    "position": 6754,
    "id": "window_6754"
  },
  {
    "type": "window",
    "content": "lchownSync(path, uid, gid)`\n\n<! -- YAML\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "originalSentence": "lchownSync(path, uid, gid)`\n\n<! -- YAML\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.",
    "position": 6755,
    "id": "window_6755"
  },
  {
    "type": "window",
    "content": "-- YAML\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v0.",
    "originalSentence": "-- YAML\nchanges:\n  - version: v10. 6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v0.",
    "position": 6756,
    "id": "window_6756"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v0. 4.7\n    description: Documentation-only deprecation.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated. - version: v0. 4.7\n    description: Documentation-only deprecation.",
    "position": 6757,
    "id": "window_6757"
  },
  {
    "type": "window",
    "content": "- version: v0. 4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id.",
    "originalSentence": "- version: v0. 4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id.",
    "position": 6758,
    "id": "window_6758"
  },
  {
    "type": "window",
    "content": "4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id.",
    "originalSentence": "4.7\n    description: Documentation-only deprecation. -->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id.",
    "position": 6759,
    "id": "window_6759"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id. Set the owner for the path.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id. * `gid` {integer} The file's new group's group id. Set the owner for the path.",
    "position": 6760,
    "id": "window_6760"
  },
  {
    "type": "window",
    "content": "* `gid` {integer} The file's new group's group id. Set the owner for the path. Returns `undefined`.",
    "originalSentence": "* `gid` {integer} The file's new group's group id. Set the owner for the path. Returns `undefined`.",
    "position": 6761,
    "id": "window_6761"
  },
  {
    "type": "window",
    "content": "Set the owner for the path. Returns `undefined`. See the POSIX lchown(2) documentation for more details.",
    "originalSentence": "Set the owner for the path. Returns `undefined`. See the POSIX lchown(2) documentation for more details.",
    "position": 6762,
    "id": "window_6762"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. See the POSIX lchown(2) documentation for more details. ### `fs.",
    "originalSentence": "Returns `undefined`. See the POSIX lchown(2) documentation for more details. ### `fs.",
    "position": 6763,
    "id": "window_6763"
  },
  {
    "type": "window",
    "content": "See the POSIX lchown(2) documentation for more details. ### `fs. lutimesSync(path, atime, mtime)`\n\n<!",
    "originalSentence": "See the POSIX lchown(2) documentation for more details. ### `fs. lutimesSync(path, atime, mtime)`\n\n<!",
    "position": 6764,
    "id": "window_6764"
  },
  {
    "type": "window",
    "content": "### `fs. lutimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14.",
    "originalSentence": "### `fs. lutimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14.",
    "position": 6765,
    "id": "window_6765"
  },
  {
    "type": "window",
    "content": "lutimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14. 5.0\n  - v12.",
    "originalSentence": "lutimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded:\n  - v14. 5.0\n  - v12.",
    "position": 6766,
    "id": "window_6766"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`.",
    "position": 6767,
    "id": "window_6767"
  },
  {
    "type": "window",
    "content": "5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`. Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails.",
    "originalSentence": "5.0\n  - v12. 19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`. Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails.",
    "position": 6768,
    "id": "window_6768"
  },
  {
    "type": "window",
    "content": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`. Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of [`fs.",
    "originalSentence": "19.0\n-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n\nChange the file system timestamps of the symbolic link referenced by `path`. Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of [`fs.",
    "position": 6769,
    "id": "window_6769"
  },
  {
    "type": "window",
    "content": "Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of [`fs. lutimes()`][].",
    "originalSentence": "Returns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of [`fs. lutimes()`][].",
    "position": 6770,
    "id": "window_6770"
  },
  {
    "type": "window",
    "content": "This is the synchronous version of [`fs. lutimes()`][]. ### `fs.",
    "originalSentence": "This is the synchronous version of [`fs. lutimes()`][]. ### `fs.",
    "position": 6771,
    "id": "window_6771"
  },
  {
    "type": "window",
    "content": "lutimes()`][]. ### `fs. linkSync(existingPath, newPath)`\n\n<!",
    "originalSentence": "lutimes()`][]. ### `fs. linkSync(existingPath, newPath)`\n\n<!",
    "position": 6772,
    "id": "window_6772"
  },
  {
    "type": "window",
    "content": "### `fs. linkSync(existingPath, newPath)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. linkSync(existingPath, newPath)`\n\n<! -- YAML\nadded: v0.",
    "position": 6773,
    "id": "window_6773"
  },
  {
    "type": "window",
    "content": "linkSync(existingPath, newPath)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7.",
    "originalSentence": "linkSync(existingPath, newPath)`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7.",
    "position": 6774,
    "id": "window_6774"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol.",
    "position": 6775,
    "id": "window_6775"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.",
    "originalSentence": "1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.",
    "position": 6776,
    "id": "window_6776"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`.",
    "position": 6777,
    "id": "window_6777"
  },
  {
    "type": "window",
    "content": "Support is currently\n                 still *experimental*. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "Support is currently\n                 still *experimental*. -->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "position": 6778,
    "id": "window_6778"
  },
  {
    "type": "window",
    "content": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. Returns `undefined`.",
    "originalSentence": "-->\n\n* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nCreates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. Returns `undefined`.",
    "position": 6779,
    "id": "window_6779"
  },
  {
    "type": "window",
    "content": "See the POSIX\nlink(2) documentation for more detail. Returns `undefined`. ### `fs.",
    "originalSentence": "See the POSIX\nlink(2) documentation for more detail. Returns `undefined`. ### `fs.",
    "position": 6780,
    "id": "window_6780"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. ### `fs. lstatSync(path[, options])`\n\n<!",
    "originalSentence": "Returns `undefined`. ### `fs. lstatSync(path[, options])`\n\n<!",
    "position": 6781,
    "id": "window_6781"
  },
  {
    "type": "window",
    "content": "### `fs. lstatSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. lstatSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6782,
    "id": "window_6782"
  },
  {
    "type": "window",
    "content": "lstatSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.30\nchanges:\n  - version:\n    - v15.",
    "originalSentence": "lstatSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.30\nchanges:\n  - version:\n    - v15.",
    "position": 6783,
    "id": "window_6783"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.30\nchanges:\n  - version:\n    - v15. 3.0\n    - v14.",
    "originalSentence": "-- YAML\nadded: v0. 1.30\nchanges:\n  - version:\n    - v15. 3.0\n    - v14.",
    "position": 6784,
    "id": "window_6784"
  },
  {
    "type": "window",
    "content": "1.30\nchanges:\n  - version:\n    - v15. 3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "originalSentence": "1.30\nchanges:\n  - version:\n    - v15. 3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "position": 6785,
    "id": "window_6785"
  },
  {
    "type": "window",
    "content": "3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10.",
    "originalSentence": "3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10.",
    "position": 6786,
    "id": "window_6786"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 6787,
    "id": "window_6787"
  },
  {
    "type": "window",
    "content": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7.",
    "originalSentence": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7.",
    "position": 6788,
    "id": "window_6788"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6789,
    "id": "window_6789"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 6790,
    "id": "window_6790"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 6791,
    "id": "window_6791"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 6792,
    "id": "window_6792"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "position": 6793,
    "id": "window_6793"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`.",
    "originalSentence": "**Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`.",
    "position": 6794,
    "id": "window_6794"
  },
  {
    "type": "window",
    "content": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`. * Returns: {fs.",
    "originalSentence": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`. * Returns: {fs.",
    "position": 6795,
    "id": "window_6795"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * Returns: {fs. Stats}\n\nRetrieves the {fs.",
    "originalSentence": "**Default:** `true`. * Returns: {fs. Stats}\n\nRetrieves the {fs.",
    "position": 6796,
    "id": "window_6796"
  },
  {
    "type": "window",
    "content": "* Returns: {fs. Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by `path`.",
    "originalSentence": "* Returns: {fs. Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by `path`.",
    "position": 6797,
    "id": "window_6797"
  },
  {
    "type": "window",
    "content": "Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by `path`. See the POSIX lstat(2) documentation for more details.",
    "originalSentence": "Stats}\n\nRetrieves the {fs. Stats} for the symbolic link referred to by `path`. See the POSIX lstat(2) documentation for more details.",
    "position": 6798,
    "id": "window_6798"
  },
  {
    "type": "window",
    "content": "Stats} for the symbolic link referred to by `path`. See the POSIX lstat(2) documentation for more details. ### `fs.",
    "originalSentence": "Stats} for the symbolic link referred to by `path`. See the POSIX lstat(2) documentation for more details. ### `fs.",
    "position": 6799,
    "id": "window_6799"
  },
  {
    "type": "window",
    "content": "See the POSIX lstat(2) documentation for more details. ### `fs. mkdirSync(path[, options])`\n\n<!",
    "originalSentence": "See the POSIX lstat(2) documentation for more details. ### `fs. mkdirSync(path[, options])`\n\n<!",
    "position": 6800,
    "id": "window_6800"
  },
  {
    "type": "window",
    "content": "### `fs. mkdirSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. mkdirSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6801,
    "id": "window_6801"
  },
  {
    "type": "window",
    "content": "mkdirSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n     - v13.",
    "originalSentence": "mkdirSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n     - v13.",
    "position": 6802,
    "id": "window_6802"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n     - v13. 11.0\n     - v12.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n     - v13. 11.0\n     - v12.",
    "position": 6803,
    "id": "window_6803"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version:\n     - v13. 11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now.",
    "originalSentence": "1.21\nchanges:\n  - version:\n     - v13. 11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now.",
    "position": 6804,
    "id": "window_6804"
  },
  {
    "type": "window",
    "content": "11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now. - version: v10.",
    "originalSentence": "11.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now. - version: v10.",
    "position": 6805,
    "id": "window_6805"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now. - version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now. - version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.",
    "position": 6806,
    "id": "window_6806"
  },
  {
    "type": "window",
    "content": "- version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v7.",
    "originalSentence": "- version: v10. 12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v7.",
    "position": 6807,
    "id": "window_6807"
  },
  {
    "type": "window",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6808,
    "id": "window_6808"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows.",
    "position": 6809,
    "id": "window_6809"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.",
    "position": 6810,
    "id": "window_6810"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`. * Returns: {string|undefined}\n\nSynchronously creates a directory.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`. * Returns: {string|undefined}\n\nSynchronously creates a directory.",
    "position": 6811,
    "id": "window_6811"
  },
  {
    "type": "window",
    "content": "**Default:** `0o777`. * Returns: {string|undefined}\n\nSynchronously creates a directory. Returns `undefined`, or if `recursive` is\n`true`, the first directory path created.",
    "originalSentence": "**Default:** `0o777`. * Returns: {string|undefined}\n\nSynchronously creates a directory. Returns `undefined`, or if `recursive` is\n`true`, the first directory path created.",
    "position": 6812,
    "id": "window_6812"
  },
  {
    "type": "window",
    "content": "* Returns: {string|undefined}\n\nSynchronously creates a directory. Returns `undefined`, or if `recursive` is\n`true`, the first directory path created. This is the synchronous version of [`fs.",
    "originalSentence": "* Returns: {string|undefined}\n\nSynchronously creates a directory. Returns `undefined`, or if `recursive` is\n`true`, the first directory path created. This is the synchronous version of [`fs.",
    "position": 6813,
    "id": "window_6813"
  },
  {
    "type": "window",
    "content": "Returns `undefined`, or if `recursive` is\n`true`, the first directory path created. This is the synchronous version of [`fs. mkdir()`][].",
    "originalSentence": "Returns `undefined`, or if `recursive` is\n`true`, the first directory path created. This is the synchronous version of [`fs. mkdir()`][].",
    "position": 6814,
    "id": "window_6814"
  },
  {
    "type": "window",
    "content": "This is the synchronous version of [`fs. mkdir()`][]. See the POSIX mkdir(2) documentation for more details.",
    "originalSentence": "This is the synchronous version of [`fs. mkdir()`][]. See the POSIX mkdir(2) documentation for more details.",
    "position": 6815,
    "id": "window_6815"
  },
  {
    "type": "window",
    "content": "mkdir()`][]. See the POSIX mkdir(2) documentation for more details. ### `fs.",
    "originalSentence": "mkdir()`][]. See the POSIX mkdir(2) documentation for more details. ### `fs.",
    "position": 6816,
    "id": "window_6816"
  },
  {
    "type": "window",
    "content": "See the POSIX mkdir(2) documentation for more details. ### `fs. mkdtempSync(prefix[, options])`\n\n<!",
    "originalSentence": "See the POSIX mkdir(2) documentation for more details. ### `fs. mkdtempSync(prefix[, options])`\n\n<!",
    "position": 6817,
    "id": "window_6817"
  },
  {
    "type": "window",
    "content": "### `fs. mkdtempSync(prefix[, options])`\n\n<! -- YAML\nadded: v5.",
    "originalSentence": "### `fs. mkdtempSync(prefix[, options])`\n\n<! -- YAML\nadded: v5.",
    "position": 6818,
    "id": "window_6818"
  },
  {
    "type": "window",
    "content": "mkdtempSync(prefix[, options])`\n\n<! -- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "mkdtempSync(prefix[, options])`\n\n<! -- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20.",
    "position": 6819,
    "id": "window_6819"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v5. 10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18.",
    "position": 6820,
    "id": "window_6820"
  },
  {
    "type": "window",
    "content": "10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "originalSentence": "10.0\nchanges:\n  - version:\n    - v20. 6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.",
    "position": 6821,
    "id": "window_6821"
  },
  {
    "type": "window",
    "content": "6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16.",
    "originalSentence": "6.0\n    - v18. 19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16.",
    "position": 6822,
    "id": "window_6822"
  },
  {
    "type": "window",
    "content": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16. 5.0\n      - v14.",
    "originalSentence": "19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL. - version:\n      - v16. 5.0\n      - v14.",
    "position": 6823,
    "id": "window_6823"
  },
  {
    "type": "window",
    "content": "- version:\n      - v16. 5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "originalSentence": "- version:\n      - v16. 5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.",
    "position": 6824,
    "id": "window_6824"
  },
  {
    "type": "window",
    "content": "5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path.",
    "originalSentence": "5.0\n      - v14. 18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path.",
    "position": 6825,
    "id": "window_6825"
  },
  {
    "type": "window",
    "content": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string. -->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6826,
    "id": "window_6826"
  },
  {
    "type": "window",
    "content": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. mkdtemp()`][].",
    "originalSentence": "-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}\n\nReturns the created directory path. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. mkdtemp()`][].",
    "position": 6827,
    "id": "window_6827"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 6828,
    "id": "window_6828"
  },
  {
    "type": "window",
    "content": "mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs.",
    "originalSentence": "mkdtemp()`][]. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs.",
    "position": 6829,
    "id": "window_6829"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs. mkdtempDisposableSync(prefix[, options])`\n\n<!",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs. mkdtempDisposableSync(prefix[, options])`\n\n<!",
    "position": 6830,
    "id": "window_6830"
  },
  {
    "type": "window",
    "content": "### `fs. mkdtempDisposableSync(prefix[, options])`\n\n<! -- YAML\nadded: v24.",
    "originalSentence": "### `fs. mkdtempDisposableSync(prefix[, options])`\n\n<! -- YAML\nadded: v24.",
    "position": 6831,
    "id": "window_6831"
  },
  {
    "type": "window",
    "content": "mkdtempDisposableSync(prefix[, options])`\n\n<! -- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory.",
    "originalSentence": "mkdtempDisposableSync(prefix[, options])`\n\n<! -- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory.",
    "position": 6832,
    "id": "window_6832"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory. * `remove` {Function} A function which removes the created directory.",
    "originalSentence": "-- YAML\nadded: v24. 4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory. * `remove` {Function} A function which removes the created directory.",
    "position": 6833,
    "id": "window_6833"
  },
  {
    "type": "window",
    "content": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory. * `remove` {Function} A function which removes the created directory. * `[Symbol.",
    "originalSentence": "4.0\n-->\n\n* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory. * `remove` {Function} A function which removes the created directory. * `[Symbol.",
    "position": 6834,
    "id": "window_6834"
  },
  {
    "type": "window",
    "content": "* `remove` {Function} A function which removes the created directory. * `[Symbol. dispose]` {Function} The same as `remove`.",
    "originalSentence": "* `remove` {Function} A function which removes the created directory. * `[Symbol. dispose]` {Function} The same as `remove`.",
    "position": 6835,
    "id": "window_6835"
  },
  {
    "type": "window",
    "content": "* `[Symbol. dispose]` {Function} The same as `remove`. Returns a disposable object whose `path` property holds the created directory\npath.",
    "originalSentence": "* `[Symbol. dispose]` {Function} The same as `remove`. Returns a disposable object whose `path` property holds the created directory\npath.",
    "position": 6836,
    "id": "window_6836"
  },
  {
    "type": "window",
    "content": "dispose]` {Function} The same as `remove`. Returns a disposable object whose `path` property holds the created directory\npath. When the object is disposed, the directory and its contents will be\nremoved if it still exists.",
    "originalSentence": "dispose]` {Function} The same as `remove`. Returns a disposable object whose `path` property holds the created directory\npath. When the object is disposed, the directory and its contents will be\nremoved if it still exists.",
    "position": 6837,
    "id": "window_6837"
  },
  {
    "type": "window",
    "content": "Returns a disposable object whose `path` property holds the created directory\npath. When the object is disposed, the directory and its contents will be\nremoved if it still exists. If the directory cannot be deleted, disposal will\nthrow an error.",
    "originalSentence": "Returns a disposable object whose `path` property holds the created directory\npath. When the object is disposed, the directory and its contents will be\nremoved if it still exists. If the directory cannot be deleted, disposal will\nthrow an error.",
    "position": 6838,
    "id": "window_6838"
  },
  {
    "type": "window",
    "content": "When the object is disposed, the directory and its contents will be\nremoved if it still exists. If the directory cannot be deleted, disposal will\nthrow an error. The object has a `remove()` method which will perform the same\ntask.",
    "originalSentence": "When the object is disposed, the directory and its contents will be\nremoved if it still exists. If the directory cannot be deleted, disposal will\nthrow an error. The object has a `remove()` method which will perform the same\ntask.",
    "position": 6839,
    "id": "window_6839"
  },
  {
    "type": "window",
    "content": "If the directory cannot be deleted, disposal will\nthrow an error. The object has a `remove()` method which will perform the same\ntask. <!",
    "originalSentence": "If the directory cannot be deleted, disposal will\nthrow an error. The object has a `remove()` method which will perform the same\ntask. <!",
    "position": 6840,
    "id": "window_6840"
  },
  {
    "type": "window",
    "content": "The object has a `remove()` method which will perform the same\ntask. <! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs.",
    "originalSentence": "The object has a `remove()` method which will perform the same\ntask. <! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs.",
    "position": 6841,
    "id": "window_6841"
  },
  {
    "type": "window",
    "content": "<! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs. mkdtemp()`][].",
    "originalSentence": "<! -- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs. mkdtemp()`][].",
    "position": 6842,
    "id": "window_6842"
  },
  {
    "type": "window",
    "content": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs. mkdtemp()`][]. There is no callback-based version of this API because it is designed for use\nwith the `using` syntax.",
    "originalSentence": "-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->\n\nFor detailed information, see the documentation of [`fs. mkdtemp()`][]. There is no callback-based version of this API because it is designed for use\nwith the `using` syntax.",
    "position": 6843,
    "id": "window_6843"
  },
  {
    "type": "window",
    "content": "mkdtemp()`][]. There is no callback-based version of this API because it is designed for use\nwith the `using` syntax. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "mkdtemp()`][]. There is no callback-based version of this API because it is designed for use\nwith the `using` syntax. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 6844,
    "id": "window_6844"
  },
  {
    "type": "window",
    "content": "There is no callback-based version of this API because it is designed for use\nwith the `using` syntax. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs.",
    "originalSentence": "There is no callback-based version of this API because it is designed for use\nwith the `using` syntax. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs.",
    "position": 6845,
    "id": "window_6845"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs. opendirSync(path[, options])`\n\n<!",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use. ### `fs. opendirSync(path[, options])`\n\n<!",
    "position": 6846,
    "id": "window_6846"
  },
  {
    "type": "window",
    "content": "### `fs. opendirSync(path[, options])`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "### `fs. opendirSync(path[, options])`\n\n<! -- YAML\nadded: v12.",
    "position": 6847,
    "id": "window_6847"
  },
  {
    "type": "window",
    "content": "opendirSync(path[, options])`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "opendirSync(path[, options])`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20.",
    "position": 6848,
    "id": "window_6848"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "position": 6849,
    "id": "window_6849"
  },
  {
    "type": "window",
    "content": "12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "12.0\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 6850,
    "id": "window_6850"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13.",
    "position": 6851,
    "id": "window_6851"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13. 1.0\n     - v12.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version:\n     - v13. 1.0\n     - v12.",
    "position": 6852,
    "id": "window_6852"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "originalSentence": "- version:\n     - v13. 1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.",
    "position": 6853,
    "id": "window_6853"
  },
  {
    "type": "window",
    "content": "1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "originalSentence": "1.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory.",
    "position": 6854,
    "id": "window_6854"
  },
  {
    "type": "window",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage.",
    "position": 6855,
    "id": "window_6855"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs.",
    "position": 6856,
    "id": "window_6856"
  },
  {
    "type": "window",
    "content": "Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs. Dir}\n\nSynchronously open a directory.",
    "originalSentence": "Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs. Dir}\n\nSynchronously open a directory.",
    "position": 6857,
    "id": "window_6857"
  },
  {
    "type": "window",
    "content": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs. Dir}\n\nSynchronously open a directory. See opendir(3).",
    "originalSentence": "**Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs. Dir}\n\nSynchronously open a directory. See opendir(3).",
    "position": 6858,
    "id": "window_6858"
  },
  {
    "type": "window",
    "content": "Dir}\n\nSynchronously open a directory. See opendir(3). Creates an {fs.",
    "originalSentence": "Dir}\n\nSynchronously open a directory. See opendir(3). Creates an {fs.",
    "position": 6859,
    "id": "window_6859"
  },
  {
    "type": "window",
    "content": "See opendir(3). Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "See opendir(3). Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 6860,
    "id": "window_6860"
  },
  {
    "type": "window",
    "content": "Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "Creates an {fs. Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 6861,
    "id": "window_6861"
  },
  {
    "type": "window",
    "content": "Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs.",
    "originalSentence": "Dir}, which contains all further functions for reading from\nand cleaning up the directory. The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs.",
    "position": 6862,
    "id": "window_6862"
  },
  {
    "type": "window",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs. openSync(path[, flags[, mode]])`\n\n<!",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations. ### `fs. openSync(path[, flags[, mode]])`\n\n<!",
    "position": 6863,
    "id": "window_6863"
  },
  {
    "type": "window",
    "content": "### `fs. openSync(path[, flags[, mode]])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. openSync(path[, flags[, mode]])`\n\n<! -- YAML\nadded: v0.",
    "position": 6864,
    "id": "window_6864"
  },
  {
    "type": "window",
    "content": "openSync(path[, flags[, mode]])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v11.",
    "originalSentence": "openSync(path[, flags[, mode]])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v11.",
    "position": 6865,
    "id": "window_6865"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.",
    "position": 6866,
    "id": "window_6866"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9.",
    "originalSentence": "1.21\nchanges:\n  - version: v11. 1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9.",
    "position": 6867,
    "id": "window_6867"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`. - version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.",
    "position": 6868,
    "id": "window_6868"
  },
  {
    "type": "window",
    "content": "- version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7.",
    "originalSentence": "- version: v9. 9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7.",
    "position": 6869,
    "id": "window_6869"
  },
  {
    "type": "window",
    "content": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6870,
    "id": "window_6870"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`.",
    "position": 6871,
    "id": "window_6871"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`. See [support of file system `flags`][].",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`. See [support of file system `flags`][].",
    "position": 6872,
    "id": "window_6872"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`. See [support of file system `flags`][]. * `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`. See [support of file system `flags`][]. * `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor.",
    "position": 6873,
    "id": "window_6873"
  },
  {
    "type": "window",
    "content": "See [support of file system `flags`][]. * `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "See [support of file system `flags`][]. * `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6874,
    "id": "window_6874"
  },
  {
    "type": "window",
    "content": "* `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. open()`][].",
    "originalSentence": "* `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}\n\nReturns an integer representing the file descriptor. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. open()`][].",
    "position": 6875,
    "id": "window_6875"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. open()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. open()`][]. ### `fs.",
    "position": 6876,
    "id": "window_6876"
  },
  {
    "type": "window",
    "content": "open()`][]. ### `fs. readdirSync(path[, options])`\n\n<!",
    "originalSentence": "open()`][]. ### `fs. readdirSync(path[, options])`\n\n<!",
    "position": 6877,
    "id": "window_6877"
  },
  {
    "type": "window",
    "content": "### `fs. readdirSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. readdirSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6878,
    "id": "window_6878"
  },
  {
    "type": "window",
    "content": "readdirSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v20.",
    "originalSentence": "readdirSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v20.",
    "position": 6879,
    "id": "window_6879"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v20. 1.0\n    - v18.",
    "position": 6880,
    "id": "window_6880"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "originalSentence": "1.21\nchanges:\n  - version:\n    - v20. 1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.",
    "position": 6881,
    "id": "window_6881"
  },
  {
    "type": "window",
    "content": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10.",
    "originalSentence": "1.0\n    - v18. 17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10.",
    "position": 6882,
    "id": "window_6882"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.",
    "position": 6883,
    "id": "window_6883"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v7.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v7.",
    "position": 6884,
    "id": "window_6884"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6885,
    "id": "window_6885"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively.",
    "position": 6886,
    "id": "window_6886"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories.",
    "position": 6887,
    "id": "window_6887"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.",
    "position": 6888,
    "id": "window_6888"
  },
  {
    "type": "window",
    "content": "In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`. * Returns: {string\\[]|Buffer\\[]|fs.",
    "originalSentence": "In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`. * Returns: {string\\[]|Buffer\\[]|fs.",
    "position": 6889,
    "id": "window_6889"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of the directory.",
    "originalSentence": "**Default:** `false`. * Returns: {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of the directory.",
    "position": 6890,
    "id": "window_6890"
  },
  {
    "type": "window",
    "content": "* Returns: {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of the directory. See the POSIX readdir(3) documentation for more details.",
    "originalSentence": "* Returns: {string\\[]|Buffer\\[]|fs. Dirent\\[]}\n\nReads the contents of the directory. See the POSIX readdir(3) documentation for more details.",
    "position": 6891,
    "id": "window_6891"
  },
  {
    "type": "window",
    "content": "Dirent\\[]}\n\nReads the contents of the directory. See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned.",
    "originalSentence": "Dirent\\[]}\n\nReads the contents of the directory. See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned.",
    "position": 6892,
    "id": "window_6892"
  },
  {
    "type": "window",
    "content": "See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "originalSentence": "See the POSIX readdir(3) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "position": 6893,
    "id": "window_6893"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options.",
    "position": 6894,
    "id": "window_6894"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options. withFileTypes` is set to `true`, the result will contain\n{fs.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects. If `options. withFileTypes` is set to `true`, the result will contain\n{fs.",
    "position": 6895,
    "id": "window_6895"
  },
  {
    "type": "window",
    "content": "If `options. withFileTypes` is set to `true`, the result will contain\n{fs. Dirent} objects.",
    "originalSentence": "If `options. withFileTypes` is set to `true`, the result will contain\n{fs. Dirent} objects.",
    "position": 6896,
    "id": "window_6896"
  },
  {
    "type": "window",
    "content": "withFileTypes` is set to `true`, the result will contain\n{fs. Dirent} objects. ### `fs.",
    "originalSentence": "withFileTypes` is set to `true`, the result will contain\n{fs. Dirent} objects. ### `fs.",
    "position": 6897,
    "id": "window_6897"
  },
  {
    "type": "window",
    "content": "Dirent} objects. ### `fs. readFileSync(path[, options])`\n\n<!",
    "originalSentence": "Dirent} objects. ### `fs. readFileSync(path[, options])`\n\n<!",
    "position": 6898,
    "id": "window_6898"
  },
  {
    "type": "window",
    "content": "### `fs. readFileSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. readFileSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6899,
    "id": "window_6899"
  },
  {
    "type": "window",
    "content": "readFileSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.8\nchanges:\n  - version: v7.",
    "originalSentence": "readFileSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.8\nchanges:\n  - version: v7.",
    "position": 6900,
    "id": "window_6900"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.8\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.8\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6901,
    "id": "window_6901"
  },
  {
    "type": "window",
    "content": "1.8\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v5.",
    "originalSentence": "1.8\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v5.",
    "position": 6902,
    "id": "window_6902"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.",
    "position": 6903,
    "id": "window_6903"
  },
  {
    "type": "window",
    "content": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 6904,
    "id": "window_6904"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now. -->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.",
    "position": 6905,
    "id": "window_6905"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`. * Returns: {string|Buffer}\n\nReturns the contents of the `path`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`. * Returns: {string|Buffer}\n\nReturns the contents of the `path`.",
    "position": 6906,
    "id": "window_6906"
  },
  {
    "type": "window",
    "content": "**Default:** `'r'`. * Returns: {string|Buffer}\n\nReturns the contents of the `path`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "**Default:** `'r'`. * Returns: {string|Buffer}\n\nReturns the contents of the `path`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6907,
    "id": "window_6907"
  },
  {
    "type": "window",
    "content": "* Returns: {string|Buffer}\n\nReturns the contents of the `path`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readFile()`][].",
    "originalSentence": "* Returns: {string|Buffer}\n\nReturns the contents of the `path`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readFile()`][].",
    "position": 6908,
    "id": "window_6908"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readFile()`][]. If the `encoding` option is specified then this function returns a\nstring.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readFile()`][]. If the `encoding` option is specified then this function returns a\nstring.",
    "position": 6909,
    "id": "window_6909"
  },
  {
    "type": "window",
    "content": "readFile()`][]. If the `encoding` option is specified then this function returns a\nstring. Otherwise it returns a buffer.",
    "originalSentence": "readFile()`][]. If the `encoding` option is specified then this function returns a\nstring. Otherwise it returns a buffer.",
    "position": 6910,
    "id": "window_6910"
  },
  {
    "type": "window",
    "content": "If the `encoding` option is specified then this function returns a\nstring. Otherwise it returns a buffer. Similar to [`fs.",
    "originalSentence": "If the `encoding` option is specified then this function returns a\nstring. Otherwise it returns a buffer. Similar to [`fs.",
    "position": 6911,
    "id": "window_6911"
  },
  {
    "type": "window",
    "content": "Otherwise it returns a buffer. Similar to [`fs. readFile()`][], when the path is a directory, the behavior of\n`fs.",
    "originalSentence": "Otherwise it returns a buffer. Similar to [`fs. readFile()`][], when the path is a directory, the behavior of\n`fs.",
    "position": 6912,
    "id": "window_6912"
  },
  {
    "type": "window",
    "content": "Similar to [`fs. readFile()`][], when the path is a directory, the behavior of\n`fs. readFileSync()` is platform-specific.",
    "originalSentence": "Similar to [`fs. readFile()`][], when the path is a directory, the behavior of\n`fs. readFileSync()` is platform-specific.",
    "position": 6913,
    "id": "window_6913"
  },
  {
    "type": "window",
    "content": "readFile()`][], when the path is a directory, the behavior of\n`fs. readFileSync()` is platform-specific. ```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs.",
    "originalSentence": "readFile()`][], when the path is a directory, the behavior of\n`fs. readFileSync()` is platform-specific. ```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs.",
    "position": 6914,
    "id": "window_6914"
  },
  {
    "type": "window",
    "content": "readFileSync()` is platform-specific. ```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs. readlinkSync(path[, options])`\n\n<!",
    "originalSentence": "readFileSync()` is platform-specific. ```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs. readlinkSync(path[, options])`\n\n<!",
    "position": 6915,
    "id": "window_6915"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs. readlinkSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```\n\n### `fs. readlinkSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6916,
    "id": "window_6916"
  },
  {
    "type": "window",
    "content": "readlinkSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7.",
    "originalSentence": "readlinkSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7.",
    "position": 6917,
    "id": "window_6917"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 6918,
    "id": "window_6918"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value.",
    "originalSentence": "1.31\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value.",
    "position": 6919,
    "id": "window_6919"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value. See the POSIX readlink(2) documentation for more details.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value. See the POSIX readlink(2) documentation for more details.",
    "position": 6920,
    "id": "window_6920"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value. See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the symbolic link's string value. See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned.",
    "position": 6921,
    "id": "window_6921"
  },
  {
    "type": "window",
    "content": "See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "originalSentence": "See the POSIX readlink(2) documentation for more details. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "position": 6922,
    "id": "window_6922"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs.",
    "position": 6923,
    "id": "window_6923"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs. readSync(fd, buffer, offset, length[, position])`\n\n<!",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object. ### `fs. readSync(fd, buffer, offset, length[, position])`\n\n<!",
    "position": 6924,
    "id": "window_6924"
  },
  {
    "type": "window",
    "content": "### `fs. readSync(fd, buffer, offset, length[, position])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. readSync(fd, buffer, offset, length[, position])`\n\n<! -- YAML\nadded: v0.",
    "position": 6925,
    "id": "window_6925"
  },
  {
    "type": "window",
    "content": "readSync(fd, buffer, offset, length[, position])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v10.",
    "originalSentence": "readSync(fd, buffer, offset, length[, position])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v10.",
    "position": 6926,
    "id": "window_6926"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 6927,
    "id": "window_6927"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v6.",
    "originalSentence": "1.21\nchanges:\n  - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v6.",
    "position": 6928,
    "id": "window_6928"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.",
    "position": 6929,
    "id": "window_6929"
  },
  {
    "type": "window",
    "content": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "originalSentence": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "position": 6930,
    "id": "window_6930"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6931,
    "id": "window_6931"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][].",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][].",
    "position": 6932,
    "id": "window_6932"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][]. ### `fs.",
    "position": 6933,
    "id": "window_6933"
  },
  {
    "type": "window",
    "content": "read()`][]. ### `fs. readSync(fd, buffer[, options])`\n\n<!",
    "originalSentence": "read()`][]. ### `fs. readSync(fd, buffer[, options])`\n\n<!",
    "position": 6934,
    "id": "window_6934"
  },
  {
    "type": "window",
    "content": "### `fs. readSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n - v13.",
    "originalSentence": "### `fs. readSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n - v13.",
    "position": 6935,
    "id": "window_6935"
  },
  {
    "type": "window",
    "content": "readSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n - v13. 13.0\n - v12.",
    "originalSentence": "readSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n - v13. 13.0\n - v12.",
    "position": 6936,
    "id": "window_6936"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v13. 13.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13.",
    "originalSentence": "-- YAML\nadded:\n - v13. 13.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13.",
    "position": 6937,
    "id": "window_6937"
  },
  {
    "type": "window",
    "content": "13.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13. 13.0\n     - v12.",
    "originalSentence": "13.0\n - v12. 17.0\nchanges:\n  - version:\n     - v13. 13.0\n     - v12.",
    "position": 6938,
    "id": "window_6938"
  },
  {
    "type": "window",
    "content": "17.0\nchanges:\n  - version:\n     - v13. 13.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional.",
    "originalSentence": "17.0\nchanges:\n  - version:\n     - v13. 13.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional.",
    "position": 6939,
    "id": "window_6939"
  },
  {
    "type": "window",
    "content": "13.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "13.0\n     - v12. 17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 6940,
    "id": "window_6940"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`.",
    "position": 6941,
    "id": "window_6941"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. Similar to the above `fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. Similar to the above `fs.",
    "position": 6942,
    "id": "window_6942"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. Similar to the above `fs. readSync` function, this version takes an optional `options` object.",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}\n\nReturns the number of `bytesRead`. Similar to the above `fs. readSync` function, this version takes an optional `options` object.",
    "position": 6943,
    "id": "window_6943"
  },
  {
    "type": "window",
    "content": "Similar to the above `fs. readSync` function, this version takes an optional `options` object. If no `options` object is specified, it will default with the above values.",
    "originalSentence": "Similar to the above `fs. readSync` function, this version takes an optional `options` object. If no `options` object is specified, it will default with the above values.",
    "position": 6944,
    "id": "window_6944"
  },
  {
    "type": "window",
    "content": "readSync` function, this version takes an optional `options` object. If no `options` object is specified, it will default with the above values. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "readSync` function, this version takes an optional `options` object. If no `options` object is specified, it will default with the above values. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6945,
    "id": "window_6945"
  },
  {
    "type": "window",
    "content": "If no `options` object is specified, it will default with the above values. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][].",
    "originalSentence": "If no `options` object is specified, it will default with the above values. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][].",
    "position": 6946,
    "id": "window_6946"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. read()`][]. ### `fs.",
    "position": 6947,
    "id": "window_6947"
  },
  {
    "type": "window",
    "content": "read()`][]. ### `fs. readvSync(fd, buffers[, position])`\n\n<!",
    "originalSentence": "read()`][]. ### `fs. readvSync(fd, buffers[, position])`\n\n<!",
    "position": 6948,
    "id": "window_6948"
  },
  {
    "type": "window",
    "content": "### `fs. readvSync(fd, buffers[, position])`\n\n<! -- YAML\nadded:\n - v13.",
    "originalSentence": "### `fs. readvSync(fd, buffers[, position])`\n\n<! -- YAML\nadded:\n - v13.",
    "position": 6949,
    "id": "window_6949"
  },
  {
    "type": "window",
    "content": "readvSync(fd, buffers[, position])`\n\n<! -- YAML\nadded:\n - v13. 13.0\n - v12.",
    "originalSentence": "readvSync(fd, buffers[, position])`\n\n<! -- YAML\nadded:\n - v13. 13.0\n - v12.",
    "position": 6950,
    "id": "window_6950"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v13. 13.0\n - v12. 17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read.",
    "originalSentence": "-- YAML\nadded:\n - v13. 13.0\n - v12. 17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read.",
    "position": 6951,
    "id": "window_6951"
  },
  {
    "type": "window",
    "content": "13.0\n - v12. 17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "13.0\n - v12. 17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6952,
    "id": "window_6952"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readv()`][].",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readv()`][].",
    "position": 6953,
    "id": "window_6953"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readv()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. readv()`][]. ### `fs.",
    "position": 6954,
    "id": "window_6954"
  },
  {
    "type": "window",
    "content": "readv()`][]. ### `fs. realpathSync(path[, options])`\n\n<!",
    "originalSentence": "readv()`][]. ### `fs. realpathSync(path[, options])`\n\n<!",
    "position": 6955,
    "id": "window_6955"
  },
  {
    "type": "window",
    "content": "### `fs. realpathSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. realpathSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6956,
    "id": "window_6956"
  },
  {
    "type": "window",
    "content": "realpathSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v8.",
    "originalSentence": "realpathSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v8.",
    "position": 6957,
    "id": "window_6957"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.",
    "position": 6958,
    "id": "window_6958"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7.",
    "originalSentence": "1.31\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7.",
    "position": 6959,
    "id": "window_6959"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 6960,
    "id": "window_6960"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v6.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v6.",
    "position": 6961,
    "id": "window_6961"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol. - version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows.",
    "position": 6962,
    "id": "window_6962"
  },
  {
    "type": "window",
    "content": "- version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows. - version: v6.",
    "originalSentence": "- version: v6. 4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows. - version: v6.",
    "position": 6963,
    "id": "window_6963"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows. - version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.",
    "position": 6964,
    "id": "window_6964"
  },
  {
    "type": "window",
    "content": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname.",
    "originalSentence": "- version: v6. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname.",
    "position": 6965,
    "id": "window_6965"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed. -->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 6966,
    "id": "window_6966"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. realpath()`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nReturns the resolved pathname. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. realpath()`][].",
    "position": 6967,
    "id": "window_6967"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. realpath()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. realpath()`][]. ### `fs.",
    "position": 6968,
    "id": "window_6968"
  },
  {
    "type": "window",
    "content": "### `fs. realpathSync. native(path[, options])`\n\n<!",
    "originalSentence": "### `fs. realpathSync. native(path[, options])`\n\n<!",
    "position": 6969,
    "id": "window_6969"
  },
  {
    "type": "window",
    "content": "realpathSync. native(path[, options])`\n\n<! -- YAML\nadded: v9.",
    "originalSentence": "realpathSync. native(path[, options])`\n\n<! -- YAML\nadded: v9.",
    "position": 6970,
    "id": "window_6970"
  },
  {
    "type": "window",
    "content": "native(path[, options])`\n\n<! -- YAML\nadded: v9. 2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3).",
    "originalSentence": "native(path[, options])`\n\n<! -- YAML\nadded: v9. 2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3).",
    "position": 6971,
    "id": "window_6971"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v9. 2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3). Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "-- YAML\nadded: v9. 2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3). Only paths that can be converted to UTF8 strings are supported.",
    "position": 6972,
    "id": "window_6972"
  },
  {
    "type": "window",
    "content": "2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3). Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned.",
    "originalSentence": "2.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}\n\nSynchronous realpath(3). Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned.",
    "position": 6973,
    "id": "window_6973"
  },
  {
    "type": "window",
    "content": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported. The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 6974,
    "id": "window_6974"
  },
  {
    "type": "window",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node.",
    "position": 6975,
    "id": "window_6975"
  },
  {
    "type": "window",
    "content": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "originalSentence": "If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object. On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work.",
    "position": 6976,
    "id": "window_6976"
  },
  {
    "type": "window",
    "content": "On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "originalSentence": "On Linux, when Node. js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "position": 6977,
    "id": "window_6977"
  },
  {
    "type": "window",
    "content": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction. ### `fs.",
    "originalSentence": "js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction. ### `fs.",
    "position": 6978,
    "id": "window_6978"
  },
  {
    "type": "window",
    "content": "Glibc does not have\nthis restriction. ### `fs. renameSync(oldPath, newPath)`\n\n<!",
    "originalSentence": "Glibc does not have\nthis restriction. ### `fs. renameSync(oldPath, newPath)`\n\n<!",
    "position": 6979,
    "id": "window_6979"
  },
  {
    "type": "window",
    "content": "### `fs. renameSync(oldPath, newPath)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. renameSync(oldPath, newPath)`\n\n<! -- YAML\nadded: v0.",
    "position": 6980,
    "id": "window_6980"
  },
  {
    "type": "window",
    "content": "renameSync(oldPath, newPath)`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7.",
    "originalSentence": "renameSync(oldPath, newPath)`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7.",
    "position": 6981,
    "id": "window_6981"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol.",
    "position": 6982,
    "id": "window_6982"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.",
    "originalSentence": "1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.",
    "position": 6983,
    "id": "window_6983"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`.",
    "position": 6984,
    "id": "window_6984"
  },
  {
    "type": "window",
    "content": "Support is currently still\n                 *experimental*. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`. Returns `undefined`.",
    "originalSentence": "Support is currently still\n                 *experimental*. -->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`. Returns `undefined`.",
    "position": 6985,
    "id": "window_6985"
  },
  {
    "type": "window",
    "content": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`. Returns `undefined`. See the POSIX rename(2) documentation for more details.",
    "originalSentence": "-->\n\n* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n\nRenames the file from `oldPath` to `newPath`. Returns `undefined`. See the POSIX rename(2) documentation for more details.",
    "position": 6986,
    "id": "window_6986"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. See the POSIX rename(2) documentation for more details. ### `fs.",
    "originalSentence": "Returns `undefined`. See the POSIX rename(2) documentation for more details. ### `fs.",
    "position": 6987,
    "id": "window_6987"
  },
  {
    "type": "window",
    "content": "See the POSIX rename(2) documentation for more details. ### `fs. rmdirSync(path[, options])`\n\n<!",
    "originalSentence": "See the POSIX rename(2) documentation for more details. ### `fs. rmdirSync(path[, options])`\n\n<!",
    "position": 6988,
    "id": "window_6988"
  },
  {
    "type": "window",
    "content": "### `fs. rmdirSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. rmdirSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 6989,
    "id": "window_6989"
  },
  {
    "type": "window",
    "content": "rmdirSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "originalSentence": "rmdirSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.",
    "position": 6990,
    "id": "window_6990"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16.",
    "position": 6991,
    "id": "window_6991"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option. - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 6992,
    "id": "window_6992"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"",
    "position": 6993,
    "id": "window_6993"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16.",
    "position": 6994,
    "id": "window_6994"
  },
  {
    "type": "window",
    "content": "rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "originalSentence": "rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.",
    "position": 6995,
    "id": "window_6995"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"",
    "position": 6996,
    "id": "window_6996"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs. rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16.",
    "position": 6997,
    "id": "window_6997"
  },
  {
    "type": "window",
    "content": "rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "originalSentence": "rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\" - version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.",
    "position": 6998,
    "id": "window_6998"
  },
  {
    "type": "window",
    "content": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14.",
    "originalSentence": "- version: v16. 0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14.",
    "position": 6999,
    "id": "window_6999"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning. - version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.",
    "position": 7000,
    "id": "window_7000"
  },
  {
    "type": "window",
    "content": "- version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rmSync` instead.",
    "originalSentence": "- version: v14. 14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rmSync` instead.",
    "position": 7001,
    "id": "window_7001"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rmSync` instead. - version:\n     - v13.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs. rmSync` instead. - version:\n     - v13.",
    "position": 7002,
    "id": "window_7002"
  },
  {
    "type": "window",
    "content": "rmSync` instead. - version:\n     - v13. 3.0\n     - v12.",
    "originalSentence": "rmSync` instead. - version:\n     - v13. 3.0\n     - v12.",
    "position": 7003,
    "id": "window_7003"
  },
  {
    "type": "window",
    "content": "- version:\n     - v13. 3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "originalSentence": "- version:\n     - v13. 3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0.",
    "position": 7004,
    "id": "window_7004"
  },
  {
    "type": "window",
    "content": "3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "originalSentence": "3.0\n     - v12. 16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors.",
    "position": 7005,
    "id": "window_7005"
  },
  {
    "type": "window",
    "content": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported.",
    "originalSentence": "16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported.",
    "position": 7006,
    "id": "window_7006"
  },
  {
    "type": "window",
    "content": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.",
    "originalSentence": "The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.",
    "position": 7007,
    "id": "window_7007"
  },
  {
    "type": "window",
    "content": "The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried. - version: v12.",
    "originalSentence": "The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried. - version: v12.",
    "position": 7008,
    "id": "window_7008"
  },
  {
    "type": "window",
    "content": "`ENFILE` errors are now\n                 retried. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "originalSentence": "`ENFILE` errors are now\n                 retried. - version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.",
    "position": 7009,
    "id": "window_7009"
  },
  {
    "type": "window",
    "content": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v7.",
    "originalSentence": "- version: v12. 10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v7.",
    "position": 7010,
    "id": "window_7010"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.",
    "position": 7011,
    "id": "window_7011"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed.",
    "position": 7012,
    "id": "window_7012"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed.",
    "position": 7013,
    "id": "window_7013"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 7014,
    "id": "window_7014"
  },
  {
    "type": "window",
    "content": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used. Synchronous rmdir(2).",
    "originalSentence": "There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used. Synchronous rmdir(2).",
    "position": 7015,
    "id": "window_7015"
  },
  {
    "type": "window",
    "content": "The `options` argument is still accepted for\n  backwards compatibility but it is not used. Synchronous rmdir(2). Returns `undefined`.",
    "originalSentence": "The `options` argument is still accepted for\n  backwards compatibility but it is not used. Synchronous rmdir(2). Returns `undefined`.",
    "position": 7016,
    "id": "window_7016"
  },
  {
    "type": "window",
    "content": "Synchronous rmdir(2). Returns `undefined`. Using `fs.",
    "originalSentence": "Synchronous rmdir(2). Returns `undefined`. Using `fs.",
    "position": 7017,
    "id": "window_7017"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. Using `fs. rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX.",
    "originalSentence": "Returns `undefined`. Using `fs. rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX.",
    "position": 7018,
    "id": "window_7018"
  },
  {
    "type": "window",
    "content": "Using `fs. rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "originalSentence": "Using `fs. rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs.",
    "position": 7019,
    "id": "window_7019"
  },
  {
    "type": "window",
    "content": "rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs. rmSync()`][]\nwith options `{ recursive: true, force: true }`.",
    "originalSentence": "rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX. To get a behavior similar to the `rm -rf` Unix command, use [`fs. rmSync()`][]\nwith options `{ recursive: true, force: true }`.",
    "position": 7020,
    "id": "window_7020"
  },
  {
    "type": "window",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use [`fs. rmSync()`][]\nwith options `{ recursive: true, force: true }`. ### `fs.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use [`fs. rmSync()`][]\nwith options `{ recursive: true, force: true }`. ### `fs.",
    "position": 7021,
    "id": "window_7021"
  },
  {
    "type": "window",
    "content": "rmSync()`][]\nwith options `{ recursive: true, force: true }`. ### `fs. rmSync(path[, options])`\n\n<!",
    "originalSentence": "rmSync()`][]\nwith options `{ recursive: true, force: true }`. ### `fs. rmSync(path[, options])`\n\n<!",
    "position": 7022,
    "id": "window_7022"
  },
  {
    "type": "window",
    "content": "### `fs. rmSync(path[, options])`\n\n<! -- YAML\nadded: v14.",
    "originalSentence": "### `fs. rmSync(path[, options])`\n\n<! -- YAML\nadded: v14.",
    "position": 7023,
    "id": "window_7023"
  },
  {
    "type": "window",
    "content": "rmSync(path[, options])`\n\n<! -- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17.",
    "originalSentence": "rmSync(path[, options])`\n\n<! -- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17.",
    "position": 7024,
    "id": "window_7024"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16.",
    "originalSentence": "-- YAML\nadded: v14. 14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16.",
    "position": 7025,
    "id": "window_7025"
  },
  {
    "type": "window",
    "content": "14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "14.0\nchanges:\n  - version:\n      - v17. 3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 7026,
    "id": "window_7026"
  },
  {
    "type": "window",
    "content": "3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "originalSentence": "3.0\n      - v16. 14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist.",
    "position": 7027,
    "id": "window_7027"
  },
  {
    "type": "window",
    "content": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.",
    "originalSentence": "14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.",
    "position": 7028,
    "id": "window_7028"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.",
    "position": 7029,
    "id": "window_7029"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "originalSentence": "**Default:** `false`. * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try.",
    "position": 7030,
    "id": "window_7030"
  },
  {
    "type": "window",
    "content": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries.",
    "originalSentence": "* `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node. js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries.",
    "position": 7031,
    "id": "window_7031"
  },
  {
    "type": "window",
    "content": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`.",
    "originalSentence": "js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`.",
    "position": 7032,
    "id": "window_7032"
  },
  {
    "type": "window",
    "content": "This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.",
    "originalSentence": "This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.",
    "position": 7033,
    "id": "window_7033"
  },
  {
    "type": "window",
    "content": "This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "originalSentence": "This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal.",
    "position": 7034,
    "id": "window_7034"
  },
  {
    "type": "window",
    "content": "**Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure.",
    "originalSentence": "**Default:** `0`. * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure.",
    "position": 7035,
    "id": "window_7035"
  },
  {
    "type": "window",
    "content": "* `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.",
    "originalSentence": "* `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.",
    "position": 7036,
    "id": "window_7036"
  },
  {
    "type": "window",
    "content": "In\n    recursive mode operations are retried on failure. **Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "originalSentence": "In\n    recursive mode operations are retried on failure. **Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries.",
    "position": 7037,
    "id": "window_7037"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.",
    "originalSentence": "**Default:** `false`. * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.",
    "position": 7038,
    "id": "window_7038"
  },
  {
    "type": "window",
    "content": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`. **Default:** `100`.",
    "originalSentence": "* `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`. **Default:** `100`.",
    "position": 7039,
    "id": "window_7039"
  },
  {
    "type": "window",
    "content": "This option is ignored if the `recursive` option is not `true`. **Default:** `100`. Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "originalSentence": "This option is ignored if the `recursive` option is not `true`. **Default:** `100`. Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility).",
    "position": 7040,
    "id": "window_7040"
  },
  {
    "type": "window",
    "content": "**Default:** `100`. Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). Returns `undefined`.",
    "originalSentence": "**Default:** `100`. Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). Returns `undefined`.",
    "position": 7041,
    "id": "window_7041"
  },
  {
    "type": "window",
    "content": "Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). Returns `undefined`. ### `fs.",
    "originalSentence": "Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). Returns `undefined`. ### `fs.",
    "position": 7042,
    "id": "window_7042"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. ### `fs. statSync(path[, options])`\n\n<!",
    "originalSentence": "Returns `undefined`. ### `fs. statSync(path[, options])`\n\n<!",
    "position": 7043,
    "id": "window_7043"
  },
  {
    "type": "window",
    "content": "### `fs. statSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. statSync(path[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 7044,
    "id": "window_7044"
  },
  {
    "type": "window",
    "content": "statSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v15.",
    "originalSentence": "statSync(path[, options])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v15.",
    "position": 7045,
    "id": "window_7045"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v15. 3.0\n    - v14.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v15. 3.0\n    - v14.",
    "position": 7046,
    "id": "window_7046"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version:\n    - v15. 3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "originalSentence": "1.21\nchanges:\n  - version:\n    - v15. 3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.",
    "position": 7047,
    "id": "window_7047"
  },
  {
    "type": "window",
    "content": "3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10.",
    "originalSentence": "3.0\n    - v14. 17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10.",
    "position": 7048,
    "id": "window_7048"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist. - version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.",
    "position": 7049,
    "id": "window_7049"
  },
  {
    "type": "window",
    "content": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7.",
    "originalSentence": "- version: v10. 5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7.",
    "position": 7050,
    "id": "window_7050"
  },
  {
    "type": "window",
    "content": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 7051,
    "id": "window_7051"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 7052,
    "id": "window_7052"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`.",
    "position": 7053,
    "id": "window_7053"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. Stats} object should be `bigint`. **Default:** `false`.",
    "position": 7054,
    "id": "window_7054"
  },
  {
    "type": "window",
    "content": "Stats} object should be `bigint`. **Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "originalSentence": "Stats} object should be `bigint`. **Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.",
    "position": 7055,
    "id": "window_7055"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`.",
    "originalSentence": "**Default:** `false`. * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`.",
    "position": 7056,
    "id": "window_7056"
  },
  {
    "type": "window",
    "content": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`. * Returns: {fs.",
    "originalSentence": "* `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`. **Default:** `true`. * Returns: {fs.",
    "position": 7057,
    "id": "window_7057"
  },
  {
    "type": "window",
    "content": "**Default:** `true`. * Returns: {fs. Stats}\n\nRetrieves the {fs.",
    "originalSentence": "**Default:** `true`. * Returns: {fs. Stats}\n\nRetrieves the {fs.",
    "position": 7058,
    "id": "window_7058"
  },
  {
    "type": "window",
    "content": "* Returns: {fs. Stats}\n\nRetrieves the {fs. Stats} for the path.",
    "originalSentence": "* Returns: {fs. Stats}\n\nRetrieves the {fs. Stats} for the path.",
    "position": 7059,
    "id": "window_7059"
  },
  {
    "type": "window",
    "content": "Stats}\n\nRetrieves the {fs. Stats} for the path. ### `fs.",
    "originalSentence": "Stats}\n\nRetrieves the {fs. Stats} for the path. ### `fs.",
    "position": 7060,
    "id": "window_7060"
  },
  {
    "type": "window",
    "content": "Stats} for the path. ### `fs. statfsSync(path[, options])`\n\n<!",
    "originalSentence": "Stats} for the path. ### `fs. statfsSync(path[, options])`\n\n<!",
    "position": 7061,
    "id": "window_7061"
  },
  {
    "type": "window",
    "content": "### `fs. statfsSync(path[, options])`\n\n<! -- YAML\nadded:\n  - v19.",
    "originalSentence": "### `fs. statfsSync(path[, options])`\n\n<! -- YAML\nadded:\n  - v19.",
    "position": 7062,
    "id": "window_7062"
  },
  {
    "type": "window",
    "content": "statfsSync(path[, options])`\n\n<! -- YAML\nadded:\n  - v19. 6.0\n  - v18.",
    "originalSentence": "statfsSync(path[, options])`\n\n<! -- YAML\nadded:\n  - v19. 6.0\n  - v18.",
    "position": 7063,
    "id": "window_7063"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.",
    "position": 7064,
    "id": "window_7064"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`.",
    "position": 7065,
    "id": "window_7065"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`. **Default:** `false`.",
    "originalSentence": "15.0\n-->\n\n* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs. StatFs} object should be `bigint`. **Default:** `false`.",
    "position": 7066,
    "id": "window_7066"
  },
  {
    "type": "window",
    "content": "StatFs} object should be `bigint`. **Default:** `false`. * Returns: {fs.",
    "originalSentence": "StatFs} object should be `bigint`. **Default:** `false`. * Returns: {fs.",
    "position": 7067,
    "id": "window_7067"
  },
  {
    "type": "window",
    "content": "**Default:** `false`. * Returns: {fs. StatFs}\n\nSynchronous statfs(2).",
    "originalSentence": "**Default:** `false`. * Returns: {fs. StatFs}\n\nSynchronous statfs(2).",
    "position": 7068,
    "id": "window_7068"
  },
  {
    "type": "window",
    "content": "* Returns: {fs. StatFs}\n\nSynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`.",
    "originalSentence": "* Returns: {fs. StatFs}\n\nSynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`.",
    "position": 7069,
    "id": "window_7069"
  },
  {
    "type": "window",
    "content": "StatFs}\n\nSynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`. In case of an error, the `err.",
    "originalSentence": "StatFs}\n\nSynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`. In case of an error, the `err.",
    "position": 7070,
    "id": "window_7070"
  },
  {
    "type": "window",
    "content": "Returns information about the mounted file system which\ncontains `path`. In case of an error, the `err. code` will be one of [Common System Errors][].",
    "originalSentence": "Returns information about the mounted file system which\ncontains `path`. In case of an error, the `err. code` will be one of [Common System Errors][].",
    "position": 7071,
    "id": "window_7071"
  },
  {
    "type": "window",
    "content": "In case of an error, the `err. code` will be one of [Common System Errors][]. ### `fs.",
    "originalSentence": "In case of an error, the `err. code` will be one of [Common System Errors][]. ### `fs.",
    "position": 7072,
    "id": "window_7072"
  },
  {
    "type": "window",
    "content": "code` will be one of [Common System Errors][]. ### `fs. symlinkSync(target, path[, type])`\n\n<!",
    "originalSentence": "code` will be one of [Common System Errors][]. ### `fs. symlinkSync(target, path[, type])`\n\n<!",
    "position": 7073,
    "id": "window_7073"
  },
  {
    "type": "window",
    "content": "### `fs. symlinkSync(target, path[, type])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. symlinkSync(target, path[, type])`\n\n<! -- YAML\nadded: v0.",
    "position": 7074,
    "id": "window_7074"
  },
  {
    "type": "window",
    "content": "symlinkSync(target, path[, type])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v12.",
    "originalSentence": "symlinkSync(target, path[, type])`\n\n<! -- YAML\nadded: v0. 1.31\nchanges:\n  - version: v12.",
    "position": 7075,
    "id": "window_7075"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "originalSentence": "-- YAML\nadded: v0. 1.31\nchanges:\n  - version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.",
    "position": 7076,
    "id": "window_7076"
  },
  {
    "type": "window",
    "content": "1.31\nchanges:\n  - version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7.",
    "originalSentence": "1.31\nchanges:\n  - version: v12. 0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7.",
    "position": 7077,
    "id": "window_7077"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`. - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol.",
    "position": 7078,
    "id": "window_7078"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.",
    "position": 7079,
    "id": "window_7079"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`.",
    "position": 7080,
    "id": "window_7080"
  },
  {
    "type": "window",
    "content": "Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "Support is currently still\n                 *experimental*. -->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7081,
    "id": "window_7081"
  },
  {
    "type": "window",
    "content": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. symlink()`][].",
    "originalSentence": "-->\n\n* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. symlink()`][].",
    "position": 7082,
    "id": "window_7082"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. symlink()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. symlink()`][]. ### `fs.",
    "position": 7083,
    "id": "window_7083"
  },
  {
    "type": "window",
    "content": "symlink()`][]. ### `fs. truncateSync(path[, len])`\n\n<!",
    "originalSentence": "symlink()`][]. ### `fs. truncateSync(path[, len])`\n\n<!",
    "position": 7084,
    "id": "window_7084"
  },
  {
    "type": "window",
    "content": "### `fs. truncateSync(path[, len])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. truncateSync(path[, len])`\n\n<! -- YAML\nadded: v0.",
    "position": 7085,
    "id": "window_7085"
  },
  {
    "type": "window",
    "content": "truncateSync(path[, len])`\n\n<! -- YAML\nadded: v0. 8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file.",
    "originalSentence": "truncateSync(path[, len])`\n\n<! -- YAML\nadded: v0. 8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file.",
    "position": 7086,
    "id": "window_7086"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file. Returns `undefined`.",
    "originalSentence": "-- YAML\nadded: v0. 8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file. Returns `undefined`.",
    "position": 7087,
    "id": "window_7087"
  },
  {
    "type": "window",
    "content": "8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file. Returns `undefined`. A file descriptor can also be\npassed as the first argument.",
    "originalSentence": "8.6\n-->\n\n* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n\nTruncates the file. Returns `undefined`. A file descriptor can also be\npassed as the first argument.",
    "position": 7088,
    "id": "window_7088"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. A file descriptor can also be\npassed as the first argument. In this case, `fs.",
    "originalSentence": "Returns `undefined`. A file descriptor can also be\npassed as the first argument. In this case, `fs.",
    "position": 7089,
    "id": "window_7089"
  },
  {
    "type": "window",
    "content": "A file descriptor can also be\npassed as the first argument. In this case, `fs. ftruncateSync()` is called.",
    "originalSentence": "A file descriptor can also be\npassed as the first argument. In this case, `fs. ftruncateSync()` is called.",
    "position": 7090,
    "id": "window_7090"
  },
  {
    "type": "window",
    "content": "In this case, `fs. ftruncateSync()` is called. Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "originalSentence": "In this case, `fs. ftruncateSync()` is called. Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "position": 7091,
    "id": "window_7091"
  },
  {
    "type": "window",
    "content": "ftruncateSync()` is called. Passing a file descriptor is deprecated and may result in an error being thrown\nin the future. ### `fs.",
    "originalSentence": "ftruncateSync()` is called. Passing a file descriptor is deprecated and may result in an error being thrown\nin the future. ### `fs.",
    "position": 7092,
    "id": "window_7092"
  },
  {
    "type": "window",
    "content": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future. ### `fs. unlinkSync(path)`\n\n<!",
    "originalSentence": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future. ### `fs. unlinkSync(path)`\n\n<!",
    "position": 7093,
    "id": "window_7093"
  },
  {
    "type": "window",
    "content": "unlinkSync(path)`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7.",
    "originalSentence": "unlinkSync(path)`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7.",
    "position": 7094,
    "id": "window_7094"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 7095,
    "id": "window_7095"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2).",
    "originalSentence": "1.21\nchanges:\n  - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2).",
    "position": 7096,
    "id": "window_7096"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2). Returns `undefined`.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. -->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2). Returns `undefined`.",
    "position": 7097,
    "id": "window_7097"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2). Returns `undefined`. ### `fs.",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n\nSynchronous unlink(2). Returns `undefined`. ### `fs.",
    "position": 7098,
    "id": "window_7098"
  },
  {
    "type": "window",
    "content": "Returns `undefined`. ### `fs. utimesSync(path, atime, mtime)`\n\n<!",
    "originalSentence": "Returns `undefined`. ### `fs. utimesSync(path, atime, mtime)`\n\n<!",
    "position": 7099,
    "id": "window_7099"
  },
  {
    "type": "window",
    "content": "### `fs. utimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. utimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded: v0.",
    "position": 7100,
    "id": "window_7100"
  },
  {
    "type": "window",
    "content": "utimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v8.",
    "originalSentence": "utimesSync(path, atime, mtime)`\n\n<! -- YAML\nadded: v0. 4.2\nchanges:\n  - version: v8.",
    "position": 7101,
    "id": "window_7101"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "originalSentence": "-- YAML\nadded: v0. 4.2\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"",
    "position": 7102,
    "id": "window_7102"
  },
  {
    "type": "window",
    "content": "4.2\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7.",
    "originalSentence": "4.2\nchanges:\n  - version: v8. 0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7.",
    "position": 7103,
    "id": "window_7103"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\" - version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.",
    "position": 7104,
    "id": "window_7104"
  },
  {
    "type": "window",
    "content": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v4.",
    "originalSentence": "- version: v7. 6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v4.",
    "position": 7105,
    "id": "window_7105"
  },
  {
    "type": "window",
    "content": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "originalSentence": "6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol. - version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.",
    "position": 7106,
    "id": "window_7106"
  },
  {
    "type": "window",
    "content": "- version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`.",
    "originalSentence": "- version: v4. 1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`.",
    "position": 7107,
    "id": "window_7107"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers. -->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7108,
    "id": "window_7108"
  },
  {
    "type": "window",
    "content": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. utimes()`][].",
    "originalSentence": "-->\n\n* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. utimes()`][].",
    "position": 7109,
    "id": "window_7109"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. utimes()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. utimes()`][]. ### `fs.",
    "position": 7110,
    "id": "window_7110"
  },
  {
    "type": "window",
    "content": "utimes()`][]. ### `fs. writeFileSync(file, data[, options])`\n\n<!",
    "originalSentence": "utimes()`][]. ### `fs. writeFileSync(file, data[, options])`\n\n<!",
    "position": 7111,
    "id": "window_7111"
  },
  {
    "type": "window",
    "content": "### `fs. writeFileSync(file, data[, options])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. writeFileSync(file, data[, options])`\n\n<! -- YAML\nadded: v0.",
    "position": 7112,
    "id": "window_7112"
  },
  {
    "type": "window",
    "content": "writeFileSync(file, data[, options])`\n\n<! -- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21.",
    "originalSentence": "writeFileSync(file, data[, options])`\n\n<! -- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21.",
    "position": 7113,
    "id": "window_7113"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v0. 1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20.",
    "position": 7114,
    "id": "window_7114"
  },
  {
    "type": "window",
    "content": "1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "originalSentence": "1.29\nchanges:\n  - version:\n    - v21. 0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.",
    "position": 7115,
    "id": "window_7115"
  },
  {
    "type": "window",
    "content": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19.",
    "originalSentence": "0.0\n    - v20. 10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19.",
    "position": 7116,
    "id": "window_7116"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported. - version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported.",
    "position": 7117,
    "id": "window_7117"
  },
  {
    "type": "window",
    "content": "- version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17.",
    "originalSentence": "- version: v19. 0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17.",
    "position": 7118,
    "id": "window_7118"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported. - version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated.",
    "position": 7119,
    "id": "window_7119"
  },
  {
    "type": "window",
    "content": "- version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated. - version: v14.",
    "originalSentence": "- version: v17. 8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated. - version: v14.",
    "position": 7120,
    "id": "window_7120"
  },
  {
    "type": "window",
    "content": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated. - version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "originalSentence": "8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated. - version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.",
    "position": 7121,
    "id": "window_7121"
  },
  {
    "type": "window",
    "content": "- version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14.",
    "originalSentence": "- version: v14. 12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14.",
    "position": 7122,
    "id": "window_7122"
  },
  {
    "type": "window",
    "content": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function. - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 7123,
    "id": "window_7123"
  },
  {
    "type": "window",
    "content": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "originalSentence": "- version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "position": 7124,
    "id": "window_7124"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 7125,
    "id": "window_7125"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7.",
    "position": 7126,
    "id": "window_7126"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.",
    "position": 7127,
    "id": "window_7127"
  },
  {
    "type": "window",
    "content": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v5.",
    "originalSentence": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v5.",
    "position": 7128,
    "id": "window_7128"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`. - version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.",
    "position": 7129,
    "id": "window_7129"
  },
  {
    "type": "window",
    "content": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "originalSentence": "- version: v5. 0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][].",
    "position": 7130,
    "id": "window_7130"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now. -->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.",
    "position": 7131,
    "id": "window_7131"
  },
  {
    "type": "window",
    "content": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "originalSentence": "-->\n\n* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.",
    "position": 7132,
    "id": "window_7132"
  },
  {
    "type": "window",
    "content": "**Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsyncSync()` is used to flush the data.",
    "originalSentence": "**Default:** `'w'`. * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsyncSync()` is used to flush the data.",
    "position": 7133,
    "id": "window_7133"
  },
  {
    "type": "window",
    "content": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsyncSync()` is used to flush the data. * Returns: `undefined`.",
    "originalSentence": "* `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs. fsyncSync()` is used to flush the data. * Returns: `undefined`.",
    "position": 7134,
    "id": "window_7134"
  },
  {
    "type": "window",
    "content": "fsyncSync()` is used to flush the data. * Returns: `undefined`. The `mode` option only affects the newly created file.",
    "originalSentence": "fsyncSync()` is used to flush the data. * Returns: `undefined`. The `mode` option only affects the newly created file.",
    "position": 7135,
    "id": "window_7135"
  },
  {
    "type": "window",
    "content": "* Returns: `undefined`. The `mode` option only affects the newly created file. See [`fs.",
    "originalSentence": "* Returns: `undefined`. The `mode` option only affects the newly created file. See [`fs.",
    "position": 7136,
    "id": "window_7136"
  },
  {
    "type": "window",
    "content": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs. open()`][]\nfor more details.",
    "position": 7137,
    "id": "window_7137"
  },
  {
    "type": "window",
    "content": "See [`fs. open()`][]\nfor more details. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "See [`fs. open()`][]\nfor more details. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7138,
    "id": "window_7138"
  },
  {
    "type": "window",
    "content": "open()`][]\nfor more details. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writeFile()`][].",
    "originalSentence": "open()`][]\nfor more details. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writeFile()`][].",
    "position": 7139,
    "id": "window_7139"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writeFile()`][]. ### `fs.",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writeFile()`][]. ### `fs.",
    "position": 7140,
    "id": "window_7140"
  },
  {
    "type": "window",
    "content": "writeFile()`][]. ### `fs. writeSync(fd, buffer, offset[, length[, position]])`\n\n<!",
    "originalSentence": "writeFile()`][]. ### `fs. writeSync(fd, buffer, offset[, length[, position]])`\n\n<!",
    "position": 7141,
    "id": "window_7141"
  },
  {
    "type": "window",
    "content": "### `fs. writeSync(fd, buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. writeSync(fd, buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v0.",
    "position": 7142,
    "id": "window_7142"
  },
  {
    "type": "window",
    "content": "writeSync(fd, buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v14.",
    "originalSentence": "writeSync(fd, buffer, offset[, length[, position]])`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version: v14.",
    "position": 7143,
    "id": "window_7143"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 7144,
    "id": "window_7144"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "originalSentence": "1.21\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10.",
    "position": 7145,
    "id": "window_7145"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore. - version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.",
    "position": 7146,
    "id": "window_7146"
  },
  {
    "type": "window",
    "content": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7.",
    "originalSentence": "- version: v10. 10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7.",
    "position": 7147,
    "id": "window_7147"
  },
  {
    "type": "window",
    "content": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "originalSentence": "10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`. - version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.",
    "position": 7148,
    "id": "window_7148"
  },
  {
    "type": "window",
    "content": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7.",
    "originalSentence": "- version: v7. 4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7.",
    "position": 7149,
    "id": "window_7149"
  },
  {
    "type": "window",
    "content": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "originalSentence": "4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.",
    "position": 7150,
    "id": "window_7150"
  },
  {
    "type": "window",
    "content": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "originalSentence": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.",
    "position": 7151,
    "id": "window_7151"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now. -->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 7152,
    "id": "window_7152"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer. byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7153,
    "id": "window_7153"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...)",
    "originalSentence": "byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...)",
    "position": 7154,
    "id": "window_7154"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...) `][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...) `][].",
    "position": 7155,
    "id": "window_7155"
  },
  {
    "type": "window",
    "content": "`][]. ### `fs. writeSync(fd, buffer[, options])`\n\n<!",
    "originalSentence": "`][]. ### `fs. writeSync(fd, buffer[, options])`\n\n<!",
    "position": 7156,
    "id": "window_7156"
  },
  {
    "type": "window",
    "content": "### `fs. writeSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18.",
    "originalSentence": "### `fs. writeSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18.",
    "position": 7157,
    "id": "window_7157"
  },
  {
    "type": "window",
    "content": "writeSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18. 3.0\n  - v16.",
    "originalSentence": "writeSync(fd, buffer[, options])`\n\n<! -- YAML\nadded:\n  - v18. 3.0\n  - v16.",
    "position": 7158,
    "id": "window_7158"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v18. 3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "originalSentence": "-- YAML\nadded:\n  - v18. 3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.",
    "position": 7159,
    "id": "window_7159"
  },
  {
    "type": "window",
    "content": "3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "3.0\n  - v16. 17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 7160,
    "id": "window_7160"
  },
  {
    "type": "window",
    "content": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "17.0\n-->\n\n* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer. byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7161,
    "id": "window_7161"
  },
  {
    "type": "window",
    "content": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...)",
    "originalSentence": "byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...)",
    "position": 7162,
    "id": "window_7162"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...) `][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, buffer...) `][].",
    "position": 7163,
    "id": "window_7163"
  },
  {
    "type": "window",
    "content": "`][]. ### `fs. writeSync(fd, string[, position[, encoding]])`\n\n<!",
    "originalSentence": "`][]. ### `fs. writeSync(fd, string[, position[, encoding]])`\n\n<!",
    "position": 7164,
    "id": "window_7164"
  },
  {
    "type": "window",
    "content": "### `fs. writeSync(fd, string[, position[, encoding]])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### `fs. writeSync(fd, string[, position[, encoding]])`\n\n<! -- YAML\nadded: v0.",
    "position": 7165,
    "id": "window_7165"
  },
  {
    "type": "window",
    "content": "writeSync(fd, string[, position[, encoding]])`\n\n<! -- YAML\nadded: v0. 11.5\nchanges:\n  - version: v14.",
    "originalSentence": "writeSync(fd, string[, position[, encoding]])`\n\n<! -- YAML\nadded: v0. 11.5\nchanges:\n  - version: v14.",
    "position": 7166,
    "id": "window_7166"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.5\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "originalSentence": "-- YAML\nadded: v0. 11.5\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.",
    "position": 7167,
    "id": "window_7167"
  },
  {
    "type": "window",
    "content": "11.5\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v7.",
    "originalSentence": "11.5\nchanges:\n  - version: v14. 0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v7.",
    "position": 7168,
    "id": "window_7168"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore. - version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.",
    "position": 7169,
    "id": "window_7169"
  },
  {
    "type": "window",
    "content": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "- version: v7. 2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written.",
    "position": 7170,
    "id": "window_7170"
  },
  {
    "type": "window",
    "content": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now. -->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7171,
    "id": "window_7171"
  },
  {
    "type": "window",
    "content": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, string...)",
    "originalSentence": "-->\n\n* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, string...)",
    "position": 7172,
    "id": "window_7172"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, string...) `][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. write(fd, string...) `][].",
    "position": 7173,
    "id": "window_7173"
  },
  {
    "type": "window",
    "content": "`][]. ### `fs. writevSync(fd, buffers[, position])`\n\n<!",
    "originalSentence": "`][]. ### `fs. writevSync(fd, buffers[, position])`\n\n<!",
    "position": 7174,
    "id": "window_7174"
  },
  {
    "type": "window",
    "content": "### `fs. writevSync(fd, buffers[, position])`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "### `fs. writevSync(fd, buffers[, position])`\n\n<! -- YAML\nadded: v12.",
    "position": 7175,
    "id": "window_7175"
  },
  {
    "type": "window",
    "content": "writevSync(fd, buffers[, position])`\n\n<! -- YAML\nadded: v12. 9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "writevSync(fd, buffers[, position])`\n\n<! -- YAML\nadded: v12. 9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 7176,
    "id": "window_7176"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "originalSentence": "-- YAML\nadded: v12. 9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.",
    "position": 7177,
    "id": "window_7177"
  },
  {
    "type": "window",
    "content": "9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writev()`][].",
    "originalSentence": "9.0\n-->\n\n* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written. For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writev()`][].",
    "position": 7178,
    "id": "window_7178"
  },
  {
    "type": "window",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writev()`][]. ## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous).",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs. writev()`][]. ## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous).",
    "position": 7179,
    "id": "window_7179"
  },
  {
    "type": "window",
    "content": "writev()`][]. ## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous). ### Class: `fs.",
    "originalSentence": "writev()`][]. ## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous). ### Class: `fs.",
    "position": 7180,
    "id": "window_7180"
  },
  {
    "type": "window",
    "content": "## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous). ### Class: `fs. Dir`\n\n<!",
    "originalSentence": "## Common Objects\n\nThe common objects are shared by all of the file system API variants\n(promise, callback, and synchronous). ### Class: `fs. Dir`\n\n<!",
    "position": 7181,
    "id": "window_7181"
  },
  {
    "type": "window",
    "content": "Dir`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\nA class representing a directory stream.",
    "originalSentence": "Dir`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\nA class representing a directory stream.",
    "position": 7182,
    "id": "window_7182"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\nA class representing a directory stream. Created by [`fs.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\nA class representing a directory stream. Created by [`fs.",
    "position": 7183,
    "id": "window_7183"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\nA class representing a directory stream. Created by [`fs. opendir()`][], [`fs.",
    "originalSentence": "12.0\n-->\n\nA class representing a directory stream. Created by [`fs. opendir()`][], [`fs.",
    "position": 7184,
    "id": "window_7184"
  },
  {
    "type": "window",
    "content": "Created by [`fs. opendir()`][], [`fs. opendirSync()`][], or\n[`fsPromises.",
    "originalSentence": "Created by [`fs. opendir()`][], [`fs. opendirSync()`][], or\n[`fsPromises.",
    "position": 7185,
    "id": "window_7185"
  },
  {
    "type": "window",
    "content": "opendir()`][], [`fs. opendirSync()`][], or\n[`fsPromises. opendir()`][].",
    "originalSentence": "opendir()`][], [`fs. opendirSync()`][], or\n[`fsPromises. opendir()`][].",
    "position": 7186,
    "id": "window_7186"
  },
  {
    "type": "window",
    "content": "opendirSync()`][], or\n[`fsPromises. opendir()`][]. ```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "originalSentence": "opendirSync()`][], or\n[`fsPromises. opendir()`][]. ```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('.",
    "position": 7187,
    "id": "window_7187"
  },
  {
    "type": "window",
    "content": "opendir()`][]. ```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console.",
    "originalSentence": "opendir()`][]. ```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console.",
    "position": 7188,
    "id": "window_7188"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console. log(dirent.",
    "originalSentence": "```mjs\nimport { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('. /');\n  for await (const dirent of dir)\n    console. log(dirent.",
    "position": 7189,
    "id": "window_7189"
  },
  {
    "type": "window",
    "content": "/');\n  for await (const dirent of dir)\n    console. log(dirent. name);\n} catch (err) {\n  console.",
    "originalSentence": "/');\n  for await (const dirent of dir)\n    console. log(dirent. name);\n} catch (err) {\n  console.",
    "position": 7190,
    "id": "window_7190"
  },
  {
    "type": "window",
    "content": "log(dirent. name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "originalSentence": "log(dirent. name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs.",
    "position": 7191,
    "id": "window_7191"
  },
  {
    "type": "window",
    "content": "name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits.",
    "originalSentence": "name);\n} catch (err) {\n  console. error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits.",
    "position": 7192,
    "id": "window_7192"
  },
  {
    "type": "window",
    "content": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits. #### `dir.",
    "originalSentence": "error(err);\n}\n```\n\nWhen using the async iterator, the {fs. Dir} object will be automatically\nclosed after the iterator exits. #### `dir.",
    "position": 7193,
    "id": "window_7193"
  },
  {
    "type": "window",
    "content": "Dir} object will be automatically\nclosed after the iterator exits. #### `dir. close()`\n\n<!",
    "originalSentence": "Dir} object will be automatically\nclosed after the iterator exits. #### `dir. close()`\n\n<!",
    "position": 7194,
    "id": "window_7194"
  },
  {
    "type": "window",
    "content": "close()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle.",
    "originalSentence": "close()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle.",
    "position": 7195,
    "id": "window_7195"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.",
    "position": 7196,
    "id": "window_7196"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors. A promise is returned that will be fulfilled after the resource has been\nclosed.",
    "originalSentence": "12.0\n-->\n\n* Returns: {Promise}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors. A promise is returned that will be fulfilled after the resource has been\nclosed.",
    "position": 7197,
    "id": "window_7197"
  },
  {
    "type": "window",
    "content": "Subsequent reads will result in errors. A promise is returned that will be fulfilled after the resource has been\nclosed. #### `dir.",
    "originalSentence": "Subsequent reads will result in errors. A promise is returned that will be fulfilled after the resource has been\nclosed. #### `dir.",
    "position": 7198,
    "id": "window_7198"
  },
  {
    "type": "window",
    "content": "A promise is returned that will be fulfilled after the resource has been\nclosed. #### `dir. close(callback)`\n\n<!",
    "originalSentence": "A promise is returned that will be fulfilled after the resource has been\nclosed. #### `dir. close(callback)`\n\n<!",
    "position": 7199,
    "id": "window_7199"
  },
  {
    "type": "window",
    "content": "#### `dir. close(callback)`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "#### `dir. close(callback)`\n\n<! -- YAML\nadded: v12.",
    "position": 7200,
    "id": "window_7200"
  },
  {
    "type": "window",
    "content": "close(callback)`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version: v18.",
    "originalSentence": "close(callback)`\n\n<! -- YAML\nadded: v12. 12.0\nchanges:\n  - version: v18.",
    "position": 7201,
    "id": "window_7201"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.",
    "position": 7202,
    "id": "window_7202"
  },
  {
    "type": "window",
    "content": "12.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle.",
    "originalSentence": "12.0\nchanges:\n  - version: v18. 0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle.",
    "position": 7203,
    "id": "window_7203"
  },
  {
    "type": "window",
    "content": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.",
    "originalSentence": "0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`. -->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.",
    "position": 7204,
    "id": "window_7204"
  },
  {
    "type": "window",
    "content": "-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors. The `callback` will be called after the resource handle has been closed.",
    "originalSentence": "-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nAsynchronously close the directory's underlying resource handle. Subsequent reads will result in errors. The `callback` will be called after the resource handle has been closed.",
    "position": 7205,
    "id": "window_7205"
  },
  {
    "type": "window",
    "content": "Subsequent reads will result in errors. The `callback` will be called after the resource handle has been closed. #### `dir.",
    "originalSentence": "Subsequent reads will result in errors. The `callback` will be called after the resource handle has been closed. #### `dir.",
    "position": 7206,
    "id": "window_7206"
  },
  {
    "type": "window",
    "content": "The `callback` will be called after the resource handle has been closed. #### `dir. closeSync()`\n\n<!",
    "originalSentence": "The `callback` will be called after the resource handle has been closed. #### `dir. closeSync()`\n\n<!",
    "position": 7207,
    "id": "window_7207"
  },
  {
    "type": "window",
    "content": "closeSync()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\nSynchronously close the directory's underlying resource handle.",
    "originalSentence": "closeSync()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\nSynchronously close the directory's underlying resource handle.",
    "position": 7208,
    "id": "window_7208"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\nSynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\nSynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.",
    "position": 7209,
    "id": "window_7209"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\nSynchronously close the directory's underlying resource handle. Subsequent reads will result in errors. #### `dir.",
    "originalSentence": "12.0\n-->\n\nSynchronously close the directory's underlying resource handle. Subsequent reads will result in errors. #### `dir.",
    "position": 7210,
    "id": "window_7210"
  },
  {
    "type": "window",
    "content": "Subsequent reads will result in errors. #### `dir. path`\n\n<!",
    "originalSentence": "Subsequent reads will result in errors. #### `dir. path`\n\n<!",
    "position": 7211,
    "id": "window_7211"
  },
  {
    "type": "window",
    "content": "path`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs.",
    "originalSentence": "path`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs.",
    "position": 7212,
    "id": "window_7212"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs. opendir()`][],\n[`fs.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs. opendir()`][],\n[`fs.",
    "position": 7213,
    "id": "window_7213"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs. opendir()`][],\n[`fs. opendirSync()`][], or [`fsPromises.",
    "originalSentence": "12.0\n-->\n\n* Type: {string}\n\nThe read-only path of this directory as was provided to [`fs. opendir()`][],\n[`fs. opendirSync()`][], or [`fsPromises.",
    "position": 7214,
    "id": "window_7214"
  },
  {
    "type": "window",
    "content": "opendir()`][],\n[`fs. opendirSync()`][], or [`fsPromises. opendir()`][].",
    "originalSentence": "opendir()`][],\n[`fs. opendirSync()`][], or [`fsPromises. opendir()`][].",
    "position": 7215,
    "id": "window_7215"
  },
  {
    "type": "window",
    "content": "opendirSync()`][], or [`fsPromises. opendir()`][]. #### `dir.",
    "originalSentence": "opendirSync()`][], or [`fsPromises. opendir()`][]. #### `dir.",
    "position": 7216,
    "id": "window_7216"
  },
  {
    "type": "window",
    "content": "read()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs.",
    "originalSentence": "read()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs.",
    "position": 7217,
    "id": "window_7217"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "position": 7218,
    "id": "window_7218"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}.",
    "originalSentence": "12.0\n-->\n\n* Returns: {Promise} Fulfills with a {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}.",
    "position": 7219,
    "id": "window_7219"
  },
  {
    "type": "window",
    "content": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}. A promise is returned that will be fulfilled with an {fs.",
    "originalSentence": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}. A promise is returned that will be fulfilled with an {fs.",
    "position": 7220,
    "id": "window_7220"
  },
  {
    "type": "window",
    "content": "Dirent}. A promise is returned that will be fulfilled with an {fs. Dirent}, or `null`\nif there are no more directory entries to read.",
    "originalSentence": "Dirent}. A promise is returned that will be fulfilled with an {fs. Dirent}, or `null`\nif there are no more directory entries to read.",
    "position": 7221,
    "id": "window_7221"
  },
  {
    "type": "window",
    "content": "A promise is returned that will be fulfilled with an {fs. Dirent}, or `null`\nif there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "A promise is returned that will be fulfilled with an {fs. Dirent}, or `null`\nif there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 7222,
    "id": "window_7222"
  },
  {
    "type": "window",
    "content": "Dirent}, or `null`\nif there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Dirent}, or `null`\nif there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 7223,
    "id": "window_7223"
  },
  {
    "type": "window",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir.",
    "position": 7224,
    "id": "window_7224"
  },
  {
    "type": "window",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir. read(callback)`\n\n<!",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir. read(callback)`\n\n<!",
    "position": 7225,
    "id": "window_7225"
  },
  {
    "type": "window",
    "content": "read(callback)`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs.",
    "originalSentence": "read(callback)`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs.",
    "position": 7226,
    "id": "window_7226"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs.",
    "position": 7227,
    "id": "window_7227"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}.",
    "originalSentence": "12.0\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs. Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}.",
    "position": 7228,
    "id": "window_7228"
  },
  {
    "type": "window",
    "content": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}. After the read is completed, the `callback` will be called with an\n{fs.",
    "originalSentence": "Dirent|null}\n\nAsynchronously read the next directory entry via readdir(3) as an\n{fs. Dirent}. After the read is completed, the `callback` will be called with an\n{fs.",
    "position": 7229,
    "id": "window_7229"
  },
  {
    "type": "window",
    "content": "Dirent}. After the read is completed, the `callback` will be called with an\n{fs. Dirent}, or `null` if there are no more directory entries to read.",
    "originalSentence": "Dirent}. After the read is completed, the `callback` will be called with an\n{fs. Dirent}, or `null` if there are no more directory entries to read.",
    "position": 7230,
    "id": "window_7230"
  },
  {
    "type": "window",
    "content": "After the read is completed, the `callback` will be called with an\n{fs. Dirent}, or `null` if there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "After the read is completed, the `callback` will be called with an\n{fs. Dirent}, or `null` if there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 7231,
    "id": "window_7231"
  },
  {
    "type": "window",
    "content": "Dirent}, or `null` if there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Dirent}, or `null` if there are no more directory entries to read. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 7232,
    "id": "window_7232"
  },
  {
    "type": "window",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir.",
    "position": 7233,
    "id": "window_7233"
  },
  {
    "type": "window",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir. readSync()`\n\n<!",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir. readSync()`\n\n<!",
    "position": 7234,
    "id": "window_7234"
  },
  {
    "type": "window",
    "content": "readSync()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "readSync()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {fs.",
    "position": 7235,
    "id": "window_7235"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {fs. Dirent|null}\n\nSynchronously read the next directory entry as an {fs.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {fs. Dirent|null}\n\nSynchronously read the next directory entry as an {fs.",
    "position": 7236,
    "id": "window_7236"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\n* Returns: {fs. Dirent|null}\n\nSynchronously read the next directory entry as an {fs. Dirent}.",
    "originalSentence": "12.0\n-->\n\n* Returns: {fs. Dirent|null}\n\nSynchronously read the next directory entry as an {fs. Dirent}.",
    "position": 7237,
    "id": "window_7237"
  },
  {
    "type": "window",
    "content": "Dirent|null}\n\nSynchronously read the next directory entry as an {fs. Dirent}. See the\nPOSIX readdir(3) documentation for more detail.",
    "originalSentence": "Dirent|null}\n\nSynchronously read the next directory entry as an {fs. Dirent}. See the\nPOSIX readdir(3) documentation for more detail.",
    "position": 7238,
    "id": "window_7238"
  },
  {
    "type": "window",
    "content": "Dirent}. See the\nPOSIX readdir(3) documentation for more detail. If there are no more directory entries to read, `null` will be returned.",
    "originalSentence": "Dirent}. See the\nPOSIX readdir(3) documentation for more detail. If there are no more directory entries to read, `null` will be returned.",
    "position": 7239,
    "id": "window_7239"
  },
  {
    "type": "window",
    "content": "See the\nPOSIX readdir(3) documentation for more detail. If there are no more directory entries to read, `null` will be returned. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "See the\nPOSIX readdir(3) documentation for more detail. If there are no more directory entries to read, `null` will be returned. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 7240,
    "id": "window_7240"
  },
  {
    "type": "window",
    "content": "If there are no more directory entries to read, `null` will be returned. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "If there are no more directory entries to read, `null` will be returned. Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 7241,
    "id": "window_7241"
  },
  {
    "type": "window",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol.",
    "position": 7242,
    "id": "window_7242"
  },
  {
    "type": "window",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol. asyncIterator]()`\n\n<!",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol. asyncIterator]()`\n\n<!",
    "position": 7243,
    "id": "window_7243"
  },
  {
    "type": "window",
    "content": "#### `dir[Symbol. asyncIterator]()`\n\n<! -- YAML\nadded: v12.",
    "originalSentence": "#### `dir[Symbol. asyncIterator]()`\n\n<! -- YAML\nadded: v12.",
    "position": 7244,
    "id": "window_7244"
  },
  {
    "type": "window",
    "content": "asyncIterator]()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs.",
    "originalSentence": "asyncIterator]()`\n\n<! -- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs.",
    "position": 7245,
    "id": "window_7245"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs. Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read.",
    "originalSentence": "-- YAML\nadded: v12. 12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs. Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read.",
    "position": 7246,
    "id": "window_7246"
  },
  {
    "type": "window",
    "content": "12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs. Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read. Refer to the POSIX readdir(3) documentation for more detail.",
    "originalSentence": "12.0\n-->\n\n* Returns: {AsyncIterator} An AsyncIterator of {fs. Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read. Refer to the POSIX readdir(3) documentation for more detail.",
    "position": 7247,
    "id": "window_7247"
  },
  {
    "type": "window",
    "content": "Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read. Refer to the POSIX readdir(3) documentation for more detail. Entries returned by the async iterator are always an {fs.",
    "originalSentence": "Dirent}\n\nAsynchronously iterates over the directory until all entries have\nbeen read. Refer to the POSIX readdir(3) documentation for more detail. Entries returned by the async iterator are always an {fs.",
    "position": 7248,
    "id": "window_7248"
  },
  {
    "type": "window",
    "content": "Refer to the POSIX readdir(3) documentation for more detail. Entries returned by the async iterator are always an {fs. Dirent}.",
    "originalSentence": "Refer to the POSIX readdir(3) documentation for more detail. Entries returned by the async iterator are always an {fs. Dirent}.",
    "position": 7249,
    "id": "window_7249"
  },
  {
    "type": "window",
    "content": "Entries returned by the async iterator are always an {fs. Dirent}. The `null` case from `dir.",
    "originalSentence": "Entries returned by the async iterator are always an {fs. Dirent}. The `null` case from `dir.",
    "position": 7250,
    "id": "window_7250"
  },
  {
    "type": "window",
    "content": "Dirent}. The `null` case from `dir. read()` is handled internally.",
    "originalSentence": "Dirent}. The `null` case from `dir. read()` is handled internally.",
    "position": 7251,
    "id": "window_7251"
  },
  {
    "type": "window",
    "content": "The `null` case from `dir. read()` is handled internally. See {fs.",
    "originalSentence": "The `null` case from `dir. read()` is handled internally. See {fs.",
    "position": 7252,
    "id": "window_7252"
  },
  {
    "type": "window",
    "content": "read()` is handled internally. See {fs. Dir} for an example.",
    "originalSentence": "read()` is handled internally. See {fs. Dir} for an example.",
    "position": 7253,
    "id": "window_7253"
  },
  {
    "type": "window",
    "content": "See {fs. Dir} for an example. Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "originalSentence": "See {fs. Dir} for an example. Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms.",
    "position": 7254,
    "id": "window_7254"
  },
  {
    "type": "window",
    "content": "Dir} for an example. Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Dir} for an example. Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 7255,
    "id": "window_7255"
  },
  {
    "type": "window",
    "content": "Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol.",
    "originalSentence": "Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms. Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol.",
    "position": 7256,
    "id": "window_7256"
  },
  {
    "type": "window",
    "content": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol. asyncDispose]()`\n\n<!",
    "originalSentence": "Entries added or removed while iterating over the directory might not be\nincluded in the iteration results. #### `dir[Symbol. asyncDispose]()`\n\n<!",
    "position": 7257,
    "id": "window_7257"
  },
  {
    "type": "window",
    "content": "#### `dir[Symbol. asyncDispose]()`\n\n<! -- YAML\nadded:\n - v24.",
    "originalSentence": "#### `dir[Symbol. asyncDispose]()`\n\n<! -- YAML\nadded:\n - v24.",
    "position": 7258,
    "id": "window_7258"
  },
  {
    "type": "window",
    "content": "asyncDispose]()`\n\n<! -- YAML\nadded:\n - v24. 1.0\n - v22.",
    "originalSentence": "asyncDispose]()`\n\n<! -- YAML\nadded:\n - v24. 1.0\n - v22.",
    "position": 7259,
    "id": "window_7259"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v24. 1.0\n - v22. 1.0\nchanges:\n - version: v24.",
    "originalSentence": "-- YAML\nadded:\n - v24. 1.0\n - v22. 1.0\nchanges:\n - version: v24.",
    "position": 7260,
    "id": "window_7260"
  },
  {
    "type": "window",
    "content": "1.0\n - v22. 1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "originalSentence": "1.0\n - v22. 1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "position": 7261,
    "id": "window_7261"
  },
  {
    "type": "window",
    "content": "1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir.",
    "originalSentence": "1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir.",
    "position": 7262,
    "id": "window_7262"
  },
  {
    "type": "window",
    "content": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir. close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete.",
    "originalSentence": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir. close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete.",
    "position": 7263,
    "id": "window_7263"
  },
  {
    "type": "window",
    "content": "-->\n\nCalls `dir. close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete. #### `dir[Symbol.",
    "originalSentence": "-->\n\nCalls `dir. close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete. #### `dir[Symbol.",
    "position": 7264,
    "id": "window_7264"
  },
  {
    "type": "window",
    "content": "close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete. #### `dir[Symbol. dispose]()`\n\n<!",
    "originalSentence": "close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete. #### `dir[Symbol. dispose]()`\n\n<!",
    "position": 7265,
    "id": "window_7265"
  },
  {
    "type": "window",
    "content": "#### `dir[Symbol. dispose]()`\n\n<! -- YAML\nadded:\n - v24.",
    "originalSentence": "#### `dir[Symbol. dispose]()`\n\n<! -- YAML\nadded:\n - v24.",
    "position": 7266,
    "id": "window_7266"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v24. 1.0\n - v22. 1.0\nchanges:\n - version: v24.",
    "originalSentence": "-- YAML\nadded:\n - v24. 1.0\n - v22. 1.0\nchanges:\n - version: v24.",
    "position": 7267,
    "id": "window_7267"
  },
  {
    "type": "window",
    "content": "1.0\n - v22. 1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "originalSentence": "1.0\n - v22. 1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.",
    "position": 7268,
    "id": "window_7268"
  },
  {
    "type": "window",
    "content": "1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir.",
    "originalSentence": "1.0\nchanges:\n - version: v24. 2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir.",
    "position": 7269,
    "id": "window_7269"
  },
  {
    "type": "window",
    "content": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir. closeSync()` if the directory handle is open, and returns\n`undefined`.",
    "originalSentence": "2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental. -->\n\nCalls `dir. closeSync()` if the directory handle is open, and returns\n`undefined`.",
    "position": 7270,
    "id": "window_7270"
  },
  {
    "type": "window",
    "content": "-->\n\nCalls `dir. closeSync()` if the directory handle is open, and returns\n`undefined`. ### Class: `fs.",
    "originalSentence": "-->\n\nCalls `dir. closeSync()` if the directory handle is open, and returns\n`undefined`. ### Class: `fs.",
    "position": 7271,
    "id": "window_7271"
  },
  {
    "type": "window",
    "content": "closeSync()` if the directory handle is open, and returns\n`undefined`. ### Class: `fs. Dirent`\n\n<!",
    "originalSentence": "closeSync()` if the directory handle is open, and returns\n`undefined`. ### Class: `fs. Dirent`\n\n<!",
    "position": 7272,
    "id": "window_7272"
  },
  {
    "type": "window",
    "content": "Dirent`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs.",
    "originalSentence": "Dirent`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs.",
    "position": 7273,
    "id": "window_7273"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs. Dir}.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs. Dir}.",
    "position": 7274,
    "id": "window_7274"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs. Dir}. The\ndirectory entry is a combination of the file name and file type pairs.",
    "originalSentence": "10.0\n-->\n\nA representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs. Dir}. The\ndirectory entry is a combination of the file name and file type pairs.",
    "position": 7275,
    "id": "window_7275"
  },
  {
    "type": "window",
    "content": "Dir}. The\ndirectory entry is a combination of the file name and file type pairs. Additionally, when [`fs.",
    "originalSentence": "Dir}. The\ndirectory entry is a combination of the file name and file type pairs. Additionally, when [`fs.",
    "position": 7276,
    "id": "window_7276"
  },
  {
    "type": "window",
    "content": "The\ndirectory entry is a combination of the file name and file type pairs. Additionally, when [`fs. readdir()`][] or [`fs.",
    "originalSentence": "The\ndirectory entry is a combination of the file name and file type pairs. Additionally, when [`fs. readdir()`][] or [`fs.",
    "position": 7277,
    "id": "window_7277"
  },
  {
    "type": "window",
    "content": "Additionally, when [`fs. readdir()`][] or [`fs. readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs.",
    "originalSentence": "Additionally, when [`fs. readdir()`][] or [`fs. readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs.",
    "position": 7278,
    "id": "window_7278"
  },
  {
    "type": "window",
    "content": "readdir()`][] or [`fs. readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs. Dirent} objects, rather than strings or {Buffer}s.",
    "originalSentence": "readdir()`][] or [`fs. readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs. Dirent} objects, rather than strings or {Buffer}s.",
    "position": 7279,
    "id": "window_7279"
  },
  {
    "type": "window",
    "content": "readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs. Dirent} objects, rather than strings or {Buffer}s. #### `dirent.",
    "originalSentence": "readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs. Dirent} objects, rather than strings or {Buffer}s. #### `dirent.",
    "position": 7280,
    "id": "window_7280"
  },
  {
    "type": "window",
    "content": "Dirent} objects, rather than strings or {Buffer}s. #### `dirent. isBlockDevice()`\n\n<!",
    "originalSentence": "Dirent} objects, rather than strings or {Buffer}s. #### `dirent. isBlockDevice()`\n\n<!",
    "position": 7281,
    "id": "window_7281"
  },
  {
    "type": "window",
    "content": "#### `dirent. isBlockDevice()`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `dirent. isBlockDevice()`\n\n<! -- YAML\nadded: v10.",
    "position": 7282,
    "id": "window_7282"
  },
  {
    "type": "window",
    "content": "isBlockDevice()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isBlockDevice()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7283,
    "id": "window_7283"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a block device.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a block device.",
    "position": 7284,
    "id": "window_7284"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a block device. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a block device. #### `dirent.",
    "position": 7285,
    "id": "window_7285"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a block device. #### `dirent. isCharacterDevice()`\n\n<!",
    "originalSentence": "Dirent} object describes a block device. #### `dirent. isCharacterDevice()`\n\n<!",
    "position": 7286,
    "id": "window_7286"
  },
  {
    "type": "window",
    "content": "#### `dirent. isCharacterDevice()`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `dirent. isCharacterDevice()`\n\n<! -- YAML\nadded: v10.",
    "position": 7287,
    "id": "window_7287"
  },
  {
    "type": "window",
    "content": "isCharacterDevice()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isCharacterDevice()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7288,
    "id": "window_7288"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a character device.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a character device.",
    "position": 7289,
    "id": "window_7289"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a character device. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a character device. #### `dirent.",
    "position": 7290,
    "id": "window_7290"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a character device. #### `dirent. isDirectory()`\n\n<!",
    "originalSentence": "Dirent} object describes a character device. #### `dirent. isDirectory()`\n\n<!",
    "position": 7291,
    "id": "window_7291"
  },
  {
    "type": "window",
    "content": "#### `dirent. isDirectory()`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `dirent. isDirectory()`\n\n<! -- YAML\nadded: v10.",
    "position": 7292,
    "id": "window_7292"
  },
  {
    "type": "window",
    "content": "isDirectory()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isDirectory()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7293,
    "id": "window_7293"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a file system\ndirectory.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a file system\ndirectory.",
    "position": 7294,
    "id": "window_7294"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a file system\ndirectory. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a file system\ndirectory. #### `dirent.",
    "position": 7295,
    "id": "window_7295"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a file system\ndirectory. #### `dirent. isFIFO()`\n\n<!",
    "originalSentence": "Dirent} object describes a file system\ndirectory. #### `dirent. isFIFO()`\n\n<!",
    "position": 7296,
    "id": "window_7296"
  },
  {
    "type": "window",
    "content": "isFIFO()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isFIFO()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7297,
    "id": "window_7297"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a first-in-first-out\n(FIFO) pipe.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a first-in-first-out\n(FIFO) pipe.",
    "position": 7298,
    "id": "window_7298"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a first-in-first-out\n(FIFO) pipe. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a first-in-first-out\n(FIFO) pipe. #### `dirent.",
    "position": 7299,
    "id": "window_7299"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a first-in-first-out\n(FIFO) pipe. #### `dirent. isFile()`\n\n<!",
    "originalSentence": "Dirent} object describes a first-in-first-out\n(FIFO) pipe. #### `dirent. isFile()`\n\n<!",
    "position": 7300,
    "id": "window_7300"
  },
  {
    "type": "window",
    "content": "isFile()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isFile()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7301,
    "id": "window_7301"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a regular file.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a regular file.",
    "position": 7302,
    "id": "window_7302"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a regular file. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a regular file. #### `dirent.",
    "position": 7303,
    "id": "window_7303"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a regular file. #### `dirent. isSocket()`\n\n<!",
    "originalSentence": "Dirent} object describes a regular file. #### `dirent. isSocket()`\n\n<!",
    "position": 7304,
    "id": "window_7304"
  },
  {
    "type": "window",
    "content": "isSocket()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isSocket()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7305,
    "id": "window_7305"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a socket.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a socket.",
    "position": 7306,
    "id": "window_7306"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a socket. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a socket. #### `dirent.",
    "position": 7307,
    "id": "window_7307"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a socket. #### `dirent. isSymbolicLink()`\n\n<!",
    "originalSentence": "Dirent} object describes a socket. #### `dirent. isSymbolicLink()`\n\n<!",
    "position": 7308,
    "id": "window_7308"
  },
  {
    "type": "window",
    "content": "#### `dirent. isSymbolicLink()`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "#### `dirent. isSymbolicLink()`\n\n<! -- YAML\nadded: v10.",
    "position": 7309,
    "id": "window_7309"
  },
  {
    "type": "window",
    "content": "isSymbolicLink()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isSymbolicLink()`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7310,
    "id": "window_7310"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a symbolic link.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a symbolic link.",
    "position": 7311,
    "id": "window_7311"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a symbolic link. #### `dirent.",
    "originalSentence": "10.0\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Dirent} object describes a symbolic link. #### `dirent.",
    "position": 7312,
    "id": "window_7312"
  },
  {
    "type": "window",
    "content": "Dirent} object describes a symbolic link. #### `dirent. name`\n\n<!",
    "originalSentence": "Dirent} object describes a symbolic link. #### `dirent. name`\n\n<!",
    "position": 7313,
    "id": "window_7313"
  },
  {
    "type": "window",
    "content": "name`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs.",
    "originalSentence": "name`\n\n<! -- YAML\nadded: v10. 10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs.",
    "position": 7314,
    "id": "window_7314"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs. Dirent} object refers to.",
    "originalSentence": "-- YAML\nadded: v10. 10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs. Dirent} object refers to.",
    "position": 7315,
    "id": "window_7315"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs. Dirent} object refers to. The type of this\nvalue is determined by the `options.",
    "originalSentence": "10.0\n-->\n\n* Type: {string|Buffer}\n\nThe file name that this {fs. Dirent} object refers to. The type of this\nvalue is determined by the `options.",
    "position": 7316,
    "id": "window_7316"
  },
  {
    "type": "window",
    "content": "Dirent} object refers to. The type of this\nvalue is determined by the `options. encoding` passed to [`fs.",
    "originalSentence": "Dirent} object refers to. The type of this\nvalue is determined by the `options. encoding` passed to [`fs.",
    "position": 7317,
    "id": "window_7317"
  },
  {
    "type": "window",
    "content": "The type of this\nvalue is determined by the `options. encoding` passed to [`fs. readdir()`][] or\n[`fs.",
    "originalSentence": "The type of this\nvalue is determined by the `options. encoding` passed to [`fs. readdir()`][] or\n[`fs.",
    "position": 7318,
    "id": "window_7318"
  },
  {
    "type": "window",
    "content": "encoding` passed to [`fs. readdir()`][] or\n[`fs. readdirSync()`][].",
    "originalSentence": "encoding` passed to [`fs. readdir()`][] or\n[`fs. readdirSync()`][].",
    "position": 7319,
    "id": "window_7319"
  },
  {
    "type": "window",
    "content": "readdir()`][] or\n[`fs. readdirSync()`][]. #### `dirent.",
    "originalSentence": "readdir()`][] or\n[`fs. readdirSync()`][]. #### `dirent.",
    "position": 7320,
    "id": "window_7320"
  },
  {
    "type": "window",
    "content": "#### `dirent. parentPath`\n\n<! -- YAML\nadded:\n  - v21.",
    "originalSentence": "#### `dirent. parentPath`\n\n<! -- YAML\nadded:\n  - v21.",
    "position": 7321,
    "id": "window_7321"
  },
  {
    "type": "window",
    "content": "parentPath`\n\n<! -- YAML\nadded:\n  - v21. 4.0\n  - v20.",
    "originalSentence": "parentPath`\n\n<! -- YAML\nadded:\n  - v21. 4.0\n  - v20.",
    "position": 7322,
    "id": "window_7322"
  },
  {
    "type": "window",
    "content": "4.0\n  - v20. 12.0\n  - v18. 20.0\nchanges:\n  - version:\n      - v24.",
    "originalSentence": "4.0\n  - v20. 12.0\n  - v18. 20.0\nchanges:\n  - version:\n      - v24.",
    "position": 7323,
    "id": "window_7323"
  },
  {
    "type": "window",
    "content": "12.0\n  - v18. 20.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22.",
    "originalSentence": "12.0\n  - v18. 20.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22.",
    "position": 7324,
    "id": "window_7324"
  },
  {
    "type": "window",
    "content": "20.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "originalSentence": "20.0\nchanges:\n  - version:\n      - v24. 0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.",
    "position": 7325,
    "id": "window_7325"
  },
  {
    "type": "window",
    "content": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs.",
    "originalSentence": "0.0\n      - v22. 17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs.",
    "position": 7326,
    "id": "window_7326"
  },
  {
    "type": "window",
    "content": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs. Dirent} object refers to.",
    "originalSentence": "17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable. -->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs. Dirent} object refers to.",
    "position": 7327,
    "id": "window_7327"
  },
  {
    "type": "window",
    "content": "-->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs. Dirent} object refers to. ### Class: `fs.",
    "originalSentence": "-->\n\n* Type: {string}\n\nThe path to the parent directory of the file this {fs. Dirent} object refers to. ### Class: `fs.",
    "position": 7328,
    "id": "window_7328"
  },
  {
    "type": "window",
    "content": "Dirent} object refers to. ### Class: `fs. FSWatcher`\n\n<!",
    "originalSentence": "Dirent} object refers to. ### Class: `fs. FSWatcher`\n\n<!",
    "position": 7329,
    "id": "window_7329"
  },
  {
    "type": "window",
    "content": "FSWatcher`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs.",
    "originalSentence": "FSWatcher`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs.",
    "position": 7330,
    "id": "window_7330"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs. watch()`][] method will return a new {fs.",
    "originalSentence": "-- YAML\nadded: v0. 5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs. watch()`][] method will return a new {fs.",
    "position": 7331,
    "id": "window_7331"
  },
  {
    "type": "window",
    "content": "5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs. watch()`][] method will return a new {fs. FSWatcher}\nobject.",
    "originalSentence": "5.8\n-->\n\n* Extends {EventEmitter}\n\nA successful call to [`fs. watch()`][] method will return a new {fs. FSWatcher}\nobject.",
    "position": 7332,
    "id": "window_7332"
  },
  {
    "type": "window",
    "content": "watch()`][] method will return a new {fs. FSWatcher}\nobject. All {fs.",
    "originalSentence": "watch()`][] method will return a new {fs. FSWatcher}\nobject. All {fs.",
    "position": 7333,
    "id": "window_7333"
  },
  {
    "type": "window",
    "content": "FSWatcher}\nobject. All {fs. FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified.",
    "originalSentence": "FSWatcher}\nobject. All {fs. FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified.",
    "position": 7334,
    "id": "window_7334"
  },
  {
    "type": "window",
    "content": "All {fs. FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified. #### Event: `'change'`\n\n<!",
    "originalSentence": "All {fs. FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified. #### Event: `'change'`\n\n<!",
    "position": 7335,
    "id": "window_7335"
  },
  {
    "type": "window",
    "content": "FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified. #### Event: `'change'`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified. #### Event: `'change'`\n\n<! -- YAML\nadded: v0.",
    "position": 7336,
    "id": "window_7336"
  },
  {
    "type": "window",
    "content": "#### Event: `'change'`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file.",
    "originalSentence": "#### Event: `'change'`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file.",
    "position": 7337,
    "id": "window_7337"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file. See more details in [`fs.",
    "originalSentence": "-- YAML\nadded: v0. 5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file. See more details in [`fs.",
    "position": 7338,
    "id": "window_7338"
  },
  {
    "type": "window",
    "content": "5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file. See more details in [`fs. watch()`][].",
    "originalSentence": "5.8\n-->\n\n* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)\n\nEmitted when something changes in a watched directory or file. See more details in [`fs. watch()`][].",
    "position": 7339,
    "id": "window_7339"
  },
  {
    "type": "window",
    "content": "See more details in [`fs. watch()`][]. The `filename` argument may not be provided depending on operating system\nsupport.",
    "originalSentence": "See more details in [`fs. watch()`][]. The `filename` argument may not be provided depending on operating system\nsupport.",
    "position": 7340,
    "id": "window_7340"
  },
  {
    "type": "window",
    "content": "watch()`][]. The `filename` argument may not be provided depending on operating system\nsupport. If `filename` is provided, it will be provided as a {Buffer} if\n`fs.",
    "originalSentence": "watch()`][]. The `filename` argument may not be provided depending on operating system\nsupport. If `filename` is provided, it will be provided as a {Buffer} if\n`fs.",
    "position": 7341,
    "id": "window_7341"
  },
  {
    "type": "window",
    "content": "The `filename` argument may not be provided depending on operating system\nsupport. If `filename` is provided, it will be provided as a {Buffer} if\n`fs. watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string.",
    "originalSentence": "The `filename` argument may not be provided depending on operating system\nsupport. If `filename` is provided, it will be provided as a {Buffer} if\n`fs. watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string.",
    "position": 7342,
    "id": "window_7342"
  },
  {
    "type": "window",
    "content": "If `filename` is provided, it will be provided as a {Buffer} if\n`fs. watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string. ```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs.",
    "originalSentence": "If `filename` is provided, it will be provided as a {Buffer} if\n`fs. watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string. ```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs.",
    "position": 7343,
    "id": "window_7343"
  },
  {
    "type": "window",
    "content": "watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string. ```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs. watch() listener\nwatch('.",
    "originalSentence": "watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string. ```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs. watch() listener\nwatch('.",
    "position": 7344,
    "id": "window_7344"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs. watch() listener\nwatch('. /tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.",
    "originalSentence": "```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs. watch() listener\nwatch('. /tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.",
    "position": 7345,
    "id": "window_7345"
  },
  {
    "type": "window",
    "content": "watch() listener\nwatch('. /tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console. log(filename);\n    // Prints: <Buffer ...",
    "originalSentence": "watch() listener\nwatch('. /tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console. log(filename);\n    // Prints: <Buffer ...",
    "position": 7346,
    "id": "window_7346"
  },
  {
    "type": "window",
    "content": "/tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console. log(filename);\n    // Prints: <Buffer ... >\n  }\n});\n```\n\n#### Event: `'close'`\n\n<!",
    "originalSentence": "/tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console. log(filename);\n    // Prints: <Buffer ... >\n  }\n});\n```\n\n#### Event: `'close'`\n\n<!",
    "position": 7347,
    "id": "window_7347"
  },
  {
    "type": "window",
    "content": "log(filename);\n    // Prints: <Buffer ... >\n  }\n});\n```\n\n#### Event: `'close'`\n\n<! -- YAML\nadded: v10.",
    "originalSentence": "log(filename);\n    // Prints: <Buffer ... >\n  }\n});\n```\n\n#### Event: `'close'`\n\n<! -- YAML\nadded: v10.",
    "position": 7348,
    "id": "window_7348"
  },
  {
    "type": "window",
    "content": ">\n  }\n});\n```\n\n#### Event: `'close'`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\nEmitted when the watcher stops watching for changes.",
    "originalSentence": ">\n  }\n});\n```\n\n#### Event: `'close'`\n\n<! -- YAML\nadded: v10. 0.0\n-->\n\nEmitted when the watcher stops watching for changes.",
    "position": 7349,
    "id": "window_7349"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v10. 0.0\n-->\n\nEmitted when the watcher stops watching for changes. The closed\n{fs.",
    "originalSentence": "-- YAML\nadded: v10. 0.0\n-->\n\nEmitted when the watcher stops watching for changes. The closed\n{fs.",
    "position": 7350,
    "id": "window_7350"
  },
  {
    "type": "window",
    "content": "0.0\n-->\n\nEmitted when the watcher stops watching for changes. The closed\n{fs. FSWatcher} object is no longer usable in the event handler.",
    "originalSentence": "0.0\n-->\n\nEmitted when the watcher stops watching for changes. The closed\n{fs. FSWatcher} object is no longer usable in the event handler.",
    "position": 7351,
    "id": "window_7351"
  },
  {
    "type": "window",
    "content": "The closed\n{fs. FSWatcher} object is no longer usable in the event handler. #### Event: `'error'`\n\n<!",
    "originalSentence": "The closed\n{fs. FSWatcher} object is no longer usable in the event handler. #### Event: `'error'`\n\n<!",
    "position": 7352,
    "id": "window_7352"
  },
  {
    "type": "window",
    "content": "FSWatcher} object is no longer usable in the event handler. #### Event: `'error'`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "FSWatcher} object is no longer usable in the event handler. #### Event: `'error'`\n\n<! -- YAML\nadded: v0.",
    "position": 7353,
    "id": "window_7353"
  },
  {
    "type": "window",
    "content": "#### Event: `'error'`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file.",
    "originalSentence": "#### Event: `'error'`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file.",
    "position": 7354,
    "id": "window_7354"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file. The errored\n{fs.",
    "originalSentence": "-- YAML\nadded: v0. 5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file. The errored\n{fs.",
    "position": 7355,
    "id": "window_7355"
  },
  {
    "type": "window",
    "content": "5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file. The errored\n{fs. FSWatcher} object is no longer usable in the event handler.",
    "originalSentence": "5.8\n-->\n\n* `error` {Error}\n\nEmitted when an error occurs while watching the file. The errored\n{fs. FSWatcher} object is no longer usable in the event handler.",
    "position": 7356,
    "id": "window_7356"
  },
  {
    "type": "window",
    "content": "The errored\n{fs. FSWatcher} object is no longer usable in the event handler. #### `watcher.",
    "originalSentence": "The errored\n{fs. FSWatcher} object is no longer usable in the event handler. #### `watcher.",
    "position": 7357,
    "id": "window_7357"
  },
  {
    "type": "window",
    "content": "FSWatcher} object is no longer usable in the event handler. #### `watcher. close()`\n\n<!",
    "originalSentence": "FSWatcher} object is no longer usable in the event handler. #### `watcher. close()`\n\n<!",
    "position": 7358,
    "id": "window_7358"
  },
  {
    "type": "window",
    "content": "close()`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\nStop watching for changes on the given {fs.",
    "originalSentence": "close()`\n\n<! -- YAML\nadded: v0. 5.8\n-->\n\nStop watching for changes on the given {fs.",
    "position": 7359,
    "id": "window_7359"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 5.8\n-->\n\nStop watching for changes on the given {fs. FSWatcher}.",
    "originalSentence": "-- YAML\nadded: v0. 5.8\n-->\n\nStop watching for changes on the given {fs. FSWatcher}.",
    "position": 7360,
    "id": "window_7360"
  },
  {
    "type": "window",
    "content": "5.8\n-->\n\nStop watching for changes on the given {fs. FSWatcher}. Once stopped, the\n{fs.",
    "originalSentence": "5.8\n-->\n\nStop watching for changes on the given {fs. FSWatcher}. Once stopped, the\n{fs.",
    "position": 7361,
    "id": "window_7361"
  },
  {
    "type": "window",
    "content": "FSWatcher}. Once stopped, the\n{fs. FSWatcher} object is no longer usable.",
    "originalSentence": "FSWatcher}. Once stopped, the\n{fs. FSWatcher} object is no longer usable.",
    "position": 7362,
    "id": "window_7362"
  },
  {
    "type": "window",
    "content": "Once stopped, the\n{fs. FSWatcher} object is no longer usable. #### `watcher.",
    "originalSentence": "Once stopped, the\n{fs. FSWatcher} object is no longer usable. #### `watcher.",
    "position": 7363,
    "id": "window_7363"
  },
  {
    "type": "window",
    "content": "FSWatcher} object is no longer usable. #### `watcher. ref()`\n\n<!",
    "originalSentence": "FSWatcher} object is no longer usable. #### `watcher. ref()`\n\n<!",
    "position": 7364,
    "id": "window_7364"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "position": 7365,
    "id": "window_7365"
  },
  {
    "type": "window",
    "content": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, requests that the Node.",
    "originalSentence": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, requests that the Node.",
    "position": 7366,
    "id": "window_7366"
  },
  {
    "type": "window",
    "content": "20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs.",
    "position": 7367,
    "id": "window_7367"
  },
  {
    "type": "window",
    "content": "FSWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs. FSWatcher} is active.",
    "originalSentence": "FSWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs. FSWatcher} is active.",
    "position": 7368,
    "id": "window_7368"
  },
  {
    "type": "window",
    "content": "js event loop _not_ exit so long as the\n{fs. FSWatcher} is active. Calling `watcher.",
    "originalSentence": "js event loop _not_ exit so long as the\n{fs. FSWatcher} is active. Calling `watcher.",
    "position": 7369,
    "id": "window_7369"
  },
  {
    "type": "window",
    "content": "FSWatcher} is active. Calling `watcher. ref()` multiple times will have\nno effect.",
    "originalSentence": "FSWatcher} is active. Calling `watcher. ref()` multiple times will have\nno effect.",
    "position": 7370,
    "id": "window_7370"
  },
  {
    "type": "window",
    "content": "Calling `watcher. ref()` multiple times will have\nno effect. By default, all {fs.",
    "originalSentence": "Calling `watcher. ref()` multiple times will have\nno effect. By default, all {fs.",
    "position": 7371,
    "id": "window_7371"
  },
  {
    "type": "window",
    "content": "ref()` multiple times will have\nno effect. By default, all {fs. FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "originalSentence": "ref()` multiple times will have\nno effect. By default, all {fs. FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "position": 7372,
    "id": "window_7372"
  },
  {
    "type": "window",
    "content": "By default, all {fs. FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher.",
    "originalSentence": "By default, all {fs. FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher.",
    "position": 7373,
    "id": "window_7373"
  },
  {
    "type": "window",
    "content": "FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher. unref()` had been\ncalled previously.",
    "originalSentence": "FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher. unref()` had been\ncalled previously.",
    "position": 7374,
    "id": "window_7374"
  },
  {
    "type": "window",
    "content": "ref()` unless `watcher. unref()` had been\ncalled previously. #### `watcher.",
    "originalSentence": "ref()` unless `watcher. unref()` had been\ncalled previously. #### `watcher.",
    "position": 7375,
    "id": "window_7375"
  },
  {
    "type": "window",
    "content": "unref()` had been\ncalled previously. #### `watcher. unref()`\n\n<!",
    "originalSentence": "unref()` had been\ncalled previously. #### `watcher. unref()`\n\n<!",
    "position": 7376,
    "id": "window_7376"
  },
  {
    "type": "window",
    "content": "#### `watcher. unref()`\n\n<! -- YAML\nadded:\n  - v14.",
    "originalSentence": "#### `watcher. unref()`\n\n<! -- YAML\nadded:\n  - v14.",
    "position": 7377,
    "id": "window_7377"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "position": 7378,
    "id": "window_7378"
  },
  {
    "type": "window",
    "content": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, the active {fs.",
    "originalSentence": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, the active {fs.",
    "position": 7379,
    "id": "window_7379"
  },
  {
    "type": "window",
    "content": "20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, the active {fs. FSWatcher} object will not require the Node.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs. FSWatcher}\n\nWhen called, the active {fs. FSWatcher} object will not require the Node.",
    "position": 7380,
    "id": "window_7380"
  },
  {
    "type": "window",
    "content": "FSWatcher}\n\nWhen called, the active {fs. FSWatcher} object will not require the Node. js\nevent loop to remain active.",
    "originalSentence": "FSWatcher}\n\nWhen called, the active {fs. FSWatcher} object will not require the Node. js\nevent loop to remain active.",
    "position": 7381,
    "id": "window_7381"
  },
  {
    "type": "window",
    "content": "FSWatcher} object will not require the Node. js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "originalSentence": "FSWatcher} object will not require the Node. js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "position": 7382,
    "id": "window_7382"
  },
  {
    "type": "window",
    "content": "js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. FSWatcher} object's\ncallback is invoked.",
    "originalSentence": "js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. FSWatcher} object's\ncallback is invoked.",
    "position": 7383,
    "id": "window_7383"
  },
  {
    "type": "window",
    "content": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. FSWatcher} object's\ncallback is invoked. Calling `watcher.",
    "originalSentence": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. FSWatcher} object's\ncallback is invoked. Calling `watcher.",
    "position": 7384,
    "id": "window_7384"
  },
  {
    "type": "window",
    "content": "FSWatcher} object's\ncallback is invoked. Calling `watcher. unref()` multiple times will have\nno effect.",
    "originalSentence": "FSWatcher} object's\ncallback is invoked. Calling `watcher. unref()` multiple times will have\nno effect.",
    "position": 7385,
    "id": "window_7385"
  },
  {
    "type": "window",
    "content": "Calling `watcher. unref()` multiple times will have\nno effect. ### Class: `fs.",
    "originalSentence": "Calling `watcher. unref()` multiple times will have\nno effect. ### Class: `fs.",
    "position": 7386,
    "id": "window_7386"
  },
  {
    "type": "window",
    "content": "unref()` multiple times will have\nno effect. ### Class: `fs. StatWatcher`\n\n<!",
    "originalSentence": "unref()` multiple times will have\nno effect. ### Class: `fs. StatWatcher`\n\n<!",
    "position": 7387,
    "id": "window_7387"
  },
  {
    "type": "window",
    "content": "### Class: `fs. StatWatcher`\n\n<! -- YAML\nadded:\n  - v14.",
    "originalSentence": "### Class: `fs. StatWatcher`\n\n<! -- YAML\nadded:\n  - v14.",
    "position": 7388,
    "id": "window_7388"
  },
  {
    "type": "window",
    "content": "StatWatcher`\n\n<! -- YAML\nadded:\n  - v14. 3.0\n  - v12.",
    "originalSentence": "StatWatcher`\n\n<! -- YAML\nadded:\n  - v14. 3.0\n  - v12.",
    "position": 7389,
    "id": "window_7389"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs.",
    "position": 7390,
    "id": "window_7390"
  },
  {
    "type": "window",
    "content": "3.0\n  - v12. 20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs. watchFile()` method will return a new {fs.",
    "originalSentence": "3.0\n  - v12. 20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs. watchFile()` method will return a new {fs.",
    "position": 7391,
    "id": "window_7391"
  },
  {
    "type": "window",
    "content": "20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs. watchFile()` method will return a new {fs. StatWatcher}\nobject.",
    "originalSentence": "20.0\n-->\n\n* Extends {EventEmitter}\n\nA successful call to `fs. watchFile()` method will return a new {fs. StatWatcher}\nobject.",
    "position": 7392,
    "id": "window_7392"
  },
  {
    "type": "window",
    "content": "watchFile()` method will return a new {fs. StatWatcher}\nobject. #### `watcher.",
    "originalSentence": "watchFile()` method will return a new {fs. StatWatcher}\nobject. #### `watcher.",
    "position": 7393,
    "id": "window_7393"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "position": 7394,
    "id": "window_7394"
  },
  {
    "type": "window",
    "content": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, requests that the Node.",
    "originalSentence": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, requests that the Node.",
    "position": 7395,
    "id": "window_7395"
  },
  {
    "type": "window",
    "content": "20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs.",
    "position": 7396,
    "id": "window_7396"
  },
  {
    "type": "window",
    "content": "StatWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs. StatWatcher} is active.",
    "originalSentence": "StatWatcher}\n\nWhen called, requests that the Node. js event loop _not_ exit so long as the\n{fs. StatWatcher} is active.",
    "position": 7397,
    "id": "window_7397"
  },
  {
    "type": "window",
    "content": "js event loop _not_ exit so long as the\n{fs. StatWatcher} is active. Calling `watcher.",
    "originalSentence": "js event loop _not_ exit so long as the\n{fs. StatWatcher} is active. Calling `watcher.",
    "position": 7398,
    "id": "window_7398"
  },
  {
    "type": "window",
    "content": "StatWatcher} is active. Calling `watcher. ref()` multiple times will have\nno effect.",
    "originalSentence": "StatWatcher} is active. Calling `watcher. ref()` multiple times will have\nno effect.",
    "position": 7399,
    "id": "window_7399"
  },
  {
    "type": "window",
    "content": "Calling `watcher. ref()` multiple times will have\nno effect. By default, all {fs.",
    "originalSentence": "Calling `watcher. ref()` multiple times will have\nno effect. By default, all {fs.",
    "position": 7400,
    "id": "window_7400"
  },
  {
    "type": "window",
    "content": "ref()` multiple times will have\nno effect. By default, all {fs. StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "originalSentence": "ref()` multiple times will have\nno effect. By default, all {fs. StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.",
    "position": 7401,
    "id": "window_7401"
  },
  {
    "type": "window",
    "content": "By default, all {fs. StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher.",
    "originalSentence": "By default, all {fs. StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher.",
    "position": 7402,
    "id": "window_7402"
  },
  {
    "type": "window",
    "content": "StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher. unref()` had been\ncalled previously.",
    "originalSentence": "StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher. ref()` unless `watcher. unref()` had been\ncalled previously.",
    "position": 7403,
    "id": "window_7403"
  },
  {
    "type": "window",
    "content": "ref()` unless `watcher. unref()` had been\ncalled previously. #### `watcher.",
    "originalSentence": "ref()` unless `watcher. unref()` had been\ncalled previously. #### `watcher.",
    "position": 7404,
    "id": "window_7404"
  },
  {
    "type": "window",
    "content": "unref()` had been\ncalled previously. #### `watcher. unref()`\n\n<!",
    "originalSentence": "unref()` had been\ncalled previously. #### `watcher. unref()`\n\n<!",
    "position": 7405,
    "id": "window_7405"
  },
  {
    "type": "window",
    "content": "#### `watcher. unref()`\n\n<! -- YAML\nadded:\n  - v14.",
    "originalSentence": "#### `watcher. unref()`\n\n<! -- YAML\nadded:\n  - v14.",
    "position": 7406,
    "id": "window_7406"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "originalSentence": "-- YAML\nadded:\n  - v14. 3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs.",
    "position": 7407,
    "id": "window_7407"
  },
  {
    "type": "window",
    "content": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, the active {fs.",
    "originalSentence": "3.0\n  - v12. 20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, the active {fs.",
    "position": 7408,
    "id": "window_7408"
  },
  {
    "type": "window",
    "content": "20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, the active {fs. StatWatcher} object will not require the Node.",
    "originalSentence": "20.0\n-->\n\n* Returns: {fs. StatWatcher}\n\nWhen called, the active {fs. StatWatcher} object will not require the Node.",
    "position": 7409,
    "id": "window_7409"
  },
  {
    "type": "window",
    "content": "StatWatcher}\n\nWhen called, the active {fs. StatWatcher} object will not require the Node. js\nevent loop to remain active.",
    "originalSentence": "StatWatcher}\n\nWhen called, the active {fs. StatWatcher} object will not require the Node. js\nevent loop to remain active.",
    "position": 7410,
    "id": "window_7410"
  },
  {
    "type": "window",
    "content": "StatWatcher} object will not require the Node. js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "originalSentence": "StatWatcher} object will not require the Node. js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.",
    "position": 7411,
    "id": "window_7411"
  },
  {
    "type": "window",
    "content": "js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. StatWatcher} object's\ncallback is invoked.",
    "originalSentence": "js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. StatWatcher} object's\ncallback is invoked.",
    "position": 7412,
    "id": "window_7412"
  },
  {
    "type": "window",
    "content": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. StatWatcher} object's\ncallback is invoked. Calling `watcher.",
    "originalSentence": "If there is no other activity keeping the\nevent loop running, the process may exit before the {fs. StatWatcher} object's\ncallback is invoked. Calling `watcher.",
    "position": 7413,
    "id": "window_7413"
  },
  {
    "type": "window",
    "content": "StatWatcher} object's\ncallback is invoked. Calling `watcher. unref()` multiple times will have\nno effect.",
    "originalSentence": "StatWatcher} object's\ncallback is invoked. Calling `watcher. unref()` multiple times will have\nno effect.",
    "position": 7414,
    "id": "window_7414"
  },
  {
    "type": "window",
    "content": "Calling `watcher. unref()` multiple times will have\nno effect. ### Class: `fs.",
    "originalSentence": "Calling `watcher. unref()` multiple times will have\nno effect. ### Class: `fs.",
    "position": 7415,
    "id": "window_7415"
  },
  {
    "type": "window",
    "content": "unref()` multiple times will have\nno effect. ### Class: `fs. ReadStream`\n\n<!",
    "originalSentence": "unref()` multiple times will have\nno effect. ### Class: `fs. ReadStream`\n\n<!",
    "position": 7416,
    "id": "window_7416"
  },
  {
    "type": "window",
    "content": "ReadStream`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* Extends: {stream.",
    "originalSentence": "ReadStream`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* Extends: {stream.",
    "position": 7417,
    "id": "window_7417"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\n* Extends: {stream. Readable}\n\nInstances of {fs.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\n* Extends: {stream. Readable}\n\nInstances of {fs.",
    "position": 7418,
    "id": "window_7418"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\n* Extends: {stream. Readable}\n\nInstances of {fs. ReadStream} are created and returned using the\n[`fs.",
    "originalSentence": "1.93\n-->\n\n* Extends: {stream. Readable}\n\nInstances of {fs. ReadStream} are created and returned using the\n[`fs.",
    "position": 7419,
    "id": "window_7419"
  },
  {
    "type": "window",
    "content": "Readable}\n\nInstances of {fs. ReadStream} are created and returned using the\n[`fs. createReadStream()`][] function.",
    "originalSentence": "Readable}\n\nInstances of {fs. ReadStream} are created and returned using the\n[`fs. createReadStream()`][] function.",
    "position": 7420,
    "id": "window_7420"
  },
  {
    "type": "window",
    "content": "ReadStream} are created and returned using the\n[`fs. createReadStream()`][] function. #### Event: `'close'`\n\n<!",
    "originalSentence": "ReadStream} are created and returned using the\n[`fs. createReadStream()`][] function. #### Event: `'close'`\n\n<!",
    "position": 7421,
    "id": "window_7421"
  },
  {
    "type": "window",
    "content": "createReadStream()`][] function. #### Event: `'close'`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "createReadStream()`][] function. #### Event: `'close'`\n\n<! -- YAML\nadded: v0.",
    "position": 7422,
    "id": "window_7422"
  },
  {
    "type": "window",
    "content": "#### Event: `'close'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs.",
    "originalSentence": "#### Event: `'close'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs.",
    "position": 7423,
    "id": "window_7423"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs. ReadStream}'s underlying file descriptor has been closed.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs. ReadStream}'s underlying file descriptor has been closed.",
    "position": 7424,
    "id": "window_7424"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\nEmitted when the {fs. ReadStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<!",
    "originalSentence": "1.93\n-->\n\nEmitted when the {fs. ReadStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<!",
    "position": 7425,
    "id": "window_7425"
  },
  {
    "type": "window",
    "content": "ReadStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "ReadStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<! -- YAML\nadded: v0.",
    "position": 7426,
    "id": "window_7426"
  },
  {
    "type": "window",
    "content": "#### Event: `'open'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "originalSentence": "#### Event: `'open'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "position": 7427,
    "id": "window_7427"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. ReadStream}.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. ReadStream}.",
    "position": 7428,
    "id": "window_7428"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. ReadStream}. Emitted when the {fs.",
    "originalSentence": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. ReadStream}. Emitted when the {fs.",
    "position": 7429,
    "id": "window_7429"
  },
  {
    "type": "window",
    "content": "ReadStream}. Emitted when the {fs. ReadStream}'s file descriptor has been opened.",
    "originalSentence": "ReadStream}. Emitted when the {fs. ReadStream}'s file descriptor has been opened.",
    "position": 7430,
    "id": "window_7430"
  },
  {
    "type": "window",
    "content": "Emitted when the {fs. ReadStream}'s file descriptor has been opened. #### Event: `'ready'`\n\n<!",
    "originalSentence": "Emitted when the {fs. ReadStream}'s file descriptor has been opened. #### Event: `'ready'`\n\n<!",
    "position": 7431,
    "id": "window_7431"
  },
  {
    "type": "window",
    "content": "ReadStream}'s file descriptor has been opened. #### Event: `'ready'`\n\n<! -- YAML\nadded: v9.",
    "originalSentence": "ReadStream}'s file descriptor has been opened. #### Event: `'ready'`\n\n<! -- YAML\nadded: v9.",
    "position": 7432,
    "id": "window_7432"
  },
  {
    "type": "window",
    "content": "#### Event: `'ready'`\n\n<! -- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs.",
    "originalSentence": "#### Event: `'ready'`\n\n<! -- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs.",
    "position": 7433,
    "id": "window_7433"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs. ReadStream} is ready to be used.",
    "originalSentence": "-- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs. ReadStream} is ready to be used.",
    "position": 7434,
    "id": "window_7434"
  },
  {
    "type": "window",
    "content": "11.0\n-->\n\nEmitted when the {fs. ReadStream} is ready to be used. Fires immediately after `'open'`.",
    "originalSentence": "11.0\n-->\n\nEmitted when the {fs. ReadStream} is ready to be used. Fires immediately after `'open'`.",
    "position": 7435,
    "id": "window_7435"
  },
  {
    "type": "window",
    "content": "ReadStream} is ready to be used. Fires immediately after `'open'`. #### `readStream.",
    "originalSentence": "ReadStream} is ready to be used. Fires immediately after `'open'`. #### `readStream.",
    "position": 7436,
    "id": "window_7436"
  },
  {
    "type": "window",
    "content": "Fires immediately after `'open'`. #### `readStream. bytesRead`\n\n<!",
    "originalSentence": "Fires immediately after `'open'`. #### `readStream. bytesRead`\n\n<!",
    "position": 7437,
    "id": "window_7437"
  },
  {
    "type": "window",
    "content": "#### `readStream. bytesRead`\n\n<! -- YAML\nadded: v6.",
    "originalSentence": "#### `readStream. bytesRead`\n\n<! -- YAML\nadded: v6.",
    "position": 7438,
    "id": "window_7438"
  },
  {
    "type": "window",
    "content": "bytesRead`\n\n<! -- YAML\nadded: v6. 4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far.",
    "originalSentence": "bytesRead`\n\n<! -- YAML\nadded: v6. 4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far.",
    "position": 7439,
    "id": "window_7439"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v6. 4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far. #### `readStream.",
    "originalSentence": "-- YAML\nadded: v6. 4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far. #### `readStream.",
    "position": 7440,
    "id": "window_7440"
  },
  {
    "type": "window",
    "content": "4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far. #### `readStream. path`\n\n<!",
    "originalSentence": "4.0\n-->\n\n* Type: {number}\n\nThe number of bytes that have been read so far. #### `readStream. path`\n\n<!",
    "position": 7441,
    "id": "window_7441"
  },
  {
    "type": "window",
    "content": "path`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs.",
    "originalSentence": "path`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs.",
    "position": 7442,
    "id": "window_7442"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs. createReadStream()`.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs. createReadStream()`.",
    "position": 7443,
    "id": "window_7443"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs. createReadStream()`. If `path` is passed as a string, then\n`readStream.",
    "originalSentence": "1.93\n-->\n\n* Type: {string|Buffer}\n\nThe path to the file the stream is reading from as specified in the first\nargument to `fs. createReadStream()`. If `path` is passed as a string, then\n`readStream.",
    "position": 7444,
    "id": "window_7444"
  },
  {
    "type": "window",
    "content": "createReadStream()`. If `path` is passed as a string, then\n`readStream. path` will be a string.",
    "originalSentence": "createReadStream()`. If `path` is passed as a string, then\n`readStream. path` will be a string.",
    "position": 7445,
    "id": "window_7445"
  },
  {
    "type": "window",
    "content": "If `path` is passed as a string, then\n`readStream. path` will be a string. If `path` is passed as a {Buffer}, then\n`readStream.",
    "originalSentence": "If `path` is passed as a string, then\n`readStream. path` will be a string. If `path` is passed as a {Buffer}, then\n`readStream.",
    "position": 7446,
    "id": "window_7446"
  },
  {
    "type": "window",
    "content": "path` will be a string. If `path` is passed as a {Buffer}, then\n`readStream. path` will be a {Buffer}.",
    "originalSentence": "path` will be a string. If `path` is passed as a {Buffer}, then\n`readStream. path` will be a {Buffer}.",
    "position": 7447,
    "id": "window_7447"
  },
  {
    "type": "window",
    "content": "If `path` is passed as a {Buffer}, then\n`readStream. path` will be a {Buffer}. If `fd` is specified, then\n`readStream.",
    "originalSentence": "If `path` is passed as a {Buffer}, then\n`readStream. path` will be a {Buffer}. If `fd` is specified, then\n`readStream.",
    "position": 7448,
    "id": "window_7448"
  },
  {
    "type": "window",
    "content": "path` will be a {Buffer}. If `fd` is specified, then\n`readStream. path` will be `undefined`.",
    "originalSentence": "path` will be a {Buffer}. If `fd` is specified, then\n`readStream. path` will be `undefined`.",
    "position": 7449,
    "id": "window_7449"
  },
  {
    "type": "window",
    "content": "If `fd` is specified, then\n`readStream. path` will be `undefined`. #### `readStream.",
    "originalSentence": "If `fd` is specified, then\n`readStream. path` will be `undefined`. #### `readStream.",
    "position": 7450,
    "id": "window_7450"
  },
  {
    "type": "window",
    "content": "path` will be `undefined`. #### `readStream. pending`\n\n<!",
    "originalSentence": "path` will be `undefined`. #### `readStream. pending`\n\n<!",
    "position": 7451,
    "id": "window_7451"
  },
  {
    "type": "window",
    "content": "#### `readStream. pending`\n\n<! -- YAML\nadded:\n - v11.",
    "originalSentence": "#### `readStream. pending`\n\n<! -- YAML\nadded:\n - v11.",
    "position": 7452,
    "id": "window_7452"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n - v11. 2.0\n - v10. 16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "originalSentence": "-- YAML\nadded:\n - v11. 2.0\n - v10. 16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "position": 7453,
    "id": "window_7453"
  },
  {
    "type": "window",
    "content": "2.0\n - v10. 16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e.",
    "originalSentence": "2.0\n - v10. 16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e.",
    "position": 7454,
    "id": "window_7454"
  },
  {
    "type": "window",
    "content": "16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e. before the `'ready'` event is emitted.",
    "originalSentence": "16.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e. before the `'ready'` event is emitted.",
    "position": 7455,
    "id": "window_7455"
  },
  {
    "type": "window",
    "content": "e. before the `'ready'` event is emitted. ### Class: `fs.",
    "originalSentence": "e. before the `'ready'` event is emitted. ### Class: `fs.",
    "position": 7456,
    "id": "window_7456"
  },
  {
    "type": "window",
    "content": "before the `'ready'` event is emitted. ### Class: `fs. Stats`\n\n<!",
    "originalSentence": "before the `'ready'` event is emitted. ### Class: `fs. Stats`\n\n<!",
    "position": 7457,
    "id": "window_7457"
  },
  {
    "type": "window",
    "content": "Stats`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v22.",
    "originalSentence": "Stats`\n\n<! -- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v22.",
    "position": 7458,
    "id": "window_7458"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v22. 0.0\n    - v20.",
    "originalSentence": "-- YAML\nadded: v0. 1.21\nchanges:\n  - version:\n    - v22. 0.0\n    - v20.",
    "position": 7459,
    "id": "window_7459"
  },
  {
    "type": "window",
    "content": "1.21\nchanges:\n  - version:\n    - v22. 0.0\n    - v20. 13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated.",
    "originalSentence": "1.21\nchanges:\n  - version:\n    - v22. 0.0\n    - v20. 13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated.",
    "position": 7460,
    "id": "window_7460"
  },
  {
    "type": "window",
    "content": "0.0\n    - v20. 13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated. - version: v8.",
    "originalSentence": "0.0\n    - v20. 13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated. - version: v8.",
    "position": 7461,
    "id": "window_7461"
  },
  {
    "type": "window",
    "content": "13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated. - version: v8. 1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers.",
    "originalSentence": "13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated. - version: v8. 1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers.",
    "position": 7462,
    "id": "window_7462"
  },
  {
    "type": "window",
    "content": "- version: v8. 1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers. -->\n\nA {fs.",
    "originalSentence": "- version: v8. 1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers. -->\n\nA {fs.",
    "position": 7463,
    "id": "window_7463"
  },
  {
    "type": "window",
    "content": "1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers. -->\n\nA {fs. Stats} object provides information about a file.",
    "originalSentence": "1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers. -->\n\nA {fs. Stats} object provides information about a file.",
    "position": 7464,
    "id": "window_7464"
  },
  {
    "type": "window",
    "content": "-->\n\nA {fs. Stats} object provides information about a file. Objects returned from [`fs.",
    "originalSentence": "-->\n\nA {fs. Stats} object provides information about a file. Objects returned from [`fs.",
    "position": 7465,
    "id": "window_7465"
  },
  {
    "type": "window",
    "content": "Stats} object provides information about a file. Objects returned from [`fs. stat()`][], [`fs.",
    "originalSentence": "Stats} object provides information about a file. Objects returned from [`fs. stat()`][], [`fs.",
    "position": 7466,
    "id": "window_7466"
  },
  {
    "type": "window",
    "content": "Objects returned from [`fs. stat()`][], [`fs. lstat()`][], [`fs.",
    "originalSentence": "Objects returned from [`fs. stat()`][], [`fs. lstat()`][], [`fs.",
    "position": 7467,
    "id": "window_7467"
  },
  {
    "type": "window",
    "content": "stat()`][], [`fs. lstat()`][], [`fs. fstat()`][], and\ntheir synchronous counterparts are of this type.",
    "originalSentence": "stat()`][], [`fs. lstat()`][], [`fs. fstat()`][], and\ntheir synchronous counterparts are of this type.",
    "position": 7468,
    "id": "window_7468"
  },
  {
    "type": "window",
    "content": "lstat()`][], [`fs. fstat()`][], and\ntheir synchronous counterparts are of this type. If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`.",
    "originalSentence": "lstat()`][], [`fs. fstat()`][], and\ntheir synchronous counterparts are of this type. If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`.",
    "position": 7469,
    "id": "window_7469"
  },
  {
    "type": "window",
    "content": "fstat()`][], and\ntheir synchronous counterparts are of this type. If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`. `Stat` objects are not to be created directly using the `new` keyword.",
    "originalSentence": "fstat()`][], and\ntheir synchronous counterparts are of this type. If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`. `Stat` objects are not to be created directly using the `new` keyword.",
    "position": 7470,
    "id": "window_7470"
  },
  {
    "type": "window",
    "content": "If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`. `Stat` objects are not to be created directly using the `new` keyword. ```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.",
    "originalSentence": "If `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`. `Stat` objects are not to be created directly using the `new` keyword. ```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.",
    "position": 7471,
    "id": "window_7471"
  },
  {
    "type": "window",
    "content": "`Stat` objects are not to be created directly using the `new` keyword. ```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000. 1,\n  mtimeMs: 1318289051000.",
    "originalSentence": "`Stat` objects are not to be created directly using the `new` keyword. ```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000. 1,\n  mtimeMs: 1318289051000.",
    "position": 7472,
    "id": "window_7472"
  },
  {
    "type": "window",
    "content": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000. 1,\n  mtimeMs: 1318289051000. 1,\n  ctimeMs: 1318289051000.",
    "originalSentence": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000. 1,\n  mtimeMs: 1318289051000. 1,\n  ctimeMs: 1318289051000.",
    "position": 7473,
    "id": "window_7473"
  },
  {
    "type": "window",
    "content": "1,\n  mtimeMs: 1318289051000. 1,\n  ctimeMs: 1318289051000. 1,\n  birthtimeMs: 1318289051000.",
    "originalSentence": "1,\n  mtimeMs: 1318289051000. 1,\n  ctimeMs: 1318289051000. 1,\n  birthtimeMs: 1318289051000.",
    "position": 7474,
    "id": "window_7474"
  },
  {
    "type": "window",
    "content": "1,\n  ctimeMs: 1318289051000. 1,\n  birthtimeMs: 1318289051000. 1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats.",
    "originalSentence": "1,\n  ctimeMs: 1318289051000. 1,\n  birthtimeMs: 1318289051000. 1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats.",
    "position": 7475,
    "id": "window_7475"
  },
  {
    "type": "window",
    "content": "1,\n  birthtimeMs: 1318289051000. 1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats. isBlockDevice()`\n\n<!",
    "originalSentence": "1,\n  birthtimeMs: 1318289051000. 1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats. isBlockDevice()`\n\n<!",
    "position": 7476,
    "id": "window_7476"
  },
  {
    "type": "window",
    "content": "1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats. isBlockDevice()`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n`bigint` version:\n\n```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```\n\n#### `stats. isBlockDevice()`\n\n<! -- YAML\nadded: v0.",
    "position": 7477,
    "id": "window_7477"
  },
  {
    "type": "window",
    "content": "isBlockDevice()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isBlockDevice()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7478,
    "id": "window_7478"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a block device.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a block device.",
    "position": 7479,
    "id": "window_7479"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a block device. #### `stats.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a block device. #### `stats.",
    "position": 7480,
    "id": "window_7480"
  },
  {
    "type": "window",
    "content": "Stats} object describes a block device. #### `stats. isCharacterDevice()`\n\n<!",
    "originalSentence": "Stats} object describes a block device. #### `stats. isCharacterDevice()`\n\n<!",
    "position": 7481,
    "id": "window_7481"
  },
  {
    "type": "window",
    "content": "#### `stats. isCharacterDevice()`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "#### `stats. isCharacterDevice()`\n\n<! -- YAML\nadded: v0.",
    "position": 7482,
    "id": "window_7482"
  },
  {
    "type": "window",
    "content": "isCharacterDevice()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isCharacterDevice()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7483,
    "id": "window_7483"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a character device.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a character device.",
    "position": 7484,
    "id": "window_7484"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a character device. #### `stats.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a character device. #### `stats.",
    "position": 7485,
    "id": "window_7485"
  },
  {
    "type": "window",
    "content": "Stats} object describes a character device. #### `stats. isDirectory()`\n\n<!",
    "originalSentence": "Stats} object describes a character device. #### `stats. isDirectory()`\n\n<!",
    "position": 7486,
    "id": "window_7486"
  },
  {
    "type": "window",
    "content": "isDirectory()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isDirectory()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7487,
    "id": "window_7487"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a file system directory.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a file system directory.",
    "position": 7488,
    "id": "window_7488"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a file system directory. If the {fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a file system directory. If the {fs.",
    "position": 7489,
    "id": "window_7489"
  },
  {
    "type": "window",
    "content": "Stats} object describes a file system directory. If the {fs. Stats} object was obtained from calling [`fs.",
    "originalSentence": "Stats} object describes a file system directory. If the {fs. Stats} object was obtained from calling [`fs.",
    "position": 7490,
    "id": "window_7490"
  },
  {
    "type": "window",
    "content": "If the {fs. Stats} object was obtained from calling [`fs. lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`.",
    "originalSentence": "If the {fs. Stats} object was obtained from calling [`fs. lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`.",
    "position": 7491,
    "id": "window_7491"
  },
  {
    "type": "window",
    "content": "Stats} object was obtained from calling [`fs. lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`. This is because [`fs.",
    "originalSentence": "Stats} object was obtained from calling [`fs. lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`. This is because [`fs.",
    "position": 7492,
    "id": "window_7492"
  },
  {
    "type": "window",
    "content": "lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`. This is because [`fs. lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to.",
    "originalSentence": "lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`. This is because [`fs. lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to.",
    "position": 7493,
    "id": "window_7493"
  },
  {
    "type": "window",
    "content": "This is because [`fs. lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to. #### `stats.",
    "originalSentence": "This is because [`fs. lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to. #### `stats.",
    "position": 7494,
    "id": "window_7494"
  },
  {
    "type": "window",
    "content": "lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to. #### `stats. isFIFO()`\n\n<!",
    "originalSentence": "lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to. #### `stats. isFIFO()`\n\n<!",
    "position": 7495,
    "id": "window_7495"
  },
  {
    "type": "window",
    "content": "isFIFO()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isFIFO()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7496,
    "id": "window_7496"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a first-in-first-out (FIFO)\npipe.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a first-in-first-out (FIFO)\npipe.",
    "position": 7497,
    "id": "window_7497"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a first-in-first-out (FIFO)\npipe. #### `stats.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a first-in-first-out (FIFO)\npipe. #### `stats.",
    "position": 7498,
    "id": "window_7498"
  },
  {
    "type": "window",
    "content": "Stats} object describes a first-in-first-out (FIFO)\npipe. #### `stats. isFile()`\n\n<!",
    "originalSentence": "Stats} object describes a first-in-first-out (FIFO)\npipe. #### `stats. isFile()`\n\n<!",
    "position": 7499,
    "id": "window_7499"
  },
  {
    "type": "window",
    "content": "isFile()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isFile()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7500,
    "id": "window_7500"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a regular file.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a regular file.",
    "position": 7501,
    "id": "window_7501"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a regular file. #### `stats.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a regular file. #### `stats.",
    "position": 7502,
    "id": "window_7502"
  },
  {
    "type": "window",
    "content": "Stats} object describes a regular file. #### `stats. isSocket()`\n\n<!",
    "originalSentence": "Stats} object describes a regular file. #### `stats. isSocket()`\n\n<!",
    "position": 7503,
    "id": "window_7503"
  },
  {
    "type": "window",
    "content": "isSocket()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isSocket()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7504,
    "id": "window_7504"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a socket.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a socket.",
    "position": 7505,
    "id": "window_7505"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a socket. #### `stats.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a socket. #### `stats.",
    "position": 7506,
    "id": "window_7506"
  },
  {
    "type": "window",
    "content": "Stats} object describes a socket. #### `stats. isSymbolicLink()`\n\n<!",
    "originalSentence": "Stats} object describes a socket. #### `stats. isSymbolicLink()`\n\n<!",
    "position": 7507,
    "id": "window_7507"
  },
  {
    "type": "window",
    "content": "#### `stats. isSymbolicLink()`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "#### `stats. isSymbolicLink()`\n\n<! -- YAML\nadded: v0.",
    "position": 7508,
    "id": "window_7508"
  },
  {
    "type": "window",
    "content": "isSymbolicLink()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "originalSentence": "isSymbolicLink()`\n\n<! -- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs.",
    "position": 7509,
    "id": "window_7509"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a symbolic link.",
    "originalSentence": "-- YAML\nadded: v0. 1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a symbolic link.",
    "position": 7510,
    "id": "window_7510"
  },
  {
    "type": "window",
    "content": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a symbolic link. This method is only valid when using [`fs.",
    "originalSentence": "1.10\n-->\n\n* Returns: {boolean}\n\nReturns `true` if the {fs. Stats} object describes a symbolic link. This method is only valid when using [`fs.",
    "position": 7511,
    "id": "window_7511"
  },
  {
    "type": "window",
    "content": "Stats} object describes a symbolic link. This method is only valid when using [`fs. lstat()`][].",
    "originalSentence": "Stats} object describes a symbolic link. This method is only valid when using [`fs. lstat()`][].",
    "position": 7512,
    "id": "window_7512"
  },
  {
    "type": "window",
    "content": "This method is only valid when using [`fs. lstat()`][]. #### `stats.",
    "originalSentence": "This method is only valid when using [`fs. lstat()`][]. #### `stats.",
    "position": 7513,
    "id": "window_7513"
  },
  {
    "type": "window",
    "content": "lstat()`][]. #### `stats. dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file.",
    "originalSentence": "lstat()`][]. #### `stats. dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file.",
    "position": 7514,
    "id": "window_7514"
  },
  {
    "type": "window",
    "content": "#### `stats. dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file. #### `stats.",
    "originalSentence": "#### `stats. dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file. #### `stats.",
    "position": 7515,
    "id": "window_7515"
  },
  {
    "type": "window",
    "content": "dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file. #### `stats. ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file.",
    "originalSentence": "dev`\n\n* Type: {number|bigint}\n\nThe numeric identifier of the device containing the file. #### `stats. ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file.",
    "position": 7516,
    "id": "window_7516"
  },
  {
    "type": "window",
    "content": "#### `stats. ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file. #### `stats.",
    "originalSentence": "#### `stats. ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file. #### `stats.",
    "position": 7517,
    "id": "window_7517"
  },
  {
    "type": "window",
    "content": "ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file. #### `stats. mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode.",
    "originalSentence": "ino`\n\n* Type: {number|bigint}\n\nThe file system specific \"Inode\" number for the file. #### `stats. mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode.",
    "position": 7518,
    "id": "window_7518"
  },
  {
    "type": "window",
    "content": "#### `stats. mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode. #### `stats.",
    "originalSentence": "#### `stats. mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode. #### `stats.",
    "position": 7519,
    "id": "window_7519"
  },
  {
    "type": "window",
    "content": "mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode. #### `stats. nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file.",
    "originalSentence": "mode`\n\n* Type: {number|bigint}\n\nA bit-field describing the file type and mode. #### `stats. nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file.",
    "position": 7520,
    "id": "window_7520"
  },
  {
    "type": "window",
    "content": "#### `stats. nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file. #### `stats.",
    "originalSentence": "#### `stats. nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file. #### `stats.",
    "position": 7521,
    "id": "window_7521"
  },
  {
    "type": "window",
    "content": "nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file. #### `stats. uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX).",
    "originalSentence": "nlink`\n\n* Type: {number|bigint}\n\nThe number of hard-links that exist for the file. #### `stats. uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX).",
    "position": 7522,
    "id": "window_7522"
  },
  {
    "type": "window",
    "content": "#### `stats. uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX). #### `stats.",
    "originalSentence": "#### `stats. uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX). #### `stats.",
    "position": 7523,
    "id": "window_7523"
  },
  {
    "type": "window",
    "content": "uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX). #### `stats. gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX).",
    "originalSentence": "uid`\n\n* Type: {number|bigint}\n\nThe numeric user identifier of the user that owns the file (POSIX). #### `stats. gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX).",
    "position": 7524,
    "id": "window_7524"
  },
  {
    "type": "window",
    "content": "#### `stats. gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX). #### `stats.",
    "originalSentence": "#### `stats. gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX). #### `stats.",
    "position": 7525,
    "id": "window_7525"
  },
  {
    "type": "window",
    "content": "gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX). #### `stats. rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device.",
    "originalSentence": "gid`\n\n* Type: {number|bigint}\n\nThe numeric group identifier of the group that owns the file (POSIX). #### `stats. rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device.",
    "position": 7526,
    "id": "window_7526"
  },
  {
    "type": "window",
    "content": "#### `stats. rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device. #### `stats.",
    "originalSentence": "#### `stats. rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device. #### `stats.",
    "position": 7527,
    "id": "window_7527"
  },
  {
    "type": "window",
    "content": "rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device. #### `stats. size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes.",
    "originalSentence": "rdev`\n\n* Type: {number|bigint}\n\nA numeric device identifier if the file represents a device. #### `stats. size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes.",
    "position": 7528,
    "id": "window_7528"
  },
  {
    "type": "window",
    "content": "#### `stats. size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes. If the underlying file system does not support getting the size of the file,\nthis will be `0`.",
    "originalSentence": "#### `stats. size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes. If the underlying file system does not support getting the size of the file,\nthis will be `0`.",
    "position": 7529,
    "id": "window_7529"
  },
  {
    "type": "window",
    "content": "size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes. If the underlying file system does not support getting the size of the file,\nthis will be `0`. #### `stats.",
    "originalSentence": "size`\n\n* Type: {number|bigint}\n\nThe size of the file in bytes. If the underlying file system does not support getting the size of the file,\nthis will be `0`. #### `stats.",
    "position": 7530,
    "id": "window_7530"
  },
  {
    "type": "window",
    "content": "If the underlying file system does not support getting the size of the file,\nthis will be `0`. #### `stats. blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations.",
    "originalSentence": "If the underlying file system does not support getting the size of the file,\nthis will be `0`. #### `stats. blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations.",
    "position": 7531,
    "id": "window_7531"
  },
  {
    "type": "window",
    "content": "#### `stats. blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations. #### `stats.",
    "originalSentence": "#### `stats. blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations. #### `stats.",
    "position": 7532,
    "id": "window_7532"
  },
  {
    "type": "window",
    "content": "blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations. #### `stats. blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file.",
    "originalSentence": "blksize`\n\n* Type: {number|bigint}\n\nThe file system block size for i/o operations. #### `stats. blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file.",
    "position": 7533,
    "id": "window_7533"
  },
  {
    "type": "window",
    "content": "#### `stats. blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file. #### `stats.",
    "originalSentence": "#### `stats. blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file. #### `stats.",
    "position": 7534,
    "id": "window_7534"
  },
  {
    "type": "window",
    "content": "blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file. #### `stats. atimeMs`\n\n<!",
    "originalSentence": "blocks`\n\n* Type: {number|bigint}\n\nThe number of blocks allocated for this file. #### `stats. atimeMs`\n\n<!",
    "position": 7535,
    "id": "window_7535"
  },
  {
    "type": "window",
    "content": "atimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "atimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 7536,
    "id": "window_7536"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch. #### `stats.",
    "position": 7537,
    "id": "window_7537"
  },
  {
    "type": "window",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch. #### `stats. mtimeMs`\n\n<!",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch. #### `stats. mtimeMs`\n\n<!",
    "position": 7538,
    "id": "window_7538"
  },
  {
    "type": "window",
    "content": "mtimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "mtimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 7539,
    "id": "window_7539"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch. #### `stats.",
    "position": 7540,
    "id": "window_7540"
  },
  {
    "type": "window",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch. #### `stats. ctimeMs`\n\n<!",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch. #### `stats. ctimeMs`\n\n<!",
    "position": 7541,
    "id": "window_7541"
  },
  {
    "type": "window",
    "content": "ctimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch.",
    "originalSentence": "ctimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch.",
    "position": 7542,
    "id": "window_7542"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch. #### `stats.",
    "position": 7543,
    "id": "window_7543"
  },
  {
    "type": "window",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch. #### `stats. birthtimeMs`\n\n<!",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch. #### `stats. birthtimeMs`\n\n<!",
    "position": 7544,
    "id": "window_7544"
  },
  {
    "type": "window",
    "content": "birthtimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "birthtimeMs`\n\n<! -- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 7545,
    "id": "window_7545"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "-- YAML\nadded: v8. 1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch. #### `stats.",
    "position": 7546,
    "id": "window_7546"
  },
  {
    "type": "window",
    "content": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch. #### `stats. atimeNs`\n\n<!",
    "originalSentence": "1.0\n-->\n\n* Type: {number|bigint}\n\nThe timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch. #### `stats. atimeNs`\n\n<!",
    "position": 7547,
    "id": "window_7547"
  },
  {
    "type": "window",
    "content": "atimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "atimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 7548,
    "id": "window_7548"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 7549,
    "id": "window_7549"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch. #### `stats.",
    "position": 7550,
    "id": "window_7550"
  },
  {
    "type": "window",
    "content": "The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch. #### `stats. mtimeNs`\n\n<!",
    "originalSentence": "The timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch. #### `stats. mtimeNs`\n\n<!",
    "position": 7551,
    "id": "window_7551"
  },
  {
    "type": "window",
    "content": "mtimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "mtimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 7552,
    "id": "window_7552"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 7553,
    "id": "window_7553"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch. #### `stats.",
    "position": 7554,
    "id": "window_7554"
  },
  {
    "type": "window",
    "content": "The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch. #### `stats. ctimeNs`\n\n<!",
    "originalSentence": "The timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch. #### `stats. ctimeNs`\n\n<!",
    "position": 7555,
    "id": "window_7555"
  },
  {
    "type": "window",
    "content": "ctimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "ctimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 7556,
    "id": "window_7556"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch.",
    "originalSentence": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch.",
    "position": 7557,
    "id": "window_7557"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch. #### `stats.",
    "position": 7558,
    "id": "window_7558"
  },
  {
    "type": "window",
    "content": "The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch. #### `stats. birthtimeNs`\n\n<!",
    "originalSentence": "The timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch. #### `stats. birthtimeNs`\n\n<!",
    "position": 7559,
    "id": "window_7559"
  },
  {
    "type": "window",
    "content": "birthtimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "birthtimeNs`\n\n<! -- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 7560,
    "id": "window_7560"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "-- YAML\nadded: v12. 10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 7561,
    "id": "window_7561"
  },
  {
    "type": "window",
    "content": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch. #### `stats.",
    "originalSentence": "10.0\n-->\n\n* Type: {bigint}\n\nOnly present when `bigint: true` is passed into the method that generates\nthe object. The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch. #### `stats.",
    "position": 7562,
    "id": "window_7562"
  },
  {
    "type": "window",
    "content": "The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch. #### `stats. atime`\n\n<!",
    "originalSentence": "The timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch. #### `stats. atime`\n\n<!",
    "position": 7563,
    "id": "window_7563"
  },
  {
    "type": "window",
    "content": "atime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed.",
    "originalSentence": "atime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed.",
    "position": 7564,
    "id": "window_7564"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed. #### `stats.",
    "originalSentence": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed. #### `stats.",
    "position": 7565,
    "id": "window_7565"
  },
  {
    "type": "window",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed. #### `stats. mtime`\n\n<!",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was accessed. #### `stats. mtime`\n\n<!",
    "position": 7566,
    "id": "window_7566"
  },
  {
    "type": "window",
    "content": "mtime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified.",
    "originalSentence": "mtime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified.",
    "position": 7567,
    "id": "window_7567"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified. #### `stats.",
    "originalSentence": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified. #### `stats.",
    "position": 7568,
    "id": "window_7568"
  },
  {
    "type": "window",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified. #### `stats. ctime`\n\n<!",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time this file was modified. #### `stats. ctime`\n\n<!",
    "position": 7569,
    "id": "window_7569"
  },
  {
    "type": "window",
    "content": "ctime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed.",
    "originalSentence": "ctime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed.",
    "position": 7570,
    "id": "window_7570"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed. #### `stats.",
    "originalSentence": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed. #### `stats.",
    "position": 7571,
    "id": "window_7571"
  },
  {
    "type": "window",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed. #### `stats. birthtime`\n\n<!",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the last time the file status was changed. #### `stats. birthtime`\n\n<!",
    "position": 7572,
    "id": "window_7572"
  },
  {
    "type": "window",
    "content": "birthtime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file.",
    "originalSentence": "birthtime`\n\n<! -- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file.",
    "position": 7573,
    "id": "window_7573"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file. #### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds.",
    "originalSentence": "-- YAML\nadded: v0. 11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file. #### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds.",
    "position": 7574,
    "id": "window_7574"
  },
  {
    "type": "window",
    "content": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file. #### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds. Their\nprecision is platform specific.",
    "originalSentence": "11.13\n-->\n\n* Type: {Date}\n\nThe timestamp indicating the creation time of this file. #### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds. Their\nprecision is platform specific.",
    "position": 7575,
    "id": "window_7575"
  },
  {
    "type": "window",
    "content": "#### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds. Their\nprecision is platform specific. When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number].",
    "originalSentence": "#### Stat time values\n\nThe `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds. Their\nprecision is platform specific. When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number].",
    "position": 7576,
    "id": "window_7576"
  },
  {
    "type": "window",
    "content": "Their\nprecision is platform specific. When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number]. The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds.",
    "originalSentence": "Their\nprecision is platform specific. When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number]. The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds.",
    "position": 7577,
    "id": "window_7577"
  },
  {
    "type": "window",
    "content": "When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number]. The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds. They are\nonly present when `bigint: true` is passed into the method that generates\nthe object.",
    "originalSentence": "When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number]. The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds. They are\nonly present when `bigint: true` is passed into the method that generates\nthe object.",
    "position": 7578,
    "id": "window_7578"
  },
  {
    "type": "window",
    "content": "The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds. They are\nonly present when `bigint: true` is passed into the method that generates\nthe object. Their precision is platform specific.",
    "originalSentence": "The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds. They are\nonly present when `bigint: true` is passed into the method that generates\nthe object. Their precision is platform specific.",
    "position": 7579,
    "id": "window_7579"
  },
  {
    "type": "window",
    "content": "They are\nonly present when `bigint: true` is passed into the method that generates\nthe object. Their precision is platform specific. `atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times.",
    "originalSentence": "They are\nonly present when `bigint: true` is passed into the method that generates\nthe object. Their precision is platform specific. `atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times.",
    "position": 7580,
    "id": "window_7580"
  },
  {
    "type": "window",
    "content": "Their precision is platform specific. `atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times. The\n`Date` and number values are not connected.",
    "originalSentence": "Their precision is platform specific. `atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times. The\n`Date` and number values are not connected.",
    "position": 7581,
    "id": "window_7581"
  },
  {
    "type": "window",
    "content": "`atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times. The\n`Date` and number values are not connected. Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation.",
    "originalSentence": "`atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times. The\n`Date` and number values are not connected. Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation.",
    "position": 7582,
    "id": "window_7582"
  },
  {
    "type": "window",
    "content": "The\n`Date` and number values are not connected. Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation. The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed.",
    "originalSentence": "The\n`Date` and number values are not connected. Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation. The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed.",
    "position": 7583,
    "id": "window_7583"
  },
  {
    "type": "window",
    "content": "Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation. The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed. Changed\n  by the mknod(2), utimes(2), and read(2) system calls.",
    "originalSentence": "Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation. The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed. Changed\n  by the mknod(2), utimes(2), and read(2) system calls.",
    "position": 7584,
    "id": "window_7584"
  },
  {
    "type": "window",
    "content": "The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed. Changed\n  by the mknod(2), utimes(2), and read(2) system calls. * `mtime` \"Modified Time\": Time when file data last modified.",
    "originalSentence": "The times in the stat object have the following semantics:\n\n* `atime` \"Access Time\": Time when file data last accessed. Changed\n  by the mknod(2), utimes(2), and read(2) system calls. * `mtime` \"Modified Time\": Time when file data last modified.",
    "position": 7585,
    "id": "window_7585"
  },
  {
    "type": "window",
    "content": "Changed\n  by the mknod(2), utimes(2), and read(2) system calls. * `mtime` \"Modified Time\": Time when file data last modified. Changed by the mknod(2), utimes(2), and write(2) system calls.",
    "originalSentence": "Changed\n  by the mknod(2), utimes(2), and read(2) system calls. * `mtime` \"Modified Time\": Time when file data last modified. Changed by the mknod(2), utimes(2), and write(2) system calls.",
    "position": 7586,
    "id": "window_7586"
  },
  {
    "type": "window",
    "content": "* `mtime` \"Modified Time\": Time when file data last modified. Changed by the mknod(2), utimes(2), and write(2) system calls. * `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification).",
    "originalSentence": "* `mtime` \"Modified Time\": Time when file data last modified. Changed by the mknod(2), utimes(2), and write(2) system calls. * `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification).",
    "position": 7587,
    "id": "window_7587"
  },
  {
    "type": "window",
    "content": "Changed by the mknod(2), utimes(2), and write(2) system calls. * `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification). Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls.",
    "originalSentence": "Changed by the mknod(2), utimes(2), and write(2) system calls. * `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification). Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls.",
    "position": 7588,
    "id": "window_7588"
  },
  {
    "type": "window",
    "content": "* `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification). Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls. * `birthtime` \"Birth Time\": Time of file creation.",
    "originalSentence": "* `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification). Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls. * `birthtime` \"Birth Time\": Time of file creation.",
    "position": 7589,
    "id": "window_7589"
  },
  {
    "type": "window",
    "content": "Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls. * `birthtime` \"Birth Time\": Time of file creation. Set once when the\n  file is created.",
    "originalSentence": "Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls. * `birthtime` \"Birth Time\": Time of file creation. Set once when the\n  file is created.",
    "position": 7590,
    "id": "window_7590"
  },
  {
    "type": "window",
    "content": "* `birthtime` \"Birth Time\": Time of file creation. Set once when the\n  file is created. On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`).",
    "originalSentence": "* `birthtime` \"Birth Time\": Time of file creation. Set once when the\n  file is created. On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`).",
    "position": 7591,
    "id": "window_7591"
  },
  {
    "type": "window",
    "content": "Set once when the\n  file is created. On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`). This value may be greater\n  than `atime` or `mtime` in this case.",
    "originalSentence": "Set once when the\n  file is created. On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`). This value may be greater\n  than `atime` or `mtime` in this case.",
    "position": 7592,
    "id": "window_7592"
  },
  {
    "type": "window",
    "content": "On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`). This value may be greater\n  than `atime` or `mtime` in this case. On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call.",
    "originalSentence": "On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`). This value may be greater\n  than `atime` or `mtime` in this case. On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call.",
    "position": 7593,
    "id": "window_7593"
  },
  {
    "type": "window",
    "content": "This value may be greater\n  than `atime` or `mtime` in this case. On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call. Prior to Node.",
    "originalSentence": "This value may be greater\n  than `atime` or `mtime` in this case. On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call. Prior to Node.",
    "position": 7594,
    "id": "window_7594"
  },
  {
    "type": "window",
    "content": "On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call. Prior to Node. js 0.12, the `ctime` held the `birthtime` on Windows systems.",
    "originalSentence": "On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call. Prior to Node. js 0.12, the `ctime` held the `birthtime` on Windows systems.",
    "position": 7595,
    "id": "window_7595"
  },
  {
    "type": "window",
    "content": "Prior to Node. js 0.12, the `ctime` held the `birthtime` on Windows systems. As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was.",
    "originalSentence": "Prior to Node. js 0.12, the `ctime` held the `birthtime` on Windows systems. As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was.",
    "position": 7596,
    "id": "window_7596"
  },
  {
    "type": "window",
    "content": "js 0.12, the `ctime` held the `birthtime` on Windows systems. As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was. ### Class: `fs.",
    "originalSentence": "js 0.12, the `ctime` held the `birthtime` on Windows systems. As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was. ### Class: `fs.",
    "position": 7597,
    "id": "window_7597"
  },
  {
    "type": "window",
    "content": "As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was. ### Class: `fs. StatFs`\n\n<!",
    "originalSentence": "As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was. ### Class: `fs. StatFs`\n\n<!",
    "position": 7598,
    "id": "window_7598"
  },
  {
    "type": "window",
    "content": "### Class: `fs. StatFs`\n\n<! -- YAML\nadded:\n  - v19.",
    "originalSentence": "### Class: `fs. StatFs`\n\n<! -- YAML\nadded:\n  - v19.",
    "position": 7599,
    "id": "window_7599"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\nProvides information about a mounted file system.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\nProvides information about a mounted file system.",
    "position": 7600,
    "id": "window_7600"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\nProvides information about a mounted file system. Objects returned from [`fs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\nProvides information about a mounted file system. Objects returned from [`fs.",
    "position": 7601,
    "id": "window_7601"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\nProvides information about a mounted file system. Objects returned from [`fs. statfs()`][] and its synchronous counterpart are of\nthis type.",
    "originalSentence": "15.0\n-->\n\nProvides information about a mounted file system. Objects returned from [`fs. statfs()`][] and its synchronous counterpart are of\nthis type.",
    "position": 7602,
    "id": "window_7602"
  },
  {
    "type": "window",
    "content": "Objects returned from [`fs. statfs()`][] and its synchronous counterpart are of\nthis type. If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`.",
    "originalSentence": "Objects returned from [`fs. statfs()`][] and its synchronous counterpart are of\nthis type. If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`.",
    "position": 7603,
    "id": "window_7603"
  },
  {
    "type": "window",
    "content": "statfs()`][] and its synchronous counterpart are of\nthis type. If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`. ```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs.",
    "originalSentence": "statfs()`][] and its synchronous counterpart are of\nthis type. If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`. ```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs.",
    "position": 7604,
    "id": "window_7604"
  },
  {
    "type": "window",
    "content": "If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`. ```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs. bavail`\n\n<!",
    "originalSentence": "If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`. ```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs. bavail`\n\n<!",
    "position": 7605,
    "id": "window_7605"
  },
  {
    "type": "window",
    "content": "```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs. bavail`\n\n<! -- YAML\nadded:\n  - v19.",
    "originalSentence": "```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```\n\n`bigint` version:\n\n```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```\n\n#### `statfs. bavail`\n\n<! -- YAML\nadded:\n  - v19.",
    "position": 7606,
    "id": "window_7606"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users.",
    "position": 7607,
    "id": "window_7607"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users. #### `statfs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users. #### `statfs.",
    "position": 7608,
    "id": "window_7608"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users. #### `statfs. bfree`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks available to unprivileged users. #### `statfs. bfree`\n\n<!",
    "position": 7609,
    "id": "window_7609"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system.",
    "position": 7610,
    "id": "window_7610"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system. #### `statfs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system. #### `statfs.",
    "position": 7611,
    "id": "window_7611"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system. #### `statfs. blocks`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree blocks in file system. #### `statfs. blocks`\n\n<!",
    "position": 7612,
    "id": "window_7612"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system.",
    "position": 7613,
    "id": "window_7613"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system. #### `statfs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system. #### `statfs.",
    "position": 7614,
    "id": "window_7614"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system. #### `statfs. bsize`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal data blocks in file system. #### `statfs. bsize`\n\n<!",
    "position": 7615,
    "id": "window_7615"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size.",
    "position": 7616,
    "id": "window_7616"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size. #### `statfs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size. #### `statfs.",
    "position": 7617,
    "id": "window_7617"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size. #### `statfs. ffree`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nOptimal transfer block size. #### `statfs. ffree`\n\n<!",
    "position": 7618,
    "id": "window_7618"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system.",
    "position": 7619,
    "id": "window_7619"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system. #### `statfs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system. #### `statfs.",
    "position": 7620,
    "id": "window_7620"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system. #### `statfs. files`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nFree file nodes in file system. #### `statfs. files`\n\n<!",
    "position": 7621,
    "id": "window_7621"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system.",
    "position": 7622,
    "id": "window_7622"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system. #### `statfs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system. #### `statfs.",
    "position": 7623,
    "id": "window_7623"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system. #### `statfs. type`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nTotal file nodes in file system. #### `statfs. type`\n\n<!",
    "position": 7624,
    "id": "window_7624"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system.",
    "originalSentence": "-- YAML\nadded:\n  - v19. 6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system.",
    "position": 7625,
    "id": "window_7625"
  },
  {
    "type": "window",
    "content": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system. ### Class: `fs.",
    "originalSentence": "6.0\n  - v18. 15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system. ### Class: `fs.",
    "position": 7626,
    "id": "window_7626"
  },
  {
    "type": "window",
    "content": "15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system. ### Class: `fs. Utf8Stream`\n\n<!",
    "originalSentence": "15.0\n-->\n\n* Type: {number|bigint}\n\nType of file system. ### Class: `fs. Utf8Stream`\n\n<!",
    "position": 7627,
    "id": "window_7627"
  },
  {
    "type": "window",
    "content": "### Class: `fs. Utf8Stream`\n\n<! -- YAML\nadded: v24.",
    "originalSentence": "### Class: `fs. Utf8Stream`\n\n<! -- YAML\nadded: v24.",
    "position": 7628,
    "id": "window_7628"
  },
  {
    "type": "window",
    "content": "Utf8Stream`\n\n<! -- YAML\nadded: v24. 6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand.",
    "originalSentence": "Utf8Stream`\n\n<! -- YAML\nadded: v24. 6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand.",
    "position": 7629,
    "id": "window_7629"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v24. 6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand. It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy.",
    "originalSentence": "-- YAML\nadded: v24. 6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand. It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy.",
    "position": 7630,
    "id": "window_7630"
  },
  {
    "type": "window",
    "content": "6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand. It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy. #### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed.",
    "originalSentence": "6.0\n-->\n\n> Stability: 1 - Experimental\n\nAn optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand. It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy. #### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed.",
    "position": 7631,
    "id": "window_7631"
  },
  {
    "type": "window",
    "content": "It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy. #### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed. #### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing.",
    "originalSentence": "It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy. #### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed. #### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing.",
    "position": 7632,
    "id": "window_7632"
  },
  {
    "type": "window",
    "content": "#### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed. #### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing. #### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written.",
    "originalSentence": "#### Event: `'close'`\n\nThe `'close'` event is emitted when the stream is fully closed. #### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing. #### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written.",
    "position": 7633,
    "id": "window_7633"
  },
  {
    "type": "window",
    "content": "#### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing. #### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written. The data that was dropped is passed as the first argument\nto the event handle.",
    "originalSentence": "#### Event: `'drain'`\n\nThe `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing. #### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written. The data that was dropped is passed as the first argument\nto the event handle.",
    "position": 7634,
    "id": "window_7634"
  },
  {
    "type": "window",
    "content": "#### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written. The data that was dropped is passed as the first argument\nto the event handle. #### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs.",
    "originalSentence": "#### Event: `'drop'`\n\nThe `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written. The data that was dropped is passed as the first argument\nto the event handle. #### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs.",
    "position": 7635,
    "id": "window_7635"
  },
  {
    "type": "window",
    "content": "The data that was dropped is passed as the first argument\nto the event handle. #### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs. #### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file.",
    "originalSentence": "The data that was dropped is passed as the first argument\nto the event handle. #### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs. #### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file.",
    "position": 7636,
    "id": "window_7636"
  },
  {
    "type": "window",
    "content": "#### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs. #### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file. #### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes.",
    "originalSentence": "#### Event: `'error'`\n\nThe `'error'` event is emitted when an error occurs. #### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file. #### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes.",
    "position": 7637,
    "id": "window_7637"
  },
  {
    "type": "window",
    "content": "#### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file. #### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes. #### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed.",
    "originalSentence": "#### Event: `'finish'`\n\nThe `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file. #### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes. #### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed.",
    "position": 7638,
    "id": "window_7638"
  },
  {
    "type": "window",
    "content": "#### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes. #### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed. The number\nof bytes written is passed as the first argument to the event handler.",
    "originalSentence": "#### Event: `'ready'`\n\nThe `'ready'` event is emitted when the stream is ready to accept writes. #### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed. The number\nof bytes written is passed as the first argument to the event handler.",
    "position": 7639,
    "id": "window_7639"
  },
  {
    "type": "window",
    "content": "#### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed. The number\nof bytes written is passed as the first argument to the event handler. #### `new fs.",
    "originalSentence": "#### Event: `'write'`\n\nThe `'write'` event is emitted when a write operation has completed. The number\nof bytes written is passed as the first argument to the event handler. #### `new fs.",
    "position": 7640,
    "id": "window_7640"
  },
  {
    "type": "window",
    "content": "The number\nof bytes written is passed as the first argument to the event handler. #### `new fs. Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it.",
    "originalSentence": "The number\nof bytes written is passed as the first argument to the event handler. #### `new fs. Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it.",
    "position": 7641,
    "id": "window_7641"
  },
  {
    "type": "window",
    "content": "#### `new fs. Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it. **Default**: `true`.",
    "originalSentence": "#### `new fs. Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it. **Default**: `true`.",
    "position": 7642,
    "id": "window_7642"
  },
  {
    "type": "window",
    "content": "Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it. **Default**: `true`. * `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`.",
    "originalSentence": "Utf8Stream([options])`\n\n* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it. **Default**: `true`. * `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`.",
    "position": 7643,
    "id": "window_7643"
  },
  {
    "type": "window",
    "content": "**Default**: `true`. * `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`. **Default**:\n    `'utf8'`.",
    "originalSentence": "**Default**: `true`. * `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`. **Default**:\n    `'utf8'`.",
    "position": 7644,
    "id": "window_7644"
  },
  {
    "type": "window",
    "content": "* `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`. **Default**:\n    `'utf8'`. * `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option).",
    "originalSentence": "* `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`. **Default**:\n    `'utf8'`. * `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option).",
    "position": 7645,
    "id": "window_7645"
  },
  {
    "type": "window",
    "content": "**Default**:\n    `'utf8'`. * `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option). * `fd`: {number} A file descriptor, something that is returned by `fs.",
    "originalSentence": "**Default**:\n    `'utf8'`. * `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option). * `fd`: {number} A file descriptor, something that is returned by `fs.",
    "position": 7646,
    "id": "window_7646"
  },
  {
    "type": "window",
    "content": "* `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option). * `fd`: {number} A file descriptor, something that is returned by `fs. open()`\n    or `fs.",
    "originalSentence": "* `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option). * `fd`: {number} A file descriptor, something that is returned by `fs. open()`\n    or `fs.",
    "position": 7647,
    "id": "window_7647"
  },
  {
    "type": "window",
    "content": "* `fd`: {number} A file descriptor, something that is returned by `fs. open()`\n    or `fs. openSync()`.",
    "originalSentence": "* `fd`: {number} A file descriptor, something that is returned by `fs. open()`\n    or `fs. openSync()`.",
    "position": 7648,
    "id": "window_7648"
  },
  {
    "type": "window",
    "content": "open()`\n    or `fs. openSync()`. * `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream.",
    "originalSentence": "open()`\n    or `fs. openSync()`. * `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream.",
    "position": 7649,
    "id": "window_7649"
  },
  {
    "type": "window",
    "content": "openSync()`. * `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream. * `fsync`: {boolean} Perform a `fs.",
    "originalSentence": "openSync()`. * `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream. * `fsync`: {boolean} Perform a `fs.",
    "position": 7650,
    "id": "window_7650"
  },
  {
    "type": "window",
    "content": "* `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream. * `fsync`: {boolean} Perform a `fs. fsyncSync()` every time a write is\n    completed.",
    "originalSentence": "* `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream. * `fsync`: {boolean} Perform a `fs. fsyncSync()` every time a write is\n    completed.",
    "position": 7651,
    "id": "window_7651"
  },
  {
    "type": "window",
    "content": "* `fsync`: {boolean} Perform a `fs. fsyncSync()` every time a write is\n    completed. * `maxLength`: {number} The maximum length of the internal buffer.",
    "originalSentence": "* `fsync`: {boolean} Perform a `fs. fsyncSync()` every time a write is\n    completed. * `maxLength`: {number} The maximum length of the internal buffer.",
    "position": 7652,
    "id": "window_7652"
  },
  {
    "type": "window",
    "content": "fsyncSync()` every time a write is\n    completed. * `maxLength`: {number} The maximum length of the internal buffer. If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing.",
    "originalSentence": "fsyncSync()` every time a write is\n    completed. * `maxLength`: {number} The maximum length of the internal buffer. If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing.",
    "position": 7653,
    "id": "window_7653"
  },
  {
    "type": "window",
    "content": "* `maxLength`: {number} The maximum length of the internal buffer. If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing. * `mkdir`: {boolean} Ensure directory for `dest` file exists when true.",
    "originalSentence": "* `maxLength`: {number} The maximum length of the internal buffer. If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing. * `mkdir`: {boolean} Ensure directory for `dest` file exists when true.",
    "position": 7654,
    "id": "window_7654"
  },
  {
    "type": "window",
    "content": "If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing. * `mkdir`: {boolean} Ensure directory for `dest` file exists when true. **Default**: `false`.",
    "originalSentence": "If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing. * `mkdir`: {boolean} Ensure directory for `dest` file exists when true. **Default**: `false`.",
    "position": 7655,
    "id": "window_7655"
  },
  {
    "type": "window",
    "content": "* `mkdir`: {boolean} Ensure directory for `dest` file exists when true. **Default**: `false`. * `mode`: {number|string} Specify the creating file mode (see `fs.",
    "originalSentence": "* `mkdir`: {boolean} Ensure directory for `dest` file exists when true. **Default**: `false`. * `mode`: {number|string} Specify the creating file mode (see `fs.",
    "position": 7656,
    "id": "window_7656"
  },
  {
    "type": "window",
    "content": "**Default**: `false`. * `mode`: {number|string} Specify the creating file mode (see `fs. open()`).",
    "originalSentence": "**Default**: `false`. * `mode`: {number|string} Specify the creating file mode (see `fs. open()`).",
    "position": 7657,
    "id": "window_7657"
  },
  {
    "type": "window",
    "content": "* `mode`: {number|string} Specify the creating file mode (see `fs. open()`). * `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds.",
    "originalSentence": "* `mode`: {number|string} Specify the creating file mode (see `fs. open()`). * `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds.",
    "position": 7658,
    "id": "window_7658"
  },
  {
    "type": "window",
    "content": "open()`). * `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds. * `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error.",
    "originalSentence": "open()`). * `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds. * `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error.",
    "position": 7659,
    "id": "window_7659"
  },
  {
    "type": "window",
    "content": "* `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds. * `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error. If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error.",
    "originalSentence": "* `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds. * `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error. If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error.",
    "position": 7660,
    "id": "window_7660"
  },
  {
    "type": "window",
    "content": "* `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error. If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error. The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write.",
    "originalSentence": "* `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error. If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error. The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write.",
    "position": 7661,
    "id": "window_7661"
  },
  {
    "type": "window",
    "content": "If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error. The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write. * `err` {any} An error or `null`.",
    "originalSentence": "If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error. The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write. * `err` {any} An error or `null`.",
    "position": 7662,
    "id": "window_7662"
  },
  {
    "type": "window",
    "content": "The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write. * `err` {any} An error or `null`. * `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously.",
    "originalSentence": "The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write. * `err` {any} An error or `null`. * `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously.",
    "position": 7663,
    "id": "window_7663"
  },
  {
    "type": "window",
    "content": "* `err` {any} An error or `null`. * `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously. #### `utf8Stream.",
    "originalSentence": "* `err` {any} An error or `null`. * `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously. #### `utf8Stream.",
    "position": 7664,
    "id": "window_7664"
  },
  {
    "type": "window",
    "content": "* `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously. #### `utf8Stream. append`\n\n* {boolean} Whether the stream is appending to the file or truncating it.",
    "originalSentence": "* `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously. #### `utf8Stream. append`\n\n* {boolean} Whether the stream is appending to the file or truncating it.",
    "position": 7665,
    "id": "window_7665"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. append`\n\n* {boolean} Whether the stream is appending to the file or truncating it. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. append`\n\n* {boolean} Whether the stream is appending to the file or truncating it. #### `utf8Stream.",
    "position": 7666,
    "id": "window_7666"
  },
  {
    "type": "window",
    "content": "append`\n\n* {boolean} Whether the stream is appending to the file or truncating it. #### `utf8Stream. contentMode`\n\n* {string} The type of data that can be written to the stream.",
    "originalSentence": "append`\n\n* {boolean} Whether the stream is appending to the file or truncating it. #### `utf8Stream. contentMode`\n\n* {string} The type of data that can be written to the stream.",
    "position": 7667,
    "id": "window_7667"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. contentMode`\n\n* {string} The type of data that can be written to the stream. Supported\n  values are `'utf8'` or `'buffer'`.",
    "originalSentence": "#### `utf8Stream. contentMode`\n\n* {string} The type of data that can be written to the stream. Supported\n  values are `'utf8'` or `'buffer'`.",
    "position": 7668,
    "id": "window_7668"
  },
  {
    "type": "window",
    "content": "contentMode`\n\n* {string} The type of data that can be written to the stream. Supported\n  values are `'utf8'` or `'buffer'`. **Default**: `'utf8'`.",
    "originalSentence": "contentMode`\n\n* {string} The type of data that can be written to the stream. Supported\n  values are `'utf8'` or `'buffer'`. **Default**: `'utf8'`.",
    "position": 7669,
    "id": "window_7669"
  },
  {
    "type": "window",
    "content": "Supported\n  values are `'utf8'` or `'buffer'`. **Default**: `'utf8'`. #### `utf8Stream.",
    "originalSentence": "Supported\n  values are `'utf8'` or `'buffer'`. **Default**: `'utf8'`. #### `utf8Stream.",
    "position": 7670,
    "id": "window_7670"
  },
  {
    "type": "window",
    "content": "**Default**: `'utf8'`. #### `utf8Stream. destroy()`\n\nClose the stream immediately, without flushing the internal buffer.",
    "originalSentence": "**Default**: `'utf8'`. #### `utf8Stream. destroy()`\n\nClose the stream immediately, without flushing the internal buffer.",
    "position": 7671,
    "id": "window_7671"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. destroy()`\n\nClose the stream immediately, without flushing the internal buffer. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. destroy()`\n\nClose the stream immediately, without flushing the internal buffer. #### `utf8Stream.",
    "position": 7672,
    "id": "window_7672"
  },
  {
    "type": "window",
    "content": "destroy()`\n\nClose the stream immediately, without flushing the internal buffer. #### `utf8Stream. end()`\n\nClose the stream gracefully, flushing the internal buffer before closing.",
    "originalSentence": "destroy()`\n\nClose the stream immediately, without flushing the internal buffer. #### `utf8Stream. end()`\n\nClose the stream gracefully, flushing the internal buffer before closing.",
    "position": 7673,
    "id": "window_7673"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. end()`\n\nClose the stream gracefully, flushing the internal buffer before closing. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. end()`\n\nClose the stream gracefully, flushing the internal buffer before closing. #### `utf8Stream.",
    "position": 7674,
    "id": "window_7674"
  },
  {
    "type": "window",
    "content": "end()`\n\nClose the stream gracefully, flushing the internal buffer before closing. #### `utf8Stream. fd`\n\n* {number} The file descriptor that is being written to.",
    "originalSentence": "end()`\n\nClose the stream gracefully, flushing the internal buffer before closing. #### `utf8Stream. fd`\n\n* {number} The file descriptor that is being written to.",
    "position": 7675,
    "id": "window_7675"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. fd`\n\n* {number} The file descriptor that is being written to. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. fd`\n\n* {number} The file descriptor that is being written to. #### `utf8Stream.",
    "position": 7676,
    "id": "window_7676"
  },
  {
    "type": "window",
    "content": "fd`\n\n* {number} The file descriptor that is being written to. #### `utf8Stream. file`\n\n* {string} The file that is being written to.",
    "originalSentence": "fd`\n\n* {number} The file descriptor that is being written to. #### `utf8Stream. file`\n\n* {string} The file that is being written to.",
    "position": 7677,
    "id": "window_7677"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. file`\n\n* {string} The file that is being written to. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. file`\n\n* {string} The file that is being written to. #### `utf8Stream.",
    "position": 7678,
    "id": "window_7678"
  },
  {
    "type": "window",
    "content": "file`\n\n* {string} The file that is being written to. #### `utf8Stream. flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`.",
    "originalSentence": "file`\n\n* {string} The file that is being written to. #### `utf8Stream. flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`.",
    "position": 7679,
    "id": "window_7679"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`. Writes the current buffer to the file if a write was not in progress.",
    "originalSentence": "#### `utf8Stream. flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`. Writes the current buffer to the file if a write was not in progress.",
    "position": 7680,
    "id": "window_7680"
  },
  {
    "type": "window",
    "content": "flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`. Writes the current buffer to the file if a write was not in progress. Do\nnothing if `minLength` is zero or if it is already writing.",
    "originalSentence": "flush(callback)`\n\n* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`. Writes the current buffer to the file if a write was not in progress. Do\nnothing if `minLength` is zero or if it is already writing.",
    "position": 7681,
    "id": "window_7681"
  },
  {
    "type": "window",
    "content": "Writes the current buffer to the file if a write was not in progress. Do\nnothing if `minLength` is zero or if it is already writing. #### `utf8Stream.",
    "originalSentence": "Writes the current buffer to the file if a write was not in progress. Do\nnothing if `minLength` is zero or if it is already writing. #### `utf8Stream.",
    "position": 7682,
    "id": "window_7682"
  },
  {
    "type": "window",
    "content": "Do\nnothing if `minLength` is zero or if it is already writing. #### `utf8Stream. flushSync()`\n\nFlushes the buffered data synchronously.",
    "originalSentence": "Do\nnothing if `minLength` is zero or if it is already writing. #### `utf8Stream. flushSync()`\n\nFlushes the buffered data synchronously.",
    "position": 7683,
    "id": "window_7683"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. flushSync()`\n\nFlushes the buffered data synchronously. This is a costly operation.",
    "originalSentence": "#### `utf8Stream. flushSync()`\n\nFlushes the buffered data synchronously. This is a costly operation.",
    "position": 7684,
    "id": "window_7684"
  },
  {
    "type": "window",
    "content": "flushSync()`\n\nFlushes the buffered data synchronously. This is a costly operation. #### `utf8Stream.",
    "originalSentence": "flushSync()`\n\nFlushes the buffered data synchronously. This is a costly operation. #### `utf8Stream.",
    "position": 7685,
    "id": "window_7685"
  },
  {
    "type": "window",
    "content": "This is a costly operation. #### `utf8Stream. fsync`\n\n* {boolean} Whether the stream is performing a `fs.",
    "originalSentence": "This is a costly operation. #### `utf8Stream. fsync`\n\n* {boolean} Whether the stream is performing a `fs.",
    "position": 7686,
    "id": "window_7686"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. fsync`\n\n* {boolean} Whether the stream is performing a `fs. fsyncSync()` after every\n  write operation.",
    "originalSentence": "#### `utf8Stream. fsync`\n\n* {boolean} Whether the stream is performing a `fs. fsyncSync()` after every\n  write operation.",
    "position": 7687,
    "id": "window_7687"
  },
  {
    "type": "window",
    "content": "fsync`\n\n* {boolean} Whether the stream is performing a `fs. fsyncSync()` after every\n  write operation. #### `utf8Stream.",
    "originalSentence": "fsync`\n\n* {boolean} Whether the stream is performing a `fs. fsyncSync()` after every\n  write operation. #### `utf8Stream.",
    "position": 7688,
    "id": "window_7688"
  },
  {
    "type": "window",
    "content": "fsyncSync()` after every\n  write operation. #### `utf8Stream. maxLength`\n\n* {number} The maximum length of the internal buffer.",
    "originalSentence": "fsyncSync()` after every\n  write operation. #### `utf8Stream. maxLength`\n\n* {number} The maximum length of the internal buffer.",
    "position": 7689,
    "id": "window_7689"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. maxLength`\n\n* {number} The maximum length of the internal buffer. If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data.",
    "originalSentence": "#### `utf8Stream. maxLength`\n\n* {number} The maximum length of the internal buffer. If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data.",
    "position": 7690,
    "id": "window_7690"
  },
  {
    "type": "window",
    "content": "maxLength`\n\n* {number} The maximum length of the internal buffer. If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data. #### `utf8Stream.",
    "originalSentence": "maxLength`\n\n* {number} The maximum length of the internal buffer. If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data. #### `utf8Stream.",
    "position": 7691,
    "id": "window_7691"
  },
  {
    "type": "window",
    "content": "If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data. #### `utf8Stream. minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing.",
    "originalSentence": "If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data. #### `utf8Stream. minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing.",
    "position": 7692,
    "id": "window_7692"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing. #### `utf8Stream.",
    "position": 7693,
    "id": "window_7693"
  },
  {
    "type": "window",
    "content": "minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing. #### `utf8Stream. mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists.",
    "originalSentence": "minLength`\n\n* {number} The minimum length of the internal buffer that is required to be\n  full before flushing. #### `utf8Stream. mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists.",
    "position": 7694,
    "id": "window_7694"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists. If `true`, it will create the directory if it does not\n  exist.",
    "originalSentence": "#### `utf8Stream. mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists. If `true`, it will create the directory if it does not\n  exist.",
    "position": 7695,
    "id": "window_7695"
  },
  {
    "type": "window",
    "content": "mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists. If `true`, it will create the directory if it does not\n  exist. **Default**: `false`.",
    "originalSentence": "mkdir`\n\n* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists. If `true`, it will create the directory if it does not\n  exist. **Default**: `false`.",
    "position": 7696,
    "id": "window_7696"
  },
  {
    "type": "window",
    "content": "If `true`, it will create the directory if it does not\n  exist. **Default**: `false`. #### `utf8Stream.",
    "originalSentence": "If `true`, it will create the directory if it does not\n  exist. **Default**: `false`. #### `utf8Stream.",
    "position": 7697,
    "id": "window_7697"
  },
  {
    "type": "window",
    "content": "**Default**: `false`. #### `utf8Stream. mode`\n\n* {number|string} The mode of the file that is being written to.",
    "originalSentence": "**Default**: `false`. #### `utf8Stream. mode`\n\n* {number|string} The mode of the file that is being written to.",
    "position": 7698,
    "id": "window_7698"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. mode`\n\n* {number|string} The mode of the file that is being written to. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. mode`\n\n* {number|string} The mode of the file that is being written to. #### `utf8Stream.",
    "position": 7699,
    "id": "window_7699"
  },
  {
    "type": "window",
    "content": "mode`\n\n* {number|string} The mode of the file that is being written to. #### `utf8Stream. periodicFlush`\n\n* {number} The number of milliseconds between flushes.",
    "originalSentence": "mode`\n\n* {number|string} The mode of the file that is being written to. #### `utf8Stream. periodicFlush`\n\n* {number} The number of milliseconds between flushes.",
    "position": 7700,
    "id": "window_7700"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. periodicFlush`\n\n* {number} The number of milliseconds between flushes. If set to `0`, no\n  periodic flushes will be performed.",
    "originalSentence": "#### `utf8Stream. periodicFlush`\n\n* {number} The number of milliseconds between flushes. If set to `0`, no\n  periodic flushes will be performed.",
    "position": 7701,
    "id": "window_7701"
  },
  {
    "type": "window",
    "content": "periodicFlush`\n\n* {number} The number of milliseconds between flushes. If set to `0`, no\n  periodic flushes will be performed. #### `utf8Stream.",
    "originalSentence": "periodicFlush`\n\n* {number} The number of milliseconds between flushes. If set to `0`, no\n  periodic flushes will be performed. #### `utf8Stream.",
    "position": 7702,
    "id": "window_7702"
  },
  {
    "type": "window",
    "content": "If set to `0`, no\n  periodic flushes will be performed. #### `utf8Stream. reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option).",
    "originalSentence": "If set to `0`, no\n  periodic flushes will be performed. #### `utf8Stream. reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option).",
    "position": 7703,
    "id": "window_7703"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option). Reopen the file in place, useful for log rotation.",
    "originalSentence": "#### `utf8Stream. reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option). Reopen the file in place, useful for log rotation.",
    "position": 7704,
    "id": "window_7704"
  },
  {
    "type": "window",
    "content": "reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option). Reopen the file in place, useful for log rotation. #### `utf8Stream.",
    "originalSentence": "reopen(file)`\n\n* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option). Reopen the file in place, useful for log rotation. #### `utf8Stream.",
    "position": 7705,
    "id": "window_7705"
  },
  {
    "type": "window",
    "content": "Reopen the file in place, useful for log rotation. #### `utf8Stream. sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously.",
    "originalSentence": "Reopen the file in place, useful for log rotation. #### `utf8Stream. sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously.",
    "position": 7706,
    "id": "window_7706"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously. #### `utf8Stream.",
    "originalSentence": "#### `utf8Stream. sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously. #### `utf8Stream.",
    "position": 7707,
    "id": "window_7707"
  },
  {
    "type": "window",
    "content": "sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously. #### `utf8Stream. write(data)`\n\n* `data` {string|Buffer} The data to write.",
    "originalSentence": "sync`\n\n* {boolean} Whether the stream is writing synchronously or asynchronously. #### `utf8Stream. write(data)`\n\n* `data` {string|Buffer} The data to write.",
    "position": 7708,
    "id": "window_7708"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. write(data)`\n\n* `data` {string|Buffer} The data to write. * Returns {boolean}\n\nWhen the `options.",
    "originalSentence": "#### `utf8Stream. write(data)`\n\n* `data` {string|Buffer} The data to write. * Returns {boolean}\n\nWhen the `options.",
    "position": 7709,
    "id": "window_7709"
  },
  {
    "type": "window",
    "content": "write(data)`\n\n* `data` {string|Buffer} The data to write. * Returns {boolean}\n\nWhen the `options. contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string.",
    "originalSentence": "write(data)`\n\n* `data` {string|Buffer} The data to write. * Returns {boolean}\n\nWhen the `options. contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string.",
    "position": 7710,
    "id": "window_7710"
  },
  {
    "type": "window",
    "content": "* Returns {boolean}\n\nWhen the `options. contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string. If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}.",
    "originalSentence": "* Returns {boolean}\n\nWhen the `options. contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string. If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}.",
    "position": 7711,
    "id": "window_7711"
  },
  {
    "type": "window",
    "content": "contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string. If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}. #### `utf8Stream.",
    "originalSentence": "contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string. If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}. #### `utf8Stream.",
    "position": 7712,
    "id": "window_7712"
  },
  {
    "type": "window",
    "content": "If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}. #### `utf8Stream. writing`\n\n* {boolean} Whether the stream is currently writing data to the file.",
    "originalSentence": "If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}. #### `utf8Stream. writing`\n\n* {boolean} Whether the stream is currently writing data to the file.",
    "position": 7713,
    "id": "window_7713"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream. writing`\n\n* {boolean} Whether the stream is currently writing data to the file. #### `utf8Stream[Symbol.",
    "originalSentence": "#### `utf8Stream. writing`\n\n* {boolean} Whether the stream is currently writing data to the file. #### `utf8Stream[Symbol.",
    "position": 7714,
    "id": "window_7714"
  },
  {
    "type": "window",
    "content": "writing`\n\n* {boolean} Whether the stream is currently writing data to the file. #### `utf8Stream[Symbol. dispose]()`\n\nCalls `utf8Stream.",
    "originalSentence": "writing`\n\n* {boolean} Whether the stream is currently writing data to the file. #### `utf8Stream[Symbol. dispose]()`\n\nCalls `utf8Stream.",
    "position": 7715,
    "id": "window_7715"
  },
  {
    "type": "window",
    "content": "#### `utf8Stream[Symbol. dispose]()`\n\nCalls `utf8Stream. destroy()`.",
    "originalSentence": "#### `utf8Stream[Symbol. dispose]()`\n\nCalls `utf8Stream. destroy()`.",
    "position": 7716,
    "id": "window_7716"
  },
  {
    "type": "window",
    "content": "dispose]()`\n\nCalls `utf8Stream. destroy()`. ### Class: `fs.",
    "originalSentence": "dispose]()`\n\nCalls `utf8Stream. destroy()`. ### Class: `fs.",
    "position": 7717,
    "id": "window_7717"
  },
  {
    "type": "window",
    "content": "### Class: `fs. WriteStream`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "### Class: `fs. WriteStream`\n\n<! -- YAML\nadded: v0.",
    "position": 7718,
    "id": "window_7718"
  },
  {
    "type": "window",
    "content": "WriteStream`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* Extends {stream.",
    "originalSentence": "WriteStream`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* Extends {stream.",
    "position": 7719,
    "id": "window_7719"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\n* Extends {stream. Writable}\n\nInstances of {fs.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\n* Extends {stream. Writable}\n\nInstances of {fs.",
    "position": 7720,
    "id": "window_7720"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\n* Extends {stream. Writable}\n\nInstances of {fs. WriteStream} are created and returned using the\n[`fs.",
    "originalSentence": "1.93\n-->\n\n* Extends {stream. Writable}\n\nInstances of {fs. WriteStream} are created and returned using the\n[`fs.",
    "position": 7721,
    "id": "window_7721"
  },
  {
    "type": "window",
    "content": "Writable}\n\nInstances of {fs. WriteStream} are created and returned using the\n[`fs. createWriteStream()`][] function.",
    "originalSentence": "Writable}\n\nInstances of {fs. WriteStream} are created and returned using the\n[`fs. createWriteStream()`][] function.",
    "position": 7722,
    "id": "window_7722"
  },
  {
    "type": "window",
    "content": "WriteStream} are created and returned using the\n[`fs. createWriteStream()`][] function. #### Event: `'close'`\n\n<!",
    "originalSentence": "WriteStream} are created and returned using the\n[`fs. createWriteStream()`][] function. #### Event: `'close'`\n\n<!",
    "position": 7723,
    "id": "window_7723"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][] function. #### Event: `'close'`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "createWriteStream()`][] function. #### Event: `'close'`\n\n<! -- YAML\nadded: v0.",
    "position": 7724,
    "id": "window_7724"
  },
  {
    "type": "window",
    "content": "#### Event: `'close'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs.",
    "originalSentence": "#### Event: `'close'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs.",
    "position": 7725,
    "id": "window_7725"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs. WriteStream}'s underlying file descriptor has been closed.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\nEmitted when the {fs. WriteStream}'s underlying file descriptor has been closed.",
    "position": 7726,
    "id": "window_7726"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\nEmitted when the {fs. WriteStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<!",
    "originalSentence": "1.93\n-->\n\nEmitted when the {fs. WriteStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<!",
    "position": 7727,
    "id": "window_7727"
  },
  {
    "type": "window",
    "content": "WriteStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "WriteStream}'s underlying file descriptor has been closed. #### Event: `'open'`\n\n<! -- YAML\nadded: v0.",
    "position": 7728,
    "id": "window_7728"
  },
  {
    "type": "window",
    "content": "#### Event: `'open'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "originalSentence": "#### Event: `'open'`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs.",
    "position": 7729,
    "id": "window_7729"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. WriteStream}.",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. WriteStream}.",
    "position": 7730,
    "id": "window_7730"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. WriteStream}. Emitted when the {fs.",
    "originalSentence": "1.93\n-->\n\n* `fd` {integer} Integer file descriptor used by the {fs. WriteStream}. Emitted when the {fs.",
    "position": 7731,
    "id": "window_7731"
  },
  {
    "type": "window",
    "content": "WriteStream}. Emitted when the {fs. WriteStream}'s file is opened.",
    "originalSentence": "WriteStream}. Emitted when the {fs. WriteStream}'s file is opened.",
    "position": 7732,
    "id": "window_7732"
  },
  {
    "type": "window",
    "content": "Emitted when the {fs. WriteStream}'s file is opened. #### Event: `'ready'`\n\n<!",
    "originalSentence": "Emitted when the {fs. WriteStream}'s file is opened. #### Event: `'ready'`\n\n<!",
    "position": 7733,
    "id": "window_7733"
  },
  {
    "type": "window",
    "content": "WriteStream}'s file is opened. #### Event: `'ready'`\n\n<! -- YAML\nadded: v9.",
    "originalSentence": "WriteStream}'s file is opened. #### Event: `'ready'`\n\n<! -- YAML\nadded: v9.",
    "position": 7734,
    "id": "window_7734"
  },
  {
    "type": "window",
    "content": "#### Event: `'ready'`\n\n<! -- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs.",
    "originalSentence": "#### Event: `'ready'`\n\n<! -- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs.",
    "position": 7735,
    "id": "window_7735"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs. WriteStream} is ready to be used.",
    "originalSentence": "-- YAML\nadded: v9. 11.0\n-->\n\nEmitted when the {fs. WriteStream} is ready to be used.",
    "position": 7736,
    "id": "window_7736"
  },
  {
    "type": "window",
    "content": "11.0\n-->\n\nEmitted when the {fs. WriteStream} is ready to be used. Fires immediately after `'open'`.",
    "originalSentence": "11.0\n-->\n\nEmitted when the {fs. WriteStream} is ready to be used. Fires immediately after `'open'`.",
    "position": 7737,
    "id": "window_7737"
  },
  {
    "type": "window",
    "content": "WriteStream} is ready to be used. Fires immediately after `'open'`. #### `writeStream.",
    "originalSentence": "WriteStream} is ready to be used. Fires immediately after `'open'`. #### `writeStream.",
    "position": 7738,
    "id": "window_7738"
  },
  {
    "type": "window",
    "content": "Fires immediately after `'open'`. #### `writeStream. bytesWritten`\n\n<!",
    "originalSentence": "Fires immediately after `'open'`. #### `writeStream. bytesWritten`\n\n<!",
    "position": 7739,
    "id": "window_7739"
  },
  {
    "type": "window",
    "content": "#### `writeStream. bytesWritten`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "#### `writeStream. bytesWritten`\n\n<! -- YAML\nadded: v0.",
    "position": 7740,
    "id": "window_7740"
  },
  {
    "type": "window",
    "content": "bytesWritten`\n\n<! -- YAML\nadded: v0. 4.7\n-->\n\nThe number of bytes written so far.",
    "originalSentence": "bytesWritten`\n\n<! -- YAML\nadded: v0. 4.7\n-->\n\nThe number of bytes written so far.",
    "position": 7741,
    "id": "window_7741"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 4.7\n-->\n\nThe number of bytes written so far. Does not include data that is still queued\nfor writing.",
    "originalSentence": "-- YAML\nadded: v0. 4.7\n-->\n\nThe number of bytes written so far. Does not include data that is still queued\nfor writing.",
    "position": 7742,
    "id": "window_7742"
  },
  {
    "type": "window",
    "content": "4.7\n-->\n\nThe number of bytes written so far. Does not include data that is still queued\nfor writing. #### `writeStream.",
    "originalSentence": "4.7\n-->\n\nThe number of bytes written so far. Does not include data that is still queued\nfor writing. #### `writeStream.",
    "position": 7743,
    "id": "window_7743"
  },
  {
    "type": "window",
    "content": "Does not include data that is still queued\nfor writing. #### `writeStream. close([callback])`\n\n<!",
    "originalSentence": "Does not include data that is still queued\nfor writing. #### `writeStream. close([callback])`\n\n<!",
    "position": 7744,
    "id": "window_7744"
  },
  {
    "type": "window",
    "content": "#### `writeStream. close([callback])`\n\n<! -- YAML\nadded: v0.",
    "originalSentence": "#### `writeStream. close([callback])`\n\n<! -- YAML\nadded: v0.",
    "position": 7745,
    "id": "window_7745"
  },
  {
    "type": "window",
    "content": "close([callback])`\n\n<! -- YAML\nadded: v0. 9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`.",
    "originalSentence": "close([callback])`\n\n<! -- YAML\nadded: v0. 9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`.",
    "position": 7746,
    "id": "window_7746"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`. Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed.",
    "originalSentence": "-- YAML\nadded: v0. 9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`. Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed.",
    "position": 7747,
    "id": "window_7747"
  },
  {
    "type": "window",
    "content": "9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`. Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed. #### `writeStream.",
    "originalSentence": "9.4\n-->\n\n* `callback` {Function}\n  * `err` {Error}\n\nCloses `writeStream`. Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed. #### `writeStream.",
    "position": 7748,
    "id": "window_7748"
  },
  {
    "type": "window",
    "content": "Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed. #### `writeStream. path`\n\n<!",
    "originalSentence": "Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed. #### `writeStream. path`\n\n<!",
    "position": 7749,
    "id": "window_7749"
  },
  {
    "type": "window",
    "content": "path`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs.",
    "originalSentence": "path`\n\n<! -- YAML\nadded: v0. 1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs.",
    "position": 7750,
    "id": "window_7750"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v0. 1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs. createWriteStream()`][].",
    "originalSentence": "-- YAML\nadded: v0. 1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs. createWriteStream()`][].",
    "position": 7751,
    "id": "window_7751"
  },
  {
    "type": "window",
    "content": "1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs. createWriteStream()`][]. If `path` is passed as a string, then\n`writeStream.",
    "originalSentence": "1.93\n-->\n\nThe path to the file the stream is writing to as specified in the first\nargument to [`fs. createWriteStream()`][]. If `path` is passed as a string, then\n`writeStream.",
    "position": 7752,
    "id": "window_7752"
  },
  {
    "type": "window",
    "content": "createWriteStream()`][]. If `path` is passed as a string, then\n`writeStream. path` will be a string.",
    "originalSentence": "createWriteStream()`][]. If `path` is passed as a string, then\n`writeStream. path` will be a string.",
    "position": 7753,
    "id": "window_7753"
  },
  {
    "type": "window",
    "content": "If `path` is passed as a string, then\n`writeStream. path` will be a string. If `path` is passed as a {Buffer}, then\n`writeStream.",
    "originalSentence": "If `path` is passed as a string, then\n`writeStream. path` will be a string. If `path` is passed as a {Buffer}, then\n`writeStream.",
    "position": 7754,
    "id": "window_7754"
  },
  {
    "type": "window",
    "content": "path` will be a string. If `path` is passed as a {Buffer}, then\n`writeStream. path` will be a {Buffer}.",
    "originalSentence": "path` will be a string. If `path` is passed as a {Buffer}, then\n`writeStream. path` will be a {Buffer}.",
    "position": 7755,
    "id": "window_7755"
  },
  {
    "type": "window",
    "content": "If `path` is passed as a {Buffer}, then\n`writeStream. path` will be a {Buffer}. #### `writeStream.",
    "originalSentence": "If `path` is passed as a {Buffer}, then\n`writeStream. path` will be a {Buffer}. #### `writeStream.",
    "position": 7756,
    "id": "window_7756"
  },
  {
    "type": "window",
    "content": "path` will be a {Buffer}. #### `writeStream. pending`\n\n<!",
    "originalSentence": "path` will be a {Buffer}. #### `writeStream. pending`\n\n<!",
    "position": 7757,
    "id": "window_7757"
  },
  {
    "type": "window",
    "content": "#### `writeStream. pending`\n\n<! -- YAML\nadded: v11.",
    "originalSentence": "#### `writeStream. pending`\n\n<! -- YAML\nadded: v11.",
    "position": 7758,
    "id": "window_7758"
  },
  {
    "type": "window",
    "content": "pending`\n\n<! -- YAML\nadded: v11. 2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "originalSentence": "pending`\n\n<! -- YAML\nadded: v11. 2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni.",
    "position": 7759,
    "id": "window_7759"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v11. 2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e.",
    "originalSentence": "-- YAML\nadded: v11. 2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e.",
    "position": 7760,
    "id": "window_7760"
  },
  {
    "type": "window",
    "content": "2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e. before the `'ready'` event is emitted.",
    "originalSentence": "2.0\n-->\n\n* Type: {boolean}\n\nThis property is `true` if the underlying file has not been opened yet,\ni. e. before the `'ready'` event is emitted.",
    "position": 7761,
    "id": "window_7761"
  },
  {
    "type": "window",
    "content": "before the `'ready'` event is emitted. ### `fs. constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "originalSentence": "before the `'ready'` event is emitted. ### `fs. constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations.",
    "position": 7762,
    "id": "window_7762"
  },
  {
    "type": "window",
    "content": "### `fs. constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. #### FS constants\n\nThe following constants are exported by `fs.",
    "originalSentence": "### `fs. constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. #### FS constants\n\nThe following constants are exported by `fs.",
    "position": 7763,
    "id": "window_7763"
  },
  {
    "type": "window",
    "content": "constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. #### FS constants\n\nThe following constants are exported by `fs. constants` and `fsPromises.",
    "originalSentence": "constants`\n\n* Type: {Object}\n\nReturns an object containing commonly used constants for file system\noperations. #### FS constants\n\nThe following constants are exported by `fs. constants` and `fsPromises.",
    "position": 7764,
    "id": "window_7764"
  },
  {
    "type": "window",
    "content": "#### FS constants\n\nThe following constants are exported by `fs. constants` and `fsPromises. constants`.",
    "originalSentence": "#### FS constants\n\nThe following constants are exported by `fs. constants` and `fsPromises. constants`.",
    "position": 7765,
    "id": "window_7765"
  },
  {
    "type": "window",
    "content": "constants` and `fsPromises. constants`. Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available.",
    "originalSentence": "constants` and `fsPromises. constants`. Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available.",
    "position": 7766,
    "id": "window_7766"
  },
  {
    "type": "window",
    "content": "constants`. Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available. For portable applications it is recommended to check for their presence\nbefore use.",
    "originalSentence": "constants`. Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available. For portable applications it is recommended to check for their presence\nbefore use.",
    "position": 7767,
    "id": "window_7767"
  },
  {
    "type": "window",
    "content": "Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available. For portable applications it is recommended to check for their presence\nbefore use. To use more than one constant, use the bitwise OR `|` operator.",
    "originalSentence": "Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available. For portable applications it is recommended to check for their presence\nbefore use. To use more than one constant, use the bitwise OR `|` operator.",
    "position": 7768,
    "id": "window_7768"
  },
  {
    "type": "window",
    "content": "For portable applications it is recommended to check for their presence\nbefore use. To use more than one constant, use the bitwise OR `|` operator. Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...",
    "originalSentence": "For portable applications it is recommended to check for their presence\nbefore use. To use more than one constant, use the bitwise OR `|` operator. Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...",
    "position": 7769,
    "id": "window_7769"
  },
  {
    "type": "window",
    "content": "To use more than one constant, use the bitwise OR `|` operator. Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ... });\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises.",
    "originalSentence": "To use more than one constant, use the bitwise OR `|` operator. Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ... });\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises.",
    "position": 7770,
    "id": "window_7770"
  },
  {
    "type": "window",
    "content": "Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ... });\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises. access()`][], [`fs.",
    "originalSentence": "Example:\n\n```mjs\nimport { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ... });\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises. access()`][], [`fs.",
    "position": 7771,
    "id": "window_7771"
  },
  {
    "type": "window",
    "content": "});\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises. access()`][], [`fs. access()`][], and [`fs.",
    "originalSentence": "});\n```\n\n##### File access constants\n\nThe following constants are meant for use as the `mode` parameter passed to\n[`fsPromises. access()`][], [`fs. access()`][], and [`fs.",
    "position": 7772,
    "id": "window_7772"
  },
  {
    "type": "window",
    "content": "access()`][], [`fs. access()`][], and [`fs. accessSync()`][].",
    "originalSentence": "access()`][], [`fs. access()`][], and [`fs. accessSync()`][].",
    "position": 7773,
    "id": "window_7773"
  },
  {
    "type": "window",
    "content": "access()`][], and [`fs. accessSync()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process.",
    "originalSentence": "access()`][], and [`fs. accessSync()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process.",
    "position": 7774,
    "id": "window_7774"
  },
  {
    "type": "window",
    "content": "accessSync()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process. This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions.",
    "originalSentence": "accessSync()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process. This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions.",
    "position": 7775,
    "id": "window_7775"
  },
  {
    "type": "window",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process. This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions. Default if no mode is specified.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process. This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions. Default if no mode is specified.",
    "position": 7776,
    "id": "window_7776"
  },
  {
    "type": "window",
    "content": "This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions. Default if no mode is specified. </td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process.",
    "originalSentence": "This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions. Default if no mode is specified. </td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process.",
    "position": 7777,
    "id": "window_7777"
  },
  {
    "type": "window",
    "content": "Default if no mode is specified. </td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process. </td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process.",
    "originalSentence": "Default if no mode is specified. </td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process. </td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process.",
    "position": 7778,
    "id": "window_7778"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process. </td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process. </td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process. </td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process. </td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process.",
    "position": 7779,
    "id": "window_7779"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process. </td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process. This has no effect on Windows\n    (will behave like <code>fs.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process. </td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process. This has no effect on Windows\n    (will behave like <code>fs.",
    "position": 7780,
    "id": "window_7780"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process. This has no effect on Windows\n    (will behave like <code>fs. constants.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process. This has no effect on Windows\n    (will behave like <code>fs. constants.",
    "position": 7781,
    "id": "window_7781"
  },
  {
    "type": "window",
    "content": "This has no effect on Windows\n    (will behave like <code>fs. constants. F_OK</code>).",
    "originalSentence": "This has no effect on Windows\n    (will behave like <code>fs. constants. F_OK</code>).",
    "position": 7782,
    "id": "window_7782"
  },
  {
    "type": "window",
    "content": "constants. F_OK</code>). </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "originalSentence": "constants. F_OK</code>). </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "position": 7783,
    "id": "window_7783"
  },
  {
    "type": "window",
    "content": "F_OK</code>). </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File copy constants\n\nThe following constants are meant for use with [`fs.",
    "originalSentence": "F_OK</code>). </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File copy constants\n\nThe following constants are meant for use with [`fs.",
    "position": 7784,
    "id": "window_7784"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File copy constants\n\nThe following constants are meant for use with [`fs. copyFile()`][].",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File copy constants\n\nThe following constants are meant for use with [`fs. copyFile()`][].",
    "position": 7785,
    "id": "window_7785"
  },
  {
    "type": "window",
    "content": "##### File copy constants\n\nThe following constants are meant for use with [`fs. copyFile()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists.",
    "originalSentence": "##### File copy constants\n\nThe following constants are meant for use with [`fs. copyFile()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists.",
    "position": 7786,
    "id": "window_7786"
  },
  {
    "type": "window",
    "content": "copyFile()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "originalSentence": "copyFile()`][]. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "position": 7787,
    "id": "window_7787"
  },
  {
    "type": "window",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used.",
    "position": 7788,
    "id": "window_7788"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink.",
    "position": 7789,
    "id": "window_7789"
  },
  {
    "type": "window",
    "content": "If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error.",
    "originalSentence": "If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used. </td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error.",
    "position": 7790,
    "id": "window_7790"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error. </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error. </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows.",
    "position": 7791,
    "id": "window_7791"
  },
  {
    "type": "window",
    "content": "If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error. </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File open constants\n\nThe following constants are meant for use with `fs.",
    "originalSentence": "If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error. </td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File open constants\n\nThe following constants are meant for use with `fs.",
    "position": 7792,
    "id": "window_7792"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File open constants\n\nThe following constants are meant for use with `fs. open()`.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nThe definitions are also available on Windows. ##### File open constants\n\nThe following constants are meant for use with `fs. open()`.",
    "position": 7793,
    "id": "window_7793"
  },
  {
    "type": "window",
    "content": "##### File open constants\n\nThe following constants are meant for use with `fs. open()`. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access.",
    "originalSentence": "##### File open constants\n\nThe following constants are meant for use with `fs. open()`. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access.",
    "position": 7794,
    "id": "window_7794"
  },
  {
    "type": "window",
    "content": "open()`. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access.",
    "originalSentence": "open()`. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access.",
    "position": 7795,
    "id": "window_7795"
  },
  {
    "type": "window",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access.",
    "position": 7796,
    "id": "window_7796"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access. </td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access. </td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access. </td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist.",
    "position": 7797,
    "id": "window_7797"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access. </td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist. </td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access. </td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist. </td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists.",
    "position": 7798,
    "id": "window_7798"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist. </td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one).",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist. </td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one).",
    "position": 7799,
    "id": "window_7799"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one). </td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one). </td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero.",
    "position": 7800,
    "id": "window_7800"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one). </td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero. </td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one). </td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero. </td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file.",
    "position": 7801,
    "id": "window_7801"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero. </td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero. </td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory.",
    "position": 7802,
    "id": "window_7802"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory. </td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory. </td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file.",
    "position": 7803,
    "id": "window_7803"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory. </td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file. This flag is available on Linux operating systems only.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory. </td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file. This flag is available on Linux operating systems only.",
    "position": 7804,
    "id": "window_7804"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file. This flag is available on Linux operating systems only. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file. This flag is available on Linux operating systems only. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link.",
    "position": 7805,
    "id": "window_7805"
  },
  {
    "type": "window",
    "content": "This flag is available on Linux operating systems only. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity.",
    "originalSentence": "This flag is available on Linux operating systems only. </td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity.",
    "position": 7806,
    "id": "window_7806"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity.",
    "position": 7807,
    "id": "window_7807"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to.",
    "position": 7808,
    "id": "window_7808"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity. </td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O.",
    "position": 7809,
    "id": "window_7809"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O. </td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to. </td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O. </td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible.",
    "position": 7810,
    "id": "window_7810"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O. </td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible. </td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O. </td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible. </td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file.",
    "position": 7811,
    "id": "window_7811"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible. </td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file. This flag\n    is available on Windows operating systems only.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible. </td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file. This flag\n    is available on Windows operating systems only.",
    "position": 7812,
    "id": "window_7812"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file. This flag\n    is available on Windows operating systems only. On other operating systems,\n    this flag is ignored.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file. This flag\n    is available on Windows operating systems only. On other operating systems,\n    this flag is ignored.",
    "position": 7813,
    "id": "window_7813"
  },
  {
    "type": "window",
    "content": "This flag\n    is available on Windows operating systems only. On other operating systems,\n    this flag is ignored. </td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available.",
    "originalSentence": "This flag\n    is available on Windows operating systems only. On other operating systems,\n    this flag is ignored. </td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available.",
    "position": 7814,
    "id": "window_7814"
  },
  {
    "type": "window",
    "content": "On other operating systems,\n    this flag is ignored. </td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available. ##### File type constants\n\nThe following constants are meant for use with the {fs.",
    "originalSentence": "On other operating systems,\n    this flag is ignored. </td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available. ##### File type constants\n\nThe following constants are meant for use with the {fs.",
    "position": 7815,
    "id": "window_7815"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available. ##### File type constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining a file's type.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nOn Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available. ##### File type constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining a file's type.",
    "position": 7816,
    "id": "window_7816"
  },
  {
    "type": "window",
    "content": "##### File type constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining a file's type. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code.",
    "originalSentence": "##### File type constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining a file's type. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code.",
    "position": 7817,
    "id": "window_7817"
  },
  {
    "type": "window",
    "content": "Stats} object's\n`mode` property for determining a file's type. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file.",
    "originalSentence": "Stats} object's\n`mode` property for determining a file's type. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file.",
    "position": 7818,
    "id": "window_7818"
  },
  {
    "type": "window",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory.",
    "position": 7819,
    "id": "window_7819"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file.",
    "position": 7820,
    "id": "window_7820"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file.",
    "position": 7821,
    "id": "window_7821"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe.",
    "position": 7822,
    "id": "window_7822"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link.",
    "position": 7823,
    "id": "window_7823"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket.",
    "position": 7824,
    "id": "window_7824"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link. </td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available.",
    "position": 7825,
    "id": "window_7825"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available. ##### File mode constants\n\nThe following constants are meant for use with the {fs.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available. ##### File mode constants\n\nThe following constants are meant for use with the {fs.",
    "position": 7826,
    "id": "window_7826"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available. ##### File mode constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining the access permissions for a file.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available. ##### File mode constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining the access permissions for a file.",
    "position": 7827,
    "id": "window_7827"
  },
  {
    "type": "window",
    "content": "##### File mode constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining the access permissions for a file. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner.",
    "originalSentence": "##### File mode constants\n\nThe following constants are meant for use with the {fs. Stats} object's\n`mode` property for determining the access permissions for a file. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner.",
    "position": 7828,
    "id": "window_7828"
  },
  {
    "type": "window",
    "content": "Stats} object's\n`mode` property for determining the access permissions for a file. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner.",
    "originalSentence": "Stats} object's\n`mode` property for determining the access permissions for a file. <table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner.",
    "position": 7829,
    "id": "window_7829"
  },
  {
    "type": "window",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner.",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner.",
    "position": 7830,
    "id": "window_7830"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner.",
    "position": 7831,
    "id": "window_7831"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group.",
    "position": 7832,
    "id": "window_7832"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group.",
    "position": 7833,
    "id": "window_7833"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group.",
    "position": 7834,
    "id": "window_7834"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group.",
    "position": 7835,
    "id": "window_7835"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others.",
    "position": 7836,
    "id": "window_7836"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group. </td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others.",
    "position": 7837,
    "id": "window_7837"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others.",
    "position": 7838,
    "id": "window_7838"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others.",
    "position": 7839,
    "id": "window_7839"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others. </td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available.",
    "position": 7840,
    "id": "window_7840"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available. ## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods.",
    "originalSentence": "</td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others. </td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available. ## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods.",
    "position": 7841,
    "id": "window_7841"
  },
  {
    "type": "window",
    "content": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available. ## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods. For example, the following is prone to error because the `fs.",
    "originalSentence": "</td>\n  </tr>\n</table>\n\nOn Windows, only `S_IRUSR` and `S_IWUSR` are available. ## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods. For example, the following is prone to error because the `fs.",
    "position": 7842,
    "id": "window_7842"
  },
  {
    "type": "window",
    "content": "## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods. For example, the following is prone to error because the `fs. stat()`\noperation might complete before the `fs.",
    "originalSentence": "## Notes\n\n### Ordering of callback and promise-based operations\n\nBecause they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods. For example, the following is prone to error because the `fs. stat()`\noperation might complete before the `fs.",
    "position": 7843,
    "id": "window_7843"
  },
  {
    "type": "window",
    "content": "For example, the following is prone to error because the `fs. stat()`\noperation might complete before the `fs. rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs.",
    "originalSentence": "For example, the following is prone to error because the `fs. stat()`\noperation might complete before the `fs. rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs.",
    "position": 7844,
    "id": "window_7844"
  },
  {
    "type": "window",
    "content": "stat()`\noperation might complete before the `fs. rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs. rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "stat()`\noperation might complete before the `fs. rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs. rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.",
    "position": 7845,
    "id": "window_7845"
  },
  {
    "type": "window",
    "content": "rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs. rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console. log('renamed complete');\n});\nfs.",
    "originalSentence": "rename()` operation:\n\n```js\nconst fs = require('node:fs');\n\nfs. rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console. log('renamed complete');\n});\nfs.",
    "position": 7846,
    "id": "window_7846"
  },
  {
    "type": "window",
    "content": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console. log('renamed complete');\n});\nfs. stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.",
    "originalSentence": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console. log('renamed complete');\n});\nfs. stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.",
    "position": 7847,
    "id": "window_7847"
  },
  {
    "type": "window",
    "content": "log('renamed complete');\n});\nfs. stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console. log(`stats: ${JSON.",
    "originalSentence": "log('renamed complete');\n});\nfs. stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console. log(`stats: ${JSON.",
    "position": 7848,
    "id": "window_7848"
  },
  {
    "type": "window",
    "content": "stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console. log(`stats: ${JSON. stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.",
    "originalSentence": "stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console. log(`stats: ${JSON. stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.",
    "position": 7849,
    "id": "window_7849"
  },
  {
    "type": "window",
    "content": "log(`stats: ${JSON. stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console. log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON. stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console. log(`stats: ${JSON.",
    "position": 7850,
    "id": "window_7850"
  },
  {
    "type": "window",
    "content": "stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console. log(`stats: ${JSON. stringify(stats)}`);\n} catch (error) {\n  console.",
    "originalSentence": "stringify(stats)}`);\n});\n```\n\nIt is important to correctly order the operations by awaiting the results\nof one before invoking the other:\n\n```mjs\nimport { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console. log(`stats: ${JSON. stringify(stats)}`);\n} catch (error) {\n  console.",
    "position": 7851,
    "id": "window_7851"
  },
  {
    "type": "window",
    "content": "log(`stats: ${JSON. stringify(stats)}`);\n} catch (error) {\n  console. error('there was an error:', error.",
    "originalSentence": "log(`stats: ${JSON. stringify(stats)}`);\n} catch (error) {\n  console. error('there was an error:', error.",
    "position": 7852,
    "id": "window_7852"
  },
  {
    "type": "window",
    "content": "stringify(stats)}`);\n} catch (error) {\n  console. error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.",
    "originalSentence": "stringify(stats)}`);\n} catch (error) {\n  console. error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.",
    "position": 7853,
    "id": "window_7853"
  },
  {
    "type": "window",
    "content": "error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console. log(`stats: ${JSON.",
    "originalSentence": "error('there was an error:', error. message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console. log(`stats: ${JSON.",
    "position": 7854,
    "id": "window_7854"
  },
  {
    "type": "window",
    "content": "message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console. log(`stats: ${JSON. stringify(stats)}`);\n  } catch (error) {\n    console.",
    "originalSentence": "message);\n}\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console. log(`stats: ${JSON. stringify(stats)}`);\n  } catch (error) {\n    console.",
    "position": 7855,
    "id": "window_7855"
  },
  {
    "type": "window",
    "content": "log(`stats: ${JSON. stringify(stats)}`);\n  } catch (error) {\n    console. error('there was an error:', error.",
    "originalSentence": "log(`stats: ${JSON. stringify(stats)}`);\n  } catch (error) {\n    console. error('there was an error:', error.",
    "position": 7856,
    "id": "window_7856"
  },
  {
    "type": "window",
    "content": "stringify(stats)}`);\n  } catch (error) {\n    console. error('there was an error:', error. message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs.",
    "originalSentence": "stringify(stats)}`);\n  } catch (error) {\n    console. error('there was an error:', error. message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs.",
    "position": 7857,
    "id": "window_7857"
  },
  {
    "type": "window",
    "content": "error('there was an error:', error. message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs. stat()` call into the callback\nof the `fs.",
    "originalSentence": "error('there was an error:', error. message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs. stat()` call into the callback\nof the `fs.",
    "position": 7858,
    "id": "window_7858"
  },
  {
    "type": "window",
    "content": "message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs. stat()` call into the callback\nof the `fs. rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "originalSentence": "message);\n  }\n})('/tmp/hello', '/tmp/world');\n```\n\nOr, when using the callback APIs, move the `fs. stat()` call into the callback\nof the `fs. rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "position": 7859,
    "id": "window_7859"
  },
  {
    "type": "window",
    "content": "stat()` call into the callback\nof the `fs. rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON.",
    "originalSentence": "stat()` call into the callback\nof the `fs. rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON.",
    "position": 7860,
    "id": "window_7860"
  },
  {
    "type": "window",
    "content": "rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "originalSentence": "rename()` operation:\n\n```mjs\nimport { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.",
    "position": 7861,
    "id": "window_7861"
  },
  {
    "type": "window",
    "content": "log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON.",
    "originalSentence": "log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON.",
    "position": 7862,
    "id": "window_7862"
  },
  {
    "type": "window",
    "content": "stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol.",
    "originalSentence": "stringify(stats)}`);\n  });\n});\n```\n\n```cjs\nconst { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console. log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol.",
    "position": 7863,
    "id": "window_7863"
  },
  {
    "type": "window",
    "content": "log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol. #### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename.",
    "originalSentence": "log(`stats: ${JSON. stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol. #### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename.",
    "position": 7864,
    "id": "window_7864"
  },
  {
    "type": "window",
    "content": "stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol. #### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename. Relative paths will be resolved relative\nto the current working directory as determined by calling `process.",
    "originalSentence": "stringify(stats)}`);\n  });\n});\n```\n\n### File paths\n\nMost `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol. #### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename. Relative paths will be resolved relative\nto the current working directory as determined by calling `process.",
    "position": 7865,
    "id": "window_7865"
  },
  {
    "type": "window",
    "content": "#### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename. Relative paths will be resolved relative\nto the current working directory as determined by calling `process. cwd()`.",
    "originalSentence": "#### String paths\n\nString paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename. Relative paths will be resolved relative\nto the current working directory as determined by calling `process. cwd()`.",
    "position": 7866,
    "id": "window_7866"
  },
  {
    "type": "window",
    "content": "Relative paths will be resolved relative\nto the current working directory as determined by calling `process. cwd()`. Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file.",
    "originalSentence": "Relative paths will be resolved relative\nto the current working directory as determined by calling `process. cwd()`. Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file.",
    "position": 7867,
    "id": "window_7867"
  },
  {
    "type": "window",
    "content": "cwd()`. Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "originalSentence": "cwd()`. Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "position": 7868,
    "id": "window_7868"
  },
  {
    "type": "window",
    "content": "Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process.",
    "originalSentence": "Example using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process.",
    "position": 7869,
    "id": "window_7869"
  },
  {
    "type": "window",
    "content": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process. cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file.",
    "originalSentence": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process. cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file.",
    "position": 7870,
    "id": "window_7870"
  },
  {
    "type": "window",
    "content": "close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process. cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "originalSentence": "close();\n}\n```\n\nExample using a relative path on POSIX (relative to `process. cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "position": 7871,
    "id": "window_7871"
  },
  {
    "type": "window",
    "content": "cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### File URL paths\n\n<!",
    "originalSentence": "cwd()`):\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file. txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### File URL paths\n\n<!",
    "position": 7872,
    "id": "window_7872"
  },
  {
    "type": "window",
    "content": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### File URL paths\n\n<! -- YAML\nadded: v7.",
    "originalSentence": "txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### File URL paths\n\n<! -- YAML\nadded: v7.",
    "position": 7873,
    "id": "window_7873"
  },
  {
    "type": "window",
    "content": "close();\n}\n```\n\n#### File URL paths\n\n<! -- YAML\nadded: v7. 6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol.",
    "originalSentence": "close();\n}\n```\n\n#### File URL paths\n\n<! -- YAML\nadded: v7. 6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol.",
    "position": 7874,
    "id": "window_7874"
  },
  {
    "type": "window",
    "content": "-- YAML\nadded: v7. 6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol. ```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths.",
    "originalSentence": "-- YAML\nadded: v7. 6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol. ```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths.",
    "position": 7875,
    "id": "window_7875"
  },
  {
    "type": "window",
    "content": "6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol. ```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths. ##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths.",
    "originalSentence": "6.0\n-->\n\nFor most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol. ```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths. ##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths.",
    "position": 7876,
    "id": "window_7876"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths. ##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths. `file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter.",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\n`file:` URLs are always absolute paths. ##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths. `file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter.",
    "position": 7877,
    "id": "window_7877"
  },
  {
    "type": "window",
    "content": "##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths. `file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter. Using another separator will result in an error.",
    "originalSentence": "##### Platform-specific considerations\n\nOn Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths. `file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter. Using another separator will result in an error.",
    "position": 7878,
    "id": "window_7878"
  },
  {
    "type": "window",
    "content": "`file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter. Using another separator will result in an error. On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!",
    "originalSentence": "`file:` {URL}s\nwith no host name and no drive letter will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```\n\n`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter. Using another separator will result in an error. On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!",
    "position": 7879,
    "id": "window_7879"
  },
  {
    "type": "window",
    "content": "Using another separator will result in an error. On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw! readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences.",
    "originalSentence": "Using another separator will result in an error. On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw! readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences.",
    "position": 7880,
    "id": "window_7880"
  },
  {
    "type": "window",
    "content": "On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw! readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences. On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings.",
    "originalSentence": "On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw! readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences. On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings.",
    "position": 7881,
    "id": "window_7881"
  },
  {
    "type": "window",
    "content": "readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences. On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings. As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer.",
    "originalSentence": "readFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```\n\nA `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```\n\nOn Windows, `file:` {URL}s having encoded backslash will result in an error:\n\n```mjs\nimport { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```\n\n#### Buffer paths\n\nPaths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences. On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings. As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer.",
    "position": 7882,
    "id": "window_7882"
  },
  {
    "type": "window",
    "content": "On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings. As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer. from('/open/some/file.",
    "originalSentence": "On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings. As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer. from('/open/some/file.",
    "position": 7883,
    "id": "window_7883"
  },
  {
    "type": "window",
    "content": "As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer. from('/open/some/file. txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "originalSentence": "As with string paths, {Buffer} paths may\nbe relative or absolute:\n\nExample using an absolute path on POSIX:\n\n```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer. from('/open/some/file. txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.",
    "position": 7884,
    "id": "window_7884"
  },
  {
    "type": "window",
    "content": "from('/open/some/file. txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node.",
    "originalSentence": "from('/open/some/file. txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node.",
    "position": 7885,
    "id": "window_7885"
  },
  {
    "type": "window",
    "content": "txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node. js follows the concept of per-drive working directory.",
    "originalSentence": "txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?. close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node. js follows the concept of per-drive working directory.",
    "position": 7886,
    "id": "window_7886"
  },
  {
    "type": "window",
    "content": "close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node. js follows the concept of per-drive working directory. This\nbehavior can be observed when using a drive path without a backslash.",
    "originalSentence": "close();\n}\n```\n\n#### Per-drive working directories on Windows\n\nOn Windows, Node. js follows the concept of per-drive working directory. This\nbehavior can be observed when using a drive path without a backslash.",
    "position": 7887,
    "id": "window_7887"
  },
  {
    "type": "window",
    "content": "js follows the concept of per-drive working directory. This\nbehavior can be observed when using a drive path without a backslash. For\nexample `fs.",
    "originalSentence": "js follows the concept of per-drive working directory. This\nbehavior can be observed when using a drive path without a backslash. For\nexample `fs.",
    "position": 7888,
    "id": "window_7888"
  },
  {
    "type": "window",
    "content": "This\nbehavior can be observed when using a drive path without a backslash. For\nexample `fs. readdirSync('C:\\\\')` can potentially return a different result than\n`fs.",
    "originalSentence": "This\nbehavior can be observed when using a drive path without a backslash. For\nexample `fs. readdirSync('C:\\\\')` can potentially return a different result than\n`fs.",
    "position": 7889,
    "id": "window_7889"
  },
  {
    "type": "window",
    "content": "For\nexample `fs. readdirSync('C:\\\\')` can potentially return a different result than\n`fs. readdirSync('C:')`.",
    "originalSentence": "For\nexample `fs. readdirSync('C:\\\\')` can potentially return a different result than\n`fs. readdirSync('C:')`.",
    "position": 7890,
    "id": "window_7890"
  },
  {
    "type": "window",
    "content": "readdirSync('C:\\\\')` can potentially return a different result than\n`fs. readdirSync('C:')`. For more information, see\n[this MSDN page][MSDN-Rel-Path].",
    "originalSentence": "readdirSync('C:\\\\')` can potentially return a different result than\n`fs. readdirSync('C:')`. For more information, see\n[this MSDN page][MSDN-Rel-Path].",
    "position": 7891,
    "id": "window_7891"
  },
  {
    "type": "window",
    "content": "readdirSync('C:')`. For more information, see\n[this MSDN page][MSDN-Rel-Path]. ### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources.",
    "originalSentence": "readdirSync('C:')`. For more information, see\n[this MSDN page][MSDN-Rel-Path]. ### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources.",
    "position": 7892,
    "id": "window_7892"
  },
  {
    "type": "window",
    "content": "For more information, see\n[this MSDN page][MSDN-Rel-Path]. ### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources. Each open file is assigned a simple numeric\nidentifier called a _file descriptor_.",
    "originalSentence": "For more information, see\n[this MSDN page][MSDN-Rel-Path]. ### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources. Each open file is assigned a simple numeric\nidentifier called a _file descriptor_.",
    "position": 7893,
    "id": "window_7893"
  },
  {
    "type": "window",
    "content": "### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources. Each open file is assigned a simple numeric\nidentifier called a _file descriptor_. At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile.",
    "originalSentence": "### File descriptors\n\nOn POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources. Each open file is assigned a simple numeric\nidentifier called a _file descriptor_. At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile.",
    "position": 7894,
    "id": "window_7894"
  },
  {
    "type": "window",
    "content": "Each open file is assigned a simple numeric\nidentifier called a _file descriptor_. At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile. Windows systems use a different but conceptually similar mechanism for\ntracking resources.",
    "originalSentence": "Each open file is assigned a simple numeric\nidentifier called a _file descriptor_. At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile. Windows systems use a different but conceptually similar mechanism for\ntracking resources.",
    "position": 7895,
    "id": "window_7895"
  },
  {
    "type": "window",
    "content": "At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile. Windows systems use a different but conceptually similar mechanism for\ntracking resources. To simplify things for users, Node.",
    "originalSentence": "At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile. Windows systems use a different but conceptually similar mechanism for\ntracking resources. To simplify things for users, Node.",
    "position": 7896,
    "id": "window_7896"
  },
  {
    "type": "window",
    "content": "Windows systems use a different but conceptually similar mechanism for\ntracking resources. To simplify things for users, Node. js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor.",
    "originalSentence": "Windows systems use a different but conceptually similar mechanism for\ntracking resources. To simplify things for users, Node. js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor.",
    "position": 7897,
    "id": "window_7897"
  },
  {
    "type": "window",
    "content": "To simplify things for users, Node. js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor. The callback-based `fs.",
    "originalSentence": "To simplify things for users, Node. js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor. The callback-based `fs.",
    "position": 7898,
    "id": "window_7898"
  },
  {
    "type": "window",
    "content": "js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor. The callback-based `fs. open()`, and synchronous `fs.",
    "originalSentence": "js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor. The callback-based `fs. open()`, and synchronous `fs.",
    "position": 7899,
    "id": "window_7899"
  },
  {
    "type": "window",
    "content": "The callback-based `fs. open()`, and synchronous `fs. openSync()` methods open a\nfile and allocate a new file descriptor.",
    "originalSentence": "The callback-based `fs. open()`, and synchronous `fs. openSync()` methods open a\nfile and allocate a new file descriptor.",
    "position": 7900,
    "id": "window_7900"
  },
  {
    "type": "window",
    "content": "open()`, and synchronous `fs. openSync()` methods open a\nfile and allocate a new file descriptor. Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file.",
    "originalSentence": "open()`, and synchronous `fs. openSync()` methods open a\nfile and allocate a new file descriptor. Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file.",
    "position": 7901,
    "id": "window_7901"
  },
  {
    "type": "window",
    "content": "openSync()` methods open a\nfile and allocate a new file descriptor. Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file. Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed.",
    "originalSentence": "openSync()` methods open a\nfile and allocate a new file descriptor. Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file. Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed.",
    "position": 7902,
    "id": "window_7902"
  },
  {
    "type": "window",
    "content": "Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file. Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed. Failure to do so will result in a memory leak that will\neventually cause an application to crash.",
    "originalSentence": "Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file. Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed. Failure to do so will result in a memory leak that will\neventually cause an application to crash.",
    "position": 7903,
    "id": "window_7903"
  },
  {
    "type": "window",
    "content": "Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed. Failure to do so will result in a memory leak that will\neventually cause an application to crash. ```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file.",
    "originalSentence": "Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed. Failure to do so will result in a memory leak that will\neventually cause an application to crash. ```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file.",
    "position": 7904,
    "id": "window_7904"
  },
  {
    "type": "window",
    "content": "Failure to do so will result in a memory leak that will\neventually cause an application to crash. ```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file. txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor.",
    "originalSentence": "Failure to do so will result in a memory leak that will\neventually cause an application to crash. ```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file. txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor.",
    "position": 7905,
    "id": "window_7905"
  },
  {
    "type": "window",
    "content": "```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file. txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor. These objects are better managed by the system to ensure\nthat resources are not leaked.",
    "originalSentence": "```mjs\nimport { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file. txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor. These objects are better managed by the system to ensure\nthat resources are not leaked.",
    "position": 7906,
    "id": "window_7906"
  },
  {
    "type": "window",
    "content": "txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor. These objects are better managed by the system to ensure\nthat resources are not leaked. However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file.",
    "originalSentence": "txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```\n\nThe promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor. These objects are better managed by the system to ensure\nthat resources are not leaked. However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file.",
    "position": 7907,
    "id": "window_7907"
  },
  {
    "type": "window",
    "content": "These objects are better managed by the system to ensure\nthat resources are not leaked. However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file. txt', 'r');\n  const stat = await file.",
    "originalSentence": "These objects are better managed by the system to ensure\nthat resources are not leaked. However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file. txt', 'r');\n  const stat = await file.",
    "position": 7908,
    "id": "window_7908"
  },
  {
    "type": "window",
    "content": "However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file. txt', 'r');\n  const stat = await file. stat();\n  // use stat\n} finally {\n  await file.",
    "originalSentence": "However, it is still required that they are\nclosed when operations are completed:\n\n```mjs\nimport { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file. txt', 'r');\n  const stat = await file. stat();\n  // use stat\n} finally {\n  await file.",
    "position": 7909,
    "id": "window_7909"
  },
  {
    "type": "window",
    "content": "txt', 'r');\n  const stat = await file. stat();\n  // use stat\n} finally {\n  await file. close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs.",
    "originalSentence": "txt', 'r');\n  const stat = await file. stat();\n  // use stat\n} finally {\n  await file. close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs.",
    "position": 7910,
    "id": "window_7910"
  },
  {
    "type": "window",
    "content": "stat();\n  // use stat\n} finally {\n  await file. close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs. FSWatcher()`) use libuv's threadpool.",
    "originalSentence": "stat();\n  // use stat\n} finally {\n  await file. close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs. FSWatcher()`) use libuv's threadpool.",
    "position": 7911,
    "id": "window_7911"
  },
  {
    "type": "window",
    "content": "close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs. FSWatcher()`) use libuv's threadpool. This can have surprising and negative\nperformance implications for some applications.",
    "originalSentence": "close();\n}\n```\n\n### Threadpool usage\n\nAll callback and promise-based file system APIs (with the exception of\n`fs. FSWatcher()`) use libuv's threadpool. This can have surprising and negative\nperformance implications for some applications.",
    "position": 7912,
    "id": "window_7912"
  },
  {
    "type": "window",
    "content": "FSWatcher()`) use libuv's threadpool. This can have surprising and negative\nperformance implications for some applications. See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information.",
    "originalSentence": "FSWatcher()`) use libuv's threadpool. This can have surprising and negative\nperformance implications for some applications. See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information.",
    "position": 7913,
    "id": "window_7913"
  },
  {
    "type": "window",
    "content": "This can have surprising and negative\nperformance implications for some applications. See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information. ### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring.",
    "originalSentence": "This can have surprising and negative\nperformance implications for some applications. See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information. ### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring.",
    "position": 7914,
    "id": "window_7914"
  },
  {
    "type": "window",
    "content": "See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information. ### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring. * `'a'`: Open file for appending.",
    "originalSentence": "See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information. ### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring. * `'a'`: Open file for appending.",
    "position": 7915,
    "id": "window_7915"
  },
  {
    "type": "window",
    "content": "### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring. * `'a'`: Open file for appending. The file is created if it does not exist.",
    "originalSentence": "### File system flags\n\nThe following flags are available wherever the `flag` option takes a\nstring. * `'a'`: Open file for appending. The file is created if it does not exist.",
    "position": 7916,
    "id": "window_7916"
  },
  {
    "type": "window",
    "content": "* `'a'`: Open file for appending. The file is created if it does not exist. * `'ax'`: Like `'a'` but fails if the path exists.",
    "originalSentence": "* `'a'`: Open file for appending. The file is created if it does not exist. * `'ax'`: Like `'a'` but fails if the path exists.",
    "position": 7917,
    "id": "window_7917"
  },
  {
    "type": "window",
    "content": "The file is created if it does not exist. * `'ax'`: Like `'a'` but fails if the path exists. * `'a+'`: Open file for reading and appending.",
    "originalSentence": "The file is created if it does not exist. * `'ax'`: Like `'a'` but fails if the path exists. * `'a+'`: Open file for reading and appending.",
    "position": 7918,
    "id": "window_7918"
  },
  {
    "type": "window",
    "content": "* `'ax'`: Like `'a'` but fails if the path exists. * `'a+'`: Open file for reading and appending. The file is created if it does not exist.",
    "originalSentence": "* `'ax'`: Like `'a'` but fails if the path exists. * `'a+'`: Open file for reading and appending. The file is created if it does not exist.",
    "position": 7919,
    "id": "window_7919"
  },
  {
    "type": "window",
    "content": "* `'a+'`: Open file for reading and appending. The file is created if it does not exist. * `'ax+'`: Like `'a+'` but fails if the path exists.",
    "originalSentence": "* `'a+'`: Open file for reading and appending. The file is created if it does not exist. * `'ax+'`: Like `'a+'` but fails if the path exists.",
    "position": 7920,
    "id": "window_7920"
  },
  {
    "type": "window",
    "content": "The file is created if it does not exist. * `'ax+'`: Like `'a+'` but fails if the path exists. * `'as'`: Open file for appending in synchronous mode.",
    "originalSentence": "The file is created if it does not exist. * `'ax+'`: Like `'a+'` but fails if the path exists. * `'as'`: Open file for appending in synchronous mode.",
    "position": 7921,
    "id": "window_7921"
  },
  {
    "type": "window",
    "content": "* `'ax+'`: Like `'a+'` but fails if the path exists. * `'as'`: Open file for appending in synchronous mode. The file is created if it does not exist.",
    "originalSentence": "* `'ax+'`: Like `'a+'` but fails if the path exists. * `'as'`: Open file for appending in synchronous mode. The file is created if it does not exist.",
    "position": 7922,
    "id": "window_7922"
  },
  {
    "type": "window",
    "content": "* `'as'`: Open file for appending in synchronous mode. The file is created if it does not exist. * `'as+'`: Open file for reading and appending in synchronous mode.",
    "originalSentence": "* `'as'`: Open file for appending in synchronous mode. The file is created if it does not exist. * `'as+'`: Open file for reading and appending in synchronous mode.",
    "position": 7923,
    "id": "window_7923"
  },
  {
    "type": "window",
    "content": "The file is created if it does not exist. * `'as+'`: Open file for reading and appending in synchronous mode. The file is created if it does not exist.",
    "originalSentence": "The file is created if it does not exist. * `'as+'`: Open file for reading and appending in synchronous mode. The file is created if it does not exist.",
    "position": 7924,
    "id": "window_7924"
  },
  {
    "type": "window",
    "content": "* `'as+'`: Open file for reading and appending in synchronous mode. The file is created if it does not exist. * `'r'`: Open file for reading.",
    "originalSentence": "* `'as+'`: Open file for reading and appending in synchronous mode. The file is created if it does not exist. * `'r'`: Open file for reading.",
    "position": 7925,
    "id": "window_7925"
  },
  {
    "type": "window",
    "content": "The file is created if it does not exist. * `'r'`: Open file for reading. An exception occurs if the file does not exist.",
    "originalSentence": "The file is created if it does not exist. * `'r'`: Open file for reading. An exception occurs if the file does not exist.",
    "position": 7926,
    "id": "window_7926"
  },
  {
    "type": "window",
    "content": "* `'r'`: Open file for reading. An exception occurs if the file does not exist. * `'rs'`: Open file for reading in synchronous mode.",
    "originalSentence": "* `'r'`: Open file for reading. An exception occurs if the file does not exist. * `'rs'`: Open file for reading in synchronous mode.",
    "position": 7927,
    "id": "window_7927"
  },
  {
    "type": "window",
    "content": "An exception occurs if the file does not exist. * `'rs'`: Open file for reading in synchronous mode. An exception occurs if the file does not exist.",
    "originalSentence": "An exception occurs if the file does not exist. * `'rs'`: Open file for reading in synchronous mode. An exception occurs if the file does not exist.",
    "position": 7928,
    "id": "window_7928"
  },
  {
    "type": "window",
    "content": "* `'rs'`: Open file for reading in synchronous mode. An exception occurs if the file does not exist. * `'r+'`: Open file for reading and writing.",
    "originalSentence": "* `'rs'`: Open file for reading in synchronous mode. An exception occurs if the file does not exist. * `'r+'`: Open file for reading and writing.",
    "position": 7929,
    "id": "window_7929"
  },
  {
    "type": "window",
    "content": "An exception occurs if the file does not exist. * `'r+'`: Open file for reading and writing. An exception occurs if the file does not exist.",
    "originalSentence": "An exception occurs if the file does not exist. * `'r+'`: Open file for reading and writing. An exception occurs if the file does not exist.",
    "position": 7930,
    "id": "window_7930"
  },
  {
    "type": "window",
    "content": "* `'r+'`: Open file for reading and writing. An exception occurs if the file does not exist. * `'rs+'`: Open file for reading and writing in synchronous mode.",
    "originalSentence": "* `'r+'`: Open file for reading and writing. An exception occurs if the file does not exist. * `'rs+'`: Open file for reading and writing in synchronous mode.",
    "position": 7931,
    "id": "window_7931"
  },
  {
    "type": "window",
    "content": "An exception occurs if the file does not exist. * `'rs+'`: Open file for reading and writing in synchronous mode. Instructs\n  the operating system to bypass the local file system cache.",
    "originalSentence": "An exception occurs if the file does not exist. * `'rs+'`: Open file for reading and writing in synchronous mode. Instructs\n  the operating system to bypass the local file system cache.",
    "position": 7932,
    "id": "window_7932"
  },
  {
    "type": "window",
    "content": "* `'rs+'`: Open file for reading and writing in synchronous mode. Instructs\n  the operating system to bypass the local file system cache. This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache.",
    "originalSentence": "* `'rs+'`: Open file for reading and writing in synchronous mode. Instructs\n  the operating system to bypass the local file system cache. This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache.",
    "position": 7933,
    "id": "window_7933"
  },
  {
    "type": "window",
    "content": "Instructs\n  the operating system to bypass the local file system cache. This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache. It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed.",
    "originalSentence": "Instructs\n  the operating system to bypass the local file system cache. This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache. It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed.",
    "position": 7934,
    "id": "window_7934"
  },
  {
    "type": "window",
    "content": "This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache. It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed. This doesn't turn `fs.",
    "originalSentence": "This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache. It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed. This doesn't turn `fs.",
    "position": 7935,
    "id": "window_7935"
  },
  {
    "type": "window",
    "content": "It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed. This doesn't turn `fs. open()` or `fsPromises.",
    "originalSentence": "It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed. This doesn't turn `fs. open()` or `fsPromises.",
    "position": 7936,
    "id": "window_7936"
  },
  {
    "type": "window",
    "content": "This doesn't turn `fs. open()` or `fsPromises. open()` into a synchronous\n  blocking call.",
    "originalSentence": "This doesn't turn `fs. open()` or `fsPromises. open()` into a synchronous\n  blocking call.",
    "position": 7937,
    "id": "window_7937"
  },
  {
    "type": "window",
    "content": "open()` or `fsPromises. open()` into a synchronous\n  blocking call. If synchronous operation is desired, something like\n  `fs.",
    "originalSentence": "open()` or `fsPromises. open()` into a synchronous\n  blocking call. If synchronous operation is desired, something like\n  `fs.",
    "position": 7938,
    "id": "window_7938"
  },
  {
    "type": "window",
    "content": "open()` into a synchronous\n  blocking call. If synchronous operation is desired, something like\n  `fs. openSync()` should be used.",
    "originalSentence": "open()` into a synchronous\n  blocking call. If synchronous operation is desired, something like\n  `fs. openSync()` should be used.",
    "position": 7939,
    "id": "window_7939"
  },
  {
    "type": "window",
    "content": "If synchronous operation is desired, something like\n  `fs. openSync()` should be used. * `'w'`: Open file for writing.",
    "originalSentence": "If synchronous operation is desired, something like\n  `fs. openSync()` should be used. * `'w'`: Open file for writing.",
    "position": 7940,
    "id": "window_7940"
  },
  {
    "type": "window",
    "content": "openSync()` should be used. * `'w'`: Open file for writing. The file is created (if it does not exist) or truncated (if it exists).",
    "originalSentence": "openSync()` should be used. * `'w'`: Open file for writing. The file is created (if it does not exist) or truncated (if it exists).",
    "position": 7941,
    "id": "window_7941"
  },
  {
    "type": "window",
    "content": "* `'w'`: Open file for writing. The file is created (if it does not exist) or truncated (if it exists). * `'wx'`: Like `'w'` but fails if the path exists.",
    "originalSentence": "* `'w'`: Open file for writing. The file is created (if it does not exist) or truncated (if it exists). * `'wx'`: Like `'w'` but fails if the path exists.",
    "position": 7942,
    "id": "window_7942"
  },
  {
    "type": "window",
    "content": "The file is created (if it does not exist) or truncated (if it exists). * `'wx'`: Like `'w'` but fails if the path exists. * `'w+'`: Open file for reading and writing.",
    "originalSentence": "The file is created (if it does not exist) or truncated (if it exists). * `'wx'`: Like `'w'` but fails if the path exists. * `'w+'`: Open file for reading and writing.",
    "position": 7943,
    "id": "window_7943"
  },
  {
    "type": "window",
    "content": "* `'wx'`: Like `'w'` but fails if the path exists. * `'w+'`: Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).",
    "originalSentence": "* `'wx'`: Like `'w'` but fails if the path exists. * `'w+'`: Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).",
    "position": 7944,
    "id": "window_7944"
  },
  {
    "type": "window",
    "content": "* `'w+'`: Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists). * `'wx+'`: Like `'w+'` but fails if the path exists.",
    "originalSentence": "* `'w+'`: Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists). * `'wx+'`: Like `'w+'` but fails if the path exists.",
    "position": 7945,
    "id": "window_7945"
  },
  {
    "type": "window",
    "content": "The file is created (if it does not exist) or truncated (if it exists). * `'wx+'`: Like `'w+'` but fails if the path exists. `flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs.",
    "originalSentence": "The file is created (if it does not exist) or truncated (if it exists). * `'wx+'`: Like `'w+'` but fails if the path exists. `flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs.",
    "position": 7946,
    "id": "window_7946"
  },
  {
    "type": "window",
    "content": "* `'wx+'`: Like `'w+'` but fails if the path exists. `flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs. constants`.",
    "originalSentence": "* `'wx+'`: Like `'w+'` but fails if the path exists. `flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs. constants`.",
    "position": 7947,
    "id": "window_7947"
  },
  {
    "type": "window",
    "content": "`flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs. constants`. On Windows, flags are translated to\ntheir equivalent ones where applicable, e.",
    "originalSentence": "`flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs. constants`. On Windows, flags are translated to\ntheir equivalent ones where applicable, e.",
    "position": 7948,
    "id": "window_7948"
  },
  {
    "type": "window",
    "content": "constants`. On Windows, flags are translated to\ntheir equivalent ones where applicable, e. g.",
    "originalSentence": "constants`. On Windows, flags are translated to\ntheir equivalent ones where applicable, e. g.",
    "position": 7949,
    "id": "window_7949"
  },
  {
    "type": "window",
    "content": "On Windows, flags are translated to\ntheir equivalent ones where applicable, e. g. `O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`.",
    "originalSentence": "On Windows, flags are translated to\ntheir equivalent ones where applicable, e. g. `O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`.",
    "position": 7950,
    "id": "window_7950"
  },
  {
    "type": "window",
    "content": "g. `O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`. The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists.",
    "originalSentence": "g. `O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`. The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists.",
    "position": 7951,
    "id": "window_7951"
  },
  {
    "type": "window",
    "content": "`O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`. The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists. On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist.",
    "originalSentence": "`O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`. The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists. On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist.",
    "position": 7952,
    "id": "window_7952"
  },
  {
    "type": "window",
    "content": "The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists. On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist. The exclusive flag might not work with network file systems.",
    "originalSentence": "The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists. On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist. The exclusive flag might not work with network file systems.",
    "position": 7953,
    "id": "window_7953"
  },
  {
    "type": "window",
    "content": "On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist. The exclusive flag might not work with network file systems. On Linux, positional writes don't work when the file is opened in append mode.",
    "originalSentence": "On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist. The exclusive flag might not work with network file systems. On Linux, positional writes don't work when the file is opened in append mode.",
    "position": 7954,
    "id": "window_7954"
  },
  {
    "type": "window",
    "content": "The exclusive flag might not work with network file systems. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "The exclusive flag might not work with network file systems. On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 7955,
    "id": "window_7955"
  },
  {
    "type": "window",
    "content": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode. The kernel ignores the position argument and always appends the data to\nthe end of the file. Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`.",
    "position": 7956,
    "id": "window_7956"
  },
  {
    "type": "window",
    "content": "The kernel ignores the position argument and always appends the data to\nthe end of the file. Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`. The behavior of some flags are platform-specific.",
    "originalSentence": "The kernel ignores the position argument and always appends the data to\nthe end of the file. Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`. The behavior of some flags are platform-specific.",
    "position": 7957,
    "id": "window_7957"
  },
  {
    "type": "window",
    "content": "Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`. The behavior of some flags are platform-specific. As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror.",
    "originalSentence": "Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`. The behavior of some flags are platform-specific. As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror.",
    "position": 7958,
    "id": "window_7958"
  },
  {
    "type": "window",
    "content": "The behavior of some flags are platform-specific. As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror. In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned.",
    "originalSentence": "The behavior of some flags are platform-specific. As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror. In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned.",
    "position": 7959,
    "id": "window_7959"
  },
  {
    "type": "window",
    "content": "As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror. In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned. ```js\n// macOS and Linux\nfs.",
    "originalSentence": "As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror. In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned. ```js\n// macOS and Linux\nfs.",
    "position": 7960,
    "id": "window_7960"
  },
  {
    "type": "window",
    "content": "In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned. ```js\n// macOS and Linux\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs.",
    "originalSentence": "In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned. ```js\n// macOS and Linux\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs.",
    "position": 7961,
    "id": "window_7961"
  },
  {
    "type": "window",
    "content": "```js\n// macOS and Linux\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs.",
    "originalSentence": "```js\n// macOS and Linux\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs.",
    "position": 7962,
    "id": "window_7962"
  },
  {
    "type": "window",
    "content": "open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs. open()`, `fs.",
    "originalSentence": "open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs. open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs. open()`, `fs.",
    "position": 7963,
    "id": "window_7963"
  },
  {
    "type": "window",
    "content": "open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs. open()`, `fs. writeFile()`, or `fsPromises.",
    "originalSentence": "open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```\n\nOn Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs. open()`, `fs. writeFile()`, or `fsPromises.",
    "position": 7964,
    "id": "window_7964"
  },
  {
    "type": "window",
    "content": "open()`, `fs. writeFile()`, or `fsPromises. open()`) will fail with\n`EPERM`.",
    "originalSentence": "open()`, `fs. writeFile()`, or `fsPromises. open()`) will fail with\n`EPERM`.",
    "position": 7965,
    "id": "window_7965"
  },
  {
    "type": "window",
    "content": "writeFile()`, or `fsPromises. open()`) will fail with\n`EPERM`. Existing hidden files can be opened for writing with the `'r+'` flag.",
    "originalSentence": "writeFile()`, or `fsPromises. open()`) will fail with\n`EPERM`. Existing hidden files can be opened for writing with the `'r+'` flag.",
    "position": 7966,
    "id": "window_7966"
  },
  {
    "type": "window",
    "content": "open()`) will fail with\n`EPERM`. Existing hidden files can be opened for writing with the `'r+'` flag. A call to `fs.",
    "originalSentence": "open()`) will fail with\n`EPERM`. Existing hidden files can be opened for writing with the `'r+'` flag. A call to `fs.",
    "position": 7967,
    "id": "window_7967"
  },
  {
    "type": "window",
    "content": "Existing hidden files can be opened for writing with the `'r+'` flag. A call to `fs. ftruncate()` or `filehandle.",
    "originalSentence": "Existing hidden files can be opened for writing with the `'r+'` flag. A call to `fs. ftruncate()` or `filehandle.",
    "position": 7968,
    "id": "window_7968"
  },
  {
    "type": "window",
    "content": "A call to `fs. ftruncate()` or `filehandle. truncate()` can be used to reset\nthe file contents.",
    "originalSentence": "A call to `fs. ftruncate()` or `filehandle. truncate()` can be used to reset\nthe file contents.",
    "position": 7969,
    "id": "window_7969"
  },
  {
    "type": "window",
    "content": "ftruncate()` or `filehandle. truncate()` can be used to reset\nthe file contents. [#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors.",
    "originalSentence": "ftruncate()` or `filehandle. truncate()` can be used to reset\nthe file contents. [#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors.",
    "position": 7970,
    "id": "window_7970"
  },
  {
    "type": "window",
    "content": "truncate()` can be used to reset\nthe file contents. [#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors. md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer.",
    "originalSentence": "truncate()` can be used to reset\nthe file contents. [#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors. md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer.",
    "position": 7971,
    "id": "window_7971"
  },
  {
    "type": "window",
    "content": "[#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors. md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer. byteLength`]: buffer.",
    "originalSentence": "[#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors. md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer. byteLength`]: buffer.",
    "position": 7972,
    "id": "window_7972"
  },
  {
    "type": "window",
    "content": "md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer. byteLength`]: buffer. md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number.",
    "originalSentence": "md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer. byteLength`]: buffer. md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number.",
    "position": 7973,
    "id": "window_7973"
  },
  {
    "type": "window",
    "content": "byteLength`]: buffer. md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number. MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli.",
    "originalSentence": "byteLength`]: buffer. md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number. MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli.",
    "position": 7974,
    "id": "window_7974"
  },
  {
    "type": "window",
    "content": "md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number. MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli. md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle.",
    "originalSentence": "md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number. MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli. md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle.",
    "position": 7975,
    "id": "window_7975"
  },
  {
    "type": "window",
    "content": "MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli. md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle. createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle.",
    "originalSentence": "MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli. md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle. createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle.",
    "position": 7976,
    "id": "window_7976"
  },
  {
    "type": "window",
    "content": "md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle. createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle. createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle.",
    "originalSentence": "md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle. createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle. createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle.",
    "position": 7977,
    "id": "window_7977"
  },
  {
    "type": "window",
    "content": "createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle. createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle. writeFile()`]: #filehandlewritefiledata-options\n[`fs.",
    "originalSentence": "createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle. createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle. writeFile()`]: #filehandlewritefiledata-options\n[`fs.",
    "position": 7978,
    "id": "window_7978"
  },
  {
    "type": "window",
    "content": "createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle. writeFile()`]: #filehandlewritefiledata-options\n[`fs. access()`]: #fsaccesspath-mode-callback\n[`fs.",
    "originalSentence": "createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle. writeFile()`]: #filehandlewritefiledata-options\n[`fs. access()`]: #fsaccesspath-mode-callback\n[`fs.",
    "position": 7979,
    "id": "window_7979"
  },
  {
    "type": "window",
    "content": "writeFile()`]: #filehandlewritefiledata-options\n[`fs. access()`]: #fsaccesspath-mode-callback\n[`fs. accessSync()`]: #fsaccesssyncpath-mode\n[`fs.",
    "originalSentence": "writeFile()`]: #filehandlewritefiledata-options\n[`fs. access()`]: #fsaccesspath-mode-callback\n[`fs. accessSync()`]: #fsaccesssyncpath-mode\n[`fs.",
    "position": 7980,
    "id": "window_7980"
  },
  {
    "type": "window",
    "content": "access()`]: #fsaccesspath-mode-callback\n[`fs. accessSync()`]: #fsaccesssyncpath-mode\n[`fs. chmod()`]: #fschmodpath-mode-callback\n[`fs.",
    "originalSentence": "access()`]: #fsaccesspath-mode-callback\n[`fs. accessSync()`]: #fsaccesssyncpath-mode\n[`fs. chmod()`]: #fschmodpath-mode-callback\n[`fs.",
    "position": 7981,
    "id": "window_7981"
  },
  {
    "type": "window",
    "content": "accessSync()`]: #fsaccesssyncpath-mode\n[`fs. chmod()`]: #fschmodpath-mode-callback\n[`fs. chown()`]: #fschownpath-uid-gid-callback\n[`fs.",
    "originalSentence": "accessSync()`]: #fsaccesssyncpath-mode\n[`fs. chmod()`]: #fschmodpath-mode-callback\n[`fs. chown()`]: #fschownpath-uid-gid-callback\n[`fs.",
    "position": 7982,
    "id": "window_7982"
  },
  {
    "type": "window",
    "content": "chmod()`]: #fschmodpath-mode-callback\n[`fs. chown()`]: #fschownpath-uid-gid-callback\n[`fs. copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs.",
    "originalSentence": "chmod()`]: #fschmodpath-mode-callback\n[`fs. chown()`]: #fschownpath-uid-gid-callback\n[`fs. copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs.",
    "position": 7983,
    "id": "window_7983"
  },
  {
    "type": "window",
    "content": "chown()`]: #fschownpath-uid-gid-callback\n[`fs. copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs. copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs.",
    "originalSentence": "chown()`]: #fschownpath-uid-gid-callback\n[`fs. copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs. copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs.",
    "position": 7984,
    "id": "window_7984"
  },
  {
    "type": "window",
    "content": "copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs. copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs. createReadStream()`]: #fscreatereadstreampath-options\n[`fs.",
    "originalSentence": "copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs. copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs. createReadStream()`]: #fscreatereadstreampath-options\n[`fs.",
    "position": 7985,
    "id": "window_7985"
  },
  {
    "type": "window",
    "content": "copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs. createReadStream()`]: #fscreatereadstreampath-options\n[`fs. createWriteStream()`]: #fscreatewritestreampath-options\n[`fs.",
    "originalSentence": "copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs. createReadStream()`]: #fscreatereadstreampath-options\n[`fs. createWriteStream()`]: #fscreatewritestreampath-options\n[`fs.",
    "position": 7986,
    "id": "window_7986"
  },
  {
    "type": "window",
    "content": "createReadStream()`]: #fscreatereadstreampath-options\n[`fs. createWriteStream()`]: #fscreatewritestreampath-options\n[`fs. exists()`]: #fsexistspath-callback\n[`fs.",
    "originalSentence": "createReadStream()`]: #fscreatereadstreampath-options\n[`fs. createWriteStream()`]: #fscreatewritestreampath-options\n[`fs. exists()`]: #fsexistspath-callback\n[`fs.",
    "position": 7987,
    "id": "window_7987"
  },
  {
    "type": "window",
    "content": "createWriteStream()`]: #fscreatewritestreampath-options\n[`fs. exists()`]: #fsexistspath-callback\n[`fs. fstat()`]: #fsfstatfd-options-callback\n[`fs.",
    "originalSentence": "createWriteStream()`]: #fscreatewritestreampath-options\n[`fs. exists()`]: #fsexistspath-callback\n[`fs. fstat()`]: #fsfstatfd-options-callback\n[`fs.",
    "position": 7988,
    "id": "window_7988"
  },
  {
    "type": "window",
    "content": "exists()`]: #fsexistspath-callback\n[`fs. fstat()`]: #fsfstatfd-options-callback\n[`fs. ftruncate()`]: #fsftruncatefd-len-callback\n[`fs.",
    "originalSentence": "exists()`]: #fsexistspath-callback\n[`fs. fstat()`]: #fsfstatfd-options-callback\n[`fs. ftruncate()`]: #fsftruncatefd-len-callback\n[`fs.",
    "position": 7989,
    "id": "window_7989"
  },
  {
    "type": "window",
    "content": "fstat()`]: #fsfstatfd-options-callback\n[`fs. ftruncate()`]: #fsftruncatefd-len-callback\n[`fs. futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs.",
    "originalSentence": "fstat()`]: #fsfstatfd-options-callback\n[`fs. ftruncate()`]: #fsftruncatefd-len-callback\n[`fs. futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs.",
    "position": 7990,
    "id": "window_7990"
  },
  {
    "type": "window",
    "content": "ftruncate()`]: #fsftruncatefd-len-callback\n[`fs. futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs. lstat()`]: #fslstatpath-options-callback\n[`fs.",
    "originalSentence": "ftruncate()`]: #fsftruncatefd-len-callback\n[`fs. futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs. lstat()`]: #fslstatpath-options-callback\n[`fs.",
    "position": 7991,
    "id": "window_7991"
  },
  {
    "type": "window",
    "content": "futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs. lstat()`]: #fslstatpath-options-callback\n[`fs. lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs.",
    "originalSentence": "futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs. lstat()`]: #fslstatpath-options-callback\n[`fs. lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs.",
    "position": 7992,
    "id": "window_7992"
  },
  {
    "type": "window",
    "content": "lstat()`]: #fslstatpath-options-callback\n[`fs. lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs. mkdir()`]: #fsmkdirpath-options-callback\n[`fs.",
    "originalSentence": "lstat()`]: #fslstatpath-options-callback\n[`fs. lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs. mkdir()`]: #fsmkdirpath-options-callback\n[`fs.",
    "position": 7993,
    "id": "window_7993"
  },
  {
    "type": "window",
    "content": "lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs. mkdir()`]: #fsmkdirpath-options-callback\n[`fs. mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs.",
    "originalSentence": "lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs. mkdir()`]: #fsmkdirpath-options-callback\n[`fs. mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs.",
    "position": 7994,
    "id": "window_7994"
  },
  {
    "type": "window",
    "content": "mkdir()`]: #fsmkdirpath-options-callback\n[`fs. mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs. open()`]: #fsopenpath-flags-mode-callback\n[`fs.",
    "originalSentence": "mkdir()`]: #fsmkdirpath-options-callback\n[`fs. mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs. open()`]: #fsopenpath-flags-mode-callback\n[`fs.",
    "position": 7995,
    "id": "window_7995"
  },
  {
    "type": "window",
    "content": "mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs. open()`]: #fsopenpath-flags-mode-callback\n[`fs. opendir()`]: #fsopendirpath-options-callback\n[`fs.",
    "originalSentence": "mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs. open()`]: #fsopenpath-flags-mode-callback\n[`fs. opendir()`]: #fsopendirpath-options-callback\n[`fs.",
    "position": 7996,
    "id": "window_7996"
  },
  {
    "type": "window",
    "content": "open()`]: #fsopenpath-flags-mode-callback\n[`fs. opendir()`]: #fsopendirpath-options-callback\n[`fs. opendirSync()`]: #fsopendirsyncpath-options\n[`fs.",
    "originalSentence": "open()`]: #fsopenpath-flags-mode-callback\n[`fs. opendir()`]: #fsopendirpath-options-callback\n[`fs. opendirSync()`]: #fsopendirsyncpath-options\n[`fs.",
    "position": 7997,
    "id": "window_7997"
  },
  {
    "type": "window",
    "content": "opendir()`]: #fsopendirpath-options-callback\n[`fs. opendirSync()`]: #fsopendirsyncpath-options\n[`fs. read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs.",
    "originalSentence": "opendir()`]: #fsopendirpath-options-callback\n[`fs. opendirSync()`]: #fsopendirsyncpath-options\n[`fs. read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs.",
    "position": 7998,
    "id": "window_7998"
  },
  {
    "type": "window",
    "content": "opendirSync()`]: #fsopendirsyncpath-options\n[`fs. read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs. readFile()`]: #fsreadfilepath-options-callback\n[`fs.",
    "originalSentence": "opendirSync()`]: #fsopendirsyncpath-options\n[`fs. read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs. readFile()`]: #fsreadfilepath-options-callback\n[`fs.",
    "position": 7999,
    "id": "window_7999"
  },
  {
    "type": "window",
    "content": "read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs. readFile()`]: #fsreadfilepath-options-callback\n[`fs. readFileSync()`]: #fsreadfilesyncpath-options\n[`fs.",
    "originalSentence": "read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs. readFile()`]: #fsreadfilepath-options-callback\n[`fs. readFileSync()`]: #fsreadfilesyncpath-options\n[`fs.",
    "position": 8000,
    "id": "window_8000"
  },
  {
    "type": "window",
    "content": "readFile()`]: #fsreadfilepath-options-callback\n[`fs. readFileSync()`]: #fsreadfilesyncpath-options\n[`fs. readdir()`]: #fsreaddirpath-options-callback\n[`fs.",
    "originalSentence": "readFile()`]: #fsreadfilepath-options-callback\n[`fs. readFileSync()`]: #fsreadfilesyncpath-options\n[`fs. readdir()`]: #fsreaddirpath-options-callback\n[`fs.",
    "position": 8001,
    "id": "window_8001"
  },
  {
    "type": "window",
    "content": "readFileSync()`]: #fsreadfilesyncpath-options\n[`fs. readdir()`]: #fsreaddirpath-options-callback\n[`fs. readdirSync()`]: #fsreaddirsyncpath-options\n[`fs.",
    "originalSentence": "readFileSync()`]: #fsreadfilesyncpath-options\n[`fs. readdir()`]: #fsreaddirpath-options-callback\n[`fs. readdirSync()`]: #fsreaddirsyncpath-options\n[`fs.",
    "position": 8002,
    "id": "window_8002"
  },
  {
    "type": "window",
    "content": "readdir()`]: #fsreaddirpath-options-callback\n[`fs. readdirSync()`]: #fsreaddirsyncpath-options\n[`fs. readv()`]: #fsreadvfd-buffers-position-callback\n[`fs.",
    "originalSentence": "readdir()`]: #fsreaddirpath-options-callback\n[`fs. readdirSync()`]: #fsreaddirsyncpath-options\n[`fs. readv()`]: #fsreadvfd-buffers-position-callback\n[`fs.",
    "position": 8003,
    "id": "window_8003"
  },
  {
    "type": "window",
    "content": "readdirSync()`]: #fsreaddirsyncpath-options\n[`fs. readv()`]: #fsreadvfd-buffers-position-callback\n[`fs. realpath()`]: #fsrealpathpath-options-callback\n[`fs.",
    "originalSentence": "readdirSync()`]: #fsreaddirsyncpath-options\n[`fs. readv()`]: #fsreadvfd-buffers-position-callback\n[`fs. realpath()`]: #fsrealpathpath-options-callback\n[`fs.",
    "position": 8004,
    "id": "window_8004"
  },
  {
    "type": "window",
    "content": "readv()`]: #fsreadvfd-buffers-position-callback\n[`fs. realpath()`]: #fsrealpathpath-options-callback\n[`fs. rm()`]: #fsrmpath-options-callback\n[`fs.",
    "originalSentence": "readv()`]: #fsreadvfd-buffers-position-callback\n[`fs. realpath()`]: #fsrealpathpath-options-callback\n[`fs. rm()`]: #fsrmpath-options-callback\n[`fs.",
    "position": 8005,
    "id": "window_8005"
  },
  {
    "type": "window",
    "content": "realpath()`]: #fsrealpathpath-options-callback\n[`fs. rm()`]: #fsrmpath-options-callback\n[`fs. rmSync()`]: #fsrmsyncpath-options\n[`fs.",
    "originalSentence": "realpath()`]: #fsrealpathpath-options-callback\n[`fs. rm()`]: #fsrmpath-options-callback\n[`fs. rmSync()`]: #fsrmsyncpath-options\n[`fs.",
    "position": 8006,
    "id": "window_8006"
  },
  {
    "type": "window",
    "content": "rm()`]: #fsrmpath-options-callback\n[`fs. rmSync()`]: #fsrmsyncpath-options\n[`fs. rmdir()`]: #fsrmdirpath-options-callback\n[`fs.",
    "originalSentence": "rm()`]: #fsrmpath-options-callback\n[`fs. rmSync()`]: #fsrmsyncpath-options\n[`fs. rmdir()`]: #fsrmdirpath-options-callback\n[`fs.",
    "position": 8007,
    "id": "window_8007"
  },
  {
    "type": "window",
    "content": "rmSync()`]: #fsrmsyncpath-options\n[`fs. rmdir()`]: #fsrmdirpath-options-callback\n[`fs. stat()`]: #fsstatpath-options-callback\n[`fs.",
    "originalSentence": "rmSync()`]: #fsrmsyncpath-options\n[`fs. rmdir()`]: #fsrmdirpath-options-callback\n[`fs. stat()`]: #fsstatpath-options-callback\n[`fs.",
    "position": 8008,
    "id": "window_8008"
  },
  {
    "type": "window",
    "content": "rmdir()`]: #fsrmdirpath-options-callback\n[`fs. stat()`]: #fsstatpath-options-callback\n[`fs. statfs()`]: #fsstatfspath-options-callback\n[`fs.",
    "originalSentence": "rmdir()`]: #fsrmdirpath-options-callback\n[`fs. stat()`]: #fsstatpath-options-callback\n[`fs. statfs()`]: #fsstatfspath-options-callback\n[`fs.",
    "position": 8009,
    "id": "window_8009"
  },
  {
    "type": "window",
    "content": "stat()`]: #fsstatpath-options-callback\n[`fs. statfs()`]: #fsstatfspath-options-callback\n[`fs. symlink()`]: #fssymlinktarget-path-type-callback\n[`fs.",
    "originalSentence": "stat()`]: #fsstatpath-options-callback\n[`fs. statfs()`]: #fsstatfspath-options-callback\n[`fs. symlink()`]: #fssymlinktarget-path-type-callback\n[`fs.",
    "position": 8010,
    "id": "window_8010"
  },
  {
    "type": "window",
    "content": "statfs()`]: #fsstatfspath-options-callback\n[`fs. symlink()`]: #fssymlinktarget-path-type-callback\n[`fs. utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs.",
    "originalSentence": "statfs()`]: #fsstatfspath-options-callback\n[`fs. symlink()`]: #fssymlinktarget-path-type-callback\n[`fs. utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs.",
    "position": 8011,
    "id": "window_8011"
  },
  {
    "type": "window",
    "content": "symlink()`]: #fssymlinktarget-path-type-callback\n[`fs. utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs. watch()`]: #fswatchfilename-options-listener\n[`fs.",
    "originalSentence": "symlink()`]: #fssymlinktarget-path-type-callback\n[`fs. utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs. watch()`]: #fswatchfilename-options-listener\n[`fs.",
    "position": 8012,
    "id": "window_8012"
  },
  {
    "type": "window",
    "content": "utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs. watch()`]: #fswatchfilename-options-listener\n[`fs. write(fd, buffer...)",
    "originalSentence": "utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs. watch()`]: #fswatchfilename-options-listener\n[`fs. write(fd, buffer...)",
    "position": 8013,
    "id": "window_8013"
  },
  {
    "type": "window",
    "content": "watch()`]: #fswatchfilename-options-listener\n[`fs. write(fd, buffer...) `]: #fswritefd-buffer-offset-length-position-callback\n[`fs.",
    "originalSentence": "watch()`]: #fswatchfilename-options-listener\n[`fs. write(fd, buffer...) `]: #fswritefd-buffer-offset-length-position-callback\n[`fs.",
    "position": 8014,
    "id": "window_8014"
  },
  {
    "type": "window",
    "content": "write(fd, buffer...) `]: #fswritefd-buffer-offset-length-position-callback\n[`fs. write(fd, string...)",
    "originalSentence": "write(fd, buffer...) `]: #fswritefd-buffer-offset-length-position-callback\n[`fs. write(fd, string...)",
    "position": 8015,
    "id": "window_8015"
  },
  {
    "type": "window",
    "content": "`]: #fswritefd-buffer-offset-length-position-callback\n[`fs. write(fd, string...) `]: #fswritefd-string-position-encoding-callback\n[`fs.",
    "originalSentence": "`]: #fswritefd-buffer-offset-length-position-callback\n[`fs. write(fd, string...) `]: #fswritefd-string-position-encoding-callback\n[`fs.",
    "position": 8016,
    "id": "window_8016"
  },
  {
    "type": "window",
    "content": "write(fd, string...) `]: #fswritefd-string-position-encoding-callback\n[`fs. writeFile()`]: #fswritefilefile-data-options-callback\n[`fs.",
    "originalSentence": "write(fd, string...) `]: #fswritefd-string-position-encoding-callback\n[`fs. writeFile()`]: #fswritefilefile-data-options-callback\n[`fs.",
    "position": 8017,
    "id": "window_8017"
  },
  {
    "type": "window",
    "content": "`]: #fswritefd-string-position-encoding-callback\n[`fs. writeFile()`]: #fswritefilefile-data-options-callback\n[`fs. writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises.",
    "originalSentence": "`]: #fswritefd-string-position-encoding-callback\n[`fs. writeFile()`]: #fswritefilefile-data-options-callback\n[`fs. writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises.",
    "position": 8018,
    "id": "window_8018"
  },
  {
    "type": "window",
    "content": "writeFile()`]: #fswritefilefile-data-options-callback\n[`fs. writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises. access()`]: #fspromisesaccesspath-mode\n[`fsPromises.",
    "originalSentence": "writeFile()`]: #fswritefilefile-data-options-callback\n[`fs. writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises. access()`]: #fspromisesaccesspath-mode\n[`fsPromises.",
    "position": 8019,
    "id": "window_8019"
  },
  {
    "type": "window",
    "content": "writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises. access()`]: #fspromisesaccesspath-mode\n[`fsPromises. copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises.",
    "originalSentence": "writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises. access()`]: #fspromisesaccesspath-mode\n[`fsPromises. copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises.",
    "position": 8020,
    "id": "window_8020"
  },
  {
    "type": "window",
    "content": "access()`]: #fspromisesaccesspath-mode\n[`fsPromises. copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises. mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises.",
    "originalSentence": "access()`]: #fspromisesaccesspath-mode\n[`fsPromises. copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises. mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises.",
    "position": 8021,
    "id": "window_8021"
  },
  {
    "type": "window",
    "content": "copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises. mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises. open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises.",
    "originalSentence": "copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises. mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises. open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises.",
    "position": 8022,
    "id": "window_8022"
  },
  {
    "type": "window",
    "content": "mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises. open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises. opendir()`]: #fspromisesopendirpath-options\n[`fsPromises.",
    "originalSentence": "mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises. open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises. opendir()`]: #fspromisesopendirpath-options\n[`fsPromises.",
    "position": 8023,
    "id": "window_8023"
  },
  {
    "type": "window",
    "content": "open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises. opendir()`]: #fspromisesopendirpath-options\n[`fsPromises. rm()`]: #fspromisesrmpath-options\n[`fsPromises.",
    "originalSentence": "open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises. opendir()`]: #fspromisesopendirpath-options\n[`fsPromises. rm()`]: #fspromisesrmpath-options\n[`fsPromises.",
    "position": 8024,
    "id": "window_8024"
  },
  {
    "type": "window",
    "content": "opendir()`]: #fspromisesopendirpath-options\n[`fsPromises. rm()`]: #fspromisesrmpath-options\n[`fsPromises. stat()`]: #fspromisesstatpath-options\n[`fsPromises.",
    "originalSentence": "opendir()`]: #fspromisesopendirpath-options\n[`fsPromises. rm()`]: #fspromisesrmpath-options\n[`fsPromises. stat()`]: #fspromisesstatpath-options\n[`fsPromises.",
    "position": 8025,
    "id": "window_8025"
  },
  {
    "type": "window",
    "content": "rm()`]: #fspromisesrmpath-options\n[`fsPromises. stat()`]: #fspromisesstatpath-options\n[`fsPromises. utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util.",
    "originalSentence": "rm()`]: #fspromisesrmpath-options\n[`fsPromises. stat()`]: #fspromisesstatpath-options\n[`fsPromises. utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util.",
    "position": 8026,
    "id": "window_8026"
  },
  {
    "type": "window",
    "content": "stat()`]: #fspromisesstatpath-options\n[`fsPromises. utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util. promisify()`]: util.",
    "originalSentence": "stat()`]: #fspromisesstatpath-options\n[`fsPromises. utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util. promisify()`]: util.",
    "position": 8027,
    "id": "window_8027"
  },
  {
    "type": "window",
    "content": "utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util. promisify()`]: util. md#utilpromisifyoriginal\n[bigints]: https://tc39.github.io/proposal-bigint\n[caveats]: #caveats\n[chcp]: https://ss64.com/nt/chcp.html\n[inode]: https://en.wikipedia.org/wiki/Inode\n[support of file system `flags`]: #file-system-flags",
    "originalSentence": "utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util. promisify()`]: util. md#utilpromisifyoriginal\n[bigints]: https://tc39.github.io/proposal-bigint\n[caveats]: #caveats\n[chcp]: https://ss64.com/nt/chcp.html\n[inode]: https://en.wikipedia.org/wiki/Inode\n[support of file system `flags`]: #file-system-flags",
    "position": 8028,
    "id": "window_8028"
  },
  {
    "type": "paragraph",
    "content": "<!--introduced_in=v0.10.0-->",
    "originalSentence": "<!--introduced_in=v0.10.0-->",
    "position": 8029,
    "id": "paragraph_8029"
  },
  {
    "type": "paragraph",
    "content": "> Stability: 2 - Stable",
    "originalSentence": "> Stability: 2 - Stable",
    "position": 8030,
    "id": "paragraph_8030"
  },
  {
    "type": "paragraph",
    "content": "<!-- source_link=lib/fs.js -->",
    "originalSentence": "<!-- source_link=lib/fs.js -->",
    "position": 8031,
    "id": "paragraph_8031"
  },
  {
    "type": "paragraph",
    "content": "The `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions.",
    "originalSentence": "The `node:fs` module enables interacting with the file system in a\nway modeled on standard POSIX functions.",
    "position": 8032,
    "id": "paragraph_8032"
  },
  {
    "type": "paragraph",
    "content": "To use the promise-based APIs:",
    "originalSentence": "To use the promise-based APIs:",
    "position": 8033,
    "id": "paragraph_8033"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport * as fs from 'node:fs/promises';\n```",
    "originalSentence": "```mjs\nimport * as fs from 'node:fs/promises';\n```",
    "position": 8034,
    "id": "paragraph_8034"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst fs = require('node:fs/promises');\n```",
    "originalSentence": "```cjs\nconst fs = require('node:fs/promises');\n```",
    "position": 8035,
    "id": "paragraph_8035"
  },
  {
    "type": "paragraph",
    "content": "To use the callback and sync APIs:",
    "originalSentence": "To use the callback and sync APIs:",
    "position": 8036,
    "id": "paragraph_8036"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport * as fs from 'node:fs';\n```",
    "originalSentence": "```mjs\nimport * as fs from 'node:fs';\n```",
    "position": 8037,
    "id": "paragraph_8037"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst fs = require('node:fs');\n```",
    "originalSentence": "```cjs\nconst fs = require('node:fs');\n```",
    "position": 8038,
    "id": "paragraph_8038"
  },
  {
    "type": "paragraph",
    "content": "All file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).",
    "originalSentence": "All file system operations have synchronous, callback, and promise-based\nforms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).",
    "position": 8039,
    "id": "paragraph_8039"
  },
  {
    "type": "paragraph",
    "content": "Promise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete.",
    "originalSentence": "Promise-based operations return a promise that is fulfilled when the\nasynchronous operation is complete.",
    "position": 8040,
    "id": "paragraph_8040"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { unlink } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs/promises';",
    "position": 8041,
    "id": "paragraph_8041"
  },
  {
    "type": "paragraph",
    "content": "try {\n  await unlink('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.error('there was an error:', error.message);\n}\n```",
    "originalSentence": "try {\n  await unlink('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.error('there was an error:', error.message);\n}\n```",
    "position": 8042,
    "id": "paragraph_8042"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { unlink } = require('node:fs/promises');",
    "originalSentence": "```cjs\nconst { unlink } = require('node:fs/promises');",
    "position": 8043,
    "id": "paragraph_8043"
  },
  {
    "type": "paragraph",
    "content": "(async function(path) {\n  try {\n    await unlink(path);\n    console.log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello');\n```",
    "originalSentence": "(async function(path) {\n  try {\n    await unlink(path);\n    console.log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello');\n```",
    "position": 8044,
    "id": "paragraph_8044"
  },
  {
    "type": "paragraph",
    "content": "The callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously. The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception. If the operation is completed successfully, then\nthe first argument is `null` or `undefined`.",
    "originalSentence": "The callback form takes a completion callback function as its last\nargument and invokes the operation asynchronously. The arguments passed to\nthe completion callback depend on the method, but the first argument is always\nreserved for an exception. If the operation is completed successfully, then\nthe first argument is `null` or `undefined`.",
    "position": 8045,
    "id": "paragraph_8045"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { unlink } from 'node:fs';",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs';",
    "position": 8046,
    "id": "paragraph_8046"
  },
  {
    "type": "paragraph",
    "content": "unlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});\n```",
    "originalSentence": "unlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});\n```",
    "position": 8047,
    "id": "paragraph_8047"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { unlink } = require('node:fs');",
    "originalSentence": "```cjs\nconst { unlink } = require('node:fs');",
    "position": 8048,
    "id": "paragraph_8048"
  },
  {
    "type": "paragraph",
    "content": "unlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});\n```",
    "originalSentence": "unlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});\n```",
    "position": 8049,
    "id": "paragraph_8049"
  },
  {
    "type": "paragraph",
    "content": "The callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required.",
    "originalSentence": "The callback-based versions of the `node:fs` module APIs are preferable over\nthe use of the promise APIs when maximal performance (both in terms of\nexecution time and memory allocation) is required.",
    "position": 8050,
    "id": "paragraph_8050"
  },
  {
    "type": "paragraph",
    "content": "## Synchronous example",
    "originalSentence": "## Synchronous example",
    "position": 8051,
    "id": "paragraph_8051"
  },
  {
    "type": "paragraph",
    "content": "The synchronous APIs block the Node.js event loop and further JavaScript\nexecution until the operation is complete. Exceptions are thrown immediately\nand can be handled using `try…catch`, or can be allowed to bubble up.",
    "originalSentence": "The synchronous APIs block the Node.js event loop and further JavaScript\nexecution until the operation is complete. Exceptions are thrown immediately\nand can be handled using `try…catch`, or can be allowed to bubble up.",
    "position": 8052,
    "id": "paragraph_8052"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { unlinkSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { unlinkSync } from 'node:fs';",
    "position": 8053,
    "id": "paragraph_8053"
  },
  {
    "type": "paragraph",
    "content": "try {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```",
    "originalSentence": "try {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```",
    "position": 8054,
    "id": "paragraph_8054"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { unlinkSync } = require('node:fs');",
    "originalSentence": "```cjs\nconst { unlinkSync } = require('node:fs');",
    "position": 8055,
    "id": "paragraph_8055"
  },
  {
    "type": "paragraph",
    "content": "try {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```",
    "originalSentence": "try {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}\n```",
    "position": 8056,
    "id": "paragraph_8056"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`.\n  - version:\n    - v11.14.0\n    - v10.17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental.\n  - version: v10.1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs').promises` only.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31553\n    description: Exposed as `require('fs/promises')`.\n  - version:\n    - v11.14.0\n    - v10.17.0\n    pr-url: https://github.com/nodejs/node/pull/26581\n    description: This API is no longer experimental.\n  - version: v10.1.0\n    pr-url: https://github.com/nodejs/node/pull/20504\n    description: The API is accessible via `require('fs').promises` only.\n-->",
    "position": 8057,
    "id": "paragraph_8057"
  },
  {
    "type": "paragraph",
    "content": "The `fs/promises` API provides asynchronous file system methods that return\npromises.",
    "originalSentence": "The `fs/promises` API provides asynchronous file system methods that return\npromises.",
    "position": 8058,
    "id": "paragraph_8058"
  },
  {
    "type": "paragraph",
    "content": "The promise APIs use the underlying Node.js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "originalSentence": "The promise APIs use the underlying Node.js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "position": 8059,
    "id": "paragraph_8059"
  },
  {
    "type": "paragraph",
    "content": "### Class: `FileHandle`",
    "originalSentence": "### Class: `FileHandle`",
    "position": 8060,
    "id": "paragraph_8060"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8061,
    "id": "paragraph_8061"
  },
  {
    "type": "paragraph",
    "content": "A {FileHandle} object is an object wrapper for a numeric file descriptor.",
    "originalSentence": "A {FileHandle} object is an object wrapper for a numeric file descriptor.",
    "position": 8062,
    "id": "paragraph_8062"
  },
  {
    "type": "paragraph",
    "content": "Instances of the {FileHandle} object are created by the `fsPromises.open()`\nmethod.",
    "originalSentence": "Instances of the {FileHandle} object are created by the `fsPromises.open()`\nmethod.",
    "position": 8063,
    "id": "paragraph_8063"
  },
  {
    "type": "paragraph",
    "content": "All {FileHandle} objects are {EventEmitter}s.",
    "originalSentence": "All {FileHandle} objects are {EventEmitter}s.",
    "position": 8064,
    "id": "paragraph_8064"
  },
  {
    "type": "paragraph",
    "content": "If a {FileHandle} is not closed using the `filehandle.close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks. Please do not rely on this behavior because\nit can be unreliable and the file may not be closed. Instead, always explicitly\nclose {FileHandle}s. Node.js may change this behavior in the future.",
    "originalSentence": "If a {FileHandle} is not closed using the `filehandle.close()` method, it will\ntry to automatically close the file descriptor and emit a process warning,\nhelping to prevent memory leaks. Please do not rely on this behavior because\nit can be unreliable and the file may not be closed. Instead, always explicitly\nclose {FileHandle}s. Node.js may change this behavior in the future.",
    "position": 8065,
    "id": "paragraph_8065"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'close'`",
    "originalSentence": "#### Event: `'close'`",
    "position": 8066,
    "id": "paragraph_8066"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v15.4.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v15.4.0\n-->",
    "position": 8067,
    "id": "paragraph_8067"
  },
  {
    "type": "paragraph",
    "content": "The `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used.",
    "originalSentence": "The `'close'` event is emitted when the {FileHandle} has been closed and can no\nlonger be used.",
    "position": 8068,
    "id": "paragraph_8068"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.appendFile(data[, options])`",
    "originalSentence": "#### `filehandle.appendFile(data[, options])`",
    "position": 8069,
    "id": "paragraph_8069"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n  - version:\n      - v15.14.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n  - version:\n      - v15.14.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "position": 8070,
    "id": "paragraph_8070"
  },
  {
    "type": "paragraph",
    "content": "* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8071,
    "id": "paragraph_8071"
  },
  {
    "type": "paragraph",
    "content": "Alias of [`filehandle.writeFile()`][].",
    "originalSentence": "Alias of [`filehandle.writeFile()`][].",
    "position": 8072,
    "id": "paragraph_8072"
  },
  {
    "type": "paragraph",
    "content": "When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises.open()`][]. Therefore, this is equivalent to\n[`filehandle.writeFile()`][].",
    "originalSentence": "When operating on file handles, the mode cannot be changed from what it was set\nto with [`fsPromises.open()`][]. Therefore, this is equivalent to\n[`filehandle.writeFile()`][].",
    "position": 8073,
    "id": "paragraph_8073"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.chmod(mode)`",
    "originalSentence": "#### `filehandle.chmod(mode)`",
    "position": 8074,
    "id": "paragraph_8074"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8075,
    "id": "paragraph_8075"
  },
  {
    "type": "paragraph",
    "content": "* `mode` {integer} the file mode bit mask.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `mode` {integer} the file mode bit mask.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8076,
    "id": "paragraph_8076"
  },
  {
    "type": "paragraph",
    "content": "Modifies the permissions on the file. See chmod(2).",
    "originalSentence": "Modifies the permissions on the file. See chmod(2).",
    "position": 8077,
    "id": "paragraph_8077"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.chown(uid, gid)`",
    "originalSentence": "#### `filehandle.chown(uid, gid)`",
    "position": 8078,
    "id": "paragraph_8078"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8079,
    "id": "paragraph_8079"
  },
  {
    "type": "paragraph",
    "content": "* `uid` {integer} The file's new owner's user id.\n* `gid` {integer} The file's new group's group id.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `uid` {integer} The file's new owner's user id.\n* `gid` {integer} The file's new group's group id.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8080,
    "id": "paragraph_8080"
  },
  {
    "type": "paragraph",
    "content": "Changes the ownership of the file. A wrapper for chown(2).",
    "originalSentence": "Changes the ownership of the file. A wrapper for chown(2).",
    "position": 8081,
    "id": "paragraph_8081"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.close()`",
    "originalSentence": "#### `filehandle.close()`",
    "position": 8082,
    "id": "paragraph_8082"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8083,
    "id": "paragraph_8083"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8084,
    "id": "paragraph_8084"
  },
  {
    "type": "paragraph",
    "content": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete.",
    "originalSentence": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete.",
    "position": 8085,
    "id": "paragraph_8085"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 8086,
    "id": "paragraph_8086"
  },
  {
    "type": "paragraph",
    "content": "let filehandle;\ntry {\n  filehandle = await open('thefile.txt', 'r');\n} finally {\n  await filehandle?.close();\n}\n```",
    "originalSentence": "let filehandle;\ntry {\n  filehandle = await open('thefile.txt', 'r');\n} finally {\n  await filehandle?.close();\n}\n```",
    "position": 8087,
    "id": "paragraph_8087"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.createReadStream([options])`",
    "originalSentence": "#### `filehandle.createReadStream([options])`",
    "position": 8088,
    "id": "paragraph_8088"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v16.11.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v16.11.0\n-->",
    "position": 8089,
    "id": "paragraph_8089"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs.ReadStream}",
    "originalSentence": "* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `signal` {AbortSignal|undefined} **Default:** `undefined`\n* Returns: {fs.ReadStream}",
    "position": 8090,
    "id": "paragraph_8090"
  },
  {
    "type": "paragraph",
    "content": "`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. If `start` is\nomitted or `undefined`, `filehandle.createReadStream()` reads sequentially from\nthe current file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "originalSentence": "`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. If `start` is\nomitted or `undefined`, `filehandle.createReadStream()` reads sequentially from\nthe current file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "position": 8091,
    "id": "paragraph_8091"
  },
  {
    "type": "paragraph",
    "content": "If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "originalSentence": "If the `FileHandle` points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "position": 8092,
    "id": "paragraph_8092"
  },
  {
    "type": "paragraph",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "position": 8093,
    "id": "paragraph_8093"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 8094,
    "id": "paragraph_8094"
  },
  {
    "type": "paragraph",
    "content": "const fd = await open('/dev/input/event0');\n// Create a stream from some character device.\nconst stream = fd.createReadStream();\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);\n```",
    "originalSentence": "const fd = await open('/dev/input/event0');\n// Create a stream from some character device.\nconst stream = fd.createReadStream();\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);\n```",
    "position": 8095,
    "id": "paragraph_8095"
  },
  {
    "type": "paragraph",
    "content": "If `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "originalSentence": "If `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "position": 8096,
    "id": "paragraph_8096"
  },
  {
    "type": "paragraph",
    "content": "An example to read the last 10 bytes of a file which is 100 bytes long:",
    "originalSentence": "An example to read the last 10 bytes of a file which is 100 bytes long:",
    "position": 8097,
    "id": "paragraph_8097"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 8098,
    "id": "paragraph_8098"
  },
  {
    "type": "paragraph",
    "content": "const fd = await open('sample.txt');\nfd.createReadStream({ start: 90, end: 99 });\n```",
    "originalSentence": "const fd = await open('sample.txt');\nfd.createReadStream({ start: 90, end: 99 });\n```",
    "position": 8099,
    "id": "paragraph_8099"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.createWriteStream([options])`",
    "originalSentence": "#### `filehandle.createWriteStream([options])`",
    "position": 8100,
    "id": "paragraph_8100"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v16.11.0\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.\n-->",
    "originalSentence": "<!-- YAML\nadded: v16.11.0\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.\n-->",
    "position": 8101,
    "id": "paragraph_8101"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* Returns: {fs.WriteStream}",
    "originalSentence": "* `options` {Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* Returns: {fs.WriteStream}",
    "position": 8102,
    "id": "paragraph_8102"
  },
  {
    "type": "paragraph",
    "content": "`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`. The `encoding` can be any one of those accepted by {Buffer}.",
    "originalSentence": "`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` `open` option to be set to `r+` rather than\nthe default `r`. The `encoding` can be any one of those accepted by {Buffer}.",
    "position": 8103,
    "id": "paragraph_8103"
  },
  {
    "type": "paragraph",
    "content": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "originalSentence": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "position": 8104,
    "id": "paragraph_8104"
  },
  {
    "type": "paragraph",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "position": 8105,
    "id": "paragraph_8105"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.datasync()`",
    "originalSentence": "#### `filehandle.datasync()`",
    "position": 8106,
    "id": "paragraph_8106"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8107,
    "id": "paragraph_8107"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8108,
    "id": "paragraph_8108"
  },
  {
    "type": "paragraph",
    "content": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "originalSentence": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details.",
    "position": 8109,
    "id": "paragraph_8109"
  },
  {
    "type": "paragraph",
    "content": "Unlike `filehandle.sync` this method does not flush modified metadata.",
    "originalSentence": "Unlike `filehandle.sync` this method does not flush modified metadata.",
    "position": 8110,
    "id": "paragraph_8110"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8111,
    "id": "paragraph_8111"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number} The numeric file descriptor managed by the {FileHandle} object.",
    "originalSentence": "* Type: {number} The numeric file descriptor managed by the {FileHandle} object.",
    "position": 8112,
    "id": "paragraph_8112"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.read(buffer, offset, length, position)`",
    "originalSentence": "#### `filehandle.read(buffer, offset, length, position)`",
    "position": 8113,
    "id": "paragraph_8113"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v21.0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v21.0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.\n-->",
    "position": 8114,
    "id": "paragraph_8114"
  },
  {
    "type": "paragraph",
    "content": "* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.\n* `offset` {integer} The location in the buffer at which to start filling.\n  **Default:** `0`\n* `length` {integer} The number of bytes to read. **Default:**\n  `buffer.byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file. If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated. If `position` is a non-negative\n  integer, the current file position will remain unchanged.\n  **Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.\n* `offset` {integer} The location in the buffer at which to start filling.\n  **Default:** `0`\n* `length` {integer} The number of bytes to read. **Default:**\n  `buffer.byteLength - offset`\n* `position` {integer|bigint|null} The location where to begin reading data\n  from the file. If `null` or `-1`, data will be read from the current file\n  position, and the position will be updated. If `position` is a non-negative\n  integer, the current file position will remain unchanged.\n  **Default:** `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 8115,
    "id": "paragraph_8115"
  },
  {
    "type": "paragraph",
    "content": "Reads data from the file and stores that in the given buffer.",
    "originalSentence": "Reads data from the file and stores that in the given buffer.",
    "position": 8116,
    "id": "paragraph_8116"
  },
  {
    "type": "paragraph",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 8117,
    "id": "paragraph_8117"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.read([options])`",
    "originalSentence": "#### `filehandle.read([options])`",
    "position": 8118,
    "id": "paragraph_8118"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v13.11.0\n - v12.17.0\nchanges:\n  - version: v21.0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v13.11.0\n - v12.17.0\nchanges:\n  - version: v21.0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.\n-->",
    "position": 8119,
    "id": "paragraph_8119"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read. **Default:** `Buffer.alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling.\n    **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.\n    **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n    file data read. **Default:** `Buffer.alloc(16384)`\n  * `offset` {integer} The location in the buffer at which to start filling.\n    **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.\n    **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 8120,
    "id": "paragraph_8120"
  },
  {
    "type": "paragraph",
    "content": "Reads data from the file and stores that in the given buffer.",
    "originalSentence": "Reads data from the file and stores that in the given buffer.",
    "position": 8121,
    "id": "paragraph_8121"
  },
  {
    "type": "paragraph",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 8122,
    "id": "paragraph_8122"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.read(buffer[, options])`",
    "originalSentence": "#### `filehandle.read(buffer[, options])`",
    "position": 8123,
    "id": "paragraph_8123"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v18.2.0\n  - v16.17.0\nchanges:\n  - version: v21.0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v18.2.0\n  - v16.17.0\nchanges:\n  - version: v21.0.0\n    pr-url: https://github.com/nodejs/node/pull/42835\n    description: Accepts bigint values as `position`.\n-->",
    "position": 8124,
    "id": "paragraph_8124"
  },
  {
    "type": "paragraph",
    "content": "* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.\n* `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling.\n    **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.\n    **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "originalSentence": "* `buffer` {Buffer|TypedArray|DataView} A buffer that will be filled with the\n  file data read.\n* `options` {Object}\n  * `offset` {integer} The location in the buffer at which to start filling.\n    **Default:** `0`\n  * `length` {integer} The number of bytes to read. **Default:**\n    `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} The location where to begin reading data\n    from the file. If `null` or `-1`, data will be read from the current file\n    position, and the position will be updated. If `position` is a non-negative\n    integer, the current file position will remain unchanged.\n    **Default:**: `null`\n* Returns: {Promise} Fulfills upon success with an object with two properties:\n  * `bytesRead` {integer} The number of bytes read\n  * `buffer` {Buffer|TypedArray|DataView} A reference to the passed in `buffer`\n    argument.",
    "position": 8125,
    "id": "paragraph_8125"
  },
  {
    "type": "paragraph",
    "content": "Reads data from the file and stores that in the given buffer.",
    "originalSentence": "Reads data from the file and stores that in the given buffer.",
    "position": 8126,
    "id": "paragraph_8126"
  },
  {
    "type": "paragraph",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 8127,
    "id": "paragraph_8127"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.readableWebStream([options])`",
    "originalSentence": "#### `filehandle.readableWebStream([options])`",
    "position": 8128,
    "id": "paragraph_8128"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v17.0.0\nchanges:",
    "originalSentence": "<!-- YAML\nadded: v17.0.0\nchanges:",
    "position": 8129,
    "id": "paragraph_8129"
  },
  {
    "type": "paragraph",
    "content": "- version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.8.0\n    - v22.15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream. Streams are now always 'bytes' streams.\n  - version:\n    - v20.0.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream.\n-->",
    "originalSentence": "- version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.8.0\n    - v22.15.0\n    pr-url: https://github.com/nodejs/node/pull/55461\n    description: Removed option to create a 'bytes' stream. Streams are now always 'bytes' streams.\n  - version:\n    - v20.0.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/46933\n    description: Added option to create a 'bytes' stream.\n-->",
    "position": 8130,
    "id": "paragraph_8130"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed. **Default:** `false`\n* Returns: {ReadableStream}",
    "originalSentence": "* `options` {Object}\n  * `autoClose` {boolean} When true, causes the {FileHandle} to be closed when the\n    stream is closed. **Default:** `false`\n* Returns: {ReadableStream}",
    "position": 8131,
    "id": "paragraph_8131"
  },
  {
    "type": "paragraph",
    "content": "Returns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents.",
    "originalSentence": "Returns a byte-oriented `ReadableStream` that may be used to read the file's\ncontents.",
    "position": 8132,
    "id": "paragraph_8132"
  },
  {
    "type": "paragraph",
    "content": "An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing.",
    "originalSentence": "An error will be thrown if this method is called more than once or is called\nafter the `FileHandle` is closed or closing.",
    "position": 8133,
    "id": "paragraph_8133"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport {\n  open,\n} from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport {\n  open,\n} from 'node:fs/promises';",
    "position": 8134,
    "id": "paragraph_8134"
  },
  {
    "type": "paragraph",
    "content": "const file = await open('./some/file/to/read');",
    "originalSentence": "const file = await open('./some/file/to/read');",
    "position": 8135,
    "id": "paragraph_8135"
  },
  {
    "type": "paragraph",
    "content": "for await (const chunk of file.readableWebStream())\n  console.log(chunk);",
    "originalSentence": "for await (const chunk of file.readableWebStream())\n  console.log(chunk);",
    "position": 8136,
    "id": "paragraph_8136"
  },
  {
    "type": "paragraph",
    "content": "await file.close();\n```",
    "originalSentence": "await file.close();\n```",
    "position": 8137,
    "id": "paragraph_8137"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst {\n  open,\n} = require('node:fs/promises');",
    "originalSentence": "```cjs\nconst {\n  open,\n} = require('node:fs/promises');",
    "position": 8138,
    "id": "paragraph_8138"
  },
  {
    "type": "paragraph",
    "content": "(async () => {\n  const file = await open('./some/file/to/read');",
    "originalSentence": "(async () => {\n  const file = await open('./some/file/to/read');",
    "position": 8139,
    "id": "paragraph_8139"
  },
  {
    "type": "paragraph",
    "content": "for await (const chunk of file.readableWebStream())\n    console.log(chunk);",
    "originalSentence": "for await (const chunk of file.readableWebStream())\n    console.log(chunk);",
    "position": 8140,
    "id": "paragraph_8140"
  },
  {
    "type": "paragraph",
    "content": "await file.close();\n})();\n```",
    "originalSentence": "await file.close();\n})();\n```",
    "position": 8141,
    "id": "paragraph_8141"
  },
  {
    "type": "paragraph",
    "content": "While the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically. User code must still call the\n`fileHandle.close()` method unless the `autoClose` option is set to `true`.",
    "originalSentence": "While the `ReadableStream` will read the file to completion, it will not\nclose the `FileHandle` automatically. User code must still call the\n`fileHandle.close()` method unless the `autoClose` option is set to `true`.",
    "position": 8142,
    "id": "paragraph_8142"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.readFile(options)`",
    "originalSentence": "#### `filehandle.readFile(options)`",
    "position": 8143,
    "id": "paragraph_8143"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8144,
    "id": "paragraph_8144"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file. If no encoding is specified (using `options.encoding`), the data is\n  returned as a {Buffer} object. Otherwise, the data will be a string.",
    "originalSentence": "* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise} Fulfills upon a successful read with the contents of the\n  file. If no encoding is specified (using `options.encoding`), the data is\n  returned as a {Buffer} object. Otherwise, the data will be a string.",
    "position": 8145,
    "id": "paragraph_8145"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously reads the entire contents of a file.",
    "originalSentence": "Asynchronously reads the entire contents of a file.",
    "position": 8146,
    "id": "paragraph_8146"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`.",
    "position": 8147,
    "id": "paragraph_8147"
  },
  {
    "type": "paragraph",
    "content": "The {FileHandle} has to support reading.",
    "originalSentence": "The {FileHandle} has to support reading.",
    "position": 8148,
    "id": "paragraph_8148"
  },
  {
    "type": "paragraph",
    "content": "If one or more `filehandle.read()` calls are made on a file handle and then a\n`filehandle.readFile()` call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file.",
    "originalSentence": "If one or more `filehandle.read()` calls are made on a file handle and then a\n`filehandle.readFile()` call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file.",
    "position": 8149,
    "id": "paragraph_8149"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.readLines([options])`",
    "originalSentence": "#### `filehandle.readLines([options])`",
    "position": 8150,
    "id": "paragraph_8150"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v18.11.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v18.11.0\n-->",
    "position": 8151,
    "id": "paragraph_8151"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline.InterfaceConstructor}",
    "originalSentence": "* `options` {Object}\n  * `encoding` {string} **Default:** `null`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n* Returns: {readline.InterfaceConstructor}",
    "position": 8152,
    "id": "paragraph_8152"
  },
  {
    "type": "paragraph",
    "content": "Convenience method to create a `readline` interface and stream over the file.\nSee [`filehandle.createReadStream()`][] for the options.",
    "originalSentence": "Convenience method to create a `readline` interface and stream over the file.\nSee [`filehandle.createReadStream()`][] for the options.",
    "position": 8153,
    "id": "paragraph_8153"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 8154,
    "id": "paragraph_8154"
  },
  {
    "type": "paragraph",
    "content": "const file = await open('./some/file/to/read');",
    "originalSentence": "const file = await open('./some/file/to/read');",
    "position": 8155,
    "id": "paragraph_8155"
  },
  {
    "type": "paragraph",
    "content": "for await (const line of file.readLines()) {\n  console.log(line);\n}\n```",
    "originalSentence": "for await (const line of file.readLines()) {\n  console.log(line);\n}\n```",
    "position": 8156,
    "id": "paragraph_8156"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { open } = require('node:fs/promises');",
    "originalSentence": "```cjs\nconst { open } = require('node:fs/promises');",
    "position": 8157,
    "id": "paragraph_8157"
  },
  {
    "type": "paragraph",
    "content": "(async () => {\n  const file = await open('./some/file/to/read');",
    "originalSentence": "(async () => {\n  const file = await open('./some/file/to/read');",
    "position": 8158,
    "id": "paragraph_8158"
  },
  {
    "type": "paragraph",
    "content": "for await (const line of file.readLines()) {\n    console.log(line);\n  }\n})();\n```",
    "originalSentence": "for await (const line of file.readLines()) {\n    console.log(line);\n  }\n})();\n```",
    "position": 8159,
    "id": "paragraph_8159"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.readv(buffers[, position])`",
    "originalSentence": "#### `filehandle.readv(buffers[, position])`",
    "position": 8160,
    "id": "paragraph_8160"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v13.13.0\n - v12.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v13.13.0\n - v12.17.0\n-->",
    "position": 8161,
    "id": "paragraph_8161"
  },
  {
    "type": "paragraph",
    "content": "* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from. If `position` is not a `number`, the data will\n  be read from the current position. **Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input.",
    "originalSentence": "* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where\n  the data should be read from. If `position` is not a `number`, the data will\n  be read from the current position. **Default:** `null`\n* Returns: {Promise} Fulfills upon success an object containing two properties:\n  * `bytesRead` {integer} the number of bytes read\n  * `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} property containing\n    a reference to the `buffers` input.",
    "position": 8162,
    "id": "paragraph_8162"
  },
  {
    "type": "paragraph",
    "content": "Read from a file and write to an array of {ArrayBufferView}s",
    "originalSentence": "Read from a file and write to an array of {ArrayBufferView}s",
    "position": 8163,
    "id": "paragraph_8163"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.stat([options])`",
    "originalSentence": "#### `filehandle.stat([options])`",
    "position": 8164,
    "id": "paragraph_8164"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "position": 8165,
    "id": "paragraph_8165"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise} Fulfills with an {fs.Stats} for the file.",
    "originalSentence": "* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise} Fulfills with an {fs.Stats} for the file.",
    "position": 8166,
    "id": "paragraph_8166"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.sync()`",
    "originalSentence": "#### `filehandle.sync()`",
    "position": 8167,
    "id": "paragraph_8167"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8168,
    "id": "paragraph_8168"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8169,
    "id": "paragraph_8169"
  },
  {
    "type": "paragraph",
    "content": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX fsync(2) documentation for more detail.",
    "originalSentence": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX fsync(2) documentation for more detail.",
    "position": 8170,
    "id": "paragraph_8170"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.truncate(len)`",
    "originalSentence": "#### `filehandle.truncate(len)`",
    "position": 8171,
    "id": "paragraph_8171"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8172,
    "id": "paragraph_8172"
  },
  {
    "type": "paragraph",
    "content": "* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8173,
    "id": "paragraph_8173"
  },
  {
    "type": "paragraph",
    "content": "If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file.",
    "originalSentence": "If the file was larger than `len` bytes, only the first `len` bytes will be\nretained in the file.",
    "position": 8174,
    "id": "paragraph_8174"
  },
  {
    "type": "paragraph",
    "content": "The following example retains only the first four bytes of the file:",
    "originalSentence": "The following example retains only the first four bytes of the file:",
    "position": 8175,
    "id": "paragraph_8175"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 8176,
    "id": "paragraph_8176"
  },
  {
    "type": "paragraph",
    "content": "let filehandle = null;\ntry {\n  filehandle = await open('temp.txt', 'r+');\n  await filehandle.truncate(4);\n} finally {\n  await filehandle?.close();\n}\n```",
    "originalSentence": "let filehandle = null;\ntry {\n  filehandle = await open('temp.txt', 'r+');\n  await filehandle.truncate(4);\n} finally {\n  await filehandle?.close();\n}\n```",
    "position": 8177,
    "id": "paragraph_8177"
  },
  {
    "type": "paragraph",
    "content": "If the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):",
    "originalSentence": "If the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):",
    "position": 8178,
    "id": "paragraph_8178"
  },
  {
    "type": "paragraph",
    "content": "If `len` is negative then `0` will be used.",
    "originalSentence": "If `len` is negative then `0` will be used.",
    "position": 8179,
    "id": "paragraph_8179"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.utimes(atime, mtime)`",
    "originalSentence": "#### `filehandle.utimes(atime, mtime)`",
    "position": 8180,
    "id": "paragraph_8180"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8181,
    "id": "paragraph_8181"
  },
  {
    "type": "paragraph",
    "content": "* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}",
    "originalSentence": "* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}",
    "position": 8182,
    "id": "paragraph_8182"
  },
  {
    "type": "paragraph",
    "content": "Change the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success.",
    "originalSentence": "Change the file system timestamps of the object referenced by the {FileHandle}\nthen fulfills the promise with no arguments upon success.",
    "position": 8183,
    "id": "paragraph_8183"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.write(buffer, offset[, length[, position]])`",
    "originalSentence": "#### `filehandle.write(buffer, offset[, length[, position]])`",
    "position": 8184,
    "id": "paragraph_8184"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 buffers anymore.\n-->",
    "position": 8185,
    "id": "paragraph_8185"
  },
  {
    "type": "paragraph",
    "content": "* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins.\n* `length` {integer} The number of bytes from `buffer` to write. **Default:**\n  `buffer.byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written. If `position` is not a `number`,\n  the data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* Returns: {Promise}",
    "originalSentence": "* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} The start position from within `buffer` where the data\n  to write begins.\n* `length` {integer} The number of bytes from `buffer` to write. **Default:**\n  `buffer.byteLength - offset`\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffer` should be written. If `position` is not a `number`,\n  the data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* Returns: {Promise}",
    "position": 8186,
    "id": "paragraph_8186"
  },
  {
    "type": "paragraph",
    "content": "Write `buffer` to the file.",
    "originalSentence": "Write `buffer` to the file.",
    "position": 8187,
    "id": "paragraph_8187"
  },
  {
    "type": "paragraph",
    "content": "The promise is fulfilled with an object containing two properties:",
    "originalSentence": "The promise is fulfilled with an object containing two properties:",
    "position": 8188,
    "id": "paragraph_8188"
  },
  {
    "type": "paragraph",
    "content": "* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written.",
    "originalSentence": "* `bytesWritten` {integer} the number of bytes written\n* `buffer` {Buffer|TypedArray|DataView} a reference to the\n  `buffer` written.",
    "position": 8189,
    "id": "paragraph_8189"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `filehandle.write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.createWriteStream()`][].",
    "originalSentence": "It is unsafe to use `filehandle.write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.createWriteStream()`][].",
    "position": 8190,
    "id": "paragraph_8190"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes do not work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes do not work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 8191,
    "id": "paragraph_8191"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.write(buffer[, options])`",
    "originalSentence": "#### `filehandle.write(buffer[, options])`",
    "position": 8192,
    "id": "paragraph_8192"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v18.3.0\n  - v16.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v18.3.0\n  - v16.17.0\n-->",
    "position": 8193,
    "id": "paragraph_8193"
  },
  {
    "type": "paragraph",
    "content": "* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}",
    "originalSentence": "* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {Promise}",
    "position": 8194,
    "id": "paragraph_8194"
  },
  {
    "type": "paragraph",
    "content": "Write `buffer` to the file.",
    "originalSentence": "Write `buffer` to the file.",
    "position": 8195,
    "id": "paragraph_8195"
  },
  {
    "type": "paragraph",
    "content": "Similar to the above `filehandle.write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "originalSentence": "Similar to the above `filehandle.write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "position": 8196,
    "id": "paragraph_8196"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.write(string[, position[, encoding]])`",
    "originalSentence": "#### `filehandle.write(string[, position[, encoding]])`",
    "position": 8197,
    "id": "paragraph_8197"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "position": 8198,
    "id": "paragraph_8198"
  },
  {
    "type": "paragraph",
    "content": "* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written. If `position` is not a `number` the\n  data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* `encoding` {string} The expected string encoding. **Default:** `'utf8'`\n* Returns: {Promise}",
    "originalSentence": "* `string` {string}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `string` should be written. If `position` is not a `number` the\n  data will be written at the current position. See the POSIX pwrite(2)\n  documentation for more detail. **Default:** `null`\n* `encoding` {string} The expected string encoding. **Default:** `'utf8'`\n* Returns: {Promise}",
    "position": 8199,
    "id": "paragraph_8199"
  },
  {
    "type": "paragraph",
    "content": "Write `string` to the file. If `string` is not a string, the promise is\nrejected with an error.",
    "originalSentence": "Write `string` to the file. If `string` is not a string, the promise is\nrejected with an error.",
    "position": 8200,
    "id": "paragraph_8200"
  },
  {
    "type": "paragraph",
    "content": "The promise is fulfilled with an object containing two properties:",
    "originalSentence": "The promise is fulfilled with an object containing two properties:",
    "position": 8201,
    "id": "paragraph_8201"
  },
  {
    "type": "paragraph",
    "content": "* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written.",
    "originalSentence": "* `bytesWritten` {integer} the number of bytes written\n* `buffer` {string} a reference to the `string` written.",
    "position": 8202,
    "id": "paragraph_8202"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `filehandle.write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.createWriteStream()`][].",
    "originalSentence": "It is unsafe to use `filehandle.write()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected). For this\nscenario, use [`filehandle.createWriteStream()`][].",
    "position": 8203,
    "id": "paragraph_8203"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes do not work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes do not work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 8204,
    "id": "paragraph_8204"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.writeFile(data, options)`",
    "originalSentence": "#### `filehandle.writeFile(data, options)`",
    "position": 8205,
    "id": "paragraph_8205"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n      - v15.14.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n      - v15.14.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "position": 8206,
    "id": "paragraph_8206"
  },
  {
    "type": "paragraph",
    "content": "* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string. **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise}",
    "originalSentence": "* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} The expected character encoding when `data` is a\n    string. **Default:** `'utf8'`\n  * `signal` {AbortSignal|undefined} allows aborting an in-progress writeFile. **Default:** `undefined`\n* Returns: {Promise}",
    "position": 8207,
    "id": "paragraph_8207"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously writes data to a file, replacing the file if it already exists.\n`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.\nThe promise is fulfilled with no arguments upon success.",
    "originalSentence": "Asynchronously writes data to a file, replacing the file if it already exists.\n`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.\nThe promise is fulfilled with no arguments upon success.",
    "position": 8208,
    "id": "paragraph_8208"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`.",
    "position": 8209,
    "id": "paragraph_8209"
  },
  {
    "type": "paragraph",
    "content": "The {FileHandle} has to support writing.",
    "originalSentence": "The {FileHandle} has to support writing.",
    "position": 8210,
    "id": "paragraph_8210"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `filehandle.writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "originalSentence": "It is unsafe to use `filehandle.writeFile()` multiple times on the same file\nwithout waiting for the promise to be fulfilled (or rejected).",
    "position": 8211,
    "id": "paragraph_8211"
  },
  {
    "type": "paragraph",
    "content": "If one or more `filehandle.write()` calls are made on a file handle and then a\n`filehandle.writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file.",
    "originalSentence": "If one or more `filehandle.write()` calls are made on a file handle and then a\n`filehandle.writeFile()` call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file.",
    "position": 8212,
    "id": "paragraph_8212"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle.writev(buffers[, position])`",
    "originalSentence": "#### `filehandle.writev(buffers[, position])`",
    "position": 8213,
    "id": "paragraph_8213"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.9.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.9.0\n-->",
    "position": 8214,
    "id": "paragraph_8214"
  },
  {
    "type": "paragraph",
    "content": "* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written. If `position` is not a `number`,\n  the data will be written at the current position. **Default:** `null`\n* Returns: {Promise}",
    "originalSentence": "* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]}\n* `position` {integer|null} The offset from the beginning of the file where the\n  data from `buffers` should be written. If `position` is not a `number`,\n  the data will be written at the current position. **Default:** `null`\n* Returns: {Promise}",
    "position": 8215,
    "id": "paragraph_8215"
  },
  {
    "type": "paragraph",
    "content": "Write an array of {ArrayBufferView}s to the file.",
    "originalSentence": "Write an array of {ArrayBufferView}s to the file.",
    "position": 8216,
    "id": "paragraph_8216"
  },
  {
    "type": "paragraph",
    "content": "The promise is fulfilled with an object containing a two properties:",
    "originalSentence": "The promise is fulfilled with an object containing a two properties:",
    "position": 8217,
    "id": "paragraph_8217"
  },
  {
    "type": "paragraph",
    "content": "* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input.",
    "originalSentence": "* `bytesWritten` {integer} the number of bytes written\n* `buffers` {Buffer\\[]|TypedArray\\[]|DataView\\[]} a reference to the `buffers`\n  input.",
    "position": 8218,
    "id": "paragraph_8218"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected).",
    "originalSentence": "It is unsafe to call `writev()` multiple times on the same file without waiting\nfor the promise to be fulfilled (or rejected).",
    "position": 8219,
    "id": "paragraph_8219"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 8220,
    "id": "paragraph_8220"
  },
  {
    "type": "paragraph",
    "content": "#### `filehandle[Symbol.asyncDispose]()`",
    "originalSentence": "#### `filehandle[Symbol.asyncDispose]()`",
    "position": 8221,
    "id": "paragraph_8221"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v20.4.0\n - v18.18.0\nchanges:\n - version: v24.2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v20.4.0\n - v18.18.0\nchanges:\n - version: v24.2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.\n-->",
    "position": 8222,
    "id": "paragraph_8222"
  },
  {
    "type": "paragraph",
    "content": "Calls `filehandle.close()` and returns a promise that fulfills when the\nfilehandle is closed.",
    "originalSentence": "Calls `filehandle.close()` and returns a promise that fulfills when the\nfilehandle is closed.",
    "position": 8223,
    "id": "paragraph_8223"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.access(path[, mode])`",
    "originalSentence": "### `fsPromises.access(path[, mode])`",
    "position": 8224,
    "id": "paragraph_8224"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8225,
    "id": "paragraph_8225"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.constants.F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.constants.F_OK`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8226,
    "id": "paragraph_8226"
  },
  {
    "type": "paragraph",
    "content": "Tests a user's permissions for the file or directory specified by `path`.\nThe `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.constants.F_OK`\nor a mask consisting of the bitwise OR of any of `fs.constants.R_OK`,\n`fs.constants.W_OK`, and `fs.constants.X_OK` (e.g.\n`fs.constants.W_OK | fs.constants.R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "Tests a user's permissions for the file or directory specified by `path`.\nThe `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.constants.F_OK`\nor a mask consisting of the bitwise OR of any of `fs.constants.R_OK`,\n`fs.constants.W_OK`, and `fs.constants.X_OK` (e.g.\n`fs.constants.W_OK | fs.constants.R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "position": 8227,
    "id": "paragraph_8227"
  },
  {
    "type": "paragraph",
    "content": "If the accessibility check is successful, the promise is fulfilled with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object. The following example checks if the file\n`/etc/passwd` can be read and written by the current process.",
    "originalSentence": "If the accessibility check is successful, the promise is fulfilled with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an {Error} object. The following example checks if the file\n`/etc/passwd` can be read and written by the current process.",
    "position": 8228,
    "id": "paragraph_8228"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { access, constants } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { access, constants } from 'node:fs/promises';",
    "position": 8229,
    "id": "paragraph_8229"
  },
  {
    "type": "paragraph",
    "content": "try {\n  await access('/etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can access');\n} catch {\n  console.error('cannot access');\n}\n```",
    "originalSentence": "try {\n  await access('/etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can access');\n} catch {\n  console.error('cannot access');\n}\n```",
    "position": 8230,
    "id": "paragraph_8230"
  },
  {
    "type": "paragraph",
    "content": "Using `fsPromises.access()` to check for the accessibility of a file before\ncalling `fsPromises.open()` is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible.",
    "originalSentence": "Using `fsPromises.access()` to check for the accessibility of a file before\ncalling `fsPromises.open()` is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible.",
    "position": 8231,
    "id": "paragraph_8231"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.appendFile(path, data[, options])`",
    "originalSentence": "### `fsPromises.appendFile(path, data[, options])`",
    "position": 8232,
    "id": "paragraph_8232"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n-->",
    "position": 8233,
    "id": "paragraph_8233"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL|FileHandle} filename or {FileHandle}\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8234,
    "id": "paragraph_8234"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "originalSentence": "Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "position": 8235,
    "id": "paragraph_8235"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the `encoding`.",
    "originalSentence": "If `options` is a string, then it specifies the `encoding`.",
    "position": 8236,
    "id": "paragraph_8236"
  },
  {
    "type": "paragraph",
    "content": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "position": 8237,
    "id": "paragraph_8237"
  },
  {
    "type": "paragraph",
    "content": "The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises.open()`).",
    "originalSentence": "The `path` may be specified as a {FileHandle} that has been opened\nfor appending (using `fsPromises.open()`).",
    "position": 8238,
    "id": "paragraph_8238"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.chmod(path, mode)`",
    "originalSentence": "### `fsPromises.chmod(path, mode)`",
    "position": 8239,
    "id": "paragraph_8239"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8240,
    "id": "paragraph_8240"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8241,
    "id": "paragraph_8241"
  },
  {
    "type": "paragraph",
    "content": "Changes the permissions of a file.",
    "originalSentence": "Changes the permissions of a file.",
    "position": 8242,
    "id": "paragraph_8242"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.chown(path, uid, gid)`",
    "originalSentence": "### `fsPromises.chown(path, uid, gid)`",
    "position": 8243,
    "id": "paragraph_8243"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8244,
    "id": "paragraph_8244"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8245,
    "id": "paragraph_8245"
  },
  {
    "type": "paragraph",
    "content": "Changes the ownership of a file.",
    "originalSentence": "Changes the ownership of a file.",
    "position": 8246,
    "id": "paragraph_8246"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.copyFile(src, dest[, mode])`",
    "originalSentence": "### `fsPromises.copyFile(src, dest[, mode])`",
    "position": 8247,
    "id": "paragraph_8247"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.\n-->",
    "position": 8248,
    "id": "paragraph_8248"
  },
  {
    "type": "paragraph",
    "content": "* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation. It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e.g.\n  `fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`)\n  **Default:** `0`.\n  * `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists.\n  * `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink. If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used.\n  * `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink. If the platform does not support\n    copy-on-write, then the operation will fail.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} Optional modifiers that specify the behavior of the copy\n  operation. It is possible to create a mask consisting of the bitwise OR of\n  two or more values (e.g.\n  `fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`)\n  **Default:** `0`.\n  * `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest`\n    already exists.\n  * `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create\n    a copy-on-write reflink. If the platform does not support copy-on-write,\n    then a fallback copy mechanism is used.\n  * `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n    create a copy-on-write reflink. If the platform does not support\n    copy-on-write, then the operation will fail.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8249,
    "id": "paragraph_8249"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "originalSentence": "Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists.",
    "position": 8250,
    "id": "paragraph_8250"
  },
  {
    "type": "paragraph",
    "content": "No guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.",
    "originalSentence": "No guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.",
    "position": 8251,
    "id": "paragraph_8251"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { copyFile, constants } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { copyFile, constants } from 'node:fs/promises';",
    "position": 8252,
    "id": "paragraph_8252"
  },
  {
    "type": "paragraph",
    "content": "try {\n  await copyFile('source.txt', 'destination.txt');\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}",
    "originalSentence": "try {\n  await copyFile('source.txt', 'destination.txt');\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}",
    "position": 8253,
    "id": "paragraph_8253"
  },
  {
    "type": "paragraph",
    "content": "// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ntry {\n  await copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}\n```",
    "originalSentence": "// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ntry {\n  await copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}\n```",
    "position": 8254,
    "id": "paragraph_8254"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.cp(src, dest[, options])`",
    "originalSentence": "### `fsPromises.cp(src, dest[, options])`",
    "position": 8255,
    "id": "paragraph_8255"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v16.7.0\nchanges:\n  - version: v22.3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.copyFile()`.\n  - version:\n    - v17.6.0\n    - v16.15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.\n-->",
    "originalSentence": "<!-- YAML\nadded: v16.7.0\nchanges:\n  - version: v22.3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.copyFile()`.\n  - version:\n    - v17.6.0\n    - v16.15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.\n-->",
    "position": 8256,
    "id": "paragraph_8256"
  },
  {
    "type": "paragraph",
    "content": "* `src` {string|URL} source path to copy.\n* `dest` {string|URL} destination path to copy to.\n* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.\n  * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.\n  * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.\n    * `src` {string} source path to copy.\n    * `dest` {string} destination path to copy to.\n    * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.\n  * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.\n    **Default:** `true`.\n  * `mode` {integer} modifiers for copy operation. **Default:** `0`.\n    See `mode` flag of [`fsPromises.copyFile()`][].\n  * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.\n  * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `src` {string|URL} source path to copy.\n* `dest` {string|URL} destination path to copy to.\n* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.\n  * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.\n  * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.\n    * `src` {string} source path to copy.\n    * `dest` {string} destination path to copy to.\n    * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.\n  * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.\n    **Default:** `true`.\n  * `mode` {integer} modifiers for copy operation. **Default:** `0`.\n    See `mode` flag of [`fsPromises.copyFile()`][].\n  * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.\n  * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8257,
    "id": "paragraph_8257"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 8258,
    "id": "paragraph_8258"
  },
  {
    "type": "paragraph",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 8259,
    "id": "paragraph_8259"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.glob(pattern[, options])`",
    "originalSentence": "### `fsPromises.glob(pattern[, options])`",
    "position": 8260,
    "id": "paragraph_8260"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v22.0.0\nchanges:\n  - version:\n      - v24.1.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.7.0\n    - v22.14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.\n  - version: v22.2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.\n-->",
    "originalSentence": "<!-- YAML\nadded: v22.0.0\nchanges:\n  - version:\n      - v24.1.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.7.0\n    - v22.14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.\n  - version: v22.2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.\n-->",
    "position": 8261,
    "id": "paragraph_8261"
  },
  {
    "type": "paragraph",
    "content": "* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.\n    If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude. Note: Negation patterns (e.g., '!foo.js') are\n    not supported.\n  * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.\n* Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern.",
    "originalSentence": "* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.\n    If a string array is provided, each string should be a glob pattern that\n    specifies paths to exclude. Note: Negation patterns (e.g., '!foo.js') are\n    not supported.\n  * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.\n* Returns: {AsyncIterator} An AsyncIterator that yields the paths of files\n  that match the pattern.",
    "position": 8262,
    "id": "paragraph_8262"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { glob } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { glob } from 'node:fs/promises';",
    "position": 8263,
    "id": "paragraph_8263"
  },
  {
    "type": "paragraph",
    "content": "for await (const entry of glob('**/*.js'))\n  console.log(entry);\n```",
    "originalSentence": "for await (const entry of glob('**/*.js'))\n  console.log(entry);\n```",
    "position": 8264,
    "id": "paragraph_8264"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { glob } = require('node:fs/promises');",
    "originalSentence": "```cjs\nconst { glob } = require('node:fs/promises');",
    "position": 8265,
    "id": "paragraph_8265"
  },
  {
    "type": "paragraph",
    "content": "(async () => {\n  for await (const entry of glob('**/*.js'))\n    console.log(entry);\n})();\n```",
    "originalSentence": "(async () => {\n  for await (const entry of glob('**/*.js'))\n    console.log(entry);\n})();\n```",
    "position": 8266,
    "id": "paragraph_8266"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.lchmod(path, mode)`",
    "originalSentence": "### `fsPromises.lchmod(path, mode)`",
    "position": 8267,
    "id": "paragraph_8267"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\ndeprecated: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\ndeprecated: v10.0.0\n-->",
    "position": 8268,
    "id": "paragraph_8268"
  },
  {
    "type": "paragraph",
    "content": "> Stability: 0 - Deprecated",
    "originalSentence": "> Stability: 0 - Deprecated",
    "position": 8269,
    "id": "paragraph_8269"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {integer}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8270,
    "id": "paragraph_8270"
  },
  {
    "type": "paragraph",
    "content": "Changes the permissions on a symbolic link.",
    "originalSentence": "Changes the permissions on a symbolic link.",
    "position": 8271,
    "id": "paragraph_8271"
  },
  {
    "type": "paragraph",
    "content": "This method is only implemented on macOS.",
    "originalSentence": "This method is only implemented on macOS.",
    "position": 8272,
    "id": "paragraph_8272"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.lchown(path, uid, gid)`",
    "originalSentence": "### `fsPromises.lchown(path, uid, gid)`",
    "position": 8273,
    "id": "paragraph_8273"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.\n-->",
    "position": 8274,
    "id": "paragraph_8274"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 8275,
    "id": "paragraph_8275"
  },
  {
    "type": "paragraph",
    "content": "Changes the ownership on a symbolic link.",
    "originalSentence": "Changes the ownership on a symbolic link.",
    "position": 8276,
    "id": "paragraph_8276"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.lutimes(path, atime, mtime)`",
    "originalSentence": "### `fsPromises.lutimes(path, atime, mtime)`",
    "position": 8277,
    "id": "paragraph_8277"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.5.0\n  - v12.19.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.5.0\n  - v12.19.0\n-->",
    "position": 8278,
    "id": "paragraph_8278"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 8279,
    "id": "paragraph_8279"
  },
  {
    "type": "paragraph",
    "content": "Changes the access and modification times of a file in the same way as\n[`fsPromises.utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed.",
    "originalSentence": "Changes the access and modification times of a file in the same way as\n[`fsPromises.utimes()`][], with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed.",
    "position": 8280,
    "id": "paragraph_8280"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.link(existingPath, newPath)`",
    "originalSentence": "### `fsPromises.link(existingPath, newPath)`",
    "position": 8281,
    "id": "paragraph_8281"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8282,
    "id": "paragraph_8282"
  },
  {
    "type": "paragraph",
    "content": "* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "originalSentence": "* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise}  Fulfills with `undefined` upon success.",
    "position": 8283,
    "id": "paragraph_8283"
  },
  {
    "type": "paragraph",
    "content": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "originalSentence": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail.",
    "position": 8284,
    "id": "paragraph_8284"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.lstat(path[, options])`",
    "originalSentence": "### `fsPromises.lstat(path[, options])`",
    "position": 8285,
    "id": "paragraph_8285"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "position": 8286,
    "id": "paragraph_8286"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise}  Fulfills with the {fs.Stats} object for the given\n  symbolic link `path`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise}  Fulfills with the {fs.Stats} object for the given\n  symbolic link `path`.",
    "position": 8287,
    "id": "paragraph_8287"
  },
  {
    "type": "paragraph",
    "content": "Equivalent to [`fsPromises.stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.\nRefer to the POSIX lstat(2) document for more detail.",
    "originalSentence": "Equivalent to [`fsPromises.stat()`][] unless `path` refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.\nRefer to the POSIX lstat(2) document for more detail.",
    "position": 8288,
    "id": "paragraph_8288"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.mkdir(path[, options])`",
    "originalSentence": "### `fsPromises.mkdir(path[, options])`",
    "position": 8289,
    "id": "paragraph_8289"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8290,
    "id": "paragraph_8290"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.\n* Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.\n* Returns: {Promise} Upon success, fulfills with `undefined` if `recursive`\n  is `false`, or the first directory path created if `recursive` is `true`.",
    "position": 8291,
    "id": "paragraph_8291"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously creates a directory.",
    "originalSentence": "Asynchronously creates a directory.",
    "position": 8292,
    "id": "paragraph_8292"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fsPromises.mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false.",
    "originalSentence": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fsPromises.mkdir()` when `path` is a directory that exists results in a\nrejection only when `recursive` is false.",
    "position": 8293,
    "id": "paragraph_8293"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { mkdir } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs/promises';",
    "position": 8294,
    "id": "paragraph_8294"
  },
  {
    "type": "paragraph",
    "content": "try {\n  const projectFolder = new URL('./test/project/', import.meta.url);\n  const createDir = await mkdir(projectFolder, { recursive: true });",
    "originalSentence": "try {\n  const projectFolder = new URL('./test/project/', import.meta.url);\n  const createDir = await mkdir(projectFolder, { recursive: true });",
    "position": 8295,
    "id": "paragraph_8295"
  },
  {
    "type": "paragraph",
    "content": "console.log(`created ${createDir}`);\n} catch (err) {\n  console.error(err.message);\n}\n```",
    "originalSentence": "console.log(`created ${createDir}`);\n} catch (err) {\n  console.error(err.message);\n}\n```",
    "position": 8296,
    "id": "paragraph_8296"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');",
    "originalSentence": "```cjs\nconst { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');",
    "position": 8297,
    "id": "paragraph_8297"
  },
  {
    "type": "paragraph",
    "content": "async function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });",
    "originalSentence": "async function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });",
    "position": 8298,
    "id": "paragraph_8298"
  },
  {
    "type": "paragraph",
    "content": "console.log(dirCreation);\n  return dirCreation;\n}",
    "originalSentence": "console.log(dirCreation);\n  return dirCreation;\n}",
    "position": 8299,
    "id": "paragraph_8299"
  },
  {
    "type": "paragraph",
    "content": "makeDirectory().catch(console.error);\n```",
    "originalSentence": "makeDirectory().catch(console.error);\n```",
    "position": 8300,
    "id": "paragraph_8300"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.mkdtemp(prefix[, options])`",
    "originalSentence": "### `fsPromises.mkdtemp(prefix[, options])`",
    "position": 8301,
    "id": "paragraph_8301"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v20.6.0\n    - v18.19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.\n  - version:\n      - v16.5.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v20.6.0\n    - v18.19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.\n  - version:\n      - v16.5.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.\n-->",
    "position": 8302,
    "id": "paragraph_8302"
  },
  {
    "type": "paragraph",
    "content": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory.",
    "originalSentence": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with a string containing the file system path\n  of the newly created temporary directory.",
    "position": 8303,
    "id": "paragraph_8303"
  },
  {
    "type": "paragraph",
    "content": "Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`. Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`. Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters.",
    "originalSentence": "Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided `prefix`. Due to\nplatform inconsistencies, avoid trailing `X` characters in `prefix`. Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing `X` characters in `prefix` with random characters.",
    "position": 8304,
    "id": "paragraph_8304"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 8305,
    "id": "paragraph_8305"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';",
    "originalSentence": "```mjs\nimport { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';",
    "position": 8306,
    "id": "paragraph_8306"
  },
  {
    "type": "paragraph",
    "content": "try {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.error(err);\n}\n```",
    "originalSentence": "try {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.error(err);\n}\n```",
    "position": 8307,
    "id": "paragraph_8307"
  },
  {
    "type": "paragraph",
    "content": "The `fsPromises.mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string. For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path').sep`).",
    "originalSentence": "The `fsPromises.mkdtemp()` method will append the six randomly selected\ncharacters directly to the `prefix` string. For instance, given a directory\n`/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the\n`prefix` must end with a trailing platform-specific path separator\n(`require('node:path').sep`).",
    "position": 8308,
    "id": "paragraph_8308"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.mkdtempDisposable(prefix[, options])`",
    "originalSentence": "### `fsPromises.mkdtempDisposable(prefix[, options])`",
    "position": 8309,
    "id": "paragraph_8309"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v24.4.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v24.4.0\n-->",
    "position": 8310,
    "id": "paragraph_8310"
  },
  {
    "type": "paragraph",
    "content": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory.\n  * `remove` {AsyncFunction} A function which removes the created directory.\n  * `[Symbol.asyncDispose]` {AsyncFunction} The same as `remove`.",
    "originalSentence": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with a Promise for an async-disposable Object:\n  * `path` {string} The path of the created directory.\n  * `remove` {AsyncFunction} A function which removes the created directory.\n  * `[Symbol.asyncDispose]` {AsyncFunction} The same as `remove`.",
    "position": 8311,
    "id": "paragraph_8311"
  },
  {
    "type": "paragraph",
    "content": "The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path. When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists. If the\ndirectory cannot be deleted, disposal will throw an error. The object has an\nasync `remove()` method which will perform the same task.",
    "originalSentence": "The resulting Promise holds an async-disposable object whose `path` property\nholds the created directory path. When the object is disposed, the directory\nand its contents will be removed asynchronously if it still exists. If the\ndirectory cannot be deleted, disposal will throw an error. The object has an\nasync `remove()` method which will perform the same task.",
    "position": 8312,
    "id": "paragraph_8312"
  },
  {
    "type": "paragraph",
    "content": "Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises.mkdtempDisposable('prefix')`.",
    "originalSentence": "Both this function and the disposal function on the resulting object are\nasync, so it should be used with `await` + `await using` as in\n`await using dir = await fsPromises.mkdtempDisposable('prefix')`.",
    "position": 8313,
    "id": "paragraph_8313"
  },
  {
    "type": "paragraph",
    "content": "<!-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->",
    "originalSentence": "<!-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->",
    "position": 8314,
    "id": "paragraph_8314"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of [`fsPromises.mkdtemp()`][].",
    "originalSentence": "For detailed information, see the documentation of [`fsPromises.mkdtemp()`][].",
    "position": 8315,
    "id": "paragraph_8315"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 8316,
    "id": "paragraph_8316"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.open(path, flags[, mode])`",
    "originalSentence": "### `fsPromises.open(path, flags[, mode])`",
    "position": 8317,
    "id": "paragraph_8317"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v11.1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v11.1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.\n-->",
    "position": 8318,
    "id": "paragraph_8318"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].\n  **Default:** `'r'`.\n* `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created. **Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].\n  **Default:** `'r'`.\n* `mode` {string|integer} Sets the file mode (permission and sticky bits)\n  if the file is created. **Default:** `0o666` (readable and writable)\n* Returns: {Promise} Fulfills with a {FileHandle} object.",
    "position": 8319,
    "id": "paragraph_8319"
  },
  {
    "type": "paragraph",
    "content": "Opens a {FileHandle}.",
    "originalSentence": "Opens a {FileHandle}.",
    "position": 8320,
    "id": "paragraph_8320"
  },
  {
    "type": "paragraph",
    "content": "Refer to the POSIX open(2) documentation for more detail.",
    "originalSentence": "Refer to the POSIX open(2) documentation for more detail.",
    "position": 8321,
    "id": "paragraph_8321"
  },
  {
    "type": "paragraph",
    "content": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "originalSentence": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "position": 8322,
    "id": "paragraph_8322"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.opendir(path[, options])`",
    "originalSentence": "### `fsPromises.opendir(path[, options])`",
    "position": 8323,
    "id": "paragraph_8323"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version:\n     - v13.1.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version:\n     - v13.1.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.\n-->",
    "position": 8324,
    "id": "paragraph_8324"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories. **Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs.Dir}.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} Resolved `Dir` will be an {AsyncIterable}\n    containing all sub files and directories. **Default:** `false`\n* Returns: {Promise}  Fulfills with an {fs.Dir}.",
    "position": 8325,
    "id": "paragraph_8325"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously open a directory for iterative scanning. See the POSIX\nopendir(3) documentation for more detail.",
    "originalSentence": "Asynchronously open a directory for iterative scanning. See the POSIX\nopendir(3) documentation for more detail.",
    "position": 8326,
    "id": "paragraph_8326"
  },
  {
    "type": "paragraph",
    "content": "Creates an {fs.Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "Creates an {fs.Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 8327,
    "id": "paragraph_8327"
  },
  {
    "type": "paragraph",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 8328,
    "id": "paragraph_8328"
  },
  {
    "type": "paragraph",
    "content": "Example using async iteration:",
    "originalSentence": "Example using async iteration:",
    "position": 8329,
    "id": "paragraph_8329"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { opendir } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { opendir } from 'node:fs/promises';",
    "position": 8330,
    "id": "paragraph_8330"
  },
  {
    "type": "paragraph",
    "content": "try {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}\n```",
    "originalSentence": "try {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}\n```",
    "position": 8331,
    "id": "paragraph_8331"
  },
  {
    "type": "paragraph",
    "content": "When using the async iterator, the {fs.Dir} object will be automatically\nclosed after the iterator exits.",
    "originalSentence": "When using the async iterator, the {fs.Dir} object will be automatically\nclosed after the iterator exits.",
    "position": 8332,
    "id": "paragraph_8332"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.readdir(path[, options])`",
    "originalSentence": "### `fsPromises.readdir(path[, options])`",
    "position": 8333,
    "id": "paragraph_8333"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v10.11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v10.11.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.\n-->",
    "position": 8334,
    "id": "paragraph_8334"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.\n* Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.'` and `'..'`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.\n* Returns: {Promise}  Fulfills with an array of the names of the files in\n  the directory excluding `'.'` and `'..'`.",
    "position": 8335,
    "id": "paragraph_8335"
  },
  {
    "type": "paragraph",
    "content": "Reads the contents of a directory.",
    "originalSentence": "Reads the contents of a directory.",
    "position": 8336,
    "id": "paragraph_8336"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames. If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames. If the `encoding` is set to `'buffer'`, the filenames returned\nwill be passed as {Buffer} objects.",
    "position": 8337,
    "id": "paragraph_8337"
  },
  {
    "type": "paragraph",
    "content": "If `options.withFileTypes` is set to `true`, the returned array will contain\n{fs.Dirent} objects.",
    "originalSentence": "If `options.withFileTypes` is set to `true`, the returned array will contain\n{fs.Dirent} objects.",
    "position": 8338,
    "id": "paragraph_8338"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readdir } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { readdir } from 'node:fs/promises';",
    "position": 8339,
    "id": "paragraph_8339"
  },
  {
    "type": "paragraph",
    "content": "try {\n  const files = await readdir(path);\n  for (const file of files)\n    console.log(file);\n} catch (err) {\n  console.error(err);\n}\n```",
    "originalSentence": "try {\n  const files = await readdir(path);\n  for (const file of files)\n    console.log(file);\n} catch (err) {\n  console.error(err);\n}\n```",
    "position": 8340,
    "id": "paragraph_8340"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.readFile(path[, options])`",
    "originalSentence": "### `fsPromises.readFile(path[, options])`",
    "position": 8341,
    "id": "paragraph_8341"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v15.2.0\n    - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v15.2.0\n    - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.\n-->",
    "position": 8342,
    "id": "paragraph_8342"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file.",
    "originalSentence": "* `path` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* Returns: {Promise}  Fulfills with the contents of the file.",
    "position": 8343,
    "id": "paragraph_8343"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously reads the entire contents of a file.",
    "originalSentence": "Asynchronously reads the entire contents of a file.",
    "position": 8344,
    "id": "paragraph_8344"
  },
  {
    "type": "paragraph",
    "content": "If no encoding is specified (using `options.encoding`), the data is returned\nas a {Buffer} object. Otherwise, the data will be a string.",
    "originalSentence": "If no encoding is specified (using `options.encoding`), the data is returned\nas a {Buffer} object. Otherwise, the data will be a string.",
    "position": 8345,
    "id": "paragraph_8345"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 8346,
    "id": "paragraph_8346"
  },
  {
    "type": "paragraph",
    "content": "When the `path` is a directory, the behavior of `fsPromises.readFile()` is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned.",
    "originalSentence": "When the `path` is a directory, the behavior of `fsPromises.readFile()` is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned.",
    "position": 8347,
    "id": "paragraph_8347"
  },
  {
    "type": "paragraph",
    "content": "An example of reading a `package.json` file located in the same directory of the\nrunning code:",
    "originalSentence": "An example of reading a `package.json` file located in the same directory of the\nrunning code:",
    "position": 8348,
    "id": "paragraph_8348"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('./package.json', import.meta.url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.log(contents);\n} catch (err) {\n  console.error(err.message);\n}\n```",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('./package.json', import.meta.url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.log(contents);\n} catch (err) {\n  console.error(err.message);\n}\n```",
    "position": 8349,
    "id": "paragraph_8349"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('./package.json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.log(contents);\n  } catch (err) {\n    console.error(err.message);\n  }\n}\nlogFile();\n```",
    "originalSentence": "```cjs\nconst { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('./package.json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.log(contents);\n  } catch (err) {\n    console.error(err.message);\n  }\n}\nlogFile();\n```",
    "position": 8350,
    "id": "paragraph_8350"
  },
  {
    "type": "paragraph",
    "content": "It is possible to abort an ongoing `readFile` using an {AbortSignal}. If a\nrequest is aborted the promise returned is rejected with an `AbortError`:",
    "originalSentence": "It is possible to abort an ongoing `readFile` using an {AbortSignal}. If a\nrequest is aborted the promise returned is rejected with an `AbortError`:",
    "position": 8351,
    "id": "paragraph_8351"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFile } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs/promises';",
    "position": 8352,
    "id": "paragraph_8352"
  },
  {
    "type": "paragraph",
    "content": "try {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });",
    "originalSentence": "try {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });",
    "position": 8353,
    "id": "paragraph_8353"
  },
  {
    "type": "paragraph",
    "content": "// Abort the request before the promise settles.\n  controller.abort();",
    "originalSentence": "// Abort the request before the promise settles.\n  controller.abort();",
    "position": 8354,
    "id": "paragraph_8354"
  },
  {
    "type": "paragraph",
    "content": "await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}\n```",
    "originalSentence": "await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}\n```",
    "position": 8355,
    "id": "paragraph_8355"
  },
  {
    "type": "paragraph",
    "content": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.readFile` performs.",
    "originalSentence": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.readFile` performs.",
    "position": 8356,
    "id": "paragraph_8356"
  },
  {
    "type": "paragraph",
    "content": "Any specified {FileHandle} has to support reading.",
    "originalSentence": "Any specified {FileHandle} has to support reading.",
    "position": 8357,
    "id": "paragraph_8357"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.readlink(path[, options])`",
    "originalSentence": "### `fsPromises.readlink(path[, options])`",
    "position": 8358,
    "id": "paragraph_8358"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8359,
    "id": "paragraph_8359"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise} Fulfills with the `linkString` upon success.",
    "position": 8360,
    "id": "paragraph_8360"
  },
  {
    "type": "paragraph",
    "content": "Reads the contents of the symbolic link referred to by `path`. See the POSIX\nreadlink(2) documentation for more detail. The promise is fulfilled with the\n`linkString` upon success.",
    "originalSentence": "Reads the contents of the symbolic link referred to by `path`. See the POSIX\nreadlink(2) documentation for more detail. The promise is fulfilled with the\n`linkString` upon success.",
    "position": 8361,
    "id": "paragraph_8361"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`, the link path\nreturned will be passed as a {Buffer} object.",
    "position": 8362,
    "id": "paragraph_8362"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.realpath(path[, options])`",
    "originalSentence": "### `fsPromises.realpath(path[, options])`",
    "position": 8363,
    "id": "paragraph_8363"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8364,
    "id": "paragraph_8364"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Promise}  Fulfills with the resolved path upon success.",
    "position": 8365,
    "id": "paragraph_8365"
  },
  {
    "type": "paragraph",
    "content": "Determines the actual location of `path` using the same semantics as the\n`fs.realpath.native()` function.",
    "originalSentence": "Determines the actual location of `path` using the same semantics as the\n`fs.realpath.native()` function.",
    "position": 8366,
    "id": "paragraph_8366"
  },
  {
    "type": "paragraph",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 8367,
    "id": "paragraph_8367"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path. If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path. If the `encoding` is set to `'buffer'`, the path returned will be\npassed as a {Buffer} object.",
    "position": 8368,
    "id": "paragraph_8368"
  },
  {
    "type": "paragraph",
    "content": "On Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "originalSentence": "On Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "position": 8369,
    "id": "paragraph_8369"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.rename(oldPath, newPath)`",
    "originalSentence": "### `fsPromises.rename(oldPath, newPath)`",
    "position": 8370,
    "id": "paragraph_8370"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8371,
    "id": "paragraph_8371"
  },
  {
    "type": "paragraph",
    "content": "* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8372,
    "id": "paragraph_8372"
  },
  {
    "type": "paragraph",
    "content": "Renames `oldPath` to `newPath`.",
    "originalSentence": "Renames `oldPath` to `newPath`.",
    "position": 8373,
    "id": "paragraph_8373"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.rmdir(path[, options])`",
    "originalSentence": "### `fsPromises.rmdir(path[, options])`",
    "position": 8374,
    "id": "paragraph_8374"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.\n  - version: v14.14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises.rm` instead.\n  - version:\n     - v13.3.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.rmdir(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fsPromises.rmdir(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.\n  - version: v14.14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fsPromises.rm` instead.\n  - version:\n     - v13.3.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                  now supported.\n-->",
    "position": 8375,
    "id": "paragraph_8375"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8376,
    "id": "paragraph_8376"
  },
  {
    "type": "paragraph",
    "content": "Removes the directory identified by `path`.",
    "originalSentence": "Removes the directory identified by `path`.",
    "position": 8377,
    "id": "paragraph_8377"
  },
  {
    "type": "paragraph",
    "content": "Using `fsPromises.rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX.",
    "originalSentence": "Using `fsPromises.rmdir()` on a file (not a directory) results in the\npromise being rejected with an `ENOENT` error on Windows and an `ENOTDIR`\nerror on POSIX.",
    "position": 8378,
    "id": "paragraph_8378"
  },
  {
    "type": "paragraph",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises.rm()`][] with options `{ recursive: true, force: true }`.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use\n[`fsPromises.rm()`][] with options `{ recursive: true, force: true }`.",
    "position": 8379,
    "id": "paragraph_8379"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.rm(path[, options])`",
    "originalSentence": "### `fsPromises.rm(path[, options])`",
    "position": 8380,
    "id": "paragraph_8380"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v14.14.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v14.14.0\n-->",
    "position": 8381,
    "id": "paragraph_8381"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.\n  * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.\n  * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.\n  * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.\n    **Default:** `100`.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.\n  * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.\n  * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.\n  * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.\n    **Default:** `100`.\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8382,
    "id": "paragraph_8382"
  },
  {
    "type": "paragraph",
    "content": "Removes files and directories (modeled on the standard POSIX `rm` utility).",
    "originalSentence": "Removes files and directories (modeled on the standard POSIX `rm` utility).",
    "position": 8383,
    "id": "paragraph_8383"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.stat(path[, options])`",
    "originalSentence": "### `fsPromises.stat(path[, options])`",
    "position": 8384,
    "id": "paragraph_8384"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "position": 8385,
    "id": "paragraph_8385"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise}  Fulfills with the {fs.Stats} object for the\n  given `path`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise}  Fulfills with the {fs.Stats} object for the\n  given `path`.",
    "position": 8386,
    "id": "paragraph_8386"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.statfs(path[, options])`",
    "originalSentence": "### `fsPromises.statfs(path[, options])`",
    "position": 8387,
    "id": "paragraph_8387"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 8388,
    "id": "paragraph_8388"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.StatFs} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise} Fulfills with the {fs.StatFs} object for the\n  given `path`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.StatFs} object should be `bigint`. **Default:** `false`.\n* Returns: {Promise} Fulfills with the {fs.StatFs} object for the\n  given `path`.",
    "position": 8389,
    "id": "paragraph_8389"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.symlink(target, path[, type])`",
    "originalSentence": "### `fsPromises.symlink(target, path[, type])`",
    "position": 8390,
    "id": "paragraph_8390"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node.js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`.",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42894\n    description: If the `type` argument is `null` or omitted, Node.js will\n                 autodetect `target` type and automatically\n                 select `dir` or `file`.",
    "position": 8391,
    "id": "paragraph_8391"
  },
  {
    "type": "paragraph",
    "content": "* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8392,
    "id": "paragraph_8392"
  },
  {
    "type": "paragraph",
    "content": "Creates a symbolic link.",
    "originalSentence": "Creates a symbolic link.",
    "position": 8393,
    "id": "paragraph_8393"
  },
  {
    "type": "paragraph",
    "content": "The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`. If the `type` argument is `null`, Node.js will\nautodetect `target` type and use `'file'` or `'dir'`. If the `target` does not\nexist, `'file'` will be used. Windows junction points require the destination\npath to be absolute. When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path. Junction points on NTFS volumes\ncan only point to directories.",
    "originalSentence": "The `type` argument is only used on Windows platforms and can be one of `'dir'`,\n`'file'`, or `'junction'`. If the `type` argument is `null`, Node.js will\nautodetect `target` type and use `'file'` or `'dir'`. If the `target` does not\nexist, `'file'` will be used. Windows junction points require the destination\npath to be absolute. When using `'junction'`, the `target` argument will\nautomatically be normalized to absolute path. Junction points on NTFS volumes\ncan only point to directories.",
    "position": 8394,
    "id": "paragraph_8394"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.truncate(path[, len])`",
    "originalSentence": "### `fsPromises.truncate(path[, len])`",
    "position": 8395,
    "id": "paragraph_8395"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8396,
    "id": "paragraph_8396"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8397,
    "id": "paragraph_8397"
  },
  {
    "type": "paragraph",
    "content": "Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes.",
    "originalSentence": "Truncates (shortens or extends the length) of the content at `path` to `len`\nbytes.",
    "position": 8398,
    "id": "paragraph_8398"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.unlink(path)`",
    "originalSentence": "### `fsPromises.unlink(path)`",
    "position": 8399,
    "id": "paragraph_8399"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8400,
    "id": "paragraph_8400"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8401,
    "id": "paragraph_8401"
  },
  {
    "type": "paragraph",
    "content": "If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the `path` refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX unlink(2)\ndocumentation for more detail.",
    "originalSentence": "If `path` refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the `path` refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX unlink(2)\ndocumentation for more detail.",
    "position": 8402,
    "id": "paragraph_8402"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.utimes(path, atime, mtime)`",
    "originalSentence": "### `fsPromises.utimes(path, atime, mtime)`",
    "position": 8403,
    "id": "paragraph_8403"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 8404,
    "id": "paragraph_8404"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8405,
    "id": "paragraph_8405"
  },
  {
    "type": "paragraph",
    "content": "Change the file system timestamps of the object referenced by `path`.",
    "originalSentence": "Change the file system timestamps of the object referenced by `path`.",
    "position": 8406,
    "id": "paragraph_8406"
  },
  {
    "type": "paragraph",
    "content": "The `atime` and `mtime` arguments follow these rules:",
    "originalSentence": "The `atime` and `mtime` arguments follow these rules:",
    "position": 8407,
    "id": "paragraph_8407"
  },
  {
    "type": "paragraph",
    "content": "* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789.0'`.\n* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "originalSentence": "* Values can be either numbers representing Unix epoch time, `Date`s, or a\n  numeric string like `'123456789.0'`.\n* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "position": 8408,
    "id": "paragraph_8408"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.watch(filename[, options])`",
    "originalSentence": "### `fsPromises.watch(filename[, options])`",
    "position": 8409,
    "id": "paragraph_8409"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v15.9.0\n  - v14.18.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v15.9.0\n  - v14.18.0\n-->",
    "position": 8410,
    "id": "paragraph_8410"
  },
  {
    "type": "paragraph",
    "content": "* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.\n  * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.\n  * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.\n  * `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop.\n  * `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned. **Default:** `2048`.\n  * `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows. `'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception. **Default:** `'ignore'`.\n* Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed.",
    "originalSentence": "* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.\n  * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.\n  * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.\n  * `signal` {AbortSignal} An {AbortSignal} used to signal when the watcher\n    should stop.\n  * `maxQueue` {number} Specifies the number of events to queue between iterations\n    of the {AsyncIterator} returned. **Default:** `2048`.\n  * `overflow` {string} Either `'ignore'` or `'throw'` when there are more events to be\n    queued than `maxQueue` allows. `'ignore'` means overflow events are dropped and a\n    warning is emitted, while `'throw'` means to throw an exception. **Default:** `'ignore'`.\n* Returns: {AsyncIterator} of objects with the properties:\n  * `eventType` {string} The type of change\n  * `filename` {string|Buffer|null} The name of the file changed.",
    "position": 8411,
    "id": "paragraph_8411"
  },
  {
    "type": "paragraph",
    "content": "Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory.",
    "originalSentence": "Returns an async iterator that watches for changes on `filename`, where `filename`\nis either a file or a directory.",
    "position": 8412,
    "id": "paragraph_8412"
  },
  {
    "type": "paragraph",
    "content": "```js\nconst { watch } = require('node:fs/promises');",
    "originalSentence": "```js\nconst { watch } = require('node:fs/promises');",
    "position": 8413,
    "id": "paragraph_8413"
  },
  {
    "type": "paragraph",
    "content": "const ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.abort(), 10000);",
    "originalSentence": "const ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.abort(), 10000);",
    "position": 8414,
    "id": "paragraph_8414"
  },
  {
    "type": "paragraph",
    "content": "(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.log(event);\n  } catch (err) {\n    if (err.name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```",
    "originalSentence": "(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.log(event);\n  } catch (err) {\n    if (err.name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```",
    "position": 8415,
    "id": "paragraph_8415"
  },
  {
    "type": "paragraph",
    "content": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "originalSentence": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "position": 8416,
    "id": "paragraph_8416"
  },
  {
    "type": "paragraph",
    "content": "All the [caveats][] for `fs.watch()` also apply to `fsPromises.watch()`.",
    "originalSentence": "All the [caveats][] for `fs.watch()` also apply to `fsPromises.watch()`.",
    "position": 8417,
    "id": "paragraph_8417"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.writeFile(file, data[, options])`",
    "originalSentence": "### `fsPromises.writeFile(file, data[, options])`",
    "position": 8418,
    "id": "paragraph_8418"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.\n  - version:\n      - v15.14.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.\n  - version:\n      - v15.2.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.\n  - version:\n      - v15.14.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/37490\n    description: The `data` argument supports `AsyncIterable`, `Iterable`, and `Stream`.\n  - version:\n      - v15.2.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n-->",
    "position": 8419,
    "id": "paragraph_8419"
  },
  {
    "type": "paragraph",
    "content": "* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.\n  * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle.sync()` is used to flush the data.\n    **Default:** `false`.\n  * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "originalSentence": "* `file` {string|Buffer|URL|FileHandle} filename or `FileHandle`\n* `data` {string|Buffer|TypedArray|DataView|AsyncIterable|Iterable|Stream}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.\n  * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `filehandle.sync()` is used to flush the data.\n    **Default:** `false`.\n  * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* Returns: {Promise} Fulfills with `undefined` upon success.",
    "position": 8420,
    "id": "paragraph_8420"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously writes data to a file, replacing the file if it already exists.\n`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "originalSentence": "Asynchronously writes data to a file, replacing the file if it already exists.\n`data` can be a string, a buffer, an {AsyncIterable}, or an {Iterable} object.",
    "position": 8421,
    "id": "paragraph_8421"
  },
  {
    "type": "paragraph",
    "content": "The `encoding` option is ignored if `data` is a buffer.",
    "originalSentence": "The `encoding` option is ignored if `data` is a buffer.",
    "position": 8422,
    "id": "paragraph_8422"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 8423,
    "id": "paragraph_8423"
  },
  {
    "type": "paragraph",
    "content": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "position": 8424,
    "id": "paragraph_8424"
  },
  {
    "type": "paragraph",
    "content": "Any specified {FileHandle} has to support writing.",
    "originalSentence": "Any specified {FileHandle} has to support writing.",
    "position": 8425,
    "id": "paragraph_8425"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `fsPromises.writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled.",
    "originalSentence": "It is unsafe to use `fsPromises.writeFile()` multiple times on the same file\nwithout waiting for the promise to be settled.",
    "position": 8426,
    "id": "paragraph_8426"
  },
  {
    "type": "paragraph",
    "content": "Similarly to `fsPromises.readFile` - `fsPromises.writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it. For performance sensitive code consider using\n[`fs.createWriteStream()`][] or [`filehandle.createWriteStream()`][].",
    "originalSentence": "Similarly to `fsPromises.readFile` - `fsPromises.writeFile` is a convenience\nmethod that performs multiple `write` calls internally to write the buffer\npassed to it. For performance sensitive code consider using\n[`fs.createWriteStream()`][] or [`filehandle.createWriteStream()`][].",
    "position": 8427,
    "id": "paragraph_8427"
  },
  {
    "type": "paragraph",
    "content": "It is possible to use an {AbortSignal} to cancel an `fsPromises.writeFile()`.\nCancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "originalSentence": "It is possible to use an {AbortSignal} to cancel an `fsPromises.writeFile()`.\nCancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "position": 8428,
    "id": "paragraph_8428"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';",
    "position": 8429,
    "id": "paragraph_8429"
  },
  {
    "type": "paragraph",
    "content": "try {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.from('Hello Node.js'));\n  const promise = writeFile('message.txt', data, { signal });",
    "originalSentence": "try {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.from('Hello Node.js'));\n  const promise = writeFile('message.txt', data, { signal });",
    "position": 8430,
    "id": "paragraph_8430"
  },
  {
    "type": "paragraph",
    "content": "// Abort the request before the promise settles.\n  controller.abort();",
    "originalSentence": "// Abort the request before the promise settles.\n  controller.abort();",
    "position": 8431,
    "id": "paragraph_8431"
  },
  {
    "type": "paragraph",
    "content": "await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}\n```",
    "originalSentence": "await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}\n```",
    "position": 8432,
    "id": "paragraph_8432"
  },
  {
    "type": "paragraph",
    "content": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.writeFile` performs.",
    "originalSentence": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.writeFile` performs.",
    "position": 8433,
    "id": "paragraph_8433"
  },
  {
    "type": "paragraph",
    "content": "### `fsPromises.constants`",
    "originalSentence": "### `fsPromises.constants`",
    "position": 8434,
    "id": "paragraph_8434"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v18.4.0\n  - v16.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v18.4.0\n  - v16.17.0\n-->",
    "position": 8435,
    "id": "paragraph_8435"
  },
  {
    "type": "paragraph",
    "content": "Returns an object containing commonly used constants for file system\noperations. The object is the same as `fs.constants`. See [FS constants][]\nfor more details.",
    "originalSentence": "Returns an object containing commonly used constants for file system\noperations. The object is the same as `fs.constants`. See [FS constants][]\nfor more details.",
    "position": 8436,
    "id": "paragraph_8436"
  },
  {
    "type": "paragraph",
    "content": "The callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error.",
    "originalSentence": "The callback APIs perform all operations asynchronously, without blocking the\nevent loop, then invoke a callback function upon completion or error.",
    "position": 8437,
    "id": "paragraph_8437"
  },
  {
    "type": "paragraph",
    "content": "The callback APIs use the underlying Node.js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "originalSentence": "The callback APIs use the underlying Node.js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.",
    "position": 8438,
    "id": "paragraph_8438"
  },
  {
    "type": "paragraph",
    "content": "### `fs.access(path[, mode], callback)`",
    "originalSentence": "### `fs.access(path[, mode], callback)`",
    "position": 8439,
    "id": "paragraph_8439"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs.F_OK`, `fs.R_OK`, `fs.W_OK` and `fs.X_OK`\n                 which were present directly on `fs` are removed.\n  - version: v20.8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs.F_OK`, `fs.R_OK`, `fs.W_OK` and `fs.X_OK`\n                 which were present directly on `fs` are deprecated.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v6.3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs.R_OK`, etc which were present directly\n                 on `fs` were moved into `fs.constants` as a soft deprecation.\n                 Thus for Node.js `< v6.3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs.constants || fs).R_OK` to work with all\n                 versions.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.15\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/55862\n    description: The constants `fs.F_OK`, `fs.R_OK`, `fs.W_OK` and `fs.X_OK`\n                 which were present directly on `fs` are removed.\n  - version: v20.8.0\n    pr-url: https://github.com/nodejs/node/pull/49683\n    description: The constants `fs.F_OK`, `fs.R_OK`, `fs.W_OK` and `fs.X_OK`\n                 which were present directly on `fs` are deprecated.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v6.3.0\n    pr-url: https://github.com/nodejs/node/pull/6534\n    description: The constants like `fs.R_OK`, etc which were present directly\n                 on `fs` were moved into `fs.constants` as a soft deprecation.\n                 Thus for Node.js `< v6.3.0` use `fs`\n                 to access those constants, or\n                 do something like `(fs.constants || fs).R_OK` to work with all\n                 versions.\n-->",
    "position": 8440,
    "id": "paragraph_8440"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.constants.F_OK`\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.constants.F_OK`\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8441,
    "id": "paragraph_8441"
  },
  {
    "type": "paragraph",
    "content": "Tests a user's permissions for the file or directory specified by `path`.\nThe `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.constants.F_OK`\nor a mask consisting of the bitwise OR of any of `fs.constants.R_OK`,\n`fs.constants.W_OK`, and `fs.constants.X_OK` (e.g.\n`fs.constants.W_OK | fs.constants.R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "Tests a user's permissions for the file or directory specified by `path`.\nThe `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. `mode` should be either the value `fs.constants.F_OK`\nor a mask consisting of the bitwise OR of any of `fs.constants.R_OK`,\n`fs.constants.W_OK`, and `fs.constants.X_OK` (e.g.\n`fs.constants.W_OK | fs.constants.R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "position": 8442,
    "id": "paragraph_8442"
  },
  {
    "type": "paragraph",
    "content": "The final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if\n`package.json` exists, and if it is readable or writable.",
    "originalSentence": "The final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if\n`package.json` exists, and if it is readable or writable.",
    "position": 8443,
    "id": "paragraph_8443"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { access, constants } from 'node:fs';",
    "originalSentence": "```mjs\nimport { access, constants } from 'node:fs';",
    "position": 8444,
    "id": "paragraph_8444"
  },
  {
    "type": "paragraph",
    "content": "const file = 'package.json';",
    "originalSentence": "const file = 'package.json';",
    "position": 8445,
    "id": "paragraph_8445"
  },
  {
    "type": "paragraph",
    "content": "// Check if the file exists in the current directory.\naccess(file, constants.F_OK, (err) => {\n  console.log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});",
    "originalSentence": "// Check if the file exists in the current directory.\naccess(file, constants.F_OK, (err) => {\n  console.log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});",
    "position": 8446,
    "id": "paragraph_8446"
  },
  {
    "type": "paragraph",
    "content": "// Check if the file is readable.\naccess(file, constants.R_OK, (err) => {\n  console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});",
    "originalSentence": "// Check if the file is readable.\naccess(file, constants.R_OK, (err) => {\n  console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});",
    "position": 8447,
    "id": "paragraph_8447"
  },
  {
    "type": "paragraph",
    "content": "// Check if the file is writable.\naccess(file, constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});",
    "originalSentence": "// Check if the file is writable.\naccess(file, constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});",
    "position": 8448,
    "id": "paragraph_8448"
  },
  {
    "type": "paragraph",
    "content": "// Check if the file is readable and writable.\naccess(file, constants.R_OK | constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});\n```",
    "originalSentence": "// Check if the file is readable and writable.\naccess(file, constants.R_OK | constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});\n```",
    "position": 8449,
    "id": "paragraph_8449"
  },
  {
    "type": "paragraph",
    "content": "Do not use `fs.access()` to check for the accessibility of a file before calling\n`fs.open()`, `fs.readFile()`, or `fs.writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.",
    "originalSentence": "Do not use `fs.access()` to check for the accessibility of a file before calling\n`fs.open()`, `fs.readFile()`, or `fs.writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.",
    "position": 8450,
    "id": "paragraph_8450"
  },
  {
    "type": "paragraph",
    "content": "**write (NOT RECOMMENDED)**",
    "originalSentence": "**write (NOT RECOMMENDED)**",
    "position": 8451,
    "id": "paragraph_8451"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { access, open, close } from 'node:fs';",
    "originalSentence": "```mjs\nimport { access, open, close } from 'node:fs';",
    "position": 8452,
    "id": "paragraph_8452"
  },
  {
    "type": "paragraph",
    "content": "access('myfile', (err) => {\n  if (!err) {\n    console.error('myfile already exists');\n    return;\n  }",
    "originalSentence": "access('myfile', (err) => {\n  if (!err) {\n    console.error('myfile already exists');\n    return;\n  }",
    "position": 8453,
    "id": "paragraph_8453"
  },
  {
    "type": "paragraph",
    "content": "open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;",
    "originalSentence": "open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;",
    "position": 8454,
    "id": "paragraph_8454"
  },
  {
    "type": "paragraph",
    "content": "try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```",
    "originalSentence": "try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```",
    "position": 8455,
    "id": "paragraph_8455"
  },
  {
    "type": "paragraph",
    "content": "**write (RECOMMENDED)**",
    "originalSentence": "**write (RECOMMENDED)**",
    "position": 8456,
    "id": "paragraph_8456"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close } from 'node:fs';",
    "position": 8457,
    "id": "paragraph_8457"
  },
  {
    "type": "paragraph",
    "content": "open('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }",
    "originalSentence": "open('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }",
    "position": 8458,
    "id": "paragraph_8458"
  },
  {
    "type": "paragraph",
    "content": "try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "originalSentence": "try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "position": 8459,
    "id": "paragraph_8459"
  },
  {
    "type": "paragraph",
    "content": "**read (NOT RECOMMENDED)**",
    "originalSentence": "**read (NOT RECOMMENDED)**",
    "position": 8460,
    "id": "paragraph_8460"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }",
    "originalSentence": "```mjs\nimport { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }",
    "position": 8461,
    "id": "paragraph_8461"
  },
  {
    "type": "paragraph",
    "content": "open('myfile', 'r', (err, fd) => {\n    if (err) throw err;",
    "originalSentence": "open('myfile', 'r', (err, fd) => {\n    if (err) throw err;",
    "position": 8462,
    "id": "paragraph_8462"
  },
  {
    "type": "paragraph",
    "content": "try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```",
    "originalSentence": "try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```",
    "position": 8463,
    "id": "paragraph_8463"
  },
  {
    "type": "paragraph",
    "content": "**read (RECOMMENDED)**",
    "originalSentence": "**read (RECOMMENDED)**",
    "position": 8464,
    "id": "paragraph_8464"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close } from 'node:fs';",
    "position": 8465,
    "id": "paragraph_8465"
  },
  {
    "type": "paragraph",
    "content": "open('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }",
    "originalSentence": "open('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }",
    "position": 8466,
    "id": "paragraph_8466"
  },
  {
    "type": "paragraph",
    "content": "try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "originalSentence": "try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "position": 8467,
    "id": "paragraph_8467"
  },
  {
    "type": "paragraph",
    "content": "The \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "originalSentence": "The \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "position": 8468,
    "id": "paragraph_8468"
  },
  {
    "type": "paragraph",
    "content": "In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.",
    "originalSentence": "In general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.",
    "position": 8469,
    "id": "paragraph_8469"
  },
  {
    "type": "paragraph",
    "content": "On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs.access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.",
    "originalSentence": "On Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs.access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.",
    "position": 8470,
    "id": "paragraph_8470"
  },
  {
    "type": "paragraph",
    "content": "### `fs.appendFile(path, data[, options], callback)`",
    "originalSentence": "### `fs.appendFile(path, data[, options], callback)`",
    "position": 8471,
    "id": "paragraph_8471"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.6.7\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.6.7\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "position": 8472,
    "id": "paragraph_8472"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8473,
    "id": "paragraph_8473"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "originalSentence": "Asynchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "position": 8474,
    "id": "paragraph_8474"
  },
  {
    "type": "paragraph",
    "content": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "position": 8475,
    "id": "paragraph_8475"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { appendFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { appendFile } from 'node:fs';",
    "position": 8476,
    "id": "paragraph_8476"
  },
  {
    "type": "paragraph",
    "content": "appendFile('message.txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.log('The \"data to append\" was appended to file!');\n});\n```",
    "originalSentence": "appendFile('message.txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.log('The \"data to append\" was appended to file!');\n});\n```",
    "position": 8477,
    "id": "paragraph_8477"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding:",
    "originalSentence": "If `options` is a string, then it specifies the encoding:",
    "position": 8478,
    "id": "paragraph_8478"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { appendFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { appendFile } from 'node:fs';",
    "position": 8479,
    "id": "paragraph_8479"
  },
  {
    "type": "paragraph",
    "content": "appendFile('message.txt', 'data to append', 'utf8', callback);\n```",
    "originalSentence": "appendFile('message.txt', 'data to append', 'utf8', callback);\n```",
    "position": 8480,
    "id": "paragraph_8480"
  },
  {
    "type": "paragraph",
    "content": "The `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.open()` or `fs.openSync()`). The file descriptor will\nnot be closed automatically.",
    "originalSentence": "The `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.open()` or `fs.openSync()`). The file descriptor will\nnot be closed automatically.",
    "position": 8481,
    "id": "paragraph_8481"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close, appendFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close, appendFile } from 'node:fs';",
    "position": 8482,
    "id": "paragraph_8482"
  },
  {
    "type": "paragraph",
    "content": "function closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}",
    "originalSentence": "function closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}",
    "position": 8483,
    "id": "paragraph_8483"
  },
  {
    "type": "paragraph",
    "content": "open('message.txt', 'a', (err, fd) => {\n  if (err) throw err;",
    "originalSentence": "open('message.txt', 'a', (err, fd) => {\n  if (err) throw err;",
    "position": 8484,
    "id": "paragraph_8484"
  },
  {
    "type": "paragraph",
    "content": "try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```",
    "originalSentence": "try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```",
    "position": 8485,
    "id": "paragraph_8485"
  },
  {
    "type": "paragraph",
    "content": "### `fs.chmod(path, mode, callback)`",
    "originalSentence": "### `fs.chmod(path, mode, callback)`",
    "position": 8486,
    "id": "paragraph_8486"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.30\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.30\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8487,
    "id": "paragraph_8487"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8488,
    "id": "paragraph_8488"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously changes the permissions of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Asynchronously changes the permissions of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 8489,
    "id": "paragraph_8489"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX chmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX chmod(2) documentation for more detail.",
    "position": 8490,
    "id": "paragraph_8490"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { chmod } from 'node:fs';",
    "originalSentence": "```mjs\nimport { chmod } from 'node:fs';",
    "position": 8491,
    "id": "paragraph_8491"
  },
  {
    "type": "paragraph",
    "content": "chmod('my_file.txt', 0o775, (err) => {\n  if (err) throw err;\n  console.log('The permissions for file \"my_file.txt\" have been changed!');\n});\n```",
    "originalSentence": "chmod('my_file.txt', 0o775, (err) => {\n  if (err) throw err;\n  console.log('The permissions for file \"my_file.txt\" have been changed!');\n});\n```",
    "position": 8492,
    "id": "paragraph_8492"
  },
  {
    "type": "paragraph",
    "content": "The `mode` argument used in both the `fs.chmod()` and `fs.chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:",
    "originalSentence": "The `mode` argument used in both the `fs.chmod()` and `fs.chmodSync()`\nmethods is a numeric bitmask created using a logical OR of the following\nconstants:",
    "position": 8493,
    "id": "paragraph_8493"
  },
  {
    "type": "paragraph",
    "content": "| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs.constants.S_IRUSR` | `0o400` | read by owner            |\n| `fs.constants.S_IWUSR` | `0o200` | write by owner           |\n| `fs.constants.S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs.constants.S_IRGRP` | `0o40`  | read by group            |\n| `fs.constants.S_IWGRP` | `0o20`  | write by group           |\n| `fs.constants.S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs.constants.S_IROTH` | `0o4`   | read by others           |\n| `fs.constants.S_IWOTH` | `0o2`   | write by others          |\n| `fs.constants.S_IXOTH` | `0o1`   | execute/search by others |",
    "originalSentence": "| Constant               | Octal   | Description              |\n| ---------------------- | ------- | ------------------------ |\n| `fs.constants.S_IRUSR` | `0o400` | read by owner            |\n| `fs.constants.S_IWUSR` | `0o200` | write by owner           |\n| `fs.constants.S_IXUSR` | `0o100` | execute/search by owner  |\n| `fs.constants.S_IRGRP` | `0o40`  | read by group            |\n| `fs.constants.S_IWGRP` | `0o20`  | write by group           |\n| `fs.constants.S_IXGRP` | `0o10`  | execute/search by group  |\n| `fs.constants.S_IROTH` | `0o4`   | read by others           |\n| `fs.constants.S_IWOTH` | `0o2`   | write by others          |\n| `fs.constants.S_IXOTH` | `0o1`   | execute/search by others |",
    "position": 8494,
    "id": "paragraph_8494"
  },
  {
    "type": "paragraph",
    "content": "An easier method of constructing the `mode` is to use a sequence of three\noctal digits (e.g. `765`). The left-most digit (`7` in the example), specifies\nthe permissions for the file owner. The middle digit (`6` in the example),\nspecifies permissions for the group. The right-most digit (`5` in the example),\nspecifies the permissions for others.",
    "originalSentence": "An easier method of constructing the `mode` is to use a sequence of three\noctal digits (e.g. `765`). The left-most digit (`7` in the example), specifies\nthe permissions for the file owner. The middle digit (`6` in the example),\nspecifies permissions for the group. The right-most digit (`5` in the example),\nspecifies the permissions for others.",
    "position": 8495,
    "id": "paragraph_8495"
  },
  {
    "type": "paragraph",
    "content": "| Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |",
    "originalSentence": "| Number | Description              |\n| ------ | ------------------------ |\n| `7`    | read, write, and execute |\n| `6`    | read and write           |\n| `5`    | read and execute         |\n| `4`    | read only                |\n| `3`    | write and execute        |\n| `2`    | write only               |\n| `1`    | execute only             |\n| `0`    | no permission            |",
    "position": 8496,
    "id": "paragraph_8496"
  },
  {
    "type": "paragraph",
    "content": "For example, the octal value `0o765` means:",
    "originalSentence": "For example, the octal value `0o765` means:",
    "position": 8497,
    "id": "paragraph_8497"
  },
  {
    "type": "paragraph",
    "content": "* The owner may read, write, and execute the file.\n* The group may read and write the file.\n* Others may read and execute the file.",
    "originalSentence": "* The owner may read, write, and execute the file.\n* The group may read and write the file.\n* Others may read and execute the file.",
    "position": 8498,
    "id": "paragraph_8498"
  },
  {
    "type": "paragraph",
    "content": "When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently. Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs.constants`.",
    "originalSentence": "When using raw numbers where file modes are expected, any value larger than\n`0o777` may result in platform-specific behaviors that are not supported to work\nconsistently. Therefore constants like `S_ISVTX`, `S_ISGID`, or `S_ISUID` are\nnot exposed in `fs.constants`.",
    "position": 8499,
    "id": "paragraph_8499"
  },
  {
    "type": "paragraph",
    "content": "Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented.",
    "originalSentence": "Caveats: on Windows only the write permission can be changed, and the\ndistinction among the permissions of group, owner, or others is not\nimplemented.",
    "position": 8500,
    "id": "paragraph_8500"
  },
  {
    "type": "paragraph",
    "content": "### `fs.chown(path, uid, gid, callback)`",
    "originalSentence": "### `fs.chown(path, uid, gid, callback)`",
    "position": 8501,
    "id": "paragraph_8501"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.97\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.97\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8502,
    "id": "paragraph_8502"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8503,
    "id": "paragraph_8503"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously changes owner and group of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Asynchronously changes owner and group of a file. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 8504,
    "id": "paragraph_8504"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX chown(2) documentation for more detail.",
    "originalSentence": "See the POSIX chown(2) documentation for more detail.",
    "position": 8505,
    "id": "paragraph_8505"
  },
  {
    "type": "paragraph",
    "content": "### `fs.close(fd[, callback])`",
    "originalSentence": "### `fs.close(fd[, callback])`",
    "position": 8506,
    "id": "paragraph_8506"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n      - v15.9.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n      - v15.9.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/37174\n    description: A default callback is now used if one is not provided.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8507,
    "id": "paragraph_8507"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8508,
    "id": "paragraph_8508"
  },
  {
    "type": "paragraph",
    "content": "Closes the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Closes the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 8509,
    "id": "paragraph_8509"
  },
  {
    "type": "paragraph",
    "content": "Calling `fs.close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "originalSentence": "Calling `fs.close()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "position": 8510,
    "id": "paragraph_8510"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX close(2) documentation for more detail.",
    "originalSentence": "See the POSIX close(2) documentation for more detail.",
    "position": 8511,
    "id": "paragraph_8511"
  },
  {
    "type": "paragraph",
    "content": "### `fs.copyFile(src, dest[, mode], callback)`",
    "originalSentence": "### `fs.copyFile(src, dest[, mode], callback)`",
    "position": 8512,
    "id": "paragraph_8512"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v8.5.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.\n-->",
    "originalSentence": "<!-- YAML\nadded: v8.5.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.\n-->",
    "position": 8513,
    "id": "paragraph_8513"
  },
  {
    "type": "paragraph",
    "content": "* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8514,
    "id": "paragraph_8514"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. No arguments other than a possible exception are given to the\ncallback function. Node.js makes no guarantees about the atomicity of the copy\noperation. If an error occurs after the destination file has been opened for\nwriting, Node.js will attempt to remove the destination.",
    "originalSentence": "Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. No arguments other than a possible exception are given to the\ncallback function. Node.js makes no guarantees about the atomicity of the copy\noperation. If an error occurs after the destination file has been opened for\nwriting, Node.js will attempt to remove the destination.",
    "position": 8515,
    "id": "paragraph_8515"
  },
  {
    "type": "paragraph",
    "content": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.g.\n`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`).",
    "originalSentence": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.g.\n`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`).",
    "position": 8516,
    "id": "paragraph_8516"
  },
  {
    "type": "paragraph",
    "content": "* `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.\n* `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.\n* `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "originalSentence": "* `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.\n* `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.\n* `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "position": 8517,
    "id": "paragraph_8517"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { copyFile, constants } from 'node:fs';",
    "originalSentence": "```mjs\nimport { copyFile, constants } from 'node:fs';",
    "position": 8518,
    "id": "paragraph_8518"
  },
  {
    "type": "paragraph",
    "content": "function callback(err) {\n  if (err) throw err;\n  console.log('source.txt was copied to destination.txt');\n}",
    "originalSentence": "function callback(err) {\n  if (err) throw err;\n  console.log('source.txt was copied to destination.txt');\n}",
    "position": 8519,
    "id": "paragraph_8519"
  },
  {
    "type": "paragraph",
    "content": "// destination.txt will be created or overwritten by default.\ncopyFile('source.txt', 'destination.txt', callback);",
    "originalSentence": "// destination.txt will be created or overwritten by default.\ncopyFile('source.txt', 'destination.txt', callback);",
    "position": 8520,
    "id": "paragraph_8520"
  },
  {
    "type": "paragraph",
    "content": "// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL, callback);\n```",
    "originalSentence": "// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL, callback);\n```",
    "position": 8521,
    "id": "paragraph_8521"
  },
  {
    "type": "paragraph",
    "content": "### `fs.cp(src, dest[, options], callback)`",
    "originalSentence": "### `fs.cp(src, dest[, options], callback)`",
    "position": 8522,
    "id": "paragraph_8522"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v16.7.0\nchanges:\n  - version: v22.3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.copyFile()`.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n    - v17.6.0\n    - v16.15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.\n-->",
    "originalSentence": "<!-- YAML\nadded: v16.7.0\nchanges:\n  - version: v22.3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.copyFile()`.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n    - v17.6.0\n    - v16.15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.\n-->",
    "position": 8523,
    "id": "paragraph_8523"
  },
  {
    "type": "paragraph",
    "content": "* `src` {string|URL} source path to copy.\n* `dest` {string|URL} destination path to copy to.\n* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.\n  * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.\n  * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.\n    * `src` {string} source path to copy.\n    * `dest` {string} destination path to copy to.\n    * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.\n  * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.\n    **Default:** `true`.\n  * `mode` {integer} modifiers for copy operation. **Default:** `0`.\n    See `mode` flag of [`fs.copyFile()`][].\n  * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.\n  * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `src` {string|URL} source path to copy.\n* `dest` {string|URL} destination path to copy to.\n* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.\n  * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.\n  * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. Can also return a `Promise`\n    that resolves to `true` or `false` **Default:** `undefined`.\n    * `src` {string} source path to copy.\n    * `dest` {string} destination path to copy to.\n    * Returns: {boolean|Promise} A value that is coercible to `boolean` or\n      a `Promise` that fulfils with such value.\n  * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.\n    **Default:** `true`.\n  * `mode` {integer} modifiers for copy operation. **Default:** `0`.\n    See `mode` flag of [`fs.copyFile()`][].\n  * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.\n  * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8524,
    "id": "paragraph_8524"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "Asynchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 8525,
    "id": "paragraph_8525"
  },
  {
    "type": "paragraph",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 8526,
    "id": "paragraph_8526"
  },
  {
    "type": "paragraph",
    "content": "### `fs.createReadStream(path[, options])`",
    "originalSentence": "### `fs.createReadStream(path[, options])`",
    "position": 8527,
    "id": "paragraph_8527"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.\n  - version: v15.5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.\n  - version:\n     - v15.4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.\n  - version:\n     - v13.6.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.\n  - version: v11.0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v2.3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.\n  - version: v15.5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.\n  - version:\n     - v15.4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.\n  - version:\n     - v13.6.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.\n  - version: v11.0.0\n    pr-url: https://github.com/nodejs/node/pull/19898\n    description: Impose new restrictions on `start` and `end`, throwing\n                 more appropriate errors in cases when we cannot reasonably\n                 handle the input values.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v2.3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.\n-->",
    "position": 8528,
    "id": "paragraph_8528"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'r'`.\n  * `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs.ReadStream}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'r'`.\n  * `encoding` {string} **Default:** `null`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `end` {integer} **Default:** `Infinity`\n  * `highWaterMark` {integer} **Default:** `64 * 1024`\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n* Returns: {fs.ReadStream}",
    "position": 8529,
    "id": "paragraph_8529"
  },
  {
    "type": "paragraph",
    "content": "`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. If `fd` is specified and `start` is\nomitted or `undefined`, `fs.createReadStream()` reads sequentially from the\ncurrent file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "originalSentence": "`options` can include `start` and `end` values to read a range of bytes from\nthe file instead of the entire file. Both `start` and `end` are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. If `fd` is specified and `start` is\nomitted or `undefined`, `fs.createReadStream()` reads sequentially from the\ncurrent file position. The `encoding` can be any one of those accepted by\n{Buffer}.",
    "position": 8530,
    "id": "paragraph_8530"
  },
  {
    "type": "paragraph",
    "content": "If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor. This means that no `'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s should be passed to\n{net.Socket}.",
    "originalSentence": "If `fd` is specified, `ReadStream` will ignore the `path` argument and will use\nthe specified file descriptor. This means that no `'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s should be passed to\n{net.Socket}.",
    "position": 8531,
    "id": "paragraph_8531"
  },
  {
    "type": "paragraph",
    "content": "If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "originalSentence": "If `fd` points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally.",
    "position": 8532,
    "id": "paragraph_8532"
  },
  {
    "type": "paragraph",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "position": 8533,
    "id": "paragraph_8533"
  },
  {
    "type": "paragraph",
    "content": "By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`. When providing the `fs` option,\nan override for `read` is required. If no `fd` is provided, an override for\n`open` is also required. If `autoClose` is `true`, an override for `close` is\nalso required.",
    "originalSentence": "By providing the `fs` option, it is possible to override the corresponding `fs`\nimplementations for `open`, `read`, and `close`. When providing the `fs` option,\nan override for `read` is required. If no `fd` is provided, an override for\n`open` is also required. If `autoClose` is `true`, an override for `close` is\nalso required.",
    "position": 8534,
    "id": "paragraph_8534"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { createReadStream } from 'node:fs';",
    "originalSentence": "```mjs\nimport { createReadStream } from 'node:fs';",
    "position": 8535,
    "id": "paragraph_8535"
  },
  {
    "type": "paragraph",
    "content": "// Create a stream from some character device.\nconst stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);\n```",
    "originalSentence": "// Create a stream from some character device.\nconst stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);\n```",
    "position": 8536,
    "id": "paragraph_8536"
  },
  {
    "type": "paragraph",
    "content": "If `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "originalSentence": "If `autoClose` is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If `autoClose` is set to true (default\nbehavior), on `'error'` or `'end'` the file descriptor will be closed\nautomatically.",
    "position": 8537,
    "id": "paragraph_8537"
  },
  {
    "type": "paragraph",
    "content": "`mode` sets the file mode (permission and sticky bits), but only if the\nfile was created.",
    "originalSentence": "`mode` sets the file mode (permission and sticky bits), but only if the\nfile was created.",
    "position": 8538,
    "id": "paragraph_8538"
  },
  {
    "type": "paragraph",
    "content": "An example to read the last 10 bytes of a file which is 100 bytes long:",
    "originalSentence": "An example to read the last 10 bytes of a file which is 100 bytes long:",
    "position": 8539,
    "id": "paragraph_8539"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { createReadStream } from 'node:fs';",
    "originalSentence": "```mjs\nimport { createReadStream } from 'node:fs';",
    "position": 8540,
    "id": "paragraph_8540"
  },
  {
    "type": "paragraph",
    "content": "createReadStream('sample.txt', { start: 90, end: 99 });\n```",
    "originalSentence": "createReadStream('sample.txt', { start: 90, end: 99 });\n```",
    "position": 8541,
    "id": "paragraph_8541"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 8542,
    "id": "paragraph_8542"
  },
  {
    "type": "paragraph",
    "content": "### `fs.createWriteStream(path[, options])`",
    "originalSentence": "### `fs.createWriteStream(path[, options])`",
    "position": 8543,
    "id": "paragraph_8543"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.\n  - version: v15.5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.\n  - version:\n     - v15.4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.\n  - version:\n     - v13.6.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v5.5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now.\n  - version: v2.3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50093\n    description: The `flush` option is now supported.\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `open` method if an `fd` was provided.\n  - version: v16.10.0\n    pr-url: https://github.com/nodejs/node/pull/40013\n    description: The `fs` option does not need `close` method if `autoClose` is `false`.\n  - version: v15.5.0\n    pr-url: https://github.com/nodejs/node/pull/36431\n    description: Add support for `AbortSignal`.\n  - version:\n     - v15.4.0\n    pr-url: https://github.com/nodejs/node/pull/35922\n    description: The `fd` option accepts FileHandle arguments.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31408\n    description: Change `emitClose` default to `true`.\n  - version:\n     - v13.6.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/29083\n    description: The `fs` options allow overriding the used `fs`\n                 implementation.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29212\n    description: Enable `emitClose` option.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v5.5.0\n    pr-url: https://github.com/nodejs/node/pull/3679\n    description: The `autoClose` option is supported now.\n  - version: v2.3.0\n    pr-url: https://github.com/nodejs/node/pull/1845\n    description: The passed `options` object can be a string now.\n-->",
    "position": 8544,
    "id": "paragraph_8544"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'w'`.\n  * `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* Returns: {fs.WriteStream}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `flags` {string} See [support of file system `flags`][]. **Default:**\n    `'w'`.\n  * `encoding` {string} **Default:** `'utf8'`\n  * `fd` {integer|FileHandle} **Default:** `null`\n  * `mode` {integer} **Default:** `0o666`\n  * `autoClose` {boolean} **Default:** `true`\n  * `emitClose` {boolean} **Default:** `true`\n  * `start` {integer}\n  * `fs` {Object|null} **Default:** `null`\n  * `signal` {AbortSignal|null} **Default:** `null`\n  * `highWaterMark` {number} **Default:** `16384`\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.\n* Returns: {fs.WriteStream}",
    "position": 8545,
    "id": "paragraph_8545"
  },
  {
    "type": "paragraph",
    "content": "`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`. The `encoding` can be any one of those accepted by {Buffer}.",
    "originalSentence": "`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`][]] range. Modifying a file rather than\nreplacing it may require the `flags` option to be set to `r+` rather than the\ndefault `w`. The `encoding` can be any one of those accepted by {Buffer}.",
    "position": 8546,
    "id": "paragraph_8546"
  },
  {
    "type": "paragraph",
    "content": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "originalSentence": "If `autoClose` is set to true (default behavior) on `'error'` or `'finish'`\nthe file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.",
    "position": 8547,
    "id": "paragraph_8547"
  },
  {
    "type": "paragraph",
    "content": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "originalSentence": "By default, the stream will emit a `'close'` event after it has been\ndestroyed.  Set the `emitClose` option to `false` to change this behavior.",
    "position": 8548,
    "id": "paragraph_8548"
  },
  {
    "type": "paragraph",
    "content": "By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`. Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required. If no `fd` option is supplied, an override\nfor `open` is also required. If `autoClose` is `true`, an override for `close`\nis also required.",
    "originalSentence": "By providing the `fs` option it is possible to override the corresponding `fs`\nimplementations for `open`, `write`, `writev`, and `close`. Overriding `write()`\nwithout `writev()` can reduce performance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option, overrides for at least one of\n`write` and `writev` are required. If no `fd` option is supplied, an override\nfor `open` is also required. If `autoClose` is `true`, an override for `close`\nis also required.",
    "position": 8549,
    "id": "paragraph_8549"
  },
  {
    "type": "paragraph",
    "content": "Like {fs.ReadStream}, if `fd` is specified, {fs.WriteStream} will ignore the\n`path` argument and will use the specified file descriptor. This means that no\n`'open'` event will be emitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to {net.Socket}.",
    "originalSentence": "Like {fs.ReadStream}, if `fd` is specified, {fs.WriteStream} will ignore the\n`path` argument and will use the specified file descriptor. This means that no\n`'open'` event will be emitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to {net.Socket}.",
    "position": 8550,
    "id": "paragraph_8550"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding.",
    "originalSentence": "If `options` is a string, then it specifies the encoding.",
    "position": 8551,
    "id": "paragraph_8551"
  },
  {
    "type": "paragraph",
    "content": "### `fs.exists(path, callback)`",
    "originalSentence": "### `fs.exists(path, callback)`",
    "position": 8552,
    "id": "paragraph_8552"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\ndeprecated: v1.0.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\ndeprecated: v1.0.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "position": 8553,
    "id": "paragraph_8553"
  },
  {
    "type": "paragraph",
    "content": "> Stability: 0 - Deprecated: Use [`fs.stat()`][] or [`fs.access()`][] instead.",
    "originalSentence": "> Stability: 0 - Deprecated: Use [`fs.stat()`][] or [`fs.access()`][] instead.",
    "position": 8554,
    "id": "paragraph_8554"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `exists` {boolean}",
    "position": 8555,
    "id": "paragraph_8555"
  },
  {
    "type": "paragraph",
    "content": "Test whether or not the element at the given `path` exists by checking with the file system.\nThen call the `callback` argument with either true or false:",
    "originalSentence": "Test whether or not the element at the given `path` exists by checking with the file system.\nThen call the `callback` argument with either true or false:",
    "position": 8556,
    "id": "paragraph_8556"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { exists } from 'node:fs';",
    "originalSentence": "```mjs\nimport { exists } from 'node:fs';",
    "position": 8557,
    "id": "paragraph_8557"
  },
  {
    "type": "paragraph",
    "content": "exists('/etc/passwd', (e) => {\n  console.log(e ? 'it exists' : 'no passwd!');\n});\n```",
    "originalSentence": "exists('/etc/passwd', (e) => {\n  console.log(e ? 'it exists' : 'no passwd!');\n});\n```",
    "position": 8558,
    "id": "paragraph_8558"
  },
  {
    "type": "paragraph",
    "content": "**The parameters for this callback are not consistent with other Node.js\ncallbacks.** Normally, the first parameter to a Node.js callback is an `err`\nparameter, optionally followed by other parameters. The `fs.exists()` callback\nhas only one boolean parameter. This is one reason `fs.access()` is recommended\ninstead of `fs.exists()`.",
    "originalSentence": "**The parameters for this callback are not consistent with other Node.js\ncallbacks.** Normally, the first parameter to a Node.js callback is an `err`\nparameter, optionally followed by other parameters. The `fs.exists()` callback\nhas only one boolean parameter. This is one reason `fs.access()` is recommended\ninstead of `fs.exists()`.",
    "position": 8559,
    "id": "paragraph_8559"
  },
  {
    "type": "paragraph",
    "content": "If `path` is a symbolic link, it is followed. Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`.",
    "originalSentence": "If `path` is a symbolic link, it is followed. Thus, if `path` exists but points\nto a non-existent element, the callback will receive the value `false`.",
    "position": 8560,
    "id": "paragraph_8560"
  },
  {
    "type": "paragraph",
    "content": "Using `fs.exists()` to check for the existence of a file before calling\n`fs.open()`, `fs.readFile()`, or `fs.writeFile()` is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.",
    "originalSentence": "Using `fs.exists()` to check for the existence of a file before calling\n`fs.open()`, `fs.readFile()`, or `fs.writeFile()` is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.",
    "position": 8561,
    "id": "paragraph_8561"
  },
  {
    "type": "paragraph",
    "content": "**write (NOT RECOMMENDED)**",
    "originalSentence": "**write (NOT RECOMMENDED)**",
    "position": 8562,
    "id": "paragraph_8562"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { exists, open, close } from 'node:fs';",
    "originalSentence": "```mjs\nimport { exists, open, close } from 'node:fs';",
    "position": 8563,
    "id": "paragraph_8563"
  },
  {
    "type": "paragraph",
    "content": "exists('myfile', (e) => {\n  if (e) {\n    console.error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;",
    "originalSentence": "exists('myfile', (e) => {\n  if (e) {\n    console.error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;",
    "position": 8564,
    "id": "paragraph_8564"
  },
  {
    "type": "paragraph",
    "content": "try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```",
    "originalSentence": "try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```",
    "position": 8565,
    "id": "paragraph_8565"
  },
  {
    "type": "paragraph",
    "content": "**write (RECOMMENDED)**",
    "originalSentence": "**write (RECOMMENDED)**",
    "position": 8566,
    "id": "paragraph_8566"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }",
    "originalSentence": "```mjs\nimport { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }",
    "position": 8567,
    "id": "paragraph_8567"
  },
  {
    "type": "paragraph",
    "content": "try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "originalSentence": "try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "position": 8568,
    "id": "paragraph_8568"
  },
  {
    "type": "paragraph",
    "content": "**read (NOT RECOMMENDED)**",
    "originalSentence": "**read (NOT RECOMMENDED)**",
    "position": 8569,
    "id": "paragraph_8569"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close, exists } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close, exists } from 'node:fs';",
    "position": 8570,
    "id": "paragraph_8570"
  },
  {
    "type": "paragraph",
    "content": "exists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;",
    "originalSentence": "exists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;",
    "position": 8571,
    "id": "paragraph_8571"
  },
  {
    "type": "paragraph",
    "content": "try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.error('myfile does not exist');\n  }\n});\n```",
    "originalSentence": "try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.error('myfile does not exist');\n  }\n});\n```",
    "position": 8572,
    "id": "paragraph_8572"
  },
  {
    "type": "paragraph",
    "content": "**read (RECOMMENDED)**",
    "originalSentence": "**read (RECOMMENDED)**",
    "position": 8573,
    "id": "paragraph_8573"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close } from 'node:fs';",
    "position": 8574,
    "id": "paragraph_8574"
  },
  {
    "type": "paragraph",
    "content": "open('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }",
    "originalSentence": "open('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }",
    "position": 8575,
    "id": "paragraph_8575"
  },
  {
    "type": "paragraph",
    "content": "try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "originalSentence": "try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```",
    "position": 8576,
    "id": "paragraph_8576"
  },
  {
    "type": "paragraph",
    "content": "The \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "originalSentence": "The \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.",
    "position": 8577,
    "id": "paragraph_8577"
  },
  {
    "type": "paragraph",
    "content": "In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess.",
    "originalSentence": "In general, check for the existence of a file only if the file won't be\nused directly, for example when its existence is a signal from another\nprocess.",
    "position": 8578,
    "id": "paragraph_8578"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fchmod(fd, mode, callback)`",
    "originalSentence": "### `fs.fchmod(fd, mode, callback)`",
    "position": 8579,
    "id": "paragraph_8579"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.7\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.7\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8580,
    "id": "paragraph_8580"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `mode` {string|integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8581,
    "id": "paragraph_8581"
  },
  {
    "type": "paragraph",
    "content": "Sets the permissions on the file. No arguments other than a possible exception\nare given to the completion callback.",
    "originalSentence": "Sets the permissions on the file. No arguments other than a possible exception\nare given to the completion callback.",
    "position": 8582,
    "id": "paragraph_8582"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX fchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchmod(2) documentation for more detail.",
    "position": 8583,
    "id": "paragraph_8583"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fchown(fd, uid, gid, callback)`",
    "originalSentence": "### `fs.fchown(fd, uid, gid, callback)`",
    "position": 8584,
    "id": "paragraph_8584"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.7\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.7\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8585,
    "id": "paragraph_8585"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8586,
    "id": "paragraph_8586"
  },
  {
    "type": "paragraph",
    "content": "Sets the owner of the file. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Sets the owner of the file. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 8587,
    "id": "paragraph_8587"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX fchown(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchown(2) documentation for more detail.",
    "position": 8588,
    "id": "paragraph_8588"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fdatasync(fd, callback)`",
    "originalSentence": "### `fs.fdatasync(fd, callback)`",
    "position": 8589,
    "id": "paragraph_8589"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.96\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.96\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8590,
    "id": "paragraph_8590"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8591,
    "id": "paragraph_8591"
  },
  {
    "type": "paragraph",
    "content": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 8592,
    "id": "paragraph_8592"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fstat(fd[, options], callback)`",
    "originalSentence": "### `fs.fstat(fd[, options], callback)`",
    "position": 8593,
    "id": "paragraph_8593"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.95\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.95\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8594,
    "id": "paragraph_8594"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.Stats}",
    "originalSentence": "* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.Stats}",
    "position": 8595,
    "id": "paragraph_8595"
  },
  {
    "type": "paragraph",
    "content": "Invokes the callback with the {fs.Stats} for the file descriptor.",
    "originalSentence": "Invokes the callback with the {fs.Stats} for the file descriptor.",
    "position": 8596,
    "id": "paragraph_8596"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX fstat(2) documentation for more detail.",
    "originalSentence": "See the POSIX fstat(2) documentation for more detail.",
    "position": 8597,
    "id": "paragraph_8597"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fsync(fd, callback)`",
    "originalSentence": "### `fs.fsync(fd, callback)`",
    "position": 8598,
    "id": "paragraph_8598"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.96\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.96\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8599,
    "id": "paragraph_8599"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8600,
    "id": "paragraph_8600"
  },
  {
    "type": "paragraph",
    "content": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX fsync(2) documentation for more detail. No arguments other\nthan a possible exception are given to the completion callback.",
    "originalSentence": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX fsync(2) documentation for more detail. No arguments other\nthan a possible exception are given to the completion callback.",
    "position": 8601,
    "id": "paragraph_8601"
  },
  {
    "type": "paragraph",
    "content": "### `fs.ftruncate(fd[, len], callback)`",
    "originalSentence": "### `fs.ftruncate(fd[, len], callback)`",
    "position": 8602,
    "id": "paragraph_8602"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.8.6\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.8.6\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8603,
    "id": "paragraph_8603"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8604,
    "id": "paragraph_8604"
  },
  {
    "type": "paragraph",
    "content": "Truncates the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Truncates the file descriptor. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 8605,
    "id": "paragraph_8605"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX ftruncate(2) documentation for more detail.",
    "originalSentence": "See the POSIX ftruncate(2) documentation for more detail.",
    "position": 8606,
    "id": "paragraph_8606"
  },
  {
    "type": "paragraph",
    "content": "If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file.",
    "originalSentence": "If the file referred to by the file descriptor was larger than `len` bytes, only\nthe first `len` bytes will be retained in the file.",
    "position": 8607,
    "id": "paragraph_8607"
  },
  {
    "type": "paragraph",
    "content": "For example, the following program retains only the first four bytes of the\nfile:",
    "originalSentence": "For example, the following program retains only the first four bytes of the\nfile:",
    "position": 8608,
    "id": "paragraph_8608"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close, ftruncate } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close, ftruncate } from 'node:fs';",
    "position": 8609,
    "id": "paragraph_8609"
  },
  {
    "type": "paragraph",
    "content": "function closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}",
    "originalSentence": "function closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}",
    "position": 8610,
    "id": "paragraph_8610"
  },
  {
    "type": "paragraph",
    "content": "open('temp.txt', 'r+', (err, fd) => {\n  if (err) throw err;",
    "originalSentence": "open('temp.txt', 'r+', (err, fd) => {\n  if (err) throw err;",
    "position": 8611,
    "id": "paragraph_8611"
  },
  {
    "type": "paragraph",
    "content": "try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```",
    "originalSentence": "try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});\n```",
    "position": 8612,
    "id": "paragraph_8612"
  },
  {
    "type": "paragraph",
    "content": "If the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):",
    "originalSentence": "If the file previously was shorter than `len` bytes, it is extended, and the\nextended part is filled with null bytes (`'\\0'`):",
    "position": 8613,
    "id": "paragraph_8613"
  },
  {
    "type": "paragraph",
    "content": "If `len` is negative then `0` will be used.",
    "originalSentence": "If `len` is negative then `0` will be used.",
    "position": 8614,
    "id": "paragraph_8614"
  },
  {
    "type": "paragraph",
    "content": "### `fs.futimes(fd, atime, mtime, callback)`",
    "originalSentence": "### `fs.futimes(fd, atime, mtime, callback)`",
    "position": 8615,
    "id": "paragraph_8615"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "position": 8616,
    "id": "paragraph_8616"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8617,
    "id": "paragraph_8617"
  },
  {
    "type": "paragraph",
    "content": "Change the file system timestamps of the object referenced by the supplied file\ndescriptor. See [`fs.utimes()`][].",
    "originalSentence": "Change the file system timestamps of the object referenced by the supplied file\ndescriptor. See [`fs.utimes()`][].",
    "position": 8618,
    "id": "paragraph_8618"
  },
  {
    "type": "paragraph",
    "content": "### `fs.glob(pattern[, options], callback)`",
    "originalSentence": "### `fs.glob(pattern[, options], callback)`",
    "position": 8619,
    "id": "paragraph_8619"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v22.0.0\nchanges:\n  - version:\n      - v24.1.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.7.0\n    - v22.14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.\n  - version: v22.2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.\n-->",
    "originalSentence": "<!-- YAML\nadded: v22.0.0\nchanges:\n  - version:\n      - v24.1.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.7.0\n    - v22.14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.\n  - version: v22.2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.\n-->",
    "position": 8620,
    "id": "paragraph_8620"
  },
  {
    "type": "paragraph",
    "content": "* `pattern` {string|string\\[]}",
    "originalSentence": "* `pattern` {string|string\\[]}",
    "position": 8621,
    "id": "paragraph_8621"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.\n  * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "originalSentence": "* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.\n  * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.",
    "position": 8622,
    "id": "paragraph_8622"
  },
  {
    "type": "paragraph",
    "content": "* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}",
    "position": 8623,
    "id": "paragraph_8623"
  },
  {
    "type": "paragraph",
    "content": "* Retrieves the files matching the specified pattern.",
    "originalSentence": "* Retrieves the files matching the specified pattern.",
    "position": 8624,
    "id": "paragraph_8624"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { glob } from 'node:fs';",
    "originalSentence": "```mjs\nimport { glob } from 'node:fs';",
    "position": 8625,
    "id": "paragraph_8625"
  },
  {
    "type": "paragraph",
    "content": "glob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});\n```",
    "originalSentence": "glob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});\n```",
    "position": 8626,
    "id": "paragraph_8626"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { glob } = require('node:fs');",
    "originalSentence": "```cjs\nconst { glob } = require('node:fs');",
    "position": 8627,
    "id": "paragraph_8627"
  },
  {
    "type": "paragraph",
    "content": "glob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});\n```",
    "originalSentence": "glob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});\n```",
    "position": 8628,
    "id": "paragraph_8628"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lchmod(path, mode, callback)`",
    "originalSentence": "### `fs.lchmod(path, mode, callback)`",
    "position": 8629,
    "id": "paragraph_8629"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\ndeprecated: v0.4.7\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\ndeprecated: v0.4.7\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8630,
    "id": "paragraph_8630"
  },
  {
    "type": "paragraph",
    "content": "> Stability: 0 - Deprecated",
    "originalSentence": "> Stability: 0 - Deprecated",
    "position": 8631,
    "id": "paragraph_8631"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {integer}\n* `callback` {Function}\n  * `err` {Error|AggregateError}",
    "position": 8632,
    "id": "paragraph_8632"
  },
  {
    "type": "paragraph",
    "content": "Changes the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "Changes the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 8633,
    "id": "paragraph_8633"
  },
  {
    "type": "paragraph",
    "content": "This method is only implemented on macOS.",
    "originalSentence": "This method is only implemented on macOS.",
    "position": 8634,
    "id": "paragraph_8634"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX lchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX lchmod(2) documentation for more detail.",
    "position": 8635,
    "id": "paragraph_8635"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lchown(path, uid, gid, callback)`",
    "originalSentence": "### `fs.lchown(path, uid, gid, callback)`",
    "position": 8636,
    "id": "paragraph_8636"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v0.4.7\n    description: Documentation-only deprecation.\n-->",
    "originalSentence": "<!-- YAML\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v0.4.7\n    description: Documentation-only deprecation.\n-->",
    "position": 8637,
    "id": "paragraph_8637"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8638,
    "id": "paragraph_8638"
  },
  {
    "type": "paragraph",
    "content": "Set the owner of the symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "Set the owner of the symbolic link. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 8639,
    "id": "paragraph_8639"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX lchown(2) documentation for more detail.",
    "originalSentence": "See the POSIX lchown(2) documentation for more detail.",
    "position": 8640,
    "id": "paragraph_8640"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lutimes(path, atime, mtime, callback)`",
    "originalSentence": "### `fs.lutimes(path, atime, mtime, callback)`",
    "position": 8641,
    "id": "paragraph_8641"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.5.0\n  - v12.19.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.5.0\n  - v12.19.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "position": 8642,
    "id": "paragraph_8642"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8643,
    "id": "paragraph_8643"
  },
  {
    "type": "paragraph",
    "content": "Changes the access and modification times of a file in the same way as\n[`fs.utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.",
    "originalSentence": "Changes the access and modification times of a file in the same way as\n[`fs.utimes()`][], with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.",
    "position": 8644,
    "id": "paragraph_8644"
  },
  {
    "type": "paragraph",
    "content": "No arguments other than a possible exception are given to the completion\ncallback.",
    "originalSentence": "No arguments other than a possible exception are given to the completion\ncallback.",
    "position": 8645,
    "id": "paragraph_8645"
  },
  {
    "type": "paragraph",
    "content": "### `fs.link(existingPath, newPath, callback)`",
    "originalSentence": "### `fs.link(existingPath, newPath, callback)`",
    "position": 8646,
    "id": "paragraph_8646"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8647,
    "id": "paragraph_8647"
  },
  {
    "type": "paragraph",
    "content": "* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8648,
    "id": "paragraph_8648"
  },
  {
    "type": "paragraph",
    "content": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. No arguments other than a possible\nexception are given to the completion callback.",
    "originalSentence": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. No arguments other than a possible\nexception are given to the completion callback.",
    "position": 8649,
    "id": "paragraph_8649"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lstat(path[, options], callback)`",
    "originalSentence": "### `fs.lstat(path[, options], callback)`",
    "position": 8650,
    "id": "paragraph_8650"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.30\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.30\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8651,
    "id": "paragraph_8651"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.Stats}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.Stats}",
    "position": 8652,
    "id": "paragraph_8652"
  },
  {
    "type": "paragraph",
    "content": "Retrieves the {fs.Stats} for the symbolic link referred to by the path.\nThe callback gets two arguments `(err, stats)` where `stats` is a {fs.Stats}\nobject. `lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to.",
    "originalSentence": "Retrieves the {fs.Stats} for the symbolic link referred to by the path.\nThe callback gets two arguments `(err, stats)` where `stats` is a {fs.Stats}\nobject. `lstat()` is identical to `stat()`, except that if `path` is a symbolic\nlink, then the link itself is stat-ed, not the file that it refers to.",
    "position": 8653,
    "id": "paragraph_8653"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX lstat(2) documentation for more details.",
    "originalSentence": "See the POSIX lstat(2) documentation for more details.",
    "position": 8654,
    "id": "paragraph_8654"
  },
  {
    "type": "paragraph",
    "content": "### `fs.mkdir(path[, options], callback)`",
    "originalSentence": "### `fs.mkdir(path[, options], callback)`",
    "position": 8655,
    "id": "paragraph_8655"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.8\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n     - v13.11.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument.\n  - version: v10.12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.8\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n     - v13.11.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the callback now receives the first\n                 created path as an argument.\n  - version: v10.12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8656,
    "id": "paragraph_8656"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.\n* `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.\n* `callback` {Function}\n  * `err` {Error}\n  * `path` {string|undefined} Present only if a directory is created with\n    `recursive` set to `true`.",
    "position": 8657,
    "id": "paragraph_8657"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously creates a directory.",
    "originalSentence": "Asynchronously creates a directory.",
    "position": 8658,
    "id": "paragraph_8658"
  },
  {
    "type": "paragraph",
    "content": "The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`.\n`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created).",
    "originalSentence": "The callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err[, path])`.\n`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated (for instance, if it was previously created).",
    "position": 8659,
    "id": "paragraph_8659"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fs.mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false. If `recursive` is false and the directory exists,\nan `EEXIST` error occurs.",
    "originalSentence": "The optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`\nproperty indicating whether parent directories should be created. Calling\n`fs.mkdir()` when `path` is a directory that exists results in an error only\nwhen `recursive` is false. If `recursive` is false and the directory exists,\nan `EEXIST` error occurs.",
    "position": 8660,
    "id": "paragraph_8660"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { mkdir } from 'node:fs';",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs';",
    "position": 8661,
    "id": "paragraph_8661"
  },
  {
    "type": "paragraph",
    "content": "// Create ./tmp/a/apple, regardless of whether ./tmp and ./tmp/a exist.\nmkdir('./tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```",
    "originalSentence": "// Create ./tmp/a/apple, regardless of whether ./tmp and ./tmp/a exist.\nmkdir('./tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```",
    "position": 8662,
    "id": "paragraph_8662"
  },
  {
    "type": "paragraph",
    "content": "On Windows, using `fs.mkdir()` on the root directory even with recursion will\nresult in an error:",
    "originalSentence": "On Windows, using `fs.mkdir()` on the root directory even with recursion will\nresult in an error:",
    "position": 8663,
    "id": "paragraph_8663"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { mkdir } from 'node:fs';",
    "originalSentence": "```mjs\nimport { mkdir } from 'node:fs';",
    "position": 8664,
    "id": "paragraph_8664"
  },
  {
    "type": "paragraph",
    "content": "mkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```",
    "originalSentence": "mkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```",
    "position": 8665,
    "id": "paragraph_8665"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX mkdir(2) documentation for more details.",
    "originalSentence": "See the POSIX mkdir(2) documentation for more details.",
    "position": 8666,
    "id": "paragraph_8666"
  },
  {
    "type": "paragraph",
    "content": "### `fs.mkdtemp(prefix[, options], callback)`",
    "originalSentence": "### `fs.mkdtemp(prefix[, options], callback)`",
    "position": 8667,
    "id": "paragraph_8667"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v5.10.0\nchanges:\n  - version:\n    - v20.6.0\n    - v18.19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n      - v16.5.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v6.2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v5.10.0\nchanges:\n  - version:\n    - v20.6.0\n    - v18.19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n      - v16.5.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v6.2.1\n    pr-url: https://github.com/nodejs/node/pull/6828\n    description: The `callback` parameter is optional now.\n-->",
    "position": 8668,
    "id": "paragraph_8668"
  },
  {
    "type": "paragraph",
    "content": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}",
    "originalSentence": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `directory` {string}",
    "position": 8669,
    "id": "paragraph_8669"
  },
  {
    "type": "paragraph",
    "content": "Creates a unique temporary directory.",
    "originalSentence": "Creates a unique temporary directory.",
    "position": 8670,
    "id": "paragraph_8670"
  },
  {
    "type": "paragraph",
    "content": "Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory. Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters.",
    "originalSentence": "Generates six random characters to be appended behind a required\n`prefix` to create a unique temporary directory. Due to platform\ninconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,\nnotably the BSDs, can return more than six random characters, and replace\ntrailing `X` characters in `prefix` with random characters.",
    "position": 8671,
    "id": "paragraph_8671"
  },
  {
    "type": "paragraph",
    "content": "The created directory path is passed as a string to the callback's second\nparameter.",
    "originalSentence": "The created directory path is passed as a string to the callback's second\nparameter.",
    "position": 8672,
    "id": "paragraph_8672"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 8673,
    "id": "paragraph_8673"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';",
    "originalSentence": "```mjs\nimport { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';",
    "position": 8674,
    "id": "paragraph_8674"
  },
  {
    "type": "paragraph",
    "content": "mkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...\\AppData\\Local\\Temp\\foo-itXde2\n});\n```",
    "originalSentence": "mkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...\\AppData\\Local\\Temp\\foo-itXde2\n});\n```",
    "position": 8675,
    "id": "paragraph_8675"
  },
  {
    "type": "paragraph",
    "content": "The `fs.mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string. For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path').sep`).",
    "originalSentence": "The `fs.mkdtemp()` method will append the six randomly selected characters\ndirectly to the `prefix` string. For instance, given a directory `/tmp`, if the\nintention is to create a temporary directory _within_ `/tmp`, the `prefix`\nmust end with a trailing platform-specific path separator\n(`require('node:path').sep`).",
    "position": 8676,
    "id": "paragraph_8676"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';",
    "originalSentence": "```mjs\nimport { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';",
    "position": 8677,
    "id": "paragraph_8677"
  },
  {
    "type": "paragraph",
    "content": "// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();",
    "originalSentence": "// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();",
    "position": 8678,
    "id": "paragraph_8678"
  },
  {
    "type": "paragraph",
    "content": "// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmpabc123`.\n  // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.\n});",
    "originalSentence": "// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmpabc123`.\n  // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.\n});",
    "position": 8679,
    "id": "paragraph_8679"
  },
  {
    "type": "paragraph",
    "content": "// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmp/abc123`.\n  // A new temporary directory is created within\n  // the /tmp directory.\n});\n```",
    "originalSentence": "// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmp/abc123`.\n  // A new temporary directory is created within\n  // the /tmp directory.\n});\n```",
    "position": 8680,
    "id": "paragraph_8680"
  },
  {
    "type": "paragraph",
    "content": "### `fs.open(path[, flags[, mode]], callback)`",
    "originalSentence": "### `fs.open(path[, flags[, mode]], callback)`",
    "position": 8681,
    "id": "paragraph_8681"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v11.1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.\n  - version: v9.9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v11.1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.\n  - version: v9.9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 8682,
    "id": "paragraph_8682"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].\n  **Default:** `'r'`.\n* `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `flags` {string|number} See [support of file system `flags`][].\n  **Default:** `'r'`.\n* `mode` {string|integer} **Default:** `0o666` (readable and writable)\n* `callback` {Function}\n  * `err` {Error}\n  * `fd` {integer}",
    "position": 8683,
    "id": "paragraph_8683"
  },
  {
    "type": "paragraph",
    "content": "Asynchronous file open. See the POSIX open(2) documentation for more details.",
    "originalSentence": "Asynchronous file open. See the POSIX open(2) documentation for more details.",
    "position": 8684,
    "id": "paragraph_8684"
  },
  {
    "type": "paragraph",
    "content": "`mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated. On Windows, only the write permission can be manipulated; see\n[`fs.chmod()`][].",
    "originalSentence": "`mode` sets the file mode (permission and sticky bits), but only if the file was\ncreated. On Windows, only the write permission can be manipulated; see\n[`fs.chmod()`][].",
    "position": 8685,
    "id": "paragraph_8685"
  },
  {
    "type": "paragraph",
    "content": "The callback gets two arguments `(err, fd)`.",
    "originalSentence": "The callback gets two arguments `(err, fd)`.",
    "position": 8686,
    "id": "paragraph_8686"
  },
  {
    "type": "paragraph",
    "content": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "originalSentence": "Some characters (`< > : \" / \\ | ? *`) are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces][]. Under NTFS, if the filename contains\na colon, Node.js will open a file system stream, as described by\n[this MSDN page][MSDN-Using-Streams].",
    "position": 8687,
    "id": "paragraph_8687"
  },
  {
    "type": "paragraph",
    "content": "Functions based on `fs.open()` exhibit this behavior as well:\n`fs.writeFile()`, `fs.readFile()`, etc.",
    "originalSentence": "Functions based on `fs.open()` exhibit this behavior as well:\n`fs.writeFile()`, `fs.readFile()`, etc.",
    "position": 8688,
    "id": "paragraph_8688"
  },
  {
    "type": "paragraph",
    "content": "### `fs.openAsBlob(path[, options])`",
    "originalSentence": "### `fs.openAsBlob(path[, options])`",
    "position": 8689,
    "id": "paragraph_8689"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v19.8.0\nchanges:\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n-->",
    "originalSentence": "<!-- YAML\nadded: v19.8.0\nchanges:\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n-->",
    "position": 8690,
    "id": "paragraph_8690"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob.\n* Returns: {Promise} Fulfills with a {Blob} upon success.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `type` {string} An optional mime type for the blob.\n* Returns: {Promise} Fulfills with a {Blob} upon success.",
    "position": 8691,
    "id": "paragraph_8691"
  },
  {
    "type": "paragraph",
    "content": "Returns a {Blob} whose data is backed by the given file.",
    "originalSentence": "Returns a {Blob} whose data is backed by the given file.",
    "position": 8692,
    "id": "paragraph_8692"
  },
  {
    "type": "paragraph",
    "content": "The file must not be modified after the {Blob} is created. Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error.\nSynchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk.",
    "originalSentence": "The file must not be modified after the {Blob} is created. Any modifications\nwill cause reading the {Blob} data to fail with a `DOMException` error.\nSynchronous stat operations on the file when the `Blob` is created, and before\neach read in order to detect whether the file data has been modified on disk.",
    "position": 8693,
    "id": "paragraph_8693"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { openAsBlob } from 'node:fs';",
    "originalSentence": "```mjs\nimport { openAsBlob } from 'node:fs';",
    "position": 8694,
    "id": "paragraph_8694"
  },
  {
    "type": "paragraph",
    "content": "const blob = await openAsBlob('the.file.txt');\nconst ab = await blob.arrayBuffer();\nblob.stream();\n```",
    "originalSentence": "const blob = await openAsBlob('the.file.txt');\nconst ab = await blob.arrayBuffer();\nblob.stream();\n```",
    "position": 8695,
    "id": "paragraph_8695"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { openAsBlob } = require('node:fs');",
    "originalSentence": "```cjs\nconst { openAsBlob } = require('node:fs');",
    "position": 8696,
    "id": "paragraph_8696"
  },
  {
    "type": "paragraph",
    "content": "(async () => {\n  const blob = await openAsBlob('the.file.txt');\n  const ab = await blob.arrayBuffer();\n  blob.stream();\n})();\n```",
    "originalSentence": "(async () => {\n  const blob = await openAsBlob('the.file.txt');\n  const ab = await blob.arrayBuffer();\n  blob.stream();\n})();\n```",
    "position": 8697,
    "id": "paragraph_8697"
  },
  {
    "type": "paragraph",
    "content": "### `fs.opendir(path[, options], callback)`",
    "originalSentence": "### `fs.opendir(path[, options], callback)`",
    "position": 8698,
    "id": "paragraph_8698"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n     - v13.1.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version:\n     - v13.1.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.\n-->",
    "position": 8699,
    "id": "paragraph_8699"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs.Dir}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* `callback` {Function}\n  * `err` {Error}\n  * `dir` {fs.Dir}",
    "position": 8700,
    "id": "paragraph_8700"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously open a directory. See the POSIX opendir(3) documentation for\nmore details.",
    "originalSentence": "Asynchronously open a directory. See the POSIX opendir(3) documentation for\nmore details.",
    "position": 8701,
    "id": "paragraph_8701"
  },
  {
    "type": "paragraph",
    "content": "Creates an {fs.Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "Creates an {fs.Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 8702,
    "id": "paragraph_8702"
  },
  {
    "type": "paragraph",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 8703,
    "id": "paragraph_8703"
  },
  {
    "type": "paragraph",
    "content": "### `fs.read(fd, buffer, offset, length, position, callback)`",
    "originalSentence": "### `fs.read(fd, buffer, offset, length, position, callback)`",
    "position": 8704,
    "id": "paragraph_8704"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray`, or a\n                 `DataView`.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.\n-->",
    "position": 8705,
    "id": "paragraph_8705"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.\n* `offset` {integer} The position in `buffer` to write the data to.\n* `length` {integer} The number of bytes to read.\n* `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file. If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated. If `position` is\n  a non-negative integer, the file position will be unchanged.\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.\n* `offset` {integer} The position in `buffer` to write the data to.\n* `length` {integer} The number of bytes to read.\n* `position` {integer|bigint|null} Specifies where to begin reading from in the\n  file. If `position` is `null` or `-1 `, data will be read from the current\n  file position, and the file position will be updated. If `position` is\n  a non-negative integer, the file position will be unchanged.\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}",
    "position": 8706,
    "id": "paragraph_8706"
  },
  {
    "type": "paragraph",
    "content": "Read data from the file specified by `fd`.",
    "originalSentence": "Read data from the file specified by `fd`.",
    "position": 8707,
    "id": "paragraph_8707"
  },
  {
    "type": "paragraph",
    "content": "The callback is given the three arguments, `(err, bytesRead, buffer)`.",
    "originalSentence": "The callback is given the three arguments, `(err, bytesRead, buffer)`.",
    "position": 8708,
    "id": "paragraph_8708"
  },
  {
    "type": "paragraph",
    "content": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "originalSentence": "If the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero.",
    "position": 8709,
    "id": "paragraph_8709"
  },
  {
    "type": "paragraph",
    "content": "If this method is invoked as its [`util.promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties.",
    "originalSentence": "If this method is invoked as its [`util.promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffer` properties.",
    "position": 8710,
    "id": "paragraph_8710"
  },
  {
    "type": "paragraph",
    "content": "The `fs.read()` method reads data from the file specified\nby the file descriptor (`fd`).\nThe `length` argument indicates the maximum number\nof bytes that Node.js\nwill attempt to read from the kernel.\nHowever, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons.",
    "originalSentence": "The `fs.read()` method reads data from the file specified\nby the file descriptor (`fd`).\nThe `length` argument indicates the maximum number\nof bytes that Node.js\nwill attempt to read from the kernel.\nHowever, the actual number of bytes read (`bytesRead`) can be lower\nthan the specified `length` for various reasons.",
    "position": 8711,
    "id": "paragraph_8711"
  },
  {
    "type": "paragraph",
    "content": "* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read.\n* If the file encounters EOF (End of File) before the buffer could\n  be filled, Node.js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`.\n* If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`.",
    "originalSentence": "* If the file is shorter than the specified `length`, `bytesRead`\n  will be set to the actual number of bytes read.\n* If the file encounters EOF (End of File) before the buffer could\n  be filled, Node.js will read all available bytes until EOF is encountered,\n  and the `bytesRead` parameter in the callback will indicate\n  the actual number of bytes read, which may be less than the specified `length`.\n* If the file is on a slow network `filesystem`\n  or encounters any other issue during reading,\n  `bytesRead` can be lower than the specified `length`.",
    "position": 8712,
    "id": "paragraph_8712"
  },
  {
    "type": "paragraph",
    "content": "Therefore, when using `fs.read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file.\nDepending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes.",
    "originalSentence": "Therefore, when using `fs.read()`, it's important to\ncheck the `bytesRead` value to\ndetermine how many bytes were actually read from the file.\nDepending on your application\nlogic, you may need to handle cases where `bytesRead`\nis lower than the specified `length`,\nsuch as by wrapping the read call in a loop if you require\na minimum amount of bytes.",
    "position": 8713,
    "id": "paragraph_8713"
  },
  {
    "type": "paragraph",
    "content": "This behavior is similar to the POSIX `preadv2` function.",
    "originalSentence": "This behavior is similar to the POSIX `preadv2` function.",
    "position": 8714,
    "id": "paragraph_8714"
  },
  {
    "type": "paragraph",
    "content": "### `fs.read(fd[, options], callback)`",
    "originalSentence": "### `fs.read(fd[, options], callback)`",
    "position": 8715,
    "id": "paragraph_8715"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v13.11.0\n - v12.17.0\nchanges:\n  - version:\n     - v13.11.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v13.11.0\n - v12.17.0\nchanges:\n  - version:\n     - v13.11.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/31402\n    description: Options object can be passed in\n                 to make buffer, offset, length, and position optional.\n-->",
    "position": 8716,
    "id": "paragraph_8716"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer.alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}",
    "originalSentence": "* `fd` {integer}\n* `options` {Object}\n  * `buffer` {Buffer|TypedArray|DataView} **Default:** `Buffer.alloc(16384)`\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}",
    "position": 8717,
    "id": "paragraph_8717"
  },
  {
    "type": "paragraph",
    "content": "Similar to the [`fs.read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "originalSentence": "Similar to the [`fs.read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "position": 8718,
    "id": "paragraph_8718"
  },
  {
    "type": "paragraph",
    "content": "### `fs.read(fd, buffer[, options], callback)`",
    "originalSentence": "### `fs.read(fd, buffer[, options], callback)`",
    "position": 8719,
    "id": "paragraph_8719"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v18.2.0\n  - v16.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v18.2.0\n  - v16.17.0\n-->",
    "position": 8720,
    "id": "paragraph_8720"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView} The buffer that the data will be\n  written to.\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|bigint} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffer` {Buffer}",
    "position": 8721,
    "id": "paragraph_8721"
  },
  {
    "type": "paragraph",
    "content": "Similar to the [`fs.read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "originalSentence": "Similar to the [`fs.read()`][] function, this version takes an optional\n`options` object. If no `options` object is specified, it will default with the\nabove values.",
    "position": 8722,
    "id": "paragraph_8722"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readdir(path[, options], callback)`",
    "originalSentence": "### `fs.readdir(path[, options], callback)`",
    "position": 8723,
    "id": "paragraph_8723"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.8\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.8\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/5616\n    description: The `options` parameter was added.\n-->",
    "position": 8724,
    "id": "paragraph_8724"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files and\n    directories. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs.Dirent\\[]}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files and\n    directories. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `files` {string\\[]|Buffer\\[]|fs.Dirent\\[]}",
    "position": 8725,
    "id": "paragraph_8725"
  },
  {
    "type": "paragraph",
    "content": "Reads the contents of a directory. The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.'` and `'..'`.",
    "originalSentence": "Reads the contents of a directory. The callback gets two arguments `(err, files)`\nwhere `files` is an array of the names of the files in the directory excluding\n`'.'` and `'..'`.",
    "position": 8726,
    "id": "paragraph_8726"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX readdir(3) documentation for more details.",
    "originalSentence": "See the POSIX readdir(3) documentation for more details.",
    "position": 8727,
    "id": "paragraph_8727"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames passed to the callback. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "position": 8728,
    "id": "paragraph_8728"
  },
  {
    "type": "paragraph",
    "content": "If `options.withFileTypes` is set to `true`, the `files` array will contain\n{fs.Dirent} objects.",
    "originalSentence": "If `options.withFileTypes` is set to `true`, the `files` array will contain\n{fs.Dirent} objects.",
    "position": 8729,
    "id": "paragraph_8729"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readFile(path[, options], callback)`",
    "originalSentence": "### `fs.readFile(path[, options], callback)`",
    "position": 8730,
    "id": "paragraph_8730"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.29\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version:\n      - v15.2.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v5.1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.29\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version:\n      - v15.2.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35911\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing readFile request.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v5.1.0\n    pr-url: https://github.com/nodejs/node/pull/3740\n    description: The `callback` will always be called with `null` as the `error`\n                 parameter in case of success.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.\n-->",
    "position": 8731,
    "id": "paragraph_8731"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.\n  * `signal` {AbortSignal} allows aborting an in-progress readFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}\n  * `data` {string|Buffer}",
    "position": 8732,
    "id": "paragraph_8732"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously reads the entire contents of a file.",
    "originalSentence": "Asynchronously reads the entire contents of a file.",
    "position": 8733,
    "id": "paragraph_8733"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';",
    "position": 8734,
    "id": "paragraph_8734"
  },
  {
    "type": "paragraph",
    "content": "readFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});\n```",
    "originalSentence": "readFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});\n```",
    "position": 8735,
    "id": "paragraph_8735"
  },
  {
    "type": "paragraph",
    "content": "The callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.",
    "originalSentence": "The callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.",
    "position": 8736,
    "id": "paragraph_8736"
  },
  {
    "type": "paragraph",
    "content": "If no encoding is specified, then the raw buffer is returned.",
    "originalSentence": "If no encoding is specified, then the raw buffer is returned.",
    "position": 8737,
    "id": "paragraph_8737"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding:",
    "originalSentence": "If `options` is a string, then it specifies the encoding:",
    "position": 8738,
    "id": "paragraph_8738"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';",
    "position": 8739,
    "id": "paragraph_8739"
  },
  {
    "type": "paragraph",
    "content": "readFile('/etc/passwd', 'utf8', callback);\n```",
    "originalSentence": "readFile('/etc/passwd', 'utf8', callback);\n```",
    "position": 8740,
    "id": "paragraph_8740"
  },
  {
    "type": "paragraph",
    "content": "When the path is a directory, the behavior of `fs.readFile()` and\n[`fs.readFileSync()`][] is platform-specific. On macOS, Linux, and Windows, an\nerror will be returned. On FreeBSD, a representation of the directory's contents\nwill be returned.",
    "originalSentence": "When the path is a directory, the behavior of `fs.readFile()` and\n[`fs.readFileSync()`][] is platform-specific. On macOS, Linux, and Windows, an\nerror will be returned. On FreeBSD, a representation of the directory's contents\nwill be returned.",
    "position": 8741,
    "id": "paragraph_8741"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';",
    "position": 8742,
    "id": "paragraph_8742"
  },
  {
    "type": "paragraph",
    "content": "// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});",
    "originalSentence": "// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});",
    "position": 8743,
    "id": "paragraph_8743"
  },
  {
    "type": "paragraph",
    "content": "//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```",
    "originalSentence": "//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});\n```",
    "position": 8744,
    "id": "paragraph_8744"
  },
  {
    "type": "paragraph",
    "content": "It is possible to abort an ongoing request using an `AbortSignal`. If a\nrequest is aborted the callback is called with an `AbortError`:",
    "originalSentence": "It is possible to abort an ongoing request using an `AbortSignal`. If a\nrequest is aborted the callback is called with an `AbortError`:",
    "position": 8745,
    "id": "paragraph_8745"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFile } from 'node:fs';",
    "position": 8746,
    "id": "paragraph_8746"
  },
  {
    "type": "paragraph",
    "content": "const controller = new AbortController();\nconst signal = controller.signal;\nreadFile(fileInfo[0].name, { signal }, (err, buf) => {\n  // ...\n});\n// When you want to abort the request\ncontroller.abort();\n```",
    "originalSentence": "const controller = new AbortController();\nconst signal = controller.signal;\nreadFile(fileInfo[0].name, { signal }, (err, buf) => {\n  // ...\n});\n// When you want to abort the request\ncontroller.abort();\n```",
    "position": 8747,
    "id": "paragraph_8747"
  },
  {
    "type": "paragraph",
    "content": "The `fs.readFile()` function buffers the entire file. To minimize memory costs,\nwhen possible prefer streaming via `fs.createReadStream()`.",
    "originalSentence": "The `fs.readFile()` function buffers the entire file. To minimize memory costs,\nwhen possible prefer streaming via `fs.createReadStream()`.",
    "position": 8748,
    "id": "paragraph_8748"
  },
  {
    "type": "paragraph",
    "content": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.readFile` performs.",
    "originalSentence": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.readFile` performs.",
    "position": 8749,
    "id": "paragraph_8749"
  },
  {
    "type": "paragraph",
    "content": "#### File descriptors",
    "originalSentence": "#### File descriptors",
    "position": 8750,
    "id": "paragraph_8750"
  },
  {
    "type": "paragraph",
    "content": "1. Any specified file descriptor has to support reading.\n2. If a file descriptor is specified as the `path`, it will not be closed\n   automatically.\n3. The reading will begin at the current position. For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs.readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`.",
    "originalSentence": "1. Any specified file descriptor has to support reading.\n2. If a file descriptor is specified as the `path`, it will not be closed\n   automatically.\n3. The reading will begin at the current position. For example, if the file\n   already had `'Hello World'` and six bytes are read with the file descriptor,\n   the call to `fs.readFile()` with the same file descriptor, would give\n   `'World'`, rather than `'Hello World'`.",
    "position": 8751,
    "id": "paragraph_8751"
  },
  {
    "type": "paragraph",
    "content": "#### Performance Considerations",
    "originalSentence": "#### Performance Considerations",
    "position": 8752,
    "id": "paragraph_8752"
  },
  {
    "type": "paragraph",
    "content": "The `fs.readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk.\nThis allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory.",
    "originalSentence": "The `fs.readFile()` method asynchronously reads the contents of a file into\nmemory one chunk at a time, allowing the event loop to turn between each chunk.\nThis allows the read operation to have less impact on other activity that may\nbe using the underlying libuv thread pool but means that it will take longer\nto read a complete file into memory.",
    "position": 8753,
    "id": "paragraph_8753"
  },
  {
    "type": "paragraph",
    "content": "The additional read overhead can vary broadly on different systems and depends\non the type of file being read. If the file type is not a regular file (a pipe\nfor instance) and Node.js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data. For regular files, each read will process\n512 KiB of data.",
    "originalSentence": "The additional read overhead can vary broadly on different systems and depends\non the type of file being read. If the file type is not a regular file (a pipe\nfor instance) and Node.js is unable to determine an actual file size, each read\noperation will load on 64 KiB of data. For regular files, each read will process\n512 KiB of data.",
    "position": 8754,
    "id": "paragraph_8754"
  },
  {
    "type": "paragraph",
    "content": "For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs.read()` directly and for application code to manage\nreading the full contents of the file itself.",
    "originalSentence": "For applications that require as-fast-as-possible reading of file contents, it\nis better to use `fs.read()` directly and for application code to manage\nreading the full contents of the file itself.",
    "position": 8755,
    "id": "paragraph_8755"
  },
  {
    "type": "paragraph",
    "content": "The Node.js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs.readFile()` for multiple file sizes in\ndifferent Node.js versions.",
    "originalSentence": "The Node.js GitHub issue [#25741][] provides more information and a detailed\nanalysis on the performance of `fs.readFile()` for multiple file sizes in\ndifferent Node.js versions.",
    "position": 8756,
    "id": "paragraph_8756"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readlink(path[, options], callback)`",
    "originalSentence": "### `fs.readlink(path[, options], callback)`",
    "position": 8757,
    "id": "paragraph_8757"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8758,
    "id": "paragraph_8758"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `linkString` {string|Buffer}",
    "position": 8759,
    "id": "paragraph_8759"
  },
  {
    "type": "paragraph",
    "content": "Reads the contents of the symbolic link referred to by `path`. The callback gets\ntwo arguments `(err, linkString)`.",
    "originalSentence": "Reads the contents of the symbolic link referred to by `path`. The callback gets\ntwo arguments `(err, linkString)`.",
    "position": 8760,
    "id": "paragraph_8760"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX readlink(2) documentation for more details.",
    "originalSentence": "See the POSIX readlink(2) documentation for more details.",
    "position": 8761,
    "id": "paragraph_8761"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "position": 8762,
    "id": "paragraph_8762"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readv(fd, buffers[, position], callback)`",
    "originalSentence": "### `fs.readv(fd, buffers[, position], callback)`",
    "position": 8763,
    "id": "paragraph_8763"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v13.13.0\n  - v12.17.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v13.13.0\n  - v12.17.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "position": 8764,
    "id": "paragraph_8764"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}",
    "originalSentence": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesRead` {integer}\n  * `buffers` {ArrayBufferView\\[]}",
    "position": 8765,
    "id": "paragraph_8765"
  },
  {
    "type": "paragraph",
    "content": "Read from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`.",
    "originalSentence": "Read from a file specified by `fd` and write to an array of `ArrayBufferView`s\nusing `readv()`.",
    "position": 8766,
    "id": "paragraph_8766"
  },
  {
    "type": "paragraph",
    "content": "`position` is the offset from the beginning of the file from where data\nshould be read. If `typeof position !== 'number'`, the data will be read\nfrom the current position.",
    "originalSentence": "`position` is the offset from the beginning of the file from where data\nshould be read. If `typeof position !== 'number'`, the data will be read\nfrom the current position.",
    "position": 8767,
    "id": "paragraph_8767"
  },
  {
    "type": "paragraph",
    "content": "The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`. `bytesRead` is how many bytes were read from the file.",
    "originalSentence": "The callback will be given three arguments: `err`, `bytesRead`, and\n`buffers`. `bytesRead` is how many bytes were read from the file.",
    "position": 8768,
    "id": "paragraph_8768"
  },
  {
    "type": "paragraph",
    "content": "If this method is invoked as its [`util.promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties.",
    "originalSentence": "If this method is invoked as its [`util.promisify()`][]ed version, it returns\na promise for an `Object` with `bytesRead` and `buffers` properties.",
    "position": 8769,
    "id": "paragraph_8769"
  },
  {
    "type": "paragraph",
    "content": "### `fs.realpath(path[, options], callback)`",
    "originalSentence": "### `fs.realpath(path[, options], callback)`",
    "position": 8770,
    "id": "paragraph_8770"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v6.4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v6.4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpath` now works again for various edge cases\n                 on Windows.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.\n-->",
    "position": 8771,
    "id": "paragraph_8771"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}",
    "position": 8772,
    "id": "paragraph_8772"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously computes the canonical pathname by resolving `.`, `..`, and\nsymbolic links.",
    "originalSentence": "Asynchronously computes the canonical pathname by resolving `.`, `..`, and\nsymbolic links.",
    "position": 8773,
    "id": "paragraph_8773"
  },
  {
    "type": "paragraph",
    "content": "A canonical pathname is not necessarily unique. Hard links and bind mounts can\nexpose a file system entity through many pathnames.",
    "originalSentence": "A canonical pathname is not necessarily unique. Hard links and bind mounts can\nexpose a file system entity through many pathnames.",
    "position": 8774,
    "id": "paragraph_8774"
  },
  {
    "type": "paragraph",
    "content": "This function behaves like realpath(3), with some exceptions:",
    "originalSentence": "This function behaves like realpath(3), with some exceptions:",
    "position": 8775,
    "id": "paragraph_8775"
  },
  {
    "type": "paragraph",
    "content": "1. No case conversion is performed on case-insensitive file systems.",
    "originalSentence": "1. No case conversion is performed on case-insensitive file systems.",
    "position": 8776,
    "id": "paragraph_8776"
  },
  {
    "type": "paragraph",
    "content": "2. The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports.",
    "originalSentence": "2. The maximum number of symbolic links is platform-independent and generally\n   (much) higher than what the native realpath(3) implementation supports.",
    "position": 8777,
    "id": "paragraph_8777"
  },
  {
    "type": "paragraph",
    "content": "The `callback` gets two arguments `(err, resolvedPath)`. May use `process.cwd`\nto resolve relative paths.",
    "originalSentence": "The `callback` gets two arguments `(err, resolvedPath)`. May use `process.cwd`\nto resolve relative paths.",
    "position": 8778,
    "id": "paragraph_8778"
  },
  {
    "type": "paragraph",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 8779,
    "id": "paragraph_8779"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 8780,
    "id": "paragraph_8780"
  },
  {
    "type": "paragraph",
    "content": "If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object.",
    "originalSentence": "If `path` resolves to a socket or a pipe, the function will return a system\ndependent name for that object.",
    "position": 8781,
    "id": "paragraph_8781"
  },
  {
    "type": "paragraph",
    "content": "A path that does not exist results in an ENOENT error.\n`error.path` is the absolute file path.",
    "originalSentence": "A path that does not exist results in an ENOENT error.\n`error.path` is the absolute file path.",
    "position": 8782,
    "id": "paragraph_8782"
  },
  {
    "type": "paragraph",
    "content": "### `fs.realpath.native(path[, options], callback)`",
    "originalSentence": "### `fs.realpath.native(path[, options], callback)`",
    "position": 8783,
    "id": "paragraph_8783"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v9.2.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v9.2.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "position": 8784,
    "id": "paragraph_8784"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `resolvedPath` {string|Buffer}",
    "position": 8785,
    "id": "paragraph_8785"
  },
  {
    "type": "paragraph",
    "content": "Asynchronous realpath(3).",
    "originalSentence": "Asynchronous realpath(3).",
    "position": 8786,
    "id": "paragraph_8786"
  },
  {
    "type": "paragraph",
    "content": "The `callback` gets two arguments `(err, resolvedPath)`.",
    "originalSentence": "The `callback` gets two arguments `(err, resolvedPath)`.",
    "position": 8787,
    "id": "paragraph_8787"
  },
  {
    "type": "paragraph",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 8788,
    "id": "paragraph_8788"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path passed to the callback. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 8789,
    "id": "paragraph_8789"
  },
  {
    "type": "paragraph",
    "content": "On Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "originalSentence": "On Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "position": 8790,
    "id": "paragraph_8790"
  },
  {
    "type": "paragraph",
    "content": "### `fs.rename(oldPath, newPath, callback)`",
    "originalSentence": "### `fs.rename(oldPath, newPath, callback)`",
    "position": 8791,
    "id": "paragraph_8791"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8792,
    "id": "paragraph_8792"
  },
  {
    "type": "paragraph",
    "content": "* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8793,
    "id": "paragraph_8793"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously rename file at `oldPath` to the pathname provided\nas `newPath`. In the case that `newPath` already exists, it will\nbe overwritten. If there is a directory at `newPath`, an error will\nbe raised instead. No arguments other than a possible exception are\ngiven to the completion callback.",
    "originalSentence": "Asynchronously rename file at `oldPath` to the pathname provided\nas `newPath`. In the case that `newPath` already exists, it will\nbe overwritten. If there is a directory at `newPath`, an error will\nbe raised instead. No arguments other than a possible exception are\ngiven to the completion callback.",
    "position": 8794,
    "id": "paragraph_8794"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { rename } from 'node:fs';",
    "originalSentence": "```mjs\nimport { rename } from 'node:fs';",
    "position": 8795,
    "id": "paragraph_8795"
  },
  {
    "type": "paragraph",
    "content": "rename('oldFile.txt', 'newFile.txt', (err) => {\n  if (err) throw err;\n  console.log('Rename complete!');\n});\n```",
    "originalSentence": "rename('oldFile.txt', 'newFile.txt', (err) => {\n  if (err) throw err;\n  console.log('Rename complete!');\n});\n```",
    "position": 8796,
    "id": "paragraph_8796"
  },
  {
    "type": "paragraph",
    "content": "### `fs.rmdir(path[, options], callback)`",
    "originalSentence": "### `fs.rmdir(path[, options], callback)`",
    "position": 8797,
    "id": "paragraph_8797"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.\n  - version: v14.14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.rm` instead.\n  - version:\n     - v13.3.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdir(path, { recursive: true })` on a `path` that is\n                 a file is no longer permitted and results in an `ENOENT` error\n                 on Windows and an `ENOTDIR` error on POSIX.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdir(path, { recursive: true })` on a `path` that\n                 does not exist is no longer permitted and results in a `ENOENT`\n                 error.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.\n  - version: v14.14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.rm` instead.\n  - version:\n     - v13.3.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8798,
    "id": "paragraph_8798"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8799,
    "id": "paragraph_8799"
  },
  {
    "type": "paragraph",
    "content": "Asynchronous rmdir(2). No arguments other than a possible exception are given\nto the completion callback.",
    "originalSentence": "Asynchronous rmdir(2). No arguments other than a possible exception are given\nto the completion callback.",
    "position": 8800,
    "id": "paragraph_8800"
  },
  {
    "type": "paragraph",
    "content": "Using `fs.rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX.",
    "originalSentence": "Using `fs.rmdir()` on a file (not a directory) results in an `ENOENT` error on\nWindows and an `ENOTDIR` error on POSIX.",
    "position": 8801,
    "id": "paragraph_8801"
  },
  {
    "type": "paragraph",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.rm()`][]\nwith options `{ recursive: true, force: true }`.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.rm()`][]\nwith options `{ recursive: true, force: true }`.",
    "position": 8802,
    "id": "paragraph_8802"
  },
  {
    "type": "paragraph",
    "content": "### `fs.rm(path[, options], callback)`",
    "originalSentence": "### `fs.rm(path[, options], callback)`",
    "position": 8803,
    "id": "paragraph_8803"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v14.14.0\nchanges:\n  - version:\n      - v17.3.0\n      - v16.14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v14.14.0\nchanges:\n  - version:\n      - v17.3.0\n      - v16.14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 8804,
    "id": "paragraph_8804"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.\n  * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.\n  * `recursive` {boolean} If `true`, perform a recursive removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.\n  * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.\n    **Default:** `100`.\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.\n  * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.\n  * `recursive` {boolean} If `true`, perform a recursive removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.\n  * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.\n    **Default:** `100`.\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8805,
    "id": "paragraph_8805"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). No arguments other than a possible exception are given to the\ncompletion callback.",
    "originalSentence": "Asynchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). No arguments other than a possible exception are given to the\ncompletion callback.",
    "position": 8806,
    "id": "paragraph_8806"
  },
  {
    "type": "paragraph",
    "content": "### `fs.stat(path[, options], callback)`",
    "originalSentence": "### `fs.stat(path[, options], callback)`",
    "position": 8807,
    "id": "paragraph_8807"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8808,
    "id": "paragraph_8808"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.Stats}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.Stats}",
    "position": 8809,
    "id": "paragraph_8809"
  },
  {
    "type": "paragraph",
    "content": "Asynchronous stat(2). The callback gets two arguments `(err, stats)` where\n`stats` is an {fs.Stats} object.",
    "originalSentence": "Asynchronous stat(2). The callback gets two arguments `(err, stats)` where\n`stats` is an {fs.Stats} object.",
    "position": 8810,
    "id": "paragraph_8810"
  },
  {
    "type": "paragraph",
    "content": "In case of an error, the `err.code` will be one of [Common System Errors][].",
    "originalSentence": "In case of an error, the `err.code` will be one of [Common System Errors][].",
    "position": 8811,
    "id": "paragraph_8811"
  },
  {
    "type": "paragraph",
    "content": "[`fs.stat()`][] follows symbolic links. Use [`fs.lstat()`][] to look at the\nlinks themselves.",
    "originalSentence": "[`fs.stat()`][] follows symbolic links. Use [`fs.lstat()`][] to look at the\nlinks themselves.",
    "position": 8812,
    "id": "paragraph_8812"
  },
  {
    "type": "paragraph",
    "content": "Using `fs.stat()` to check for the existence of a file before calling\n`fs.open()`, `fs.readFile()`, or `fs.writeFile()` is not recommended.\nInstead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available.",
    "originalSentence": "Using `fs.stat()` to check for the existence of a file before calling\n`fs.open()`, `fs.readFile()`, or `fs.writeFile()` is not recommended.\nInstead, user code should open/read/write the file directly and handle the\nerror raised if the file is not available.",
    "position": 8813,
    "id": "paragraph_8813"
  },
  {
    "type": "paragraph",
    "content": "To check if a file exists without manipulating it afterwards, [`fs.access()`][]\nis recommended.",
    "originalSentence": "To check if a file exists without manipulating it afterwards, [`fs.access()`][]\nis recommended.",
    "position": 8814,
    "id": "paragraph_8814"
  },
  {
    "type": "paragraph",
    "content": "For example, given the following directory structure:",
    "originalSentence": "For example, given the following directory structure:",
    "position": 8815,
    "id": "paragraph_8815"
  },
  {
    "type": "paragraph",
    "content": "```text\n- txtDir\n-- file.txt\n- app.js\n```",
    "originalSentence": "```text\n- txtDir\n-- file.txt\n- app.js\n```",
    "position": 8816,
    "id": "paragraph_8816"
  },
  {
    "type": "paragraph",
    "content": "The next program will check for the stats of the given paths:",
    "originalSentence": "The next program will check for the stats of the given paths:",
    "position": 8817,
    "id": "paragraph_8817"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { stat } from 'node:fs';",
    "originalSentence": "```mjs\nimport { stat } from 'node:fs';",
    "position": 8818,
    "id": "paragraph_8818"
  },
  {
    "type": "paragraph",
    "content": "const pathsToCheck = ['./txtDir', './txtDir/file.txt'];",
    "originalSentence": "const pathsToCheck = ['./txtDir', './txtDir/file.txt'];",
    "position": 8819,
    "id": "paragraph_8819"
  },
  {
    "type": "paragraph",
    "content": "for (let i = 0; i < pathsToCheck.length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.log(stats.isDirectory());\n    console.log(stats);\n  });\n}\n```",
    "originalSentence": "for (let i = 0; i < pathsToCheck.length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.log(stats.isDirectory());\n    console.log(stats);\n  });\n}\n```",
    "position": 8820,
    "id": "paragraph_8820"
  },
  {
    "type": "paragraph",
    "content": "The resulting output will resemble:",
    "originalSentence": "The resulting output will resemble:",
    "position": 8821,
    "id": "paragraph_8821"
  },
  {
    "type": "paragraph",
    "content": "```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.963,\n  mtimeMs: 1561174614583.3518,\n  ctimeMs: 1561174626623.5366,\n  birthtimeMs: 1561174126937.2893,\n  atime: 2019-06-22T03:37:33.072Z,\n  mtime: 2019-06-22T03:36:54.583Z,\n  ctime: 2019-06-22T03:37:06.624Z,\n  birthtime: 2019-06-22T03:28:46.937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.8145,\n  birthtimeMs: 1561174007710.7478,\n  atime: 2019-06-22T03:36:56.619Z,\n  mtime: 2019-06-22T03:36:54.584Z,\n  ctime: 2019-06-22T03:36:54.584Z,\n  birthtime: 2019-06-22T03:26:47.711Z\n}\n```",
    "originalSentence": "```console\ntrue\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.963,\n  mtimeMs: 1561174614583.3518,\n  ctimeMs: 1561174626623.5366,\n  birthtimeMs: 1561174126937.2893,\n  atime: 2019-06-22T03:37:33.072Z,\n  mtime: 2019-06-22T03:36:54.583Z,\n  ctime: 2019-06-22T03:37:06.624Z,\n  birthtime: 2019-06-22T03:28:46.937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.8145,\n  birthtimeMs: 1561174007710.7478,\n  atime: 2019-06-22T03:36:56.619Z,\n  mtime: 2019-06-22T03:36:54.584Z,\n  ctime: 2019-06-22T03:36:54.584Z,\n  birthtime: 2019-06-22T03:26:47.711Z\n}\n```",
    "position": 8822,
    "id": "paragraph_8822"
  },
  {
    "type": "paragraph",
    "content": "### `fs.statfs(path[, options], callback)`",
    "originalSentence": "### `fs.statfs(path[, options], callback)`",
    "position": 8823,
    "id": "paragraph_8823"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 8824,
    "id": "paragraph_8824"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.StatFs} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.StatFs}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.StatFs} object should be `bigint`. **Default:** `false`.\n* `callback` {Function}\n  * `err` {Error}\n  * `stats` {fs.StatFs}",
    "position": 8825,
    "id": "paragraph_8825"
  },
  {
    "type": "paragraph",
    "content": "Asynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`. The callback gets two arguments `(err, stats)` where `stats`\nis an {fs.StatFs} object.",
    "originalSentence": "Asynchronous statfs(2). Returns information about the mounted file system which\ncontains `path`. The callback gets two arguments `(err, stats)` where `stats`\nis an {fs.StatFs} object.",
    "position": 8826,
    "id": "paragraph_8826"
  },
  {
    "type": "paragraph",
    "content": "In case of an error, the `err.code` will be one of [Common System Errors][].",
    "originalSentence": "In case of an error, the `err.code` will be one of [Common System Errors][].",
    "position": 8827,
    "id": "paragraph_8827"
  },
  {
    "type": "paragraph",
    "content": "### `fs.symlink(target, path[, type], callback)`",
    "originalSentence": "### `fs.symlink(target, path[, type], callback)`",
    "position": 8828,
    "id": "paragraph_8828"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v12.0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v12.0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.\n-->",
    "position": 8829,
    "id": "paragraph_8829"
  },
  {
    "type": "paragraph",
    "content": "* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8830,
    "id": "paragraph_8830"
  },
  {
    "type": "paragraph",
    "content": "Creates the link called `path` pointing to `target`. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Creates the link called `path` pointing to `target`. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 8831,
    "id": "paragraph_8831"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX symlink(2) documentation for more details.",
    "originalSentence": "See the POSIX symlink(2) documentation for more details.",
    "position": 8832,
    "id": "paragraph_8832"
  },
  {
    "type": "paragraph",
    "content": "The `type` argument is only available on Windows and ignored on other platforms.\nIt can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is\n`null`, Node.js will autodetect `target` type and use `'file'` or `'dir'`.\nIf the `target` does not exist, `'file'` will be used. Windows junction points\nrequire the destination path to be absolute. When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path. Junction\npoints on NTFS volumes can only point to directories.",
    "originalSentence": "The `type` argument is only available on Windows and ignored on other platforms.\nIt can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is\n`null`, Node.js will autodetect `target` type and use `'file'` or `'dir'`.\nIf the `target` does not exist, `'file'` will be used. Windows junction points\nrequire the destination path to be absolute. When using `'junction'`, the\n`target` argument will automatically be normalized to absolute path. Junction\npoints on NTFS volumes can only point to directories.",
    "position": 8833,
    "id": "paragraph_8833"
  },
  {
    "type": "paragraph",
    "content": "Relative targets are relative to the link's parent directory.",
    "originalSentence": "Relative targets are relative to the link's parent directory.",
    "position": 8834,
    "id": "paragraph_8834"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { symlink } from 'node:fs';",
    "originalSentence": "```mjs\nimport { symlink } from 'node:fs';",
    "position": 8835,
    "id": "paragraph_8835"
  },
  {
    "type": "paragraph",
    "content": "symlink('./mew', './mewtwo', callback);\n```",
    "originalSentence": "symlink('./mew', './mewtwo', callback);\n```",
    "position": 8836,
    "id": "paragraph_8836"
  },
  {
    "type": "paragraph",
    "content": "The above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:",
    "originalSentence": "The above example creates a symbolic link `mewtwo` which points to `mew` in the\nsame directory:",
    "position": 8837,
    "id": "paragraph_8837"
  },
  {
    "type": "paragraph",
    "content": "```bash\n$ tree .\n.\n├── mew\n└── mewtwo -> ./mew\n```",
    "originalSentence": "```bash\n$ tree .\n.\n├── mew\n└── mewtwo -> ./mew\n```",
    "position": 8838,
    "id": "paragraph_8838"
  },
  {
    "type": "paragraph",
    "content": "### `fs.truncate(path[, len], callback)`",
    "originalSentence": "### `fs.truncate(path[, len], callback)`",
    "position": 8839,
    "id": "paragraph_8839"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.8.6\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.8.6\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8840,
    "id": "paragraph_8840"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`\n* `callback` {Function}\n  * `err` {Error|AggregateError}",
    "position": 8841,
    "id": "paragraph_8841"
  },
  {
    "type": "paragraph",
    "content": "Truncates the file. No arguments other than a possible exception are\ngiven to the completion callback. A file descriptor can also be passed as the\nfirst argument. In this case, `fs.ftruncate()` is called.",
    "originalSentence": "Truncates the file. No arguments other than a possible exception are\ngiven to the completion callback. A file descriptor can also be passed as the\nfirst argument. In this case, `fs.ftruncate()` is called.",
    "position": 8842,
    "id": "paragraph_8842"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});\n```",
    "originalSentence": "```mjs\nimport { truncate } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});\n```",
    "position": 8843,
    "id": "paragraph_8843"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});\n```",
    "originalSentence": "```cjs\nconst { truncate } = require('node:fs');\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});\n```",
    "position": 8844,
    "id": "paragraph_8844"
  },
  {
    "type": "paragraph",
    "content": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "originalSentence": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "position": 8845,
    "id": "paragraph_8845"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX truncate(2) documentation for more details.",
    "originalSentence": "See the POSIX truncate(2) documentation for more details.",
    "position": 8846,
    "id": "paragraph_8846"
  },
  {
    "type": "paragraph",
    "content": "### `fs.unlink(path, callback)`",
    "originalSentence": "### `fs.unlink(path, callback)`",
    "position": 8847,
    "id": "paragraph_8847"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8848,
    "id": "paragraph_8848"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8849,
    "id": "paragraph_8849"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously removes a file or symbolic link. No arguments other than a\npossible exception are given to the completion callback.",
    "originalSentence": "Asynchronously removes a file or symbolic link. No arguments other than a\npossible exception are given to the completion callback.",
    "position": 8850,
    "id": "paragraph_8850"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\nunlink('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was deleted');\n});\n```",
    "originalSentence": "```mjs\nimport { unlink } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\nunlink('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was deleted');\n});\n```",
    "position": 8851,
    "id": "paragraph_8851"
  },
  {
    "type": "paragraph",
    "content": "`fs.unlink()` will not work on a directory, empty or otherwise. To remove a\ndirectory, use [`fs.rmdir()`][].",
    "originalSentence": "`fs.unlink()` will not work on a directory, empty or otherwise. To remove a\ndirectory, use [`fs.rmdir()`][].",
    "position": 8852,
    "id": "paragraph_8852"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX unlink(2) documentation for more details.",
    "originalSentence": "See the POSIX unlink(2) documentation for more details.",
    "position": 8853,
    "id": "paragraph_8853"
  },
  {
    "type": "paragraph",
    "content": "### `fs.unwatchFile(filename[, listener])`",
    "originalSentence": "### `fs.unwatchFile(filename[, listener])`",
    "position": 8854,
    "id": "paragraph_8854"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\n-->",
    "position": 8855,
    "id": "paragraph_8855"
  },
  {
    "type": "paragraph",
    "content": "* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs.watchFile()`",
    "originalSentence": "* `filename` {string|Buffer|URL}\n* `listener` {Function} Optional, a listener previously attached using\n  `fs.watchFile()`",
    "position": 8856,
    "id": "paragraph_8856"
  },
  {
    "type": "paragraph",
    "content": "Stop watching for changes on `filename`. If `listener` is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`.",
    "originalSentence": "Stop watching for changes on `filename`. If `listener` is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of `filename`.",
    "position": 8857,
    "id": "paragraph_8857"
  },
  {
    "type": "paragraph",
    "content": "Calling `fs.unwatchFile()` with a filename that is not being watched is a\nno-op, not an error.",
    "originalSentence": "Calling `fs.unwatchFile()` with a filename that is not being watched is a\nno-op, not an error.",
    "position": 8858,
    "id": "paragraph_8858"
  },
  {
    "type": "paragraph",
    "content": "Using [`fs.watch()`][] is more efficient than `fs.watchFile()` and\n`fs.unwatchFile()`. `fs.watch()` should be used instead of `fs.watchFile()`\nand `fs.unwatchFile()` when possible.",
    "originalSentence": "Using [`fs.watch()`][] is more efficient than `fs.watchFile()` and\n`fs.unwatchFile()`. `fs.watch()` should be used instead of `fs.watchFile()`\nand `fs.unwatchFile()` when possible.",
    "position": 8859,
    "id": "paragraph_8859"
  },
  {
    "type": "paragraph",
    "content": "### `fs.utimes(path, atime, mtime, callback)`",
    "originalSentence": "### `fs.utimes(path, atime, mtime, callback)`",
    "position": 8860,
    "id": "paragraph_8860"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "position": 8861,
    "id": "paragraph_8861"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* `callback` {Function}\n  * `err` {Error}",
    "position": 8862,
    "id": "paragraph_8862"
  },
  {
    "type": "paragraph",
    "content": "Change the file system timestamps of the object referenced by `path`.",
    "originalSentence": "Change the file system timestamps of the object referenced by `path`.",
    "position": 8863,
    "id": "paragraph_8863"
  },
  {
    "type": "paragraph",
    "content": "The `atime` and `mtime` arguments follow these rules:",
    "originalSentence": "The `atime` and `mtime` arguments follow these rules:",
    "position": 8864,
    "id": "paragraph_8864"
  },
  {
    "type": "paragraph",
    "content": "* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789.0'`.\n* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "originalSentence": "* Values can be either numbers representing Unix epoch time in seconds,\n  `Date`s, or a numeric string like `'123456789.0'`.\n* If the value can not be converted to a number, or is `NaN`, `Infinity`, or\n  `-Infinity`, an `Error` will be thrown.",
    "position": 8865,
    "id": "paragraph_8865"
  },
  {
    "type": "paragraph",
    "content": "### `fs.watch(filename[, options][, listener])`",
    "originalSentence": "### `fs.watch(filename[, options][, listener])`",
    "position": 8866,
    "id": "paragraph_8866"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.5.10\nchanges:\n  - version: v19.1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi.\n  - version:\n      - v15.9.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.5.10\nchanges:\n  - version: v19.1.0\n    pr-url: https://github.com/nodejs/node/pull/45098\n    description: Added recursive support for Linux, AIX and IBMi.\n  - version:\n      - v15.9.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/37190\n    description: Added support for closing the watcher with an AbortSignal.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n-->",
    "position": 8867,
    "id": "paragraph_8867"
  },
  {
    "type": "paragraph",
    "content": "* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.\n  * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.\n  * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.\n  * `signal` {AbortSignal} allows closing the watcher with an AbortSignal.\n* `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs.FSWatcher}",
    "originalSentence": "* `filename` {string|Buffer|URL}\n* `options` {string|Object}\n  * `persistent` {boolean} Indicates whether the process should continue to run\n    as long as files are being watched. **Default:** `true`.\n  * `recursive` {boolean} Indicates whether all subdirectories should be\n    watched, or only the current directory. This applies when a directory is\n    specified, and only on supported platforms (See [caveats][]). **Default:**\n    `false`.\n  * `encoding` {string} Specifies the character encoding to be used for the\n    filename passed to the listener. **Default:** `'utf8'`.\n  * `signal` {AbortSignal} allows closing the watcher with an AbortSignal.\n* `listener` {Function|undefined} **Default:** `undefined`\n  * `eventType` {string}\n  * `filename` {string|Buffer|null}\n* Returns: {fs.FSWatcher}",
    "position": 8868,
    "id": "paragraph_8868"
  },
  {
    "type": "paragraph",
    "content": "Watch for changes on `filename`, where `filename` is either a file or a\ndirectory.",
    "originalSentence": "Watch for changes on `filename`, where `filename` is either a file or a\ndirectory.",
    "position": 8869,
    "id": "paragraph_8869"
  },
  {
    "type": "paragraph",
    "content": "The second argument is optional. If `options` is provided as a string, it\nspecifies the `encoding`. Otherwise `options` should be passed as an object.",
    "originalSentence": "The second argument is optional. If `options` is provided as a string, it\nspecifies the `encoding`. Otherwise `options` should be passed as an object.",
    "position": 8870,
    "id": "paragraph_8870"
  },
  {
    "type": "paragraph",
    "content": "The listener callback gets two arguments `(eventType, filename)`. `eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event.",
    "originalSentence": "The listener callback gets two arguments `(eventType, filename)`. `eventType`\nis either `'rename'` or `'change'`, and `filename` is the name of the file\nwhich triggered the event.",
    "position": 8871,
    "id": "paragraph_8871"
  },
  {
    "type": "paragraph",
    "content": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "originalSentence": "On most platforms, `'rename'` is emitted whenever a filename appears or\ndisappears in the directory.",
    "position": 8872,
    "id": "paragraph_8872"
  },
  {
    "type": "paragraph",
    "content": "The listener callback is attached to the `'change'` event fired by\n{fs.FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`.",
    "originalSentence": "The listener callback is attached to the `'change'` event fired by\n{fs.FSWatcher}, but it is not the same thing as the `'change'` value of\n`eventType`.",
    "position": 8873,
    "id": "paragraph_8873"
  },
  {
    "type": "paragraph",
    "content": "If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs.FSWatcher}.",
    "originalSentence": "If a `signal` is passed, aborting the corresponding AbortController will close\nthe returned {fs.FSWatcher}.",
    "position": 8874,
    "id": "paragraph_8874"
  },
  {
    "type": "paragraph",
    "content": "The `fs.watch` API is not 100% consistent across platforms, and is\nunavailable in some situations.",
    "originalSentence": "The `fs.watch` API is not 100% consistent across platforms, and is\nunavailable in some situations.",
    "position": 8875,
    "id": "paragraph_8875"
  },
  {
    "type": "paragraph",
    "content": "On Windows, no events will be emitted if the watched directory is moved or\nrenamed. An `EPERM` error is reported when the watched directory is deleted.",
    "originalSentence": "On Windows, no events will be emitted if the watched directory is moved or\nrenamed. An `EPERM` error is reported when the watched directory is deleted.",
    "position": 8876,
    "id": "paragraph_8876"
  },
  {
    "type": "paragraph",
    "content": "The `fs.watch` API does not provide any protection with respect\nto malicious actions on the file system. For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files. This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename.",
    "originalSentence": "The `fs.watch` API does not provide any protection with respect\nto malicious actions on the file system. For example, on Windows it is\nimplemented by monitoring changes in a directory versus specific files. This\nallows substitution of a file and fs reporting changes on the new file\nwith the same filename.",
    "position": 8877,
    "id": "paragraph_8877"
  },
  {
    "type": "paragraph",
    "content": "This feature depends on the underlying operating system providing a way\nto be notified of file system changes.",
    "originalSentence": "This feature depends on the underlying operating system providing a way\nto be notified of file system changes.",
    "position": 8878,
    "id": "paragraph_8878"
  },
  {
    "type": "paragraph",
    "content": "* On Linux systems, this uses [`inotify(7)`][].\n* On BSD systems, this uses [`kqueue(2)`][].\n* On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories.\n* On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][].\n* On Windows systems, this feature depends on [`ReadDirectoryChangesW`][].\n* On AIX systems, this feature depends on [`AHAFS`][], which must be enabled.\n* On IBM i systems, this feature is not supported.",
    "originalSentence": "* On Linux systems, this uses [`inotify(7)`][].\n* On BSD systems, this uses [`kqueue(2)`][].\n* On macOS, this uses [`kqueue(2)`][] for files and [`FSEvents`][] for\n  directories.\n* On SunOS systems (including Solaris and SmartOS), this uses [`event ports`][].\n* On Windows systems, this feature depends on [`ReadDirectoryChangesW`][].\n* On AIX systems, this feature depends on [`AHAFS`][], which must be enabled.\n* On IBM i systems, this feature is not supported.",
    "position": 8879,
    "id": "paragraph_8879"
  },
  {
    "type": "paragraph",
    "content": "If the underlying functionality is not available for some reason, then\n`fs.watch()` will not be able to function and may throw an exception.\nFor example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker.",
    "originalSentence": "If the underlying functionality is not available for some reason, then\n`fs.watch()` will not be able to function and may throw an exception.\nFor example, watching files or directories can be unreliable, and in some\ncases impossible, on network file systems (NFS, SMB, etc) or host file systems\nwhen using virtualization software such as Vagrant or Docker.",
    "position": 8880,
    "id": "paragraph_8880"
  },
  {
    "type": "paragraph",
    "content": "It is still possible to use `fs.watchFile()`, which uses stat polling, but\nthis method is slower and less reliable.",
    "originalSentence": "It is still possible to use `fs.watchFile()`, which uses stat polling, but\nthis method is slower and less reliable.",
    "position": 8881,
    "id": "paragraph_8881"
  },
  {
    "type": "paragraph",
    "content": "On Linux and macOS systems, `fs.watch()` resolves the path to an [inode][] and\nwatches the inode. If the watched path is deleted and recreated, it is assigned\na new inode. The watch will emit an event for the delete but will continue\nwatching the _original_ inode. Events for the new inode will not be emitted.\nThis is expected behavior.",
    "originalSentence": "On Linux and macOS systems, `fs.watch()` resolves the path to an [inode][] and\nwatches the inode. If the watched path is deleted and recreated, it is assigned\na new inode. The watch will emit an event for the delete but will continue\nwatching the _original_ inode. Events for the new inode will not be emitted.\nThis is expected behavior.",
    "position": 8882,
    "id": "paragraph_8882"
  },
  {
    "type": "paragraph",
    "content": "AIX files retain the same inode for the lifetime of a file. Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation).",
    "originalSentence": "AIX files retain the same inode for the lifetime of a file. Saving and closing a\nwatched file on AIX will result in two notifications (one for adding new\ncontent, and one for truncation).",
    "position": 8883,
    "id": "paragraph_8883"
  },
  {
    "type": "paragraph",
    "content": "##### Filename argument",
    "originalSentence": "##### Filename argument",
    "position": 8884,
    "id": "paragraph_8884"
  },
  {
    "type": "paragraph",
    "content": "Providing `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX. Even on supported platforms, `filename` is not always\nguaranteed to be provided. Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`.",
    "originalSentence": "Providing `filename` argument in the callback is only supported on Linux,\nmacOS, Windows, and AIX. Even on supported platforms, `filename` is not always\nguaranteed to be provided. Therefore, don't assume that `filename` argument is\nalways provided in the callback, and have some fallback logic if it is `null`.",
    "position": 8885,
    "id": "paragraph_8885"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.log(`event type is: ${eventType}`);\n  if (filename) {\n    console.log(`filename provided: ${filename}`);\n  } else {\n    console.log('filename not provided');\n  }\n});\n```",
    "originalSentence": "```mjs\nimport { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.log(`event type is: ${eventType}`);\n  if (filename) {\n    console.log(`filename provided: ${filename}`);\n  } else {\n    console.log('filename not provided');\n  }\n});\n```",
    "position": 8886,
    "id": "paragraph_8886"
  },
  {
    "type": "paragraph",
    "content": "### `fs.watchFile(filename[, options], listener)`",
    "originalSentence": "### `fs.watchFile(filename[, options], listener)`",
    "position": 8887,
    "id": "paragraph_8887"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: The `bigint` option is now supported.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `filename` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "position": 8888,
    "id": "paragraph_8888"
  },
  {
    "type": "paragraph",
    "content": "* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs.Stats}\n  * `previous` {fs.Stats}\n* Returns: {fs.StatWatcher}",
    "originalSentence": "* `filename` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} **Default:** `false`\n  * `persistent` {boolean} **Default:** `true`\n  * `interval` {integer} **Default:** `5007`\n* `listener` {Function}\n  * `current` {fs.Stats}\n  * `previous` {fs.Stats}\n* Returns: {fs.StatWatcher}",
    "position": 8889,
    "id": "paragraph_8889"
  },
  {
    "type": "paragraph",
    "content": "Watch for changes on `filename`. The callback `listener` will be called each\ntime the file is accessed.",
    "originalSentence": "Watch for changes on `filename`. The callback `listener` will be called each\ntime the file is accessed.",
    "position": 8890,
    "id": "paragraph_8890"
  },
  {
    "type": "paragraph",
    "content": "The `options` argument may be omitted. If provided, it should be an object. The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched.\nThe `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds.",
    "originalSentence": "The `options` argument may be omitted. If provided, it should be an object. The\n`options` object may contain a boolean named `persistent` that indicates\nwhether the process should continue to run as long as files are being watched.\nThe `options` object may specify an `interval` property indicating how often the\ntarget should be polled in milliseconds.",
    "position": 8891,
    "id": "paragraph_8891"
  },
  {
    "type": "paragraph",
    "content": "The `listener` gets two arguments the current stat object and the previous\nstat object:",
    "originalSentence": "The `listener` gets two arguments the current stat object and the previous\nstat object:",
    "position": 8892,
    "id": "paragraph_8892"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { watchFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { watchFile } from 'node:fs';",
    "position": 8893,
    "id": "paragraph_8893"
  },
  {
    "type": "paragraph",
    "content": "watchFile('message.text', (curr, prev) => {\n  console.log(`the current mtime is: ${curr.mtime}`);\n  console.log(`the previous mtime was: ${prev.mtime}`);\n});\n```",
    "originalSentence": "watchFile('message.text', (curr, prev) => {\n  console.log(`the current mtime is: ${curr.mtime}`);\n  console.log(`the previous mtime was: ${prev.mtime}`);\n});\n```",
    "position": 8894,
    "id": "paragraph_8894"
  },
  {
    "type": "paragraph",
    "content": "These stat objects are instances of `fs.Stat`. If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s.",
    "originalSentence": "These stat objects are instances of `fs.Stat`. If the `bigint` option is `true`,\nthe numeric values in these objects are specified as `BigInt`s.",
    "position": 8895,
    "id": "paragraph_8895"
  },
  {
    "type": "paragraph",
    "content": "To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr.mtimeMs` and `prev.mtimeMs`.",
    "originalSentence": "To be notified when the file was modified, not just accessed, it is necessary\nto compare `curr.mtimeMs` and `prev.mtimeMs`.",
    "position": 8896,
    "id": "paragraph_8896"
  },
  {
    "type": "paragraph",
    "content": "When an `fs.watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0.10.",
    "originalSentence": "When an `fs.watchFile` operation results in an `ENOENT` error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0.10.",
    "position": 8897,
    "id": "paragraph_8897"
  },
  {
    "type": "paragraph",
    "content": "Using [`fs.watch()`][] is more efficient than `fs.watchFile` and\n`fs.unwatchFile`. `fs.watch` should be used instead of `fs.watchFile` and\n`fs.unwatchFile` when possible.",
    "originalSentence": "Using [`fs.watch()`][] is more efficient than `fs.watchFile` and\n`fs.unwatchFile`. `fs.watch` should be used instead of `fs.watchFile` and\n`fs.unwatchFile` when possible.",
    "position": 8898,
    "id": "paragraph_8898"
  },
  {
    "type": "paragraph",
    "content": "When a file being watched by `fs.watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance).",
    "originalSentence": "When a file being watched by `fs.watchFile()` disappears and reappears,\nthen the contents of `previous` in the second callback event (the file's\nreappearance) will be the same as the contents of `previous` in the first\ncallback event (its disappearance).",
    "position": 8899,
    "id": "paragraph_8899"
  },
  {
    "type": "paragraph",
    "content": "* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name",
    "originalSentence": "* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name",
    "position": 8900,
    "id": "paragraph_8900"
  },
  {
    "type": "paragraph",
    "content": "### `fs.write(fd, buffer, offset[, length[, position]], callback)`",
    "originalSentence": "### `fs.write(fd, buffer, offset[, length[, position]], callback)`",
    "position": 8901,
    "id": "paragraph_8901"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.0.2\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8902,
    "id": "paragraph_8902"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}",
    "position": 8903,
    "id": "paragraph_8903"
  },
  {
    "type": "paragraph",
    "content": "Write `buffer` to the file specified by `fd`.",
    "originalSentence": "Write `buffer` to the file specified by `fd`.",
    "position": 8904,
    "id": "paragraph_8904"
  },
  {
    "type": "paragraph",
    "content": "`offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write.",
    "originalSentence": "`offset` determines the part of the buffer to be written, and `length` is\nan integer specifying the number of bytes to write.",
    "position": 8905,
    "id": "paragraph_8905"
  },
  {
    "type": "paragraph",
    "content": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !== 'number'`, the data will be written\nat the current position. See pwrite(2).",
    "originalSentence": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !== 'number'`, the data will be written\nat the current position. See pwrite(2).",
    "position": 8906,
    "id": "paragraph_8906"
  },
  {
    "type": "paragraph",
    "content": "The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`.",
    "originalSentence": "The callback will be given three arguments `(err, bytesWritten, buffer)` where\n`bytesWritten` specifies how many _bytes_ were written from `buffer`.",
    "position": 8907,
    "id": "paragraph_8907"
  },
  {
    "type": "paragraph",
    "content": "If this method is invoked as its [`util.promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties.",
    "originalSentence": "If this method is invoked as its [`util.promisify()`][]ed version, it returns\na promise for an `Object` with `bytesWritten` and `buffer` properties.",
    "position": 8908,
    "id": "paragraph_8908"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `fs.write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.createWriteStream()`][] is\nrecommended.",
    "originalSentence": "It is unsafe to use `fs.write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.createWriteStream()`][] is\nrecommended.",
    "position": 8909,
    "id": "paragraph_8909"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 8910,
    "id": "paragraph_8910"
  },
  {
    "type": "paragraph",
    "content": "### `fs.write(fd, buffer[, options], callback)`",
    "originalSentence": "### `fs.write(fd, buffer[, options], callback)`",
    "position": 8911,
    "id": "paragraph_8911"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v18.3.0\n  - v16.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v18.3.0\n  - v16.17.0\n-->",
    "position": 8912,
    "id": "paragraph_8912"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffer` {Buffer|TypedArray|DataView}",
    "position": 8913,
    "id": "paragraph_8913"
  },
  {
    "type": "paragraph",
    "content": "Write `buffer` to the file specified by `fd`.",
    "originalSentence": "Write `buffer` to the file specified by `fd`.",
    "position": 8914,
    "id": "paragraph_8914"
  },
  {
    "type": "paragraph",
    "content": "Similar to the above `fs.write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "originalSentence": "Similar to the above `fs.write` function, this version takes an\noptional `options` object. If no `options` object is specified, it will\ndefault with the above values.",
    "position": 8915,
    "id": "paragraph_8915"
  },
  {
    "type": "paragraph",
    "content": "### `fs.write(fd, string[, position[, encoding]], callback)`",
    "originalSentence": "### `fs.write(fd, string[, position[, encoding]], callback)`",
    "position": 8916,
    "id": "paragraph_8916"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.5\nchanges:\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.\n  - version: v17.8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.\n  - version: v14.12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.5\nchanges:\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.\n  - version: v17.8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.\n  - version: v14.12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `string` parameter will stringify an object with an\n                 explicit `toString` function.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n-->",
    "position": 8917,
    "id": "paragraph_8917"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}",
    "originalSentence": "* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* `callback` {Function}\n  * `err` {Error}\n  * `written` {integer}\n  * `string` {string}",
    "position": 8918,
    "id": "paragraph_8918"
  },
  {
    "type": "paragraph",
    "content": "Write `string` to the file specified by `fd`. If `string` is not a string,\nan exception is thrown.",
    "originalSentence": "Write `string` to the file specified by `fd`. If `string` is not a string,\nan exception is thrown.",
    "position": 8919,
    "id": "paragraph_8919"
  },
  {
    "type": "paragraph",
    "content": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !== 'number'` the data will be written at\nthe current position. See pwrite(2).",
    "originalSentence": "`position` refers to the offset from the beginning of the file where this data\nshould be written. If `typeof position !== 'number'` the data will be written at\nthe current position. See pwrite(2).",
    "position": 8920,
    "id": "paragraph_8920"
  },
  {
    "type": "paragraph",
    "content": "`encoding` is the expected string encoding.",
    "originalSentence": "`encoding` is the expected string encoding.",
    "position": 8921,
    "id": "paragraph_8921"
  },
  {
    "type": "paragraph",
    "content": "The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written. Bytes\nwritten is not necessarily the same as string characters written. See\n[`Buffer.byteLength`][].",
    "originalSentence": "The callback will receive the arguments `(err, written, string)` where `written`\nspecifies how many _bytes_ the passed string required to be written. Bytes\nwritten is not necessarily the same as string characters written. See\n[`Buffer.byteLength`][].",
    "position": 8922,
    "id": "paragraph_8922"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `fs.write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.createWriteStream()`][] is\nrecommended.",
    "originalSentence": "It is unsafe to use `fs.write()` multiple times on the same file without waiting\nfor the callback. For this scenario, [`fs.createWriteStream()`][] is\nrecommended.",
    "position": 8923,
    "id": "paragraph_8923"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 8924,
    "id": "paragraph_8924"
  },
  {
    "type": "paragraph",
    "content": "On Windows, if the file descriptor is connected to the console (e.g. `fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used.\nIt is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command. See the [chcp][] docs for more\ndetails.",
    "originalSentence": "On Windows, if the file descriptor is connected to the console (e.g. `fd == 1`\nor `stdout`) a string containing non-ASCII characters will not be rendered\nproperly by default, regardless of the encoding used.\nIt is possible to configure the console to render UTF-8 properly by changing the\nactive codepage with the `chcp 65001` command. See the [chcp][] docs for more\ndetails.",
    "position": 8925,
    "id": "paragraph_8925"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writeFile(file, data[, options], callback)`",
    "originalSentence": "### `fs.writeFile(file, data[, options], callback)`",
    "position": 8926,
    "id": "paragraph_8926"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.29\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v17.8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version:\n      - v15.2.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.\n  - version: v14.12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.29\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is no longer supported.\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n  - version: v17.8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `string` parameter an object with an own\n                 `toString` function is deprecated.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37460\n    description: The error returned may be an `AggregateError` if more than one\n                 error is returned.\n  - version:\n      - v15.2.0\n      - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/35993\n    description: The options argument may include an AbortSignal to abort an\n                 ongoing writeFile request.\n  - version: v14.12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v10.0.0\n    pr-url: https://github.com/nodejs/node/pull/12562\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will throw a `TypeError` at runtime.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7897\n    description: The `callback` parameter is no longer optional. Not passing\n                 it will emit a deprecation warning with id DEP0013.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "position": 8927,
    "id": "paragraph_8927"
  },
  {
    "type": "paragraph",
    "content": "* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.\n  * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.fsync()` is used to flush the data.\n    **Default:** `false`.\n  * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}",
    "originalSentence": "* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.\n  * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.fsync()` is used to flush the data.\n    **Default:** `false`.\n  * `signal` {AbortSignal} allows aborting an in-progress writeFile\n* `callback` {Function}\n  * `err` {Error|AggregateError}",
    "position": 8928,
    "id": "paragraph_8928"
  },
  {
    "type": "paragraph",
    "content": "When `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists. `data` can be a string or a buffer.",
    "originalSentence": "When `file` is a filename, asynchronously writes data to the file, replacing the\nfile if it already exists. `data` can be a string or a buffer.",
    "position": 8929,
    "id": "paragraph_8929"
  },
  {
    "type": "paragraph",
    "content": "When `file` is a file descriptor, the behavior is similar to calling\n`fs.write()` directly (which is recommended). See the notes below on using\na file descriptor.",
    "originalSentence": "When `file` is a file descriptor, the behavior is similar to calling\n`fs.write()` directly (which is recommended). See the notes below on using\na file descriptor.",
    "position": 8930,
    "id": "paragraph_8930"
  },
  {
    "type": "paragraph",
    "content": "The `encoding` option is ignored if `data` is a buffer.",
    "originalSentence": "The `encoding` option is ignored if `data` is a buffer.",
    "position": 8931,
    "id": "paragraph_8931"
  },
  {
    "type": "paragraph",
    "content": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "position": 8932,
    "id": "paragraph_8932"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';",
    "position": 8933,
    "id": "paragraph_8933"
  },
  {
    "type": "paragraph",
    "content": "const data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, (err) => {\n  if (err) throw err;\n  console.log('The file has been saved!');\n});\n```",
    "originalSentence": "const data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, (err) => {\n  if (err) throw err;\n  console.log('The file has been saved!');\n});\n```",
    "position": 8934,
    "id": "paragraph_8934"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding:",
    "originalSentence": "If `options` is a string, then it specifies the encoding:",
    "position": 8935,
    "id": "paragraph_8935"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { writeFile } from 'node:fs';",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';",
    "position": 8936,
    "id": "paragraph_8936"
  },
  {
    "type": "paragraph",
    "content": "writeFile('message.txt', 'Hello Node.js', 'utf8', callback);\n```",
    "originalSentence": "writeFile('message.txt', 'Hello Node.js', 'utf8', callback);\n```",
    "position": 8937,
    "id": "paragraph_8937"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `fs.writeFile()` multiple times on the same file without\nwaiting for the callback. For this scenario, [`fs.createWriteStream()`][] is\nrecommended.",
    "originalSentence": "It is unsafe to use `fs.writeFile()` multiple times on the same file without\nwaiting for the callback. For this scenario, [`fs.createWriteStream()`][] is\nrecommended.",
    "position": 8938,
    "id": "paragraph_8938"
  },
  {
    "type": "paragraph",
    "content": "Similarly to `fs.readFile` - `fs.writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it.\nFor performance sensitive code consider using [`fs.createWriteStream()`][].",
    "originalSentence": "Similarly to `fs.readFile` - `fs.writeFile` is a convenience method that\nperforms multiple `write` calls internally to write the buffer passed to it.\nFor performance sensitive code consider using [`fs.createWriteStream()`][].",
    "position": 8939,
    "id": "paragraph_8939"
  },
  {
    "type": "paragraph",
    "content": "It is possible to use an {AbortSignal} to cancel an `fs.writeFile()`.\nCancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "originalSentence": "It is possible to use an {AbortSignal} to cancel an `fs.writeFile()`.\nCancelation is \"best effort\", and some amount of data is likely still\nto be written.",
    "position": 8940,
    "id": "paragraph_8940"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';",
    "originalSentence": "```mjs\nimport { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';",
    "position": 8941,
    "id": "paragraph_8941"
  },
  {
    "type": "paragraph",
    "content": "const controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.abort();\n```",
    "originalSentence": "const controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.abort();\n```",
    "position": 8942,
    "id": "paragraph_8942"
  },
  {
    "type": "paragraph",
    "content": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.writeFile` performs.",
    "originalSentence": "Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering `fs.writeFile` performs.",
    "position": 8943,
    "id": "paragraph_8943"
  },
  {
    "type": "paragraph",
    "content": "#### Using `fs.writeFile()` with file descriptors",
    "originalSentence": "#### Using `fs.writeFile()` with file descriptors",
    "position": 8944,
    "id": "paragraph_8944"
  },
  {
    "type": "paragraph",
    "content": "When `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs.write()` like:",
    "originalSentence": "When `file` is a file descriptor, the behavior is almost identical to directly\ncalling `fs.write()` like:",
    "position": 8945,
    "id": "paragraph_8945"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';",
    "originalSentence": "```mjs\nimport { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';",
    "position": 8946,
    "id": "paragraph_8946"
  },
  {
    "type": "paragraph",
    "content": "write(fd, Buffer.from(data, options.encoding), callback);\n```",
    "originalSentence": "write(fd, Buffer.from(data, options.encoding), callback);\n```",
    "position": 8947,
    "id": "paragraph_8947"
  },
  {
    "type": "paragraph",
    "content": "The difference from directly calling `fs.write()` is that under some unusual\nconditions, `fs.write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs.writeFile()` retries until\nthe data is entirely written (or an error occurs).",
    "originalSentence": "The difference from directly calling `fs.write()` is that under some unusual\nconditions, `fs.write()` might write only part of the buffer and need to be\nretried to write the remaining data, whereas `fs.writeFile()` retries until\nthe data is entirely written (or an error occurs).",
    "position": 8948,
    "id": "paragraph_8948"
  },
  {
    "type": "paragraph",
    "content": "The implications of this are a common source of confusion. In\nthe file descriptor case, the file is not replaced! The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data.",
    "originalSentence": "The implications of this are a common source of confusion. In\nthe file descriptor case, the file is not replaced! The data is not necessarily\nwritten to the beginning of the file, and the file's original data may remain\nbefore and/or after the newly written data.",
    "position": 8949,
    "id": "paragraph_8949"
  },
  {
    "type": "paragraph",
    "content": "For example, if `fs.writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor). If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`.",
    "originalSentence": "For example, if `fs.writeFile()` is called twice in a row, first to write the\nstring `'Hello'`, then to write the string `', World'`, the file would contain\n`'Hello, World'`, and might contain some of the file's original data (depending\non the size of the original file, and the position of the file descriptor). If\na file name had been used instead of a descriptor, the file would be guaranteed\nto contain only `', World'`.",
    "position": 8950,
    "id": "paragraph_8950"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writev(fd, buffers[, position], callback)`",
    "originalSentence": "### `fs.writev(fd, buffers[, position], callback)`",
    "position": 8951,
    "id": "paragraph_8951"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.9.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.9.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "position": 8952,
    "id": "paragraph_8952"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}",
    "originalSentence": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* `callback` {Function}\n  * `err` {Error}\n  * `bytesWritten` {integer}\n  * `buffers` {ArrayBufferView\\[]}",
    "position": 8953,
    "id": "paragraph_8953"
  },
  {
    "type": "paragraph",
    "content": "Write an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`.",
    "originalSentence": "Write an array of `ArrayBufferView`s to the file specified by `fd` using\n`writev()`.",
    "position": 8954,
    "id": "paragraph_8954"
  },
  {
    "type": "paragraph",
    "content": "`position` is the offset from the beginning of the file where this data\nshould be written. If `typeof position !== 'number'`, the data will be written\nat the current position.",
    "originalSentence": "`position` is the offset from the beginning of the file where this data\nshould be written. If `typeof position !== 'number'`, the data will be written\nat the current position.",
    "position": 8955,
    "id": "paragraph_8955"
  },
  {
    "type": "paragraph",
    "content": "The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`. `bytesWritten` is how many bytes were written from `buffers`.",
    "originalSentence": "The callback will be given three arguments: `err`, `bytesWritten`, and\n`buffers`. `bytesWritten` is how many bytes were written from `buffers`.",
    "position": 8956,
    "id": "paragraph_8956"
  },
  {
    "type": "paragraph",
    "content": "If this method is [`util.promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties.",
    "originalSentence": "If this method is [`util.promisify()`][]ed, it returns a promise for an\n`Object` with `bytesWritten` and `buffers` properties.",
    "position": 8957,
    "id": "paragraph_8957"
  },
  {
    "type": "paragraph",
    "content": "It is unsafe to use `fs.writev()` multiple times on the same file without\nwaiting for the callback. For this scenario, use [`fs.createWriteStream()`][].",
    "originalSentence": "It is unsafe to use `fs.writev()` multiple times on the same file without\nwaiting for the callback. For this scenario, use [`fs.createWriteStream()`][].",
    "position": 8958,
    "id": "paragraph_8958"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 8959,
    "id": "paragraph_8959"
  },
  {
    "type": "paragraph",
    "content": "The synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails.",
    "originalSentence": "The synchronous APIs perform all operations synchronously, blocking the\nevent loop until the operation completes or fails.",
    "position": 8960,
    "id": "paragraph_8960"
  },
  {
    "type": "paragraph",
    "content": "### `fs.accessSync(path[, mode])`",
    "originalSentence": "### `fs.accessSync(path[, mode])`",
    "position": 8961,
    "id": "paragraph_8961"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.15\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.15\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 8962,
    "id": "paragraph_8962"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.constants.F_OK`",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {integer} **Default:** `fs.constants.F_OK`",
    "position": 8963,
    "id": "paragraph_8963"
  },
  {
    "type": "paragraph",
    "content": "Synchronously tests a user's permissions for the file or directory specified\nby `path`. The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed. `mode` should be either the value\n`fs.constants.F_OK` or a mask consisting of the bitwise OR of any of\n`fs.constants.R_OK`, `fs.constants.W_OK`, and `fs.constants.X_OK` (e.g.\n`fs.constants.W_OK | fs.constants.R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "originalSentence": "Synchronously tests a user's permissions for the file or directory specified\nby `path`. The `mode` argument is an optional integer that specifies the\naccessibility checks to be performed. `mode` should be either the value\n`fs.constants.F_OK` or a mask consisting of the bitwise OR of any of\n`fs.constants.R_OK`, `fs.constants.W_OK`, and `fs.constants.X_OK` (e.g.\n`fs.constants.W_OK | fs.constants.R_OK`). Check [File access constants][] for\npossible values of `mode`.",
    "position": 8964,
    "id": "paragraph_8964"
  },
  {
    "type": "paragraph",
    "content": "If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,\nthe method will return `undefined`.",
    "originalSentence": "If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,\nthe method will return `undefined`.",
    "position": 8965,
    "id": "paragraph_8965"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { accessSync, constants } from 'node:fs';",
    "originalSentence": "```mjs\nimport { accessSync, constants } from 'node:fs';",
    "position": 8966,
    "id": "paragraph_8966"
  },
  {
    "type": "paragraph",
    "content": "try {\n  accessSync('etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can read/write');\n} catch (err) {\n  console.error('no access!');\n}\n```",
    "originalSentence": "try {\n  accessSync('etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can read/write');\n} catch (err) {\n  console.error('no access!');\n}\n```",
    "position": 8967,
    "id": "paragraph_8967"
  },
  {
    "type": "paragraph",
    "content": "### `fs.appendFileSync(path, data[, options])`",
    "originalSentence": "### `fs.appendFileSync(path, data[, options])`",
    "position": 8968,
    "id": "paragraph_8968"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.6.7\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.6.7\nchanges:\n  - version:\n    - v21.1.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50095\n    description: The `flush` option is now supported.\n  - version: v7.0.0\n    pr-url: https://github.com/nodejs/node/pull/7831\n    description: The passed `options` object will never be modified.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "position": 8969,
    "id": "paragraph_8969"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "originalSentence": "* `path` {string|Buffer|URL|number} filename or file descriptor\n* `data` {string|Buffer}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'a'`.\n  * `flush` {boolean} If `true`, the underlying file descriptor is flushed\n    prior to closing it. **Default:** `false`.",
    "position": 8970,
    "id": "paragraph_8970"
  },
  {
    "type": "paragraph",
    "content": "Synchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "originalSentence": "Synchronously append data to a file, creating the file if it does not yet\nexist. `data` can be a string or a {Buffer}.",
    "position": 8971,
    "id": "paragraph_8971"
  },
  {
    "type": "paragraph",
    "content": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "position": 8972,
    "id": "paragraph_8972"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { appendFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { appendFileSync } from 'node:fs';",
    "position": 8973,
    "id": "paragraph_8973"
  },
  {
    "type": "paragraph",
    "content": "try {\n  appendFileSync('message.txt', 'data to append');\n  console.log('The \"data to append\" was appended to file!');\n} catch (err) {\n  /* Handle the error */\n}\n```",
    "originalSentence": "try {\n  appendFileSync('message.txt', 'data to append');\n  console.log('The \"data to append\" was appended to file!');\n} catch (err) {\n  /* Handle the error */\n}\n```",
    "position": 8974,
    "id": "paragraph_8974"
  },
  {
    "type": "paragraph",
    "content": "If `options` is a string, then it specifies the encoding:",
    "originalSentence": "If `options` is a string, then it specifies the encoding:",
    "position": 8975,
    "id": "paragraph_8975"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { appendFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { appendFileSync } from 'node:fs';",
    "position": 8976,
    "id": "paragraph_8976"
  },
  {
    "type": "paragraph",
    "content": "appendFileSync('message.txt', 'data to append', 'utf8');\n```",
    "originalSentence": "appendFileSync('message.txt', 'data to append', 'utf8');\n```",
    "position": 8977,
    "id": "paragraph_8977"
  },
  {
    "type": "paragraph",
    "content": "The `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.open()` or `fs.openSync()`). The file descriptor will\nnot be closed automatically.",
    "originalSentence": "The `path` may be specified as a numeric file descriptor that has been opened\nfor appending (using `fs.open()` or `fs.openSync()`). The file descriptor will\nnot be closed automatically.",
    "position": 8978,
    "id": "paragraph_8978"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { openSync, closeSync, appendFileSync } from 'node:fs';",
    "position": 8979,
    "id": "paragraph_8979"
  },
  {
    "type": "paragraph",
    "content": "try {\n  fd = openSync('message.txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !== undefined)\n    closeSync(fd);\n}\n```",
    "originalSentence": "try {\n  fd = openSync('message.txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !== undefined)\n    closeSync(fd);\n}\n```",
    "position": 8980,
    "id": "paragraph_8980"
  },
  {
    "type": "paragraph",
    "content": "### `fs.chmodSync(path, mode)`",
    "originalSentence": "### `fs.chmodSync(path, mode)`",
    "position": 8981,
    "id": "paragraph_8981"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.6.7\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.6.7\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 8982,
    "id": "paragraph_8982"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {string|integer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {string|integer}",
    "position": 8983,
    "id": "paragraph_8983"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.chmod()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.chmod()`][].",
    "position": 8984,
    "id": "paragraph_8984"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX chmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX chmod(2) documentation for more detail.",
    "position": 8985,
    "id": "paragraph_8985"
  },
  {
    "type": "paragraph",
    "content": "### `fs.chownSync(path, uid, gid)`",
    "originalSentence": "### `fs.chownSync(path, uid, gid)`",
    "position": 8986,
    "id": "paragraph_8986"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.97\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.97\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 8987,
    "id": "paragraph_8987"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `uid` {integer}\n* `gid` {integer}",
    "position": 8988,
    "id": "paragraph_8988"
  },
  {
    "type": "paragraph",
    "content": "Synchronously changes owner and group of a file. Returns `undefined`.\nThis is the synchronous version of [`fs.chown()`][].",
    "originalSentence": "Synchronously changes owner and group of a file. Returns `undefined`.\nThis is the synchronous version of [`fs.chown()`][].",
    "position": 8989,
    "id": "paragraph_8989"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX chown(2) documentation for more detail.",
    "originalSentence": "See the POSIX chown(2) documentation for more detail.",
    "position": 8990,
    "id": "paragraph_8990"
  },
  {
    "type": "paragraph",
    "content": "### `fs.closeSync(fd)`",
    "originalSentence": "### `fs.closeSync(fd)`",
    "position": 8991,
    "id": "paragraph_8991"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\n-->",
    "position": 8992,
    "id": "paragraph_8992"
  },
  {
    "type": "paragraph",
    "content": "Closes the file descriptor. Returns `undefined`.",
    "originalSentence": "Closes the file descriptor. Returns `undefined`.",
    "position": 8993,
    "id": "paragraph_8993"
  },
  {
    "type": "paragraph",
    "content": "Calling `fs.closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "originalSentence": "Calling `fs.closeSync()` on any file descriptor (`fd`) that is currently in use\nthrough any other `fs` operation may lead to undefined behavior.",
    "position": 8994,
    "id": "paragraph_8994"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX close(2) documentation for more detail.",
    "originalSentence": "See the POSIX close(2) documentation for more detail.",
    "position": 8995,
    "id": "paragraph_8995"
  },
  {
    "type": "paragraph",
    "content": "### `fs.copyFileSync(src, dest[, mode])`",
    "originalSentence": "### `fs.copyFileSync(src, dest[, mode])`",
    "position": 8996,
    "id": "paragraph_8996"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v8.5.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.\n-->",
    "originalSentence": "<!-- YAML\nadded: v8.5.0\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/27044\n    description: Changed `flags` argument to `mode` and imposed\n                 stricter type validation.\n-->",
    "position": 8997,
    "id": "paragraph_8997"
  },
  {
    "type": "paragraph",
    "content": "* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "originalSentence": "* `src` {string|Buffer|URL} source filename to copy\n* `dest` {string|Buffer|URL} destination filename of the copy operation\n* `mode` {integer} modifiers for copy operation. **Default:** `0`.",
    "position": 8998,
    "id": "paragraph_8998"
  },
  {
    "type": "paragraph",
    "content": "Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. Returns `undefined`. Node.js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node.js will attempt to remove the destination.",
    "originalSentence": "Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it\nalready exists. Returns `undefined`. Node.js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node.js will attempt to remove the destination.",
    "position": 8999,
    "id": "paragraph_8999"
  },
  {
    "type": "paragraph",
    "content": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.g.\n`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`).",
    "originalSentence": "`mode` is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.g.\n`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`).",
    "position": 9000,
    "id": "paragraph_9000"
  },
  {
    "type": "paragraph",
    "content": "* `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.\n* `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.\n* `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "originalSentence": "* `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest` already\n  exists.\n* `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create a\n  copy-on-write reflink. If the platform does not support copy-on-write, then a\n  fallback copy mechanism is used.\n* `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to\n  create a copy-on-write reflink. If the platform does not support\n  copy-on-write, then the operation will fail.",
    "position": 9001,
    "id": "paragraph_9001"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { copyFileSync, constants } from 'node:fs';",
    "originalSentence": "```mjs\nimport { copyFileSync, constants } from 'node:fs';",
    "position": 9002,
    "id": "paragraph_9002"
  },
  {
    "type": "paragraph",
    "content": "// destination.txt will be created or overwritten by default.\ncopyFileSync('source.txt', 'destination.txt');\nconsole.log('source.txt was copied to destination.txt');",
    "originalSentence": "// destination.txt will be created or overwritten by default.\ncopyFileSync('source.txt', 'destination.txt');\nconsole.log('source.txt was copied to destination.txt');",
    "position": 9003,
    "id": "paragraph_9003"
  },
  {
    "type": "paragraph",
    "content": "// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFileSync('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n```",
    "originalSentence": "// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFileSync('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n```",
    "position": 9004,
    "id": "paragraph_9004"
  },
  {
    "type": "paragraph",
    "content": "### `fs.cpSync(src, dest[, options])`",
    "originalSentence": "### `fs.cpSync(src, dest[, options])`",
    "position": 9005,
    "id": "paragraph_9005"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v16.7.0\nchanges:\n  - version: v22.3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.copyFile()`.\n  - version:\n    - v17.6.0\n    - v16.15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.\n-->",
    "originalSentence": "<!-- YAML\nadded: v16.7.0\nchanges:\n  - version: v22.3.0\n    pr-url: https://github.com/nodejs/node/pull/53127\n    description: This API is no longer experimental.\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/47084\n    description: Accept an additional `mode` option to specify\n                 the copy behavior as the `mode` argument of `fs.copyFile()`.\n  - version:\n    - v17.6.0\n    - v16.15.0\n    pr-url: https://github.com/nodejs/node/pull/41819\n    description: Accepts an additional `verbatimSymlinks` option to specify\n                 whether to perform path resolution for symlinks.\n-->",
    "position": 9006,
    "id": "paragraph_9006"
  },
  {
    "type": "paragraph",
    "content": "* `src` {string|URL} source path to copy.\n* `dest` {string|URL} destination path to copy to.\n* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.\n  * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.\n  * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. **Default:** `undefined`\n    * `src` {string} source path to copy.\n    * `dest` {string} destination path to copy to.\n    * Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`.\n  * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.\n    **Default:** `true`.\n  * `mode` {integer} modifiers for copy operation. **Default:** `0`.\n    See `mode` flag of [`fs.copyFileSync()`][].\n  * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.\n  * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`",
    "originalSentence": "* `src` {string|URL} source path to copy.\n* `dest` {string|URL} destination path to copy to.\n* `options` {Object}\n  * `dereference` {boolean} dereference symlinks. **Default:** `false`.\n  * `errorOnExist` {boolean} when `force` is `false`, and the destination\n    exists, throw an error. **Default:** `false`.\n  * `filter` {Function} Function to filter copied files/directories. Return\n    `true` to copy the item, `false` to ignore it. When ignoring a directory,\n    all of its contents will be skipped as well. **Default:** `undefined`\n    * `src` {string} source path to copy.\n    * `dest` {string} destination path to copy to.\n    * Returns: {boolean} Any non-`Promise` value that is coercible\n      to `boolean`.\n  * `force` {boolean} overwrite existing file or directory. The copy\n    operation will ignore errors if you set this to false and the destination\n    exists. Use the `errorOnExist` option to change this behavior.\n    **Default:** `true`.\n  * `mode` {integer} modifiers for copy operation. **Default:** `0`.\n    See `mode` flag of [`fs.copyFileSync()`][].\n  * `preserveTimestamps` {boolean} When `true` timestamps from `src` will\n    be preserved. **Default:** `false`.\n  * `recursive` {boolean} copy directories recursively **Default:** `false`\n  * `verbatimSymlinks` {boolean} When `true`, path resolution for symlinks will\n    be skipped. **Default:** `false`",
    "position": 9007,
    "id": "paragraph_9007"
  },
  {
    "type": "paragraph",
    "content": "Synchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "originalSentence": "Synchronously copies the entire directory structure from `src` to `dest`,\nincluding subdirectories and files.",
    "position": 9008,
    "id": "paragraph_9008"
  },
  {
    "type": "paragraph",
    "content": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "originalSentence": "When copying a directory to another directory, globs are not supported and\nbehavior is similar to `cp dir1/ dir2/`.",
    "position": 9009,
    "id": "paragraph_9009"
  },
  {
    "type": "paragraph",
    "content": "### `fs.existsSync(path)`",
    "originalSentence": "### `fs.existsSync(path)`",
    "position": 9010,
    "id": "paragraph_9010"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "position": 9011,
    "id": "paragraph_9011"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* Returns: {boolean}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* Returns: {boolean}",
    "position": 9012,
    "id": "paragraph_9012"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the path exists, `false` otherwise.",
    "originalSentence": "Returns `true` if the path exists, `false` otherwise.",
    "position": 9013,
    "id": "paragraph_9013"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.exists()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.exists()`][].",
    "position": 9014,
    "id": "paragraph_9014"
  },
  {
    "type": "paragraph",
    "content": "`fs.exists()` is deprecated, but `fs.existsSync()` is not. The `callback`\nparameter to `fs.exists()` accepts parameters that are inconsistent with other\nNode.js callbacks. `fs.existsSync()` does not use a callback.",
    "originalSentence": "`fs.exists()` is deprecated, but `fs.existsSync()` is not. The `callback`\nparameter to `fs.exists()` accepts parameters that are inconsistent with other\nNode.js callbacks. `fs.existsSync()` does not use a callback.",
    "position": 9015,
    "id": "paragraph_9015"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { existsSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { existsSync } from 'node:fs';",
    "position": 9016,
    "id": "paragraph_9016"
  },
  {
    "type": "paragraph",
    "content": "if (existsSync('/etc/passwd'))\n  console.log('The path exists.');\n```",
    "originalSentence": "if (existsSync('/etc/passwd'))\n  console.log('The path exists.');\n```",
    "position": 9017,
    "id": "paragraph_9017"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fchmodSync(fd, mode)`",
    "originalSentence": "### `fs.fchmodSync(fd, mode)`",
    "position": 9018,
    "id": "paragraph_9018"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.7\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.7\n-->",
    "position": 9019,
    "id": "paragraph_9019"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `mode` {string|integer}",
    "originalSentence": "* `fd` {integer}\n* `mode` {string|integer}",
    "position": 9020,
    "id": "paragraph_9020"
  },
  {
    "type": "paragraph",
    "content": "Sets the permissions on the file. Returns `undefined`.",
    "originalSentence": "Sets the permissions on the file. Returns `undefined`.",
    "position": 9021,
    "id": "paragraph_9021"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX fchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchmod(2) documentation for more detail.",
    "position": 9022,
    "id": "paragraph_9022"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fchownSync(fd, uid, gid)`",
    "originalSentence": "### `fs.fchownSync(fd, uid, gid)`",
    "position": 9023,
    "id": "paragraph_9023"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.7\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.7\n-->",
    "position": 9024,
    "id": "paragraph_9024"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `uid` {integer} The file's new owner's user id.\n* `gid` {integer} The file's new group's group id.",
    "originalSentence": "* `fd` {integer}\n* `uid` {integer} The file's new owner's user id.\n* `gid` {integer} The file's new group's group id.",
    "position": 9025,
    "id": "paragraph_9025"
  },
  {
    "type": "paragraph",
    "content": "Sets the owner of the file. Returns `undefined`.",
    "originalSentence": "Sets the owner of the file. Returns `undefined`.",
    "position": 9026,
    "id": "paragraph_9026"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX fchown(2) documentation for more detail.",
    "originalSentence": "See the POSIX fchown(2) documentation for more detail.",
    "position": 9027,
    "id": "paragraph_9027"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fdatasyncSync(fd)`",
    "originalSentence": "### `fs.fdatasyncSync(fd)`",
    "position": 9028,
    "id": "paragraph_9028"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.96\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.96\n-->",
    "position": 9029,
    "id": "paragraph_9029"
  },
  {
    "type": "paragraph",
    "content": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. Returns `undefined`.",
    "originalSentence": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX\nfdatasync(2) documentation for details. Returns `undefined`.",
    "position": 9030,
    "id": "paragraph_9030"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fstatSync(fd[, options])`",
    "originalSentence": "### `fs.fstatSync(fd[, options])`",
    "position": 9031,
    "id": "paragraph_9031"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.95\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.95\nchanges:\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n-->",
    "position": 9032,
    "id": "paragraph_9032"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {fs.Stats}",
    "originalSentence": "* `fd` {integer}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n* Returns: {fs.Stats}",
    "position": 9033,
    "id": "paragraph_9033"
  },
  {
    "type": "paragraph",
    "content": "Retrieves the {fs.Stats} for the file descriptor.",
    "originalSentence": "Retrieves the {fs.Stats} for the file descriptor.",
    "position": 9034,
    "id": "paragraph_9034"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX fstat(2) documentation for more detail.",
    "originalSentence": "See the POSIX fstat(2) documentation for more detail.",
    "position": 9035,
    "id": "paragraph_9035"
  },
  {
    "type": "paragraph",
    "content": "### `fs.fsyncSync(fd)`",
    "originalSentence": "### `fs.fsyncSync(fd)`",
    "position": 9036,
    "id": "paragraph_9036"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.96\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.96\n-->",
    "position": 9037,
    "id": "paragraph_9037"
  },
  {
    "type": "paragraph",
    "content": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX fsync(2) documentation for more detail. Returns `undefined`.",
    "originalSentence": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX fsync(2) documentation for more detail. Returns `undefined`.",
    "position": 9038,
    "id": "paragraph_9038"
  },
  {
    "type": "paragraph",
    "content": "### `fs.ftruncateSync(fd[, len])`",
    "originalSentence": "### `fs.ftruncateSync(fd[, len])`",
    "position": 9039,
    "id": "paragraph_9039"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.8.6\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.8.6\n-->",
    "position": 9040,
    "id": "paragraph_9040"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `len` {integer} **Default:** `0`",
    "originalSentence": "* `fd` {integer}\n* `len` {integer} **Default:** `0`",
    "position": 9041,
    "id": "paragraph_9041"
  },
  {
    "type": "paragraph",
    "content": "Truncates the file descriptor. Returns `undefined`.",
    "originalSentence": "Truncates the file descriptor. Returns `undefined`.",
    "position": 9042,
    "id": "paragraph_9042"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.ftruncate()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.ftruncate()`][].",
    "position": 9043,
    "id": "paragraph_9043"
  },
  {
    "type": "paragraph",
    "content": "### `fs.futimesSync(fd, atime, mtime)`",
    "originalSentence": "### `fs.futimesSync(fd, atime, mtime)`",
    "position": 9044,
    "id": "paragraph_9044"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "position": 9045,
    "id": "paragraph_9045"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}",
    "originalSentence": "* `fd` {integer}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}",
    "position": 9046,
    "id": "paragraph_9046"
  },
  {
    "type": "paragraph",
    "content": "Synchronous version of [`fs.futimes()`][]. Returns `undefined`.",
    "originalSentence": "Synchronous version of [`fs.futimes()`][]. Returns `undefined`.",
    "position": 9047,
    "id": "paragraph_9047"
  },
  {
    "type": "paragraph",
    "content": "### `fs.globSync(pattern[, options])`",
    "originalSentence": "### `fs.globSync(pattern[, options])`",
    "position": 9048,
    "id": "paragraph_9048"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v22.0.0\nchanges:\n  - version:\n      - v24.1.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.7.0\n    - v22.14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.\n  - version: v22.2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.\n-->",
    "originalSentence": "<!-- YAML\nadded: v22.0.0\nchanges:\n  - version:\n      - v24.1.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/58182\n    description: Add support for `URL` instances for `cwd` option.\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n  - version:\n    - v23.7.0\n    - v22.14.0\n    pr-url: https://github.com/nodejs/node/pull/56489\n    description: Add support for `exclude` option to accept glob patterns.\n  - version: v22.2.0\n    pr-url: https://github.com/nodejs/node/pull/52837\n    description: Add support for `withFileTypes` as an option.\n-->",
    "position": 9049,
    "id": "paragraph_9049"
  },
  {
    "type": "paragraph",
    "content": "* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.\n  * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.\n* Returns: {string\\[]} paths of files that match the pattern.",
    "originalSentence": "* `pattern` {string|string\\[]}\n* `options` {Object}\n  * `cwd` {string|URL} current working directory. **Default:** `process.cwd()`\n  * `exclude` {Function|string\\[]} Function to filter out files/directories or a\n    list of glob patterns to be excluded. If a function is provided, return\n    `true` to exclude the item, `false` to include it. **Default:** `undefined`.\n  * `withFileTypes` {boolean} `true` if the glob should return paths as Dirents,\n    `false` otherwise. **Default:** `false`.\n* Returns: {string\\[]} paths of files that match the pattern.",
    "position": 9050,
    "id": "paragraph_9050"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { globSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { globSync } from 'node:fs';",
    "position": 9051,
    "id": "paragraph_9051"
  },
  {
    "type": "paragraph",
    "content": "console.log(globSync('**/*.js'));\n```",
    "originalSentence": "console.log(globSync('**/*.js'));\n```",
    "position": 9052,
    "id": "paragraph_9052"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { globSync } = require('node:fs');",
    "originalSentence": "```cjs\nconst { globSync } = require('node:fs');",
    "position": 9053,
    "id": "paragraph_9053"
  },
  {
    "type": "paragraph",
    "content": "console.log(globSync('**/*.js'));\n```",
    "originalSentence": "console.log(globSync('**/*.js'));\n```",
    "position": 9054,
    "id": "paragraph_9054"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lchmodSync(path, mode)`",
    "originalSentence": "### `fs.lchmodSync(path, mode)`",
    "position": 9055,
    "id": "paragraph_9055"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\ndeprecated: v0.4.7\n-->",
    "originalSentence": "<!-- YAML\ndeprecated: v0.4.7\n-->",
    "position": 9056,
    "id": "paragraph_9056"
  },
  {
    "type": "paragraph",
    "content": "> Stability: 0 - Deprecated",
    "originalSentence": "> Stability: 0 - Deprecated",
    "position": 9057,
    "id": "paragraph_9057"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `mode` {integer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `mode` {integer}",
    "position": 9058,
    "id": "paragraph_9058"
  },
  {
    "type": "paragraph",
    "content": "Changes the permissions on a symbolic link. Returns `undefined`.",
    "originalSentence": "Changes the permissions on a symbolic link. Returns `undefined`.",
    "position": 9059,
    "id": "paragraph_9059"
  },
  {
    "type": "paragraph",
    "content": "This method is only implemented on macOS.",
    "originalSentence": "This method is only implemented on macOS.",
    "position": 9060,
    "id": "paragraph_9060"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX lchmod(2) documentation for more detail.",
    "originalSentence": "See the POSIX lchmod(2) documentation for more detail.",
    "position": 9061,
    "id": "paragraph_9061"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lchownSync(path, uid, gid)`",
    "originalSentence": "### `fs.lchownSync(path, uid, gid)`",
    "position": 9062,
    "id": "paragraph_9062"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nchanges:\n  - version: v10.6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.\n  - version: v0.4.7\n    description: Documentation-only deprecation.\n-->",
    "originalSentence": "<!-- YAML\nchanges:\n  - version: v10.6.0\n    pr-url: https://github.com/nodejs/node/pull/21498\n    description: This API is no longer deprecated.\n  - version: v0.4.7\n    description: Documentation-only deprecation.\n-->",
    "position": 9063,
    "id": "paragraph_9063"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id.\n* `gid` {integer} The file's new group's group id.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `uid` {integer} The file's new owner's user id.\n* `gid` {integer} The file's new group's group id.",
    "position": 9064,
    "id": "paragraph_9064"
  },
  {
    "type": "paragraph",
    "content": "Set the owner for the path. Returns `undefined`.",
    "originalSentence": "Set the owner for the path. Returns `undefined`.",
    "position": 9065,
    "id": "paragraph_9065"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX lchown(2) documentation for more details.",
    "originalSentence": "See the POSIX lchown(2) documentation for more details.",
    "position": 9066,
    "id": "paragraph_9066"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lutimesSync(path, atime, mtime)`",
    "originalSentence": "### `fs.lutimesSync(path, atime, mtime)`",
    "position": 9067,
    "id": "paragraph_9067"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.5.0\n  - v12.19.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.5.0\n  - v12.19.0\n-->",
    "position": 9068,
    "id": "paragraph_9068"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}",
    "position": 9069,
    "id": "paragraph_9069"
  },
  {
    "type": "paragraph",
    "content": "Change the file system timestamps of the symbolic link referenced by `path`.\nReturns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of [`fs.lutimes()`][].",
    "originalSentence": "Change the file system timestamps of the symbolic link referenced by `path`.\nReturns `undefined`, or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of [`fs.lutimes()`][].",
    "position": 9070,
    "id": "paragraph_9070"
  },
  {
    "type": "paragraph",
    "content": "### `fs.linkSync(existingPath, newPath)`",
    "originalSentence": "### `fs.linkSync(existingPath, newPath)`",
    "position": 9071,
    "id": "paragraph_9071"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `existingPath` and `newPath` parameters can be WHATWG\n                 `URL` objects using `file:` protocol. Support is currently\n                 still *experimental*.\n-->",
    "position": 9072,
    "id": "paragraph_9072"
  },
  {
    "type": "paragraph",
    "content": "* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}",
    "originalSentence": "* `existingPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}",
    "position": 9073,
    "id": "paragraph_9073"
  },
  {
    "type": "paragraph",
    "content": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. Returns `undefined`.",
    "originalSentence": "Creates a new link from the `existingPath` to the `newPath`. See the POSIX\nlink(2) documentation for more detail. Returns `undefined`.",
    "position": 9074,
    "id": "paragraph_9074"
  },
  {
    "type": "paragraph",
    "content": "### `fs.lstatSync(path[, options])`",
    "originalSentence": "### `fs.lstatSync(path[, options])`",
    "position": 9075,
    "id": "paragraph_9075"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.30\nchanges:\n  - version:\n    - v15.3.0\n    - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.30\nchanges:\n  - version:\n    - v15.3.0\n    - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9076,
    "id": "paragraph_9076"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n  * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.\n    **Default:** `true`.\n* Returns: {fs.Stats}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n  * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.\n    **Default:** `true`.\n* Returns: {fs.Stats}",
    "position": 9077,
    "id": "paragraph_9077"
  },
  {
    "type": "paragraph",
    "content": "Retrieves the {fs.Stats} for the symbolic link referred to by `path`.",
    "originalSentence": "Retrieves the {fs.Stats} for the symbolic link referred to by `path`.",
    "position": 9078,
    "id": "paragraph_9078"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX lstat(2) documentation for more details.",
    "originalSentence": "See the POSIX lstat(2) documentation for more details.",
    "position": 9079,
    "id": "paragraph_9079"
  },
  {
    "type": "paragraph",
    "content": "### `fs.mkdirSync(path[, options])`",
    "originalSentence": "### `fs.mkdirSync(path[, options])`",
    "position": 9080,
    "id": "paragraph_9080"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n     - v13.11.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now.\n  - version: v10.12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n     - v13.11.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/31530\n    description: In `recursive` mode, the first created path is returned now.\n  - version: v10.12.0\n    pr-url: https://github.com/nodejs/node/pull/21875\n    description: The second argument can now be an `options` object with\n                 `recursive` and `mode` properties.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9081,
    "id": "paragraph_9081"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.\n* Returns: {string|undefined}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object|integer}\n  * `recursive` {boolean} **Default:** `false`\n  * `mode` {string|integer} Not supported on Windows. **Default:** `0o777`.\n* Returns: {string|undefined}",
    "position": 9082,
    "id": "paragraph_9082"
  },
  {
    "type": "paragraph",
    "content": "Synchronously creates a directory. Returns `undefined`, or if `recursive` is\n`true`, the first directory path created.\nThis is the synchronous version of [`fs.mkdir()`][].",
    "originalSentence": "Synchronously creates a directory. Returns `undefined`, or if `recursive` is\n`true`, the first directory path created.\nThis is the synchronous version of [`fs.mkdir()`][].",
    "position": 9083,
    "id": "paragraph_9083"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX mkdir(2) documentation for more details.",
    "originalSentence": "See the POSIX mkdir(2) documentation for more details.",
    "position": 9084,
    "id": "paragraph_9084"
  },
  {
    "type": "paragraph",
    "content": "### `fs.mkdtempSync(prefix[, options])`",
    "originalSentence": "### `fs.mkdtempSync(prefix[, options])`",
    "position": 9085,
    "id": "paragraph_9085"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v5.10.0\nchanges:\n  - version:\n    - v20.6.0\n    - v18.19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.\n  - version:\n      - v16.5.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.\n-->",
    "originalSentence": "<!-- YAML\nadded: v5.10.0\nchanges:\n  - version:\n    - v20.6.0\n    - v18.19.0\n    pr-url: https://github.com/nodejs/node/pull/48828\n    description: The `prefix` parameter now accepts buffers and URL.\n  - version:\n      - v16.5.0\n      - v14.18.0\n    pr-url: https://github.com/nodejs/node/pull/39028\n    description: The `prefix` parameter now accepts an empty string.\n-->",
    "position": 9086,
    "id": "paragraph_9086"
  },
  {
    "type": "paragraph",
    "content": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}",
    "originalSentence": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string}",
    "position": 9087,
    "id": "paragraph_9087"
  },
  {
    "type": "paragraph",
    "content": "Returns the created directory path.",
    "originalSentence": "Returns the created directory path.",
    "position": 9088,
    "id": "paragraph_9088"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.mkdtemp()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.mkdtemp()`][].",
    "position": 9089,
    "id": "paragraph_9089"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 9090,
    "id": "paragraph_9090"
  },
  {
    "type": "paragraph",
    "content": "### `fs.mkdtempDisposableSync(prefix[, options])`",
    "originalSentence": "### `fs.mkdtempDisposableSync(prefix[, options])`",
    "position": 9091,
    "id": "paragraph_9091"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v24.4.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v24.4.0\n-->",
    "position": 9092,
    "id": "paragraph_9092"
  },
  {
    "type": "paragraph",
    "content": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory.\n  * `remove` {Function} A function which removes the created directory.\n  * `[Symbol.dispose]` {Function} The same as `remove`.",
    "originalSentence": "* `prefix` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {Object} A disposable object:\n  * `path` {string} The path of the created directory.\n  * `remove` {Function} A function which removes the created directory.\n  * `[Symbol.dispose]` {Function} The same as `remove`.",
    "position": 9093,
    "id": "paragraph_9093"
  },
  {
    "type": "paragraph",
    "content": "Returns a disposable object whose `path` property holds the created directory\npath. When the object is disposed, the directory and its contents will be\nremoved if it still exists. If the directory cannot be deleted, disposal will\nthrow an error. The object has a `remove()` method which will perform the same\ntask.",
    "originalSentence": "Returns a disposable object whose `path` property holds the created directory\npath. When the object is disposed, the directory and its contents will be\nremoved if it still exists. If the directory cannot be deleted, disposal will\nthrow an error. The object has a `remove()` method which will perform the same\ntask.",
    "position": 9094,
    "id": "paragraph_9094"
  },
  {
    "type": "paragraph",
    "content": "<!-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->",
    "originalSentence": "<!-- TODO: link MDN docs for disposables once https://github.com/mdn/content/pull/38027 lands -->",
    "position": 9095,
    "id": "paragraph_9095"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of [`fs.mkdtemp()`][].",
    "originalSentence": "For detailed information, see the documentation of [`fs.mkdtemp()`][].",
    "position": 9096,
    "id": "paragraph_9096"
  },
  {
    "type": "paragraph",
    "content": "There is no callback-based version of this API because it is designed for use\nwith the `using` syntax.",
    "originalSentence": "There is no callback-based version of this API because it is designed for use\nwith the `using` syntax.",
    "position": 9097,
    "id": "paragraph_9097"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use.",
    "position": 9098,
    "id": "paragraph_9098"
  },
  {
    "type": "paragraph",
    "content": "### `fs.opendirSync(path[, options])`",
    "originalSentence": "### `fs.opendirSync(path[, options])`",
    "position": 9099,
    "id": "paragraph_9099"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version:\n     - v13.1.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version:\n     - v13.1.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30114\n    description: The `bufferSize` option was introduced.\n-->",
    "position": 9100,
    "id": "paragraph_9100"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs.Dir}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `bufferSize` {number} Number of directory entries that are buffered\n    internally when reading from the directory. Higher values lead to better\n    performance but higher memory usage. **Default:** `32`\n  * `recursive` {boolean} **Default:** `false`\n* Returns: {fs.Dir}",
    "position": 9101,
    "id": "paragraph_9101"
  },
  {
    "type": "paragraph",
    "content": "Synchronously open a directory. See opendir(3).",
    "originalSentence": "Synchronously open a directory. See opendir(3).",
    "position": 9102,
    "id": "paragraph_9102"
  },
  {
    "type": "paragraph",
    "content": "Creates an {fs.Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "originalSentence": "Creates an {fs.Dir}, which contains all further functions for reading from\nand cleaning up the directory.",
    "position": 9103,
    "id": "paragraph_9103"
  },
  {
    "type": "paragraph",
    "content": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "originalSentence": "The `encoding` option sets the encoding for the `path` while opening the\ndirectory and subsequent read operations.",
    "position": 9104,
    "id": "paragraph_9104"
  },
  {
    "type": "paragraph",
    "content": "### `fs.openSync(path[, flags[, mode]])`",
    "originalSentence": "### `fs.openSync(path[, flags[, mode]])`",
    "position": 9105,
    "id": "paragraph_9105"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v11.1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.\n  - version: v9.9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v11.1.0\n    pr-url: https://github.com/nodejs/node/pull/23767\n    description: The `flags` argument is now optional and defaults to `'r'`.\n  - version: v9.9.0\n    pr-url: https://github.com/nodejs/node/pull/18801\n    description: The `as` and `as+` flags are supported now.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9106,
    "id": "paragraph_9106"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`.\n  See [support of file system `flags`][].\n* `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `flags` {string|number} **Default:** `'r'`.\n  See [support of file system `flags`][].\n* `mode` {string|integer} **Default:** `0o666`\n* Returns: {number}",
    "position": 9107,
    "id": "paragraph_9107"
  },
  {
    "type": "paragraph",
    "content": "Returns an integer representing the file descriptor.",
    "originalSentence": "Returns an integer representing the file descriptor.",
    "position": 9108,
    "id": "paragraph_9108"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.open()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.open()`][].",
    "position": 9109,
    "id": "paragraph_9109"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readdirSync(path[, options])`",
    "originalSentence": "### `fs.readdirSync(path[, options])`",
    "position": 9110,
    "id": "paragraph_9110"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n    - v20.1.0\n    - v18.17.0\n    pr-url: https://github.com/nodejs/node/pull/41439\n    description: Added `recursive` option.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22020\n    description: New option `withFileTypes` was added.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9111,
    "id": "paragraph_9111"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.\n* Returns: {string\\[]|Buffer\\[]|fs.Dirent\\[]}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n  * `withFileTypes` {boolean} **Default:** `false`\n  * `recursive` {boolean} If `true`, reads the contents of a directory\n    recursively. In recursive mode, it will list all files, sub files, and\n    directories. **Default:** `false`.\n* Returns: {string\\[]|Buffer\\[]|fs.Dirent\\[]}",
    "position": 9112,
    "id": "paragraph_9112"
  },
  {
    "type": "paragraph",
    "content": "Reads the contents of the directory.",
    "originalSentence": "Reads the contents of the directory.",
    "position": 9113,
    "id": "paragraph_9113"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX readdir(3) documentation for more details.",
    "originalSentence": "See the POSIX readdir(3) documentation for more details.",
    "position": 9114,
    "id": "paragraph_9114"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe filenames returned. If the `encoding` is set to `'buffer'`,\nthe filenames returned will be passed as {Buffer} objects.",
    "position": 9115,
    "id": "paragraph_9115"
  },
  {
    "type": "paragraph",
    "content": "If `options.withFileTypes` is set to `true`, the result will contain\n{fs.Dirent} objects.",
    "originalSentence": "If `options.withFileTypes` is set to `true`, the result will contain\n{fs.Dirent} objects.",
    "position": 9116,
    "id": "paragraph_9116"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readFileSync(path[, options])`",
    "originalSentence": "### `fs.readFileSync(path[, options])`",
    "position": 9117,
    "id": "paragraph_9117"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.8\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.8\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `path` parameter can be a file descriptor now.\n-->",
    "position": 9118,
    "id": "paragraph_9118"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.\n* Returns: {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL|integer} filename or file descriptor\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `null`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'r'`.\n* Returns: {string|Buffer}",
    "position": 9119,
    "id": "paragraph_9119"
  },
  {
    "type": "paragraph",
    "content": "Returns the contents of the `path`.",
    "originalSentence": "Returns the contents of the `path`.",
    "position": 9120,
    "id": "paragraph_9120"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.readFile()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.readFile()`][].",
    "position": 9121,
    "id": "paragraph_9121"
  },
  {
    "type": "paragraph",
    "content": "If the `encoding` option is specified then this function returns a\nstring. Otherwise it returns a buffer.",
    "originalSentence": "If the `encoding` option is specified then this function returns a\nstring. Otherwise it returns a buffer.",
    "position": 9122,
    "id": "paragraph_9122"
  },
  {
    "type": "paragraph",
    "content": "Similar to [`fs.readFile()`][], when the path is a directory, the behavior of\n`fs.readFileSync()` is platform-specific.",
    "originalSentence": "Similar to [`fs.readFile()`][], when the path is a directory, the behavior of\n`fs.readFileSync()` is platform-specific.",
    "position": 9123,
    "id": "paragraph_9123"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';",
    "position": 9124,
    "id": "paragraph_9124"
  },
  {
    "type": "paragraph",
    "content": "// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]",
    "originalSentence": "// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]",
    "position": 9125,
    "id": "paragraph_9125"
  },
  {
    "type": "paragraph",
    "content": "//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```",
    "originalSentence": "//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```",
    "position": 9126,
    "id": "paragraph_9126"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readlinkSync(path[, options])`",
    "originalSentence": "### `fs.readlinkSync(path[, options])`",
    "position": 9127,
    "id": "paragraph_9127"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9128,
    "id": "paragraph_9128"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}",
    "position": 9129,
    "id": "paragraph_9129"
  },
  {
    "type": "paragraph",
    "content": "Returns the symbolic link's string value.",
    "originalSentence": "Returns the symbolic link's string value.",
    "position": 9130,
    "id": "paragraph_9130"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX readlink(2) documentation for more details.",
    "originalSentence": "See the POSIX readlink(2) documentation for more details.",
    "position": 9131,
    "id": "paragraph_9131"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe link path returned. If the `encoding` is set to `'buffer'`,\nthe link path returned will be passed as a {Buffer} object.",
    "position": 9132,
    "id": "paragraph_9132"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readSync(fd, buffer, offset, length[, position])`",
    "originalSentence": "### `fs.readSync(fd, buffer, offset, length[, position])`",
    "position": 9133,
    "id": "paragraph_9133"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/4518\n    description: The `length` parameter can now be `0`.\n-->",
    "position": 9134,
    "id": "paragraph_9134"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer}\n* `length` {integer}\n* `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}",
    "position": 9135,
    "id": "paragraph_9135"
  },
  {
    "type": "paragraph",
    "content": "Returns the number of `bytesRead`.",
    "originalSentence": "Returns the number of `bytesRead`.",
    "position": 9136,
    "id": "paragraph_9136"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.read()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.read()`][].",
    "position": 9137,
    "id": "paragraph_9137"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readSync(fd, buffer[, options])`",
    "originalSentence": "### `fs.readSync(fd, buffer[, options])`",
    "position": 9138,
    "id": "paragraph_9138"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v13.13.0\n - v12.17.0\nchanges:\n  - version:\n     - v13.13.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v13.13.0\n - v12.17.0\nchanges:\n  - version:\n     - v13.13.0\n     - v12.17.0\n    pr-url: https://github.com/nodejs/node/pull/32460\n    description: Options object can be passed in\n                 to make offset, length, and position optional.\n-->",
    "position": 9139,
    "id": "paragraph_9139"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|bigint|null} **Default:** `null`\n* Returns: {number}",
    "position": 9140,
    "id": "paragraph_9140"
  },
  {
    "type": "paragraph",
    "content": "Returns the number of `bytesRead`.",
    "originalSentence": "Returns the number of `bytesRead`.",
    "position": 9141,
    "id": "paragraph_9141"
  },
  {
    "type": "paragraph",
    "content": "Similar to the above `fs.readSync` function, this version takes an optional `options` object.\nIf no `options` object is specified, it will default with the above values.",
    "originalSentence": "Similar to the above `fs.readSync` function, this version takes an optional `options` object.\nIf no `options` object is specified, it will default with the above values.",
    "position": 9142,
    "id": "paragraph_9142"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.read()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.read()`][].",
    "position": 9143,
    "id": "paragraph_9143"
  },
  {
    "type": "paragraph",
    "content": "### `fs.readvSync(fd, buffers[, position])`",
    "originalSentence": "### `fs.readvSync(fd, buffers[, position])`",
    "position": 9144,
    "id": "paragraph_9144"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v13.13.0\n - v12.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v13.13.0\n - v12.17.0\n-->",
    "position": 9145,
    "id": "paragraph_9145"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read.",
    "originalSentence": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes read.",
    "position": 9146,
    "id": "paragraph_9146"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.readv()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.readv()`][].",
    "position": 9147,
    "id": "paragraph_9147"
  },
  {
    "type": "paragraph",
    "content": "### `fs.realpathSync(path[, options])`",
    "originalSentence": "### `fs.realpathSync(path[, options])`",
    "position": 9148,
    "id": "paragraph_9148"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v6.4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/13028\n    description: Pipe/Socket resolve support was added.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using\n                 `file:` protocol.\n  - version: v6.4.0\n    pr-url: https://github.com/nodejs/node/pull/7899\n    description: Calling `realpathSync` now works again for various edge cases\n                 on Windows.\n  - version: v6.0.0\n    pr-url: https://github.com/nodejs/node/pull/3594\n    description: The `cache` parameter was removed.\n-->",
    "position": 9149,
    "id": "paragraph_9149"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}",
    "position": 9150,
    "id": "paragraph_9150"
  },
  {
    "type": "paragraph",
    "content": "Returns the resolved pathname.",
    "originalSentence": "Returns the resolved pathname.",
    "position": 9151,
    "id": "paragraph_9151"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.realpath()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.realpath()`][].",
    "position": 9152,
    "id": "paragraph_9152"
  },
  {
    "type": "paragraph",
    "content": "### `fs.realpathSync.native(path[, options])`",
    "originalSentence": "### `fs.realpathSync.native(path[, options])`",
    "position": 9153,
    "id": "paragraph_9153"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v9.2.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v9.2.0\n-->",
    "position": 9154,
    "id": "paragraph_9154"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {string|Object}\n  * `encoding` {string} **Default:** `'utf8'`\n* Returns: {string|Buffer}",
    "position": 9155,
    "id": "paragraph_9155"
  },
  {
    "type": "paragraph",
    "content": "Synchronous realpath(3).",
    "originalSentence": "Synchronous realpath(3).",
    "position": 9156,
    "id": "paragraph_9156"
  },
  {
    "type": "paragraph",
    "content": "Only paths that can be converted to UTF8 strings are supported.",
    "originalSentence": "Only paths that can be converted to UTF8 strings are supported.",
    "position": 9157,
    "id": "paragraph_9157"
  },
  {
    "type": "paragraph",
    "content": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "originalSentence": "The optional `options` argument can be a string specifying an encoding, or an\nobject with an `encoding` property specifying the character encoding to use for\nthe path returned. If the `encoding` is set to `'buffer'`,\nthe path returned will be passed as a {Buffer} object.",
    "position": 9158,
    "id": "paragraph_9158"
  },
  {
    "type": "paragraph",
    "content": "On Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "originalSentence": "On Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on `/proc` in order for this function to work. Glibc does not have\nthis restriction.",
    "position": 9159,
    "id": "paragraph_9159"
  },
  {
    "type": "paragraph",
    "content": "### `fs.renameSync(oldPath, newPath)`",
    "originalSentence": "### `fs.renameSync(oldPath, newPath)`",
    "position": 9160,
    "id": "paragraph_9160"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `oldPath` and `newPath` parameters can be WHATWG `URL`\n                 objects using `file:` protocol. Support is currently still\n                 *experimental*.\n-->",
    "position": 9161,
    "id": "paragraph_9161"
  },
  {
    "type": "paragraph",
    "content": "* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}",
    "originalSentence": "* `oldPath` {string|Buffer|URL}\n* `newPath` {string|Buffer|URL}",
    "position": 9162,
    "id": "paragraph_9162"
  },
  {
    "type": "paragraph",
    "content": "Renames the file from `oldPath` to `newPath`. Returns `undefined`.",
    "originalSentence": "Renames the file from `oldPath` to `newPath`. Returns `undefined`.",
    "position": 9163,
    "id": "paragraph_9163"
  },
  {
    "type": "paragraph",
    "content": "See the POSIX rename(2) documentation for more details.",
    "originalSentence": "See the POSIX rename(2) documentation for more details.",
    "position": 9164,
    "id": "paragraph_9164"
  },
  {
    "type": "paragraph",
    "content": "### `fs.rmdirSync(path[, options])`",
    "originalSentence": "### `fs.rmdirSync(path[, options])`",
    "position": 9165,
    "id": "paragraph_9165"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.\n  - version: v14.14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.rmSync` instead.\n  - version:\n     - v13.3.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: REPLACEME\n    pr-url: https://github.com/nodejs/node/pull/58616\n    description: Remove `recursive` option.\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdirSync(path, { recursive: true })` on a `path`\n                 that is a file is no longer permitted and results in an\n                 `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37216\n    description: \"Using `fs.rmdirSync(path, { recursive: true })` on a `path`\n                 that does not exist is no longer permitted and results in a\n                 `ENOENT` error.\"\n  - version: v16.0.0\n    pr-url: https://github.com/nodejs/node/pull/37302\n    description: The `recursive` option is deprecated, using it triggers a\n                 deprecation warning.\n  - version: v14.14.0\n    pr-url: https://github.com/nodejs/node/pull/35579\n    description: The `recursive` option is deprecated, use `fs.rmSync` instead.\n  - version:\n     - v13.3.0\n     - v12.16.0\n    pr-url: https://github.com/nodejs/node/pull/30644\n    description: The `maxBusyTries` option is renamed to `maxRetries`, and its\n                 default is 0. The `emfileWait` option has been removed, and\n                 `EMFILE` errors use the same retry logic as other errors. The\n                 `retryDelay` option is now supported. `ENFILE` errors are now\n                 retried.\n  - version: v12.10.0\n    pr-url: https://github.com/nodejs/node/pull/29168\n    description: The `recursive`, `maxBusyTries`, and `emfileWait` options are\n                 now supported.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameters can be a WHATWG `URL` object using\n                 `file:` protocol.\n-->",
    "position": 9166,
    "id": "paragraph_9166"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object} There are currently no options exposed. There used to\n  be options for `recursive`, `maxBusyTries`, and `emfileWait` but they were\n  deprecated and removed. The `options` argument is still accepted for\n  backwards compatibility but it is not used.",
    "position": 9167,
    "id": "paragraph_9167"
  },
  {
    "type": "paragraph",
    "content": "Synchronous rmdir(2). Returns `undefined`.",
    "originalSentence": "Synchronous rmdir(2). Returns `undefined`.",
    "position": 9168,
    "id": "paragraph_9168"
  },
  {
    "type": "paragraph",
    "content": "Using `fs.rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX.",
    "originalSentence": "Using `fs.rmdirSync()` on a file (not a directory) results in an `ENOENT` error\non Windows and an `ENOTDIR` error on POSIX.",
    "position": 9169,
    "id": "paragraph_9169"
  },
  {
    "type": "paragraph",
    "content": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.rmSync()`][]\nwith options `{ recursive: true, force: true }`.",
    "originalSentence": "To get a behavior similar to the `rm -rf` Unix command, use [`fs.rmSync()`][]\nwith options `{ recursive: true, force: true }`.",
    "position": 9170,
    "id": "paragraph_9170"
  },
  {
    "type": "paragraph",
    "content": "### `fs.rmSync(path[, options])`",
    "originalSentence": "### `fs.rmSync(path[, options])`",
    "position": 9171,
    "id": "paragraph_9171"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v14.14.0\nchanges:\n  - version:\n      - v17.3.0\n      - v16.14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v14.14.0\nchanges:\n  - version:\n      - v17.3.0\n      - v16.14.0\n    pr-url: https://github.com/nodejs/node/pull/41132\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9172,
    "id": "paragraph_9172"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.\n  * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.\n  * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.\n  * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.\n    **Default:** `100`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `force` {boolean} When `true`, exceptions will be ignored if `path` does\n    not exist. **Default:** `false`.\n  * `maxRetries` {integer} If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or\n    `EPERM` error is encountered, Node.js will retry the operation with a linear\n    backoff wait of `retryDelay` milliseconds longer on each try. This option\n    represents the number of retries. This option is ignored if the `recursive`\n    option is not `true`. **Default:** `0`.\n  * `recursive` {boolean} If `true`, perform a recursive directory removal. In\n    recursive mode operations are retried on failure. **Default:** `false`.\n  * `retryDelay` {integer} The amount of time in milliseconds to wait between\n    retries. This option is ignored if the `recursive` option is not `true`.\n    **Default:** `100`.",
    "position": 9173,
    "id": "paragraph_9173"
  },
  {
    "type": "paragraph",
    "content": "Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). Returns `undefined`.",
    "originalSentence": "Synchronously removes files and directories (modeled on the standard POSIX `rm`\nutility). Returns `undefined`.",
    "position": 9174,
    "id": "paragraph_9174"
  },
  {
    "type": "paragraph",
    "content": "### `fs.statSync(path[, options])`",
    "originalSentence": "### `fs.statSync(path[, options])`",
    "position": 9175,
    "id": "paragraph_9175"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n    - v15.3.0\n    - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n    - v15.3.0\n    - v14.17.0\n    pr-url: https://github.com/nodejs/node/pull/33716\n    description: Accepts a `throwIfNoEntry` option to specify whether\n                 an exception should be thrown if the entry does not exist.\n  - version: v10.5.0\n    pr-url: https://github.com/nodejs/node/pull/20220\n    description: Accepts an additional `options` object to specify whether\n                 the numeric values returned should be bigint.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9176,
    "id": "paragraph_9176"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n  * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.\n    **Default:** `true`.\n* Returns: {fs.Stats}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.Stats} object should be `bigint`. **Default:** `false`.\n  * `throwIfNoEntry` {boolean} Whether an exception will be thrown\n    if no file system entry exists, rather than returning `undefined`.\n    **Default:** `true`.\n* Returns: {fs.Stats}",
    "position": 9177,
    "id": "paragraph_9177"
  },
  {
    "type": "paragraph",
    "content": "Retrieves the {fs.Stats} for the path.",
    "originalSentence": "Retrieves the {fs.Stats} for the path.",
    "position": 9178,
    "id": "paragraph_9178"
  },
  {
    "type": "paragraph",
    "content": "### `fs.statfsSync(path[, options])`",
    "originalSentence": "### `fs.statfsSync(path[, options])`",
    "position": 9179,
    "id": "paragraph_9179"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9180,
    "id": "paragraph_9180"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.StatFs} object should be `bigint`. **Default:** `false`.\n* Returns: {fs.StatFs}",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `options` {Object}\n  * `bigint` {boolean} Whether the numeric values in the returned\n    {fs.StatFs} object should be `bigint`. **Default:** `false`.\n* Returns: {fs.StatFs}",
    "position": 9181,
    "id": "paragraph_9181"
  },
  {
    "type": "paragraph",
    "content": "Synchronous statfs(2). Returns information about the mounted file system which\ncontains `path`.",
    "originalSentence": "Synchronous statfs(2). Returns information about the mounted file system which\ncontains `path`.",
    "position": 9182,
    "id": "paragraph_9182"
  },
  {
    "type": "paragraph",
    "content": "In case of an error, the `err.code` will be one of [Common System Errors][].",
    "originalSentence": "In case of an error, the `err.code` will be one of [Common System Errors][].",
    "position": 9183,
    "id": "paragraph_9183"
  },
  {
    "type": "paragraph",
    "content": "### `fs.symlinkSync(target, path[, type])`",
    "originalSentence": "### `fs.symlinkSync(target, path[, type])`",
    "position": 9184,
    "id": "paragraph_9184"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v12.0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.31\nchanges:\n  - version: v12.0.0\n    pr-url: https://github.com/nodejs/node/pull/23724\n    description: If the `type` argument is left undefined, Node will autodetect\n                 `target` type and automatically select `dir` or `file`.\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `target` and `path` parameters can be WHATWG `URL` objects\n                 using `file:` protocol. Support is currently still\n                 *experimental*.\n-->",
    "position": 9185,
    "id": "paragraph_9185"
  },
  {
    "type": "paragraph",
    "content": "* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`.",
    "originalSentence": "* `target` {string|Buffer|URL}\n* `path` {string|Buffer|URL}\n* `type` {string|null} **Default:** `null`\n* Returns: `undefined`.",
    "position": 9186,
    "id": "paragraph_9186"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.symlink()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.symlink()`][].",
    "position": 9187,
    "id": "paragraph_9187"
  },
  {
    "type": "paragraph",
    "content": "### `fs.truncateSync(path[, len])`",
    "originalSentence": "### `fs.truncateSync(path[, len])`",
    "position": 9188,
    "id": "paragraph_9188"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.8.6\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.8.6\n-->",
    "position": 9189,
    "id": "paragraph_9189"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `len` {integer} **Default:** `0`",
    "position": 9190,
    "id": "paragraph_9190"
  },
  {
    "type": "paragraph",
    "content": "Truncates the file. Returns `undefined`. A file descriptor can also be\npassed as the first argument. In this case, `fs.ftruncateSync()` is called.",
    "originalSentence": "Truncates the file. Returns `undefined`. A file descriptor can also be\npassed as the first argument. In this case, `fs.ftruncateSync()` is called.",
    "position": 9191,
    "id": "paragraph_9191"
  },
  {
    "type": "paragraph",
    "content": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "originalSentence": "Passing a file descriptor is deprecated and may result in an error being thrown\nin the future.",
    "position": 9192,
    "id": "paragraph_9192"
  },
  {
    "type": "paragraph",
    "content": "### `fs.unlinkSync(path)`",
    "originalSentence": "### `fs.unlinkSync(path)`",
    "position": 9193,
    "id": "paragraph_9193"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n-->",
    "position": 9194,
    "id": "paragraph_9194"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}",
    "originalSentence": "* `path` {string|Buffer|URL}",
    "position": 9195,
    "id": "paragraph_9195"
  },
  {
    "type": "paragraph",
    "content": "Synchronous unlink(2). Returns `undefined`.",
    "originalSentence": "Synchronous unlink(2). Returns `undefined`.",
    "position": 9196,
    "id": "paragraph_9196"
  },
  {
    "type": "paragraph",
    "content": "### `fs.utimesSync(path, atime, mtime)`",
    "originalSentence": "### `fs.utimesSync(path, atime, mtime)`",
    "position": 9197,
    "id": "paragraph_9197"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.2\nchanges:\n  - version: v8.0.0\n    pr-url: https://github.com/nodejs/node/pull/11919\n    description: \"`NaN`, `Infinity`, and `-Infinity` are no longer valid time\n                 specifiers.\"\n  - version: v7.6.0\n    pr-url: https://github.com/nodejs/node/pull/10739\n    description: The `path` parameter can be a WHATWG `URL` object using `file:`\n                 protocol.\n  - version: v4.1.0\n    pr-url: https://github.com/nodejs/node/pull/2387\n    description: Numeric strings, `NaN`, and `Infinity` are now allowed\n                 time specifiers.\n-->",
    "position": 9198,
    "id": "paragraph_9198"
  },
  {
    "type": "paragraph",
    "content": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`.",
    "originalSentence": "* `path` {string|Buffer|URL}\n* `atime` {number|string|Date}\n* `mtime` {number|string|Date}\n* Returns: `undefined`.",
    "position": 9199,
    "id": "paragraph_9199"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.utimes()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.utimes()`][].",
    "position": 9200,
    "id": "paragraph_9200"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writeFileSync(file, data[, options])`",
    "originalSentence": "### `fs.writeFileSync(file, data[, options])`",
    "position": 9201,
    "id": "paragraph_9201"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.29\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported.\n  - version: v17.8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated.\n  - version: v14.12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.29\nchanges:\n  - version:\n    - v21.0.0\n    - v20.10.0\n    pr-url: https://github.com/nodejs/node/pull/50009\n    description: The `flush` option is now supported.\n  - version: v19.0.0\n    pr-url: https://github.com/nodejs/node/pull/42796\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is no longer supported.\n  - version: v17.8.0\n    pr-url: https://github.com/nodejs/node/pull/42149\n    description: Passing to the `data` parameter an object with an own\n                 `toString` function is deprecated.\n  - version: v14.12.0\n    pr-url: https://github.com/nodejs/node/pull/34993\n    description: The `data` parameter will stringify an object with an\n                 explicit `toString` function.\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `data` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `data` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `data` parameter can now be a `Uint8Array`.\n  - version: v5.0.0\n    pr-url: https://github.com/nodejs/node/pull/3163\n    description: The `file` parameter can be a file descriptor now.\n-->",
    "position": 9202,
    "id": "paragraph_9202"
  },
  {
    "type": "paragraph",
    "content": "* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.\n  * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.fsyncSync()` is used to flush the data.\n* Returns: `undefined`.",
    "originalSentence": "* `file` {string|Buffer|URL|integer} filename or file descriptor\n* `data` {string|Buffer|TypedArray|DataView}\n* `options` {Object|string}\n  * `encoding` {string|null} **Default:** `'utf8'`\n  * `mode` {integer} **Default:** `0o666`\n  * `flag` {string} See [support of file system `flags`][]. **Default:** `'w'`.\n  * `flush` {boolean} If all data is successfully written to the file, and\n    `flush` is `true`, `fs.fsyncSync()` is used to flush the data.\n* Returns: `undefined`.",
    "position": 9203,
    "id": "paragraph_9203"
  },
  {
    "type": "paragraph",
    "content": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "originalSentence": "The `mode` option only affects the newly created file. See [`fs.open()`][]\nfor more details.",
    "position": 9204,
    "id": "paragraph_9204"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.writeFile()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.writeFile()`][].",
    "position": 9205,
    "id": "paragraph_9205"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writeSync(fd, buffer, offset[, length[, position]])`",
    "originalSentence": "### `fs.writeSync(fd, buffer, offset[, length[, position]])`",
    "position": 9206,
    "id": "paragraph_9206"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `buffer` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v10.10.0\n    pr-url: https://github.com/nodejs/node/pull/22150\n    description: The `buffer` parameter can now be any `TypedArray` or a\n                 `DataView`.\n  - version: v7.4.0\n    pr-url: https://github.com/nodejs/node/pull/10382\n    description: The `buffer` parameter can now be a `Uint8Array`.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `offset` and `length` parameters are optional now.\n-->",
    "position": 9207,
    "id": "paragraph_9207"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `offset` {integer} **Default:** `0`\n* `length` {integer} **Default:** `buffer.byteLength - offset`\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 9208,
    "id": "paragraph_9208"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.write(fd, buffer...)`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.write(fd, buffer...)`][].",
    "position": 9209,
    "id": "paragraph_9209"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writeSync(fd, buffer[, options])`",
    "originalSentence": "### `fs.writeSync(fd, buffer[, options])`",
    "position": 9210,
    "id": "paragraph_9210"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v18.3.0\n  - v16.17.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v18.3.0\n  - v16.17.0\n-->",
    "position": 9211,
    "id": "paragraph_9211"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "* `fd` {integer}\n* `buffer` {Buffer|TypedArray|DataView}\n* `options` {Object}\n  * `offset` {integer} **Default:** `0`\n  * `length` {integer} **Default:** `buffer.byteLength - offset`\n  * `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 9212,
    "id": "paragraph_9212"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.write(fd, buffer...)`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.write(fd, buffer...)`][].",
    "position": 9213,
    "id": "paragraph_9213"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writeSync(fd, string[, position[, encoding]])`",
    "originalSentence": "### `fs.writeSync(fd, string[, position[, encoding]])`",
    "position": 9214,
    "id": "paragraph_9214"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.5\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.5\nchanges:\n  - version: v14.0.0\n    pr-url: https://github.com/nodejs/node/pull/31030\n    description: The `string` parameter won't coerce unsupported input to\n                 strings anymore.\n  - version: v7.2.0\n    pr-url: https://github.com/nodejs/node/pull/7856\n    description: The `position` parameter is optional now.\n-->",
    "position": 9215,
    "id": "paragraph_9215"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "* `fd` {integer}\n* `string` {string}\n* `position` {integer|null} **Default:** `null`\n* `encoding` {string} **Default:** `'utf8'`\n* Returns: {number} The number of bytes written.",
    "position": 9216,
    "id": "paragraph_9216"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.write(fd, string...)`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.write(fd, string...)`][].",
    "position": 9217,
    "id": "paragraph_9217"
  },
  {
    "type": "paragraph",
    "content": "### `fs.writevSync(fd, buffers[, position])`",
    "originalSentence": "### `fs.writevSync(fd, buffers[, position])`",
    "position": 9218,
    "id": "paragraph_9218"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.9.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.9.0\n-->",
    "position": 9219,
    "id": "paragraph_9219"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "originalSentence": "* `fd` {integer}\n* `buffers` {ArrayBufferView\\[]}\n* `position` {integer|null} **Default:** `null`\n* Returns: {number} The number of bytes written.",
    "position": 9220,
    "id": "paragraph_9220"
  },
  {
    "type": "paragraph",
    "content": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.writev()`][].",
    "originalSentence": "For detailed information, see the documentation of the asynchronous version of\nthis API: [`fs.writev()`][].",
    "position": 9221,
    "id": "paragraph_9221"
  },
  {
    "type": "paragraph",
    "content": "The common objects are shared by all of the file system API variants\n(promise, callback, and synchronous).",
    "originalSentence": "The common objects are shared by all of the file system API variants\n(promise, callback, and synchronous).",
    "position": 9222,
    "id": "paragraph_9222"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9223,
    "id": "paragraph_9223"
  },
  {
    "type": "paragraph",
    "content": "A class representing a directory stream.",
    "originalSentence": "A class representing a directory stream.",
    "position": 9224,
    "id": "paragraph_9224"
  },
  {
    "type": "paragraph",
    "content": "Created by [`fs.opendir()`][], [`fs.opendirSync()`][], or\n[`fsPromises.opendir()`][].",
    "originalSentence": "Created by [`fs.opendir()`][], [`fs.opendirSync()`][], or\n[`fsPromises.opendir()`][].",
    "position": 9225,
    "id": "paragraph_9225"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { opendir } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { opendir } from 'node:fs/promises';",
    "position": 9226,
    "id": "paragraph_9226"
  },
  {
    "type": "paragraph",
    "content": "try {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}\n```",
    "originalSentence": "try {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}\n```",
    "position": 9227,
    "id": "paragraph_9227"
  },
  {
    "type": "paragraph",
    "content": "When using the async iterator, the {fs.Dir} object will be automatically\nclosed after the iterator exits.",
    "originalSentence": "When using the async iterator, the {fs.Dir} object will be automatically\nclosed after the iterator exits.",
    "position": 9228,
    "id": "paragraph_9228"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9229,
    "id": "paragraph_9229"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.",
    "originalSentence": "Asynchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.",
    "position": 9230,
    "id": "paragraph_9230"
  },
  {
    "type": "paragraph",
    "content": "A promise is returned that will be fulfilled after the resource has been\nclosed.",
    "originalSentence": "A promise is returned that will be fulfilled after the resource has been\nclosed.",
    "position": 9231,
    "id": "paragraph_9231"
  },
  {
    "type": "paragraph",
    "content": "#### `dir.close(callback)`",
    "originalSentence": "#### `dir.close(callback)`",
    "position": 9232,
    "id": "paragraph_9232"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\nchanges:\n  - version: v18.0.0\n    pr-url: https://github.com/nodejs/node/pull/41678\n    description: Passing an invalid callback to the `callback` argument\n                 now throws `ERR_INVALID_ARG_TYPE` instead of\n                 `ERR_INVALID_CALLBACK`.\n-->",
    "position": 9233,
    "id": "paragraph_9233"
  },
  {
    "type": "paragraph",
    "content": "* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}",
    "position": 9234,
    "id": "paragraph_9234"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.",
    "originalSentence": "Asynchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.",
    "position": 9235,
    "id": "paragraph_9235"
  },
  {
    "type": "paragraph",
    "content": "The `callback` will be called after the resource handle has been closed.",
    "originalSentence": "The `callback` will be called after the resource handle has been closed.",
    "position": 9236,
    "id": "paragraph_9236"
  },
  {
    "type": "paragraph",
    "content": "#### `dir.closeSync()`",
    "originalSentence": "#### `dir.closeSync()`",
    "position": 9237,
    "id": "paragraph_9237"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9238,
    "id": "paragraph_9238"
  },
  {
    "type": "paragraph",
    "content": "Synchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.",
    "originalSentence": "Synchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.",
    "position": 9239,
    "id": "paragraph_9239"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9240,
    "id": "paragraph_9240"
  },
  {
    "type": "paragraph",
    "content": "The read-only path of this directory as was provided to [`fs.opendir()`][],\n[`fs.opendirSync()`][], or [`fsPromises.opendir()`][].",
    "originalSentence": "The read-only path of this directory as was provided to [`fs.opendir()`][],\n[`fs.opendirSync()`][], or [`fsPromises.opendir()`][].",
    "position": 9241,
    "id": "paragraph_9241"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9242,
    "id": "paragraph_9242"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {Promise} Fulfills with a {fs.Dirent|null}",
    "originalSentence": "* Returns: {Promise} Fulfills with a {fs.Dirent|null}",
    "position": 9243,
    "id": "paragraph_9243"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously read the next directory entry via readdir(3) as an\n{fs.Dirent}.",
    "originalSentence": "Asynchronously read the next directory entry via readdir(3) as an\n{fs.Dirent}.",
    "position": 9244,
    "id": "paragraph_9244"
  },
  {
    "type": "paragraph",
    "content": "A promise is returned that will be fulfilled with an {fs.Dirent}, or `null`\nif there are no more directory entries to read.",
    "originalSentence": "A promise is returned that will be fulfilled with an {fs.Dirent}, or `null`\nif there are no more directory entries to read.",
    "position": 9245,
    "id": "paragraph_9245"
  },
  {
    "type": "paragraph",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 9246,
    "id": "paragraph_9246"
  },
  {
    "type": "paragraph",
    "content": "#### `dir.read(callback)`",
    "originalSentence": "#### `dir.read(callback)`",
    "position": 9247,
    "id": "paragraph_9247"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9248,
    "id": "paragraph_9248"
  },
  {
    "type": "paragraph",
    "content": "* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs.Dirent|null}",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}\n  * `dirent` {fs.Dirent|null}",
    "position": 9249,
    "id": "paragraph_9249"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously read the next directory entry via readdir(3) as an\n{fs.Dirent}.",
    "originalSentence": "Asynchronously read the next directory entry via readdir(3) as an\n{fs.Dirent}.",
    "position": 9250,
    "id": "paragraph_9250"
  },
  {
    "type": "paragraph",
    "content": "After the read is completed, the `callback` will be called with an\n{fs.Dirent}, or `null` if there are no more directory entries to read.",
    "originalSentence": "After the read is completed, the `callback` will be called with an\n{fs.Dirent}, or `null` if there are no more directory entries to read.",
    "position": 9251,
    "id": "paragraph_9251"
  },
  {
    "type": "paragraph",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 9252,
    "id": "paragraph_9252"
  },
  {
    "type": "paragraph",
    "content": "#### `dir.readSync()`",
    "originalSentence": "#### `dir.readSync()`",
    "position": 9253,
    "id": "paragraph_9253"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9254,
    "id": "paragraph_9254"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {fs.Dirent|null}",
    "originalSentence": "* Returns: {fs.Dirent|null}",
    "position": 9255,
    "id": "paragraph_9255"
  },
  {
    "type": "paragraph",
    "content": "Synchronously read the next directory entry as an {fs.Dirent}. See the\nPOSIX readdir(3) documentation for more detail.",
    "originalSentence": "Synchronously read the next directory entry as an {fs.Dirent}. See the\nPOSIX readdir(3) documentation for more detail.",
    "position": 9256,
    "id": "paragraph_9256"
  },
  {
    "type": "paragraph",
    "content": "If there are no more directory entries to read, `null` will be returned.",
    "originalSentence": "If there are no more directory entries to read, `null` will be returned.",
    "position": 9257,
    "id": "paragraph_9257"
  },
  {
    "type": "paragraph",
    "content": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Directory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 9258,
    "id": "paragraph_9258"
  },
  {
    "type": "paragraph",
    "content": "#### `dir[Symbol.asyncIterator]()`",
    "originalSentence": "#### `dir[Symbol.asyncIterator]()`",
    "position": 9259,
    "id": "paragraph_9259"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.12.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.12.0\n-->",
    "position": 9260,
    "id": "paragraph_9260"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {AsyncIterator} An AsyncIterator of {fs.Dirent}",
    "originalSentence": "* Returns: {AsyncIterator} An AsyncIterator of {fs.Dirent}",
    "position": 9261,
    "id": "paragraph_9261"
  },
  {
    "type": "paragraph",
    "content": "Asynchronously iterates over the directory until all entries have\nbeen read. Refer to the POSIX readdir(3) documentation for more detail.",
    "originalSentence": "Asynchronously iterates over the directory until all entries have\nbeen read. Refer to the POSIX readdir(3) documentation for more detail.",
    "position": 9262,
    "id": "paragraph_9262"
  },
  {
    "type": "paragraph",
    "content": "Entries returned by the async iterator are always an {fs.Dirent}.\nThe `null` case from `dir.read()` is handled internally.",
    "originalSentence": "Entries returned by the async iterator are always an {fs.Dirent}.\nThe `null` case from `dir.read()` is handled internally.",
    "position": 9263,
    "id": "paragraph_9263"
  },
  {
    "type": "paragraph",
    "content": "See {fs.Dir} for an example.",
    "originalSentence": "See {fs.Dir} for an example.",
    "position": 9264,
    "id": "paragraph_9264"
  },
  {
    "type": "paragraph",
    "content": "Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "originalSentence": "Directory entries returned by this iterator are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results.",
    "position": 9265,
    "id": "paragraph_9265"
  },
  {
    "type": "paragraph",
    "content": "#### `dir[Symbol.asyncDispose]()`",
    "originalSentence": "#### `dir[Symbol.asyncDispose]()`",
    "position": 9266,
    "id": "paragraph_9266"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v24.1.0\n - v22.1.0\nchanges:\n - version: v24.2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v24.1.0\n - v22.1.0\nchanges:\n - version: v24.2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.\n-->",
    "position": 9267,
    "id": "paragraph_9267"
  },
  {
    "type": "paragraph",
    "content": "Calls `dir.close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete.",
    "originalSentence": "Calls `dir.close()` if the directory handle is open, and returns a promise that\nfulfills when disposal is complete.",
    "position": 9268,
    "id": "paragraph_9268"
  },
  {
    "type": "paragraph",
    "content": "#### `dir[Symbol.dispose]()`",
    "originalSentence": "#### `dir[Symbol.dispose]()`",
    "position": 9269,
    "id": "paragraph_9269"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v24.1.0\n - v22.1.0\nchanges:\n - version: v24.2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v24.1.0\n - v22.1.0\nchanges:\n - version: v24.2.0\n   pr-url: https://github.com/nodejs/node/pull/58467\n   description: No longer experimental.\n-->",
    "position": 9270,
    "id": "paragraph_9270"
  },
  {
    "type": "paragraph",
    "content": "Calls `dir.closeSync()` if the directory handle is open, and returns\n`undefined`.",
    "originalSentence": "Calls `dir.closeSync()` if the directory handle is open, and returns\n`undefined`.",
    "position": 9271,
    "id": "paragraph_9271"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.Dirent`",
    "originalSentence": "### Class: `fs.Dirent`",
    "position": 9272,
    "id": "paragraph_9272"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9273,
    "id": "paragraph_9273"
  },
  {
    "type": "paragraph",
    "content": "A representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs.Dir}. The\ndirectory entry is a combination of the file name and file type pairs.",
    "originalSentence": "A representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an {fs.Dir}. The\ndirectory entry is a combination of the file name and file type pairs.",
    "position": 9274,
    "id": "paragraph_9274"
  },
  {
    "type": "paragraph",
    "content": "Additionally, when [`fs.readdir()`][] or [`fs.readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs.Dirent} objects, rather than strings or {Buffer}s.",
    "originalSentence": "Additionally, when [`fs.readdir()`][] or [`fs.readdirSync()`][] is called with\nthe `withFileTypes` option set to `true`, the resulting array is filled with\n{fs.Dirent} objects, rather than strings or {Buffer}s.",
    "position": 9275,
    "id": "paragraph_9275"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isBlockDevice()`",
    "originalSentence": "#### `dirent.isBlockDevice()`",
    "position": 9276,
    "id": "paragraph_9276"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9277,
    "id": "paragraph_9277"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a block device.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a block device.",
    "position": 9278,
    "id": "paragraph_9278"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isCharacterDevice()`",
    "originalSentence": "#### `dirent.isCharacterDevice()`",
    "position": 9279,
    "id": "paragraph_9279"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9280,
    "id": "paragraph_9280"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a character device.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a character device.",
    "position": 9281,
    "id": "paragraph_9281"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isDirectory()`",
    "originalSentence": "#### `dirent.isDirectory()`",
    "position": 9282,
    "id": "paragraph_9282"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9283,
    "id": "paragraph_9283"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a file system\ndirectory.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a file system\ndirectory.",
    "position": 9284,
    "id": "paragraph_9284"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isFIFO()`",
    "originalSentence": "#### `dirent.isFIFO()`",
    "position": 9285,
    "id": "paragraph_9285"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9286,
    "id": "paragraph_9286"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a first-in-first-out\n(FIFO) pipe.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a first-in-first-out\n(FIFO) pipe.",
    "position": 9287,
    "id": "paragraph_9287"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isFile()`",
    "originalSentence": "#### `dirent.isFile()`",
    "position": 9288,
    "id": "paragraph_9288"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9289,
    "id": "paragraph_9289"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a regular file.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a regular file.",
    "position": 9290,
    "id": "paragraph_9290"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isSocket()`",
    "originalSentence": "#### `dirent.isSocket()`",
    "position": 9291,
    "id": "paragraph_9291"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9292,
    "id": "paragraph_9292"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a socket.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a socket.",
    "position": 9293,
    "id": "paragraph_9293"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.isSymbolicLink()`",
    "originalSentence": "#### `dirent.isSymbolicLink()`",
    "position": 9294,
    "id": "paragraph_9294"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9295,
    "id": "paragraph_9295"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Dirent} object describes a symbolic link.",
    "originalSentence": "Returns `true` if the {fs.Dirent} object describes a symbolic link.",
    "position": 9296,
    "id": "paragraph_9296"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.10.0\n-->",
    "position": 9297,
    "id": "paragraph_9297"
  },
  {
    "type": "paragraph",
    "content": "* Type: {string|Buffer}",
    "originalSentence": "* Type: {string|Buffer}",
    "position": 9298,
    "id": "paragraph_9298"
  },
  {
    "type": "paragraph",
    "content": "The file name that this {fs.Dirent} object refers to. The type of this\nvalue is determined by the `options.encoding` passed to [`fs.readdir()`][] or\n[`fs.readdirSync()`][].",
    "originalSentence": "The file name that this {fs.Dirent} object refers to. The type of this\nvalue is determined by the `options.encoding` passed to [`fs.readdir()`][] or\n[`fs.readdirSync()`][].",
    "position": 9299,
    "id": "paragraph_9299"
  },
  {
    "type": "paragraph",
    "content": "#### `dirent.parentPath`",
    "originalSentence": "#### `dirent.parentPath`",
    "position": 9300,
    "id": "paragraph_9300"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v21.4.0\n  - v20.12.0\n  - v18.20.0\nchanges:\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v21.4.0\n  - v20.12.0\n  - v18.20.0\nchanges:\n  - version:\n      - v24.0.0\n      - v22.17.0\n    pr-url: https://github.com/nodejs/node/pull/57513\n    description: Marking the API stable.\n-->",
    "position": 9301,
    "id": "paragraph_9301"
  },
  {
    "type": "paragraph",
    "content": "The path to the parent directory of the file this {fs.Dirent} object refers to.",
    "originalSentence": "The path to the parent directory of the file this {fs.Dirent} object refers to.",
    "position": 9302,
    "id": "paragraph_9302"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.FSWatcher`",
    "originalSentence": "### Class: `fs.FSWatcher`",
    "position": 9303,
    "id": "paragraph_9303"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.5.8\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.5.8\n-->",
    "position": 9304,
    "id": "paragraph_9304"
  },
  {
    "type": "paragraph",
    "content": "* Extends {EventEmitter}",
    "originalSentence": "* Extends {EventEmitter}",
    "position": 9305,
    "id": "paragraph_9305"
  },
  {
    "type": "paragraph",
    "content": "A successful call to [`fs.watch()`][] method will return a new {fs.FSWatcher}\nobject.",
    "originalSentence": "A successful call to [`fs.watch()`][] method will return a new {fs.FSWatcher}\nobject.",
    "position": 9306,
    "id": "paragraph_9306"
  },
  {
    "type": "paragraph",
    "content": "All {fs.FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified.",
    "originalSentence": "All {fs.FSWatcher} objects emit a `'change'` event whenever a specific watched\nfile is modified.",
    "position": 9307,
    "id": "paragraph_9307"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'change'`",
    "originalSentence": "#### Event: `'change'`",
    "position": 9308,
    "id": "paragraph_9308"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.5.8\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.5.8\n-->",
    "position": 9309,
    "id": "paragraph_9309"
  },
  {
    "type": "paragraph",
    "content": "* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)",
    "originalSentence": "* `eventType` {string} The type of change event that has occurred\n* `filename` {string|Buffer} The filename that changed (if relevant/available)",
    "position": 9310,
    "id": "paragraph_9310"
  },
  {
    "type": "paragraph",
    "content": "Emitted when something changes in a watched directory or file.\nSee more details in [`fs.watch()`][].",
    "originalSentence": "Emitted when something changes in a watched directory or file.\nSee more details in [`fs.watch()`][].",
    "position": 9311,
    "id": "paragraph_9311"
  },
  {
    "type": "paragraph",
    "content": "The `filename` argument may not be provided depending on operating system\nsupport. If `filename` is provided, it will be provided as a {Buffer} if\n`fs.watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string.",
    "originalSentence": "The `filename` argument may not be provided depending on operating system\nsupport. If `filename` is provided, it will be provided as a {Buffer} if\n`fs.watch()` is called with its `encoding` option set to `'buffer'`, otherwise\n`filename` will be a UTF-8 string.",
    "position": 9312,
    "id": "paragraph_9312"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs.watch() listener\nwatch('./tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.log(filename);\n    // Prints: <Buffer ...>\n  }\n});\n```",
    "originalSentence": "```mjs\nimport { watch } from 'node:fs';\n// Example when handled through fs.watch() listener\nwatch('./tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.log(filename);\n    // Prints: <Buffer ...>\n  }\n});\n```",
    "position": 9313,
    "id": "paragraph_9313"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'close'`",
    "originalSentence": "#### Event: `'close'`",
    "position": 9314,
    "id": "paragraph_9314"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v10.0.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v10.0.0\n-->",
    "position": 9315,
    "id": "paragraph_9315"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the watcher stops watching for changes. The closed\n{fs.FSWatcher} object is no longer usable in the event handler.",
    "originalSentence": "Emitted when the watcher stops watching for changes. The closed\n{fs.FSWatcher} object is no longer usable in the event handler.",
    "position": 9316,
    "id": "paragraph_9316"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'error'`",
    "originalSentence": "#### Event: `'error'`",
    "position": 9317,
    "id": "paragraph_9317"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.5.8\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.5.8\n-->",
    "position": 9318,
    "id": "paragraph_9318"
  },
  {
    "type": "paragraph",
    "content": "Emitted when an error occurs while watching the file. The errored\n{fs.FSWatcher} object is no longer usable in the event handler.",
    "originalSentence": "Emitted when an error occurs while watching the file. The errored\n{fs.FSWatcher} object is no longer usable in the event handler.",
    "position": 9319,
    "id": "paragraph_9319"
  },
  {
    "type": "paragraph",
    "content": "#### `watcher.close()`",
    "originalSentence": "#### `watcher.close()`",
    "position": 9320,
    "id": "paragraph_9320"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.5.8\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.5.8\n-->",
    "position": 9321,
    "id": "paragraph_9321"
  },
  {
    "type": "paragraph",
    "content": "Stop watching for changes on the given {fs.FSWatcher}. Once stopped, the\n{fs.FSWatcher} object is no longer usable.",
    "originalSentence": "Stop watching for changes on the given {fs.FSWatcher}. Once stopped, the\n{fs.FSWatcher} object is no longer usable.",
    "position": 9322,
    "id": "paragraph_9322"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "position": 9323,
    "id": "paragraph_9323"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {fs.FSWatcher}",
    "originalSentence": "* Returns: {fs.FSWatcher}",
    "position": 9324,
    "id": "paragraph_9324"
  },
  {
    "type": "paragraph",
    "content": "When called, requests that the Node.js event loop _not_ exit so long as the\n{fs.FSWatcher} is active. Calling `watcher.ref()` multiple times will have\nno effect.",
    "originalSentence": "When called, requests that the Node.js event loop _not_ exit so long as the\n{fs.FSWatcher} is active. Calling `watcher.ref()` multiple times will have\nno effect.",
    "position": 9325,
    "id": "paragraph_9325"
  },
  {
    "type": "paragraph",
    "content": "By default, all {fs.FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.ref()` unless `watcher.unref()` had been\ncalled previously.",
    "originalSentence": "By default, all {fs.FSWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.ref()` unless `watcher.unref()` had been\ncalled previously.",
    "position": 9326,
    "id": "paragraph_9326"
  },
  {
    "type": "paragraph",
    "content": "#### `watcher.unref()`",
    "originalSentence": "#### `watcher.unref()`",
    "position": 9327,
    "id": "paragraph_9327"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "position": 9328,
    "id": "paragraph_9328"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {fs.FSWatcher}",
    "originalSentence": "* Returns: {fs.FSWatcher}",
    "position": 9329,
    "id": "paragraph_9329"
  },
  {
    "type": "paragraph",
    "content": "When called, the active {fs.FSWatcher} object will not require the Node.js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.FSWatcher} object's\ncallback is invoked. Calling `watcher.unref()` multiple times will have\nno effect.",
    "originalSentence": "When called, the active {fs.FSWatcher} object will not require the Node.js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.FSWatcher} object's\ncallback is invoked. Calling `watcher.unref()` multiple times will have\nno effect.",
    "position": 9330,
    "id": "paragraph_9330"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.StatWatcher`",
    "originalSentence": "### Class: `fs.StatWatcher`",
    "position": 9331,
    "id": "paragraph_9331"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "position": 9332,
    "id": "paragraph_9332"
  },
  {
    "type": "paragraph",
    "content": "* Extends {EventEmitter}",
    "originalSentence": "* Extends {EventEmitter}",
    "position": 9333,
    "id": "paragraph_9333"
  },
  {
    "type": "paragraph",
    "content": "A successful call to `fs.watchFile()` method will return a new {fs.StatWatcher}\nobject.",
    "originalSentence": "A successful call to `fs.watchFile()` method will return a new {fs.StatWatcher}\nobject.",
    "position": 9334,
    "id": "paragraph_9334"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "position": 9335,
    "id": "paragraph_9335"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {fs.StatWatcher}",
    "originalSentence": "* Returns: {fs.StatWatcher}",
    "position": 9336,
    "id": "paragraph_9336"
  },
  {
    "type": "paragraph",
    "content": "When called, requests that the Node.js event loop _not_ exit so long as the\n{fs.StatWatcher} is active. Calling `watcher.ref()` multiple times will have\nno effect.",
    "originalSentence": "When called, requests that the Node.js event loop _not_ exit so long as the\n{fs.StatWatcher} is active. Calling `watcher.ref()` multiple times will have\nno effect.",
    "position": 9337,
    "id": "paragraph_9337"
  },
  {
    "type": "paragraph",
    "content": "By default, all {fs.StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.ref()` unless `watcher.unref()` had been\ncalled previously.",
    "originalSentence": "By default, all {fs.StatWatcher} objects are \"ref'ed\", making it normally\nunnecessary to call `watcher.ref()` unless `watcher.unref()` had been\ncalled previously.",
    "position": 9338,
    "id": "paragraph_9338"
  },
  {
    "type": "paragraph",
    "content": "#### `watcher.unref()`",
    "originalSentence": "#### `watcher.unref()`",
    "position": 9339,
    "id": "paragraph_9339"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v14.3.0\n  - v12.20.0\n-->",
    "position": 9340,
    "id": "paragraph_9340"
  },
  {
    "type": "paragraph",
    "content": "* Returns: {fs.StatWatcher}",
    "originalSentence": "* Returns: {fs.StatWatcher}",
    "position": 9341,
    "id": "paragraph_9341"
  },
  {
    "type": "paragraph",
    "content": "When called, the active {fs.StatWatcher} object will not require the Node.js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.StatWatcher} object's\ncallback is invoked. Calling `watcher.unref()` multiple times will have\nno effect.",
    "originalSentence": "When called, the active {fs.StatWatcher} object will not require the Node.js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the {fs.StatWatcher} object's\ncallback is invoked. Calling `watcher.unref()` multiple times will have\nno effect.",
    "position": 9342,
    "id": "paragraph_9342"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.ReadStream`",
    "originalSentence": "### Class: `fs.ReadStream`",
    "position": 9343,
    "id": "paragraph_9343"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9344,
    "id": "paragraph_9344"
  },
  {
    "type": "paragraph",
    "content": "* Extends: {stream.Readable}",
    "originalSentence": "* Extends: {stream.Readable}",
    "position": 9345,
    "id": "paragraph_9345"
  },
  {
    "type": "paragraph",
    "content": "Instances of {fs.ReadStream} are created and returned using the\n[`fs.createReadStream()`][] function.",
    "originalSentence": "Instances of {fs.ReadStream} are created and returned using the\n[`fs.createReadStream()`][] function.",
    "position": 9346,
    "id": "paragraph_9346"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'close'`",
    "originalSentence": "#### Event: `'close'`",
    "position": 9347,
    "id": "paragraph_9347"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9348,
    "id": "paragraph_9348"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the {fs.ReadStream}'s underlying file descriptor has been closed.",
    "originalSentence": "Emitted when the {fs.ReadStream}'s underlying file descriptor has been closed.",
    "position": 9349,
    "id": "paragraph_9349"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9350,
    "id": "paragraph_9350"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer} Integer file descriptor used by the {fs.ReadStream}.",
    "originalSentence": "* `fd` {integer} Integer file descriptor used by the {fs.ReadStream}.",
    "position": 9351,
    "id": "paragraph_9351"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the {fs.ReadStream}'s file descriptor has been opened.",
    "originalSentence": "Emitted when the {fs.ReadStream}'s file descriptor has been opened.",
    "position": 9352,
    "id": "paragraph_9352"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'ready'`",
    "originalSentence": "#### Event: `'ready'`",
    "position": 9353,
    "id": "paragraph_9353"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v9.11.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v9.11.0\n-->",
    "position": 9354,
    "id": "paragraph_9354"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the {fs.ReadStream} is ready to be used.",
    "originalSentence": "Emitted when the {fs.ReadStream} is ready to be used.",
    "position": 9355,
    "id": "paragraph_9355"
  },
  {
    "type": "paragraph",
    "content": "Fires immediately after `'open'`.",
    "originalSentence": "Fires immediately after `'open'`.",
    "position": 9356,
    "id": "paragraph_9356"
  },
  {
    "type": "paragraph",
    "content": "#### `readStream.bytesRead`",
    "originalSentence": "#### `readStream.bytesRead`",
    "position": 9357,
    "id": "paragraph_9357"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v6.4.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v6.4.0\n-->",
    "position": 9358,
    "id": "paragraph_9358"
  },
  {
    "type": "paragraph",
    "content": "The number of bytes that have been read so far.",
    "originalSentence": "The number of bytes that have been read so far.",
    "position": 9359,
    "id": "paragraph_9359"
  },
  {
    "type": "paragraph",
    "content": "#### `readStream.path`",
    "originalSentence": "#### `readStream.path`",
    "position": 9360,
    "id": "paragraph_9360"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9361,
    "id": "paragraph_9361"
  },
  {
    "type": "paragraph",
    "content": "* Type: {string|Buffer}",
    "originalSentence": "* Type: {string|Buffer}",
    "position": 9362,
    "id": "paragraph_9362"
  },
  {
    "type": "paragraph",
    "content": "The path to the file the stream is reading from as specified in the first\nargument to `fs.createReadStream()`. If `path` is passed as a string, then\n`readStream.path` will be a string. If `path` is passed as a {Buffer}, then\n`readStream.path` will be a {Buffer}. If `fd` is specified, then\n`readStream.path` will be `undefined`.",
    "originalSentence": "The path to the file the stream is reading from as specified in the first\nargument to `fs.createReadStream()`. If `path` is passed as a string, then\n`readStream.path` will be a string. If `path` is passed as a {Buffer}, then\n`readStream.path` will be a {Buffer}. If `fd` is specified, then\n`readStream.path` will be `undefined`.",
    "position": 9363,
    "id": "paragraph_9363"
  },
  {
    "type": "paragraph",
    "content": "#### `readStream.pending`",
    "originalSentence": "#### `readStream.pending`",
    "position": 9364,
    "id": "paragraph_9364"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n - v11.2.0\n - v10.16.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n - v11.2.0\n - v10.16.0\n-->",
    "position": 9365,
    "id": "paragraph_9365"
  },
  {
    "type": "paragraph",
    "content": "This property is `true` if the underlying file has not been opened yet,\ni.e. before the `'ready'` event is emitted.",
    "originalSentence": "This property is `true` if the underlying file has not been opened yet,\ni.e. before the `'ready'` event is emitted.",
    "position": 9366,
    "id": "paragraph_9366"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.Stats`",
    "originalSentence": "### Class: `fs.Stats`",
    "position": 9367,
    "id": "paragraph_9367"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n    - v22.0.0\n    - v20.13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated.\n  - version: v8.1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers.\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.21\nchanges:\n  - version:\n    - v22.0.0\n    - v20.13.0\n    pr-url: https://github.com/nodejs/node/pull/51879\n    description: Public constructor is deprecated.\n  - version: v8.1.0\n    pr-url: https://github.com/nodejs/node/pull/13173\n    description: Added times as numbers.\n-->",
    "position": 9368,
    "id": "paragraph_9368"
  },
  {
    "type": "paragraph",
    "content": "A {fs.Stats} object provides information about a file.",
    "originalSentence": "A {fs.Stats} object provides information about a file.",
    "position": 9369,
    "id": "paragraph_9369"
  },
  {
    "type": "paragraph",
    "content": "Objects returned from [`fs.stat()`][], [`fs.lstat()`][], [`fs.fstat()`][], and\ntheir synchronous counterparts are of this type.\nIf `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`.\n`Stat` objects are not to be created directly using the `new` keyword.",
    "originalSentence": "Objects returned from [`fs.stat()`][], [`fs.lstat()`][], [`fs.fstat()`][], and\ntheir synchronous counterparts are of this type.\nIf `bigint` in the `options` passed to those methods is true, the numeric values\nwill be `bigint` instead of `number`, and the object will contain additional\nnanosecond-precision properties suffixed with `Ns`.\n`Stat` objects are not to be created directly using the `new` keyword.",
    "position": 9370,
    "id": "paragraph_9370"
  },
  {
    "type": "paragraph",
    "content": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.1,\n  mtimeMs: 1318289051000.1,\n  ctimeMs: 1318289051000.1,\n  birthtimeMs: 1318289051000.1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```",
    "originalSentence": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.1,\n  mtimeMs: 1318289051000.1,\n  ctimeMs: 1318289051000.1,\n  birthtimeMs: 1318289051000.1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```",
    "position": 9371,
    "id": "paragraph_9371"
  },
  {
    "type": "paragraph",
    "content": "```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```",
    "originalSentence": "```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```",
    "position": 9372,
    "id": "paragraph_9372"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isBlockDevice()`",
    "originalSentence": "#### `stats.isBlockDevice()`",
    "position": 9373,
    "id": "paragraph_9373"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9374,
    "id": "paragraph_9374"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a block device.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a block device.",
    "position": 9375,
    "id": "paragraph_9375"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isCharacterDevice()`",
    "originalSentence": "#### `stats.isCharacterDevice()`",
    "position": 9376,
    "id": "paragraph_9376"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9377,
    "id": "paragraph_9377"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a character device.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a character device.",
    "position": 9378,
    "id": "paragraph_9378"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isDirectory()`",
    "originalSentence": "#### `stats.isDirectory()`",
    "position": 9379,
    "id": "paragraph_9379"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9380,
    "id": "paragraph_9380"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a file system directory.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a file system directory.",
    "position": 9381,
    "id": "paragraph_9381"
  },
  {
    "type": "paragraph",
    "content": "If the {fs.Stats} object was obtained from calling [`fs.lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`.\nThis is because [`fs.lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to.",
    "originalSentence": "If the {fs.Stats} object was obtained from calling [`fs.lstat()`][] on a\nsymbolic link which resolves to a directory, this method will return `false`.\nThis is because [`fs.lstat()`][] returns information\nabout a symbolic link itself and not the path it resolves to.",
    "position": 9382,
    "id": "paragraph_9382"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isFIFO()`",
    "originalSentence": "#### `stats.isFIFO()`",
    "position": 9383,
    "id": "paragraph_9383"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9384,
    "id": "paragraph_9384"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a first-in-first-out (FIFO)\npipe.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a first-in-first-out (FIFO)\npipe.",
    "position": 9385,
    "id": "paragraph_9385"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isFile()`",
    "originalSentence": "#### `stats.isFile()`",
    "position": 9386,
    "id": "paragraph_9386"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9387,
    "id": "paragraph_9387"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a regular file.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a regular file.",
    "position": 9388,
    "id": "paragraph_9388"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isSocket()`",
    "originalSentence": "#### `stats.isSocket()`",
    "position": 9389,
    "id": "paragraph_9389"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9390,
    "id": "paragraph_9390"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a socket.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a socket.",
    "position": 9391,
    "id": "paragraph_9391"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.isSymbolicLink()`",
    "originalSentence": "#### `stats.isSymbolicLink()`",
    "position": 9392,
    "id": "paragraph_9392"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.10\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.10\n-->",
    "position": 9393,
    "id": "paragraph_9393"
  },
  {
    "type": "paragraph",
    "content": "Returns `true` if the {fs.Stats} object describes a symbolic link.",
    "originalSentence": "Returns `true` if the {fs.Stats} object describes a symbolic link.",
    "position": 9394,
    "id": "paragraph_9394"
  },
  {
    "type": "paragraph",
    "content": "This method is only valid when using [`fs.lstat()`][].",
    "originalSentence": "This method is only valid when using [`fs.lstat()`][].",
    "position": 9395,
    "id": "paragraph_9395"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9396,
    "id": "paragraph_9396"
  },
  {
    "type": "paragraph",
    "content": "The numeric identifier of the device containing the file.",
    "originalSentence": "The numeric identifier of the device containing the file.",
    "position": 9397,
    "id": "paragraph_9397"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9398,
    "id": "paragraph_9398"
  },
  {
    "type": "paragraph",
    "content": "The file system specific \"Inode\" number for the file.",
    "originalSentence": "The file system specific \"Inode\" number for the file.",
    "position": 9399,
    "id": "paragraph_9399"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9400,
    "id": "paragraph_9400"
  },
  {
    "type": "paragraph",
    "content": "A bit-field describing the file type and mode.",
    "originalSentence": "A bit-field describing the file type and mode.",
    "position": 9401,
    "id": "paragraph_9401"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9402,
    "id": "paragraph_9402"
  },
  {
    "type": "paragraph",
    "content": "The number of hard-links that exist for the file.",
    "originalSentence": "The number of hard-links that exist for the file.",
    "position": 9403,
    "id": "paragraph_9403"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9404,
    "id": "paragraph_9404"
  },
  {
    "type": "paragraph",
    "content": "The numeric user identifier of the user that owns the file (POSIX).",
    "originalSentence": "The numeric user identifier of the user that owns the file (POSIX).",
    "position": 9405,
    "id": "paragraph_9405"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9406,
    "id": "paragraph_9406"
  },
  {
    "type": "paragraph",
    "content": "The numeric group identifier of the group that owns the file (POSIX).",
    "originalSentence": "The numeric group identifier of the group that owns the file (POSIX).",
    "position": 9407,
    "id": "paragraph_9407"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9408,
    "id": "paragraph_9408"
  },
  {
    "type": "paragraph",
    "content": "A numeric device identifier if the file represents a device.",
    "originalSentence": "A numeric device identifier if the file represents a device.",
    "position": 9409,
    "id": "paragraph_9409"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9410,
    "id": "paragraph_9410"
  },
  {
    "type": "paragraph",
    "content": "The size of the file in bytes.",
    "originalSentence": "The size of the file in bytes.",
    "position": 9411,
    "id": "paragraph_9411"
  },
  {
    "type": "paragraph",
    "content": "If the underlying file system does not support getting the size of the file,\nthis will be `0`.",
    "originalSentence": "If the underlying file system does not support getting the size of the file,\nthis will be `0`.",
    "position": 9412,
    "id": "paragraph_9412"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9413,
    "id": "paragraph_9413"
  },
  {
    "type": "paragraph",
    "content": "The file system block size for i/o operations.",
    "originalSentence": "The file system block size for i/o operations.",
    "position": 9414,
    "id": "paragraph_9414"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9415,
    "id": "paragraph_9415"
  },
  {
    "type": "paragraph",
    "content": "The number of blocks allocated for this file.",
    "originalSentence": "The number of blocks allocated for this file.",
    "position": 9416,
    "id": "paragraph_9416"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v8.1.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v8.1.0\n-->",
    "position": 9417,
    "id": "paragraph_9417"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9418,
    "id": "paragraph_9418"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the last time this file was accessed expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 9419,
    "id": "paragraph_9419"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v8.1.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v8.1.0\n-->",
    "position": 9420,
    "id": "paragraph_9420"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9421,
    "id": "paragraph_9421"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the last time this file was modified expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 9422,
    "id": "paragraph_9422"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v8.1.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v8.1.0\n-->",
    "position": 9423,
    "id": "paragraph_9423"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9424,
    "id": "paragraph_9424"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the last time the file status was changed expressed\nin milliseconds since the POSIX Epoch.",
    "position": 9425,
    "id": "paragraph_9425"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.birthtimeMs`",
    "originalSentence": "#### `stats.birthtimeMs`",
    "position": 9426,
    "id": "paragraph_9426"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v8.1.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v8.1.0\n-->",
    "position": 9427,
    "id": "paragraph_9427"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9428,
    "id": "paragraph_9428"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch.",
    "originalSentence": "The timestamp indicating the creation time of this file expressed in\nmilliseconds since the POSIX Epoch.",
    "position": 9429,
    "id": "paragraph_9429"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.10.0\n-->",
    "position": 9430,
    "id": "paragraph_9430"
  },
  {
    "type": "paragraph",
    "content": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the last time this file was accessed expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 9431,
    "id": "paragraph_9431"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.10.0\n-->",
    "position": 9432,
    "id": "paragraph_9432"
  },
  {
    "type": "paragraph",
    "content": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the last time this file was modified expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 9433,
    "id": "paragraph_9433"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.10.0\n-->",
    "position": 9434,
    "id": "paragraph_9434"
  },
  {
    "type": "paragraph",
    "content": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch.",
    "originalSentence": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the last time the file status was changed expressed\nin nanoseconds since the POSIX Epoch.",
    "position": 9435,
    "id": "paragraph_9435"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.birthtimeNs`",
    "originalSentence": "#### `stats.birthtimeNs`",
    "position": 9436,
    "id": "paragraph_9436"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v12.10.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v12.10.0\n-->",
    "position": 9437,
    "id": "paragraph_9437"
  },
  {
    "type": "paragraph",
    "content": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch.",
    "originalSentence": "Only present when `bigint: true` is passed into the method that generates\nthe object.\nThe timestamp indicating the creation time of this file expressed in\nnanoseconds since the POSIX Epoch.",
    "position": 9438,
    "id": "paragraph_9438"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.13\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.13\n-->",
    "position": 9439,
    "id": "paragraph_9439"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the last time this file was accessed.",
    "originalSentence": "The timestamp indicating the last time this file was accessed.",
    "position": 9440,
    "id": "paragraph_9440"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.13\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.13\n-->",
    "position": 9441,
    "id": "paragraph_9441"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the last time this file was modified.",
    "originalSentence": "The timestamp indicating the last time this file was modified.",
    "position": 9442,
    "id": "paragraph_9442"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.13\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.13\n-->",
    "position": 9443,
    "id": "paragraph_9443"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the last time the file status was changed.",
    "originalSentence": "The timestamp indicating the last time the file status was changed.",
    "position": 9444,
    "id": "paragraph_9444"
  },
  {
    "type": "paragraph",
    "content": "#### `stats.birthtime`",
    "originalSentence": "#### `stats.birthtime`",
    "position": 9445,
    "id": "paragraph_9445"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.11.13\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.11.13\n-->",
    "position": 9446,
    "id": "paragraph_9446"
  },
  {
    "type": "paragraph",
    "content": "The timestamp indicating the creation time of this file.",
    "originalSentence": "The timestamp indicating the creation time of this file.",
    "position": 9447,
    "id": "paragraph_9447"
  },
  {
    "type": "paragraph",
    "content": "#### Stat time values",
    "originalSentence": "#### Stat time values",
    "position": 9448,
    "id": "paragraph_9448"
  },
  {
    "type": "paragraph",
    "content": "The `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds. Their\nprecision is platform specific. When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number].",
    "originalSentence": "The `atimeMs`, `mtimeMs`, `ctimeMs`, `birthtimeMs` properties are\nnumeric values that hold the corresponding times in milliseconds. Their\nprecision is platform specific. When `bigint: true` is passed into the\nmethod that generates the object, the properties will be [bigints][],\notherwise they will be [numbers][MDN-Number].",
    "position": 9449,
    "id": "paragraph_9449"
  },
  {
    "type": "paragraph",
    "content": "The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds. They are\nonly present when `bigint: true` is passed into the method that generates\nthe object. Their precision is platform specific.",
    "originalSentence": "The `atimeNs`, `mtimeNs`, `ctimeNs`, `birthtimeNs` properties are\n[bigints][] that hold the corresponding times in nanoseconds. They are\nonly present when `bigint: true` is passed into the method that generates\nthe object. Their precision is platform specific.",
    "position": 9450,
    "id": "paragraph_9450"
  },
  {
    "type": "paragraph",
    "content": "`atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times. The\n`Date` and number values are not connected. Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation.",
    "originalSentence": "`atime`, `mtime`, `ctime`, and `birthtime` are\n[`Date`][MDN-Date] object alternate representations of the various times. The\n`Date` and number values are not connected. Assigning a new number value, or\nmutating the `Date` value, will not be reflected in the corresponding alternate\nrepresentation.",
    "position": 9451,
    "id": "paragraph_9451"
  },
  {
    "type": "paragraph",
    "content": "The times in the stat object have the following semantics:",
    "originalSentence": "The times in the stat object have the following semantics:",
    "position": 9452,
    "id": "paragraph_9452"
  },
  {
    "type": "paragraph",
    "content": "* `atime` \"Access Time\": Time when file data last accessed. Changed\n  by the mknod(2), utimes(2), and read(2) system calls.\n* `mtime` \"Modified Time\": Time when file data last modified.\n  Changed by the mknod(2), utimes(2), and write(2) system calls.\n* `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification). Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls.\n* `birthtime` \"Birth Time\": Time of file creation. Set once when the\n  file is created. On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`). This value may be greater\n  than `atime` or `mtime` in this case. On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call.",
    "originalSentence": "* `atime` \"Access Time\": Time when file data last accessed. Changed\n  by the mknod(2), utimes(2), and read(2) system calls.\n* `mtime` \"Modified Time\": Time when file data last modified.\n  Changed by the mknod(2), utimes(2), and write(2) system calls.\n* `ctime` \"Change Time\": Time when file status was last changed\n  (inode data modification). Changed by the chmod(2), chown(2),\n  link(2), mknod(2), rename(2), unlink(2), utimes(2),\n  read(2), and write(2) system calls.\n* `birthtime` \"Birth Time\": Time of file creation. Set once when the\n  file is created. On file systems where birthtime is not available,\n  this field may instead hold either the `ctime` or\n  `1970-01-01T00:00Z` (ie, Unix epoch timestamp `0`). This value may be greater\n  than `atime` or `mtime` in this case. On Darwin and other FreeBSD variants,\n  also set if the `atime` is explicitly set to an earlier value than the current\n  `birthtime` using the utimes(2) system call.",
    "position": 9453,
    "id": "paragraph_9453"
  },
  {
    "type": "paragraph",
    "content": "Prior to Node.js 0.12, the `ctime` held the `birthtime` on Windows systems. As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was.",
    "originalSentence": "Prior to Node.js 0.12, the `ctime` held the `birthtime` on Windows systems. As\nof 0.12, `ctime` is not \"creation time\", and on Unix systems, it never was.",
    "position": 9454,
    "id": "paragraph_9454"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.StatFs`",
    "originalSentence": "### Class: `fs.StatFs`",
    "position": 9455,
    "id": "paragraph_9455"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9456,
    "id": "paragraph_9456"
  },
  {
    "type": "paragraph",
    "content": "Provides information about a mounted file system.",
    "originalSentence": "Provides information about a mounted file system.",
    "position": 9457,
    "id": "paragraph_9457"
  },
  {
    "type": "paragraph",
    "content": "Objects returned from [`fs.statfs()`][] and its synchronous counterpart are of\nthis type. If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`.",
    "originalSentence": "Objects returned from [`fs.statfs()`][] and its synchronous counterpart are of\nthis type. If `bigint` in the `options` passed to those methods is `true`, the\nnumeric values will be `bigint` instead of `number`.",
    "position": 9458,
    "id": "paragraph_9458"
  },
  {
    "type": "paragraph",
    "content": "```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```",
    "originalSentence": "```console\nStatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}\n```",
    "position": 9459,
    "id": "paragraph_9459"
  },
  {
    "type": "paragraph",
    "content": "```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```",
    "originalSentence": "```console\nStatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}\n```",
    "position": 9460,
    "id": "paragraph_9460"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9461,
    "id": "paragraph_9461"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9462,
    "id": "paragraph_9462"
  },
  {
    "type": "paragraph",
    "content": "Free blocks available to unprivileged users.",
    "originalSentence": "Free blocks available to unprivileged users.",
    "position": 9463,
    "id": "paragraph_9463"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9464,
    "id": "paragraph_9464"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9465,
    "id": "paragraph_9465"
  },
  {
    "type": "paragraph",
    "content": "Free blocks in file system.",
    "originalSentence": "Free blocks in file system.",
    "position": 9466,
    "id": "paragraph_9466"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9467,
    "id": "paragraph_9467"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9468,
    "id": "paragraph_9468"
  },
  {
    "type": "paragraph",
    "content": "Total data blocks in file system.",
    "originalSentence": "Total data blocks in file system.",
    "position": 9469,
    "id": "paragraph_9469"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9470,
    "id": "paragraph_9470"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9471,
    "id": "paragraph_9471"
  },
  {
    "type": "paragraph",
    "content": "Optimal transfer block size.",
    "originalSentence": "Optimal transfer block size.",
    "position": 9472,
    "id": "paragraph_9472"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9473,
    "id": "paragraph_9473"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9474,
    "id": "paragraph_9474"
  },
  {
    "type": "paragraph",
    "content": "Free file nodes in file system.",
    "originalSentence": "Free file nodes in file system.",
    "position": 9475,
    "id": "paragraph_9475"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9476,
    "id": "paragraph_9476"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9477,
    "id": "paragraph_9477"
  },
  {
    "type": "paragraph",
    "content": "Total file nodes in file system.",
    "originalSentence": "Total file nodes in file system.",
    "position": 9478,
    "id": "paragraph_9478"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "originalSentence": "<!-- YAML\nadded:\n  - v19.6.0\n  - v18.15.0\n-->",
    "position": 9479,
    "id": "paragraph_9479"
  },
  {
    "type": "paragraph",
    "content": "* Type: {number|bigint}",
    "originalSentence": "* Type: {number|bigint}",
    "position": 9480,
    "id": "paragraph_9480"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.Utf8Stream`",
    "originalSentence": "### Class: `fs.Utf8Stream`",
    "position": 9481,
    "id": "paragraph_9481"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v24.6.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v24.6.0\n-->",
    "position": 9482,
    "id": "paragraph_9482"
  },
  {
    "type": "paragraph",
    "content": "> Stability: 1 - Experimental",
    "originalSentence": "> Stability: 1 - Experimental",
    "position": 9483,
    "id": "paragraph_9483"
  },
  {
    "type": "paragraph",
    "content": "An optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand. It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy.",
    "originalSentence": "An optimized UTF-8 stream writer that allows for flushing all the internal\nbuffering on demand. It handles `EAGAIN` errors correctly, allowing for\ncustomization, for example, by dropping content if the disk is busy.",
    "position": 9484,
    "id": "paragraph_9484"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'close'`",
    "originalSentence": "#### Event: `'close'`",
    "position": 9485,
    "id": "paragraph_9485"
  },
  {
    "type": "paragraph",
    "content": "The `'close'` event is emitted when the stream is fully closed.",
    "originalSentence": "The `'close'` event is emitted when the stream is fully closed.",
    "position": 9486,
    "id": "paragraph_9486"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'drain'`",
    "originalSentence": "#### Event: `'drain'`",
    "position": 9487,
    "id": "paragraph_9487"
  },
  {
    "type": "paragraph",
    "content": "The `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing.",
    "originalSentence": "The `'drain'` event is emitted when the internal buffer has drained sufficiently\nto allow continued writing.",
    "position": 9488,
    "id": "paragraph_9488"
  },
  {
    "type": "paragraph",
    "content": "The `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written. The data that was dropped is passed as the first argument\nto the event handle.",
    "originalSentence": "The `'drop'` event is emitted when to maximal length is reached and that data\nwill not be written. The data that was dropped is passed as the first argument\nto the event handle.",
    "position": 9489,
    "id": "paragraph_9489"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'error'`",
    "originalSentence": "#### Event: `'error'`",
    "position": 9490,
    "id": "paragraph_9490"
  },
  {
    "type": "paragraph",
    "content": "The `'error'` event is emitted when an error occurs.",
    "originalSentence": "The `'error'` event is emitted when an error occurs.",
    "position": 9491,
    "id": "paragraph_9491"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'finish'`",
    "originalSentence": "#### Event: `'finish'`",
    "position": 9492,
    "id": "paragraph_9492"
  },
  {
    "type": "paragraph",
    "content": "The `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file.",
    "originalSentence": "The `'finish'` event is emitted when the stream has been ended and all data has\nbeen flushed to the underlying file.",
    "position": 9493,
    "id": "paragraph_9493"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'ready'`",
    "originalSentence": "#### Event: `'ready'`",
    "position": 9494,
    "id": "paragraph_9494"
  },
  {
    "type": "paragraph",
    "content": "The `'ready'` event is emitted when the stream is ready to accept writes.",
    "originalSentence": "The `'ready'` event is emitted when the stream is ready to accept writes.",
    "position": 9495,
    "id": "paragraph_9495"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'write'`",
    "originalSentence": "#### Event: `'write'`",
    "position": 9496,
    "id": "paragraph_9496"
  },
  {
    "type": "paragraph",
    "content": "The `'write'` event is emitted when a write operation has completed. The number\nof bytes written is passed as the first argument to the event handler.",
    "originalSentence": "The `'write'` event is emitted when a write operation has completed. The number\nof bytes written is passed as the first argument to the event handler.",
    "position": 9497,
    "id": "paragraph_9497"
  },
  {
    "type": "paragraph",
    "content": "#### `new fs.Utf8Stream([options])`",
    "originalSentence": "#### `new fs.Utf8Stream([options])`",
    "position": 9498,
    "id": "paragraph_9498"
  },
  {
    "type": "paragraph",
    "content": "* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it.\n    **Default**: `true`.\n  * `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`. **Default**:\n    `'utf8'`.\n  * `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option).\n  * `fd`: {number} A file descriptor, something that is returned by `fs.open()`\n    or `fs.openSync()`.\n  * `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream.\n  * `fsync`: {boolean} Perform a `fs.fsyncSync()` every time a write is\n    completed.\n  * `maxLength`: {number} The maximum length of the internal buffer. If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing.\n  * `mkdir`: {boolean} Ensure directory for `dest` file exists when true.\n    **Default**: `false`.\n  * `mode`: {number|string} Specify the creating file mode (see `fs.open()`).\n  * `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds.\n  * `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error.\n    If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error. The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write.\n    * `err` {any} An error or `null`.\n    * `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously.",
    "originalSentence": "* `options` {Object}\n  * `append`: {boolean} Appends writes to dest file instead of truncating it.\n    **Default**: `true`.\n  * `contentMode`: {string} Which type of data you can send to the write\n    function, supported values are `'utf8'` or `'buffer'`. **Default**:\n    `'utf8'`.\n  * `dest`: {string} A path to a file to be written to (mode controlled by the\n    append option).\n  * `fd`: {number} A file descriptor, something that is returned by `fs.open()`\n    or `fs.openSync()`.\n  * `fs`: {Object} An object that has the same API as the `fs` module, useful\n    for mocking, testing, or customizing the behavior of the stream.\n  * `fsync`: {boolean} Perform a `fs.fsyncSync()` every time a write is\n    completed.\n  * `maxLength`: {number} The maximum length of the internal buffer. If a write\n    operation would cause the buffer to exceed `maxLength`, the data written is\n    dropped and a drop event is emitted with the dropped data\n  * `maxWrite`: {number} The maximum number of bytes that can be written;\n    **Default**: `16384`\n  * `minLength`: {number} The minimum length of the internal buffer that is\n    required to be full before flushing.\n  * `mkdir`: {boolean} Ensure directory for `dest` file exists when true.\n    **Default**: `false`.\n  * `mode`: {number|string} Specify the creating file mode (see `fs.open()`).\n  * `periodicFlush`: {number} Calls flush every `periodicFlush` milliseconds.\n  * `retryEAGAIN` {Function} A function that will be called when `write()`,\n    `writeSync()`, or `flushSync()` encounters an `EAGAIN` or `EBUSY` error.\n    If the return value is `true` the operation will be retried, otherwise it\n    will bubble the error. The `err` is the error that caused this function to\n    be called, `writeBufferLen` is the length of the buffer that was written,\n    and `remainingBufferLen` is the length of the remaining buffer that the\n    stream did not try to write.\n    * `err` {any} An error or `null`.\n    * `writeBufferLen` {number}\n    * `remainingBufferLen`: {number}\n  * `sync`: {boolean} Perform writes synchronously.",
    "position": 9499,
    "id": "paragraph_9499"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.append`",
    "originalSentence": "#### `utf8Stream.append`",
    "position": 9500,
    "id": "paragraph_9500"
  },
  {
    "type": "paragraph",
    "content": "* {boolean} Whether the stream is appending to the file or truncating it.",
    "originalSentence": "* {boolean} Whether the stream is appending to the file or truncating it.",
    "position": 9501,
    "id": "paragraph_9501"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.contentMode`",
    "originalSentence": "#### `utf8Stream.contentMode`",
    "position": 9502,
    "id": "paragraph_9502"
  },
  {
    "type": "paragraph",
    "content": "* {string} The type of data that can be written to the stream. Supported\n  values are `'utf8'` or `'buffer'`. **Default**: `'utf8'`.",
    "originalSentence": "* {string} The type of data that can be written to the stream. Supported\n  values are `'utf8'` or `'buffer'`. **Default**: `'utf8'`.",
    "position": 9503,
    "id": "paragraph_9503"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.destroy()`",
    "originalSentence": "#### `utf8Stream.destroy()`",
    "position": 9504,
    "id": "paragraph_9504"
  },
  {
    "type": "paragraph",
    "content": "Close the stream immediately, without flushing the internal buffer.",
    "originalSentence": "Close the stream immediately, without flushing the internal buffer.",
    "position": 9505,
    "id": "paragraph_9505"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.end()`",
    "originalSentence": "#### `utf8Stream.end()`",
    "position": 9506,
    "id": "paragraph_9506"
  },
  {
    "type": "paragraph",
    "content": "Close the stream gracefully, flushing the internal buffer before closing.",
    "originalSentence": "Close the stream gracefully, flushing the internal buffer before closing.",
    "position": 9507,
    "id": "paragraph_9507"
  },
  {
    "type": "paragraph",
    "content": "* {number} The file descriptor that is being written to.",
    "originalSentence": "* {number} The file descriptor that is being written to.",
    "position": 9508,
    "id": "paragraph_9508"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.file`",
    "originalSentence": "#### `utf8Stream.file`",
    "position": 9509,
    "id": "paragraph_9509"
  },
  {
    "type": "paragraph",
    "content": "* {string} The file that is being written to.",
    "originalSentence": "* {string} The file that is being written to.",
    "position": 9510,
    "id": "paragraph_9510"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.flush(callback)`",
    "originalSentence": "#### `utf8Stream.flush(callback)`",
    "position": 9511,
    "id": "paragraph_9511"
  },
  {
    "type": "paragraph",
    "content": "* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`.",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error|null} An error if the flush failed, otherwise `null`.",
    "position": 9512,
    "id": "paragraph_9512"
  },
  {
    "type": "paragraph",
    "content": "Writes the current buffer to the file if a write was not in progress. Do\nnothing if `minLength` is zero or if it is already writing.",
    "originalSentence": "Writes the current buffer to the file if a write was not in progress. Do\nnothing if `minLength` is zero or if it is already writing.",
    "position": 9513,
    "id": "paragraph_9513"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.flushSync()`",
    "originalSentence": "#### `utf8Stream.flushSync()`",
    "position": 9514,
    "id": "paragraph_9514"
  },
  {
    "type": "paragraph",
    "content": "Flushes the buffered data synchronously. This is a costly operation.",
    "originalSentence": "Flushes the buffered data synchronously. This is a costly operation.",
    "position": 9515,
    "id": "paragraph_9515"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.fsync`",
    "originalSentence": "#### `utf8Stream.fsync`",
    "position": 9516,
    "id": "paragraph_9516"
  },
  {
    "type": "paragraph",
    "content": "* {boolean} Whether the stream is performing a `fs.fsyncSync()` after every\n  write operation.",
    "originalSentence": "* {boolean} Whether the stream is performing a `fs.fsyncSync()` after every\n  write operation.",
    "position": 9517,
    "id": "paragraph_9517"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.maxLength`",
    "originalSentence": "#### `utf8Stream.maxLength`",
    "position": 9518,
    "id": "paragraph_9518"
  },
  {
    "type": "paragraph",
    "content": "* {number} The maximum length of the internal buffer. If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data.",
    "originalSentence": "* {number} The maximum length of the internal buffer. If a write\n  operation would cause the buffer to exceed `maxLength`, the data written is\n  dropped and a drop event is emitted with the dropped data.",
    "position": 9519,
    "id": "paragraph_9519"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.minLength`",
    "originalSentence": "#### `utf8Stream.minLength`",
    "position": 9520,
    "id": "paragraph_9520"
  },
  {
    "type": "paragraph",
    "content": "* {number} The minimum length of the internal buffer that is required to be\n  full before flushing.",
    "originalSentence": "* {number} The minimum length of the internal buffer that is required to be\n  full before flushing.",
    "position": 9521,
    "id": "paragraph_9521"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.mkdir`",
    "originalSentence": "#### `utf8Stream.mkdir`",
    "position": 9522,
    "id": "paragraph_9522"
  },
  {
    "type": "paragraph",
    "content": "* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists. If `true`, it will create the directory if it does not\n  exist. **Default**: `false`.",
    "originalSentence": "* {boolean} Whether the stream should ensure that the directory for the\n  `dest` file exists. If `true`, it will create the directory if it does not\n  exist. **Default**: `false`.",
    "position": 9523,
    "id": "paragraph_9523"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.mode`",
    "originalSentence": "#### `utf8Stream.mode`",
    "position": 9524,
    "id": "paragraph_9524"
  },
  {
    "type": "paragraph",
    "content": "* {number|string} The mode of the file that is being written to.",
    "originalSentence": "* {number|string} The mode of the file that is being written to.",
    "position": 9525,
    "id": "paragraph_9525"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.periodicFlush`",
    "originalSentence": "#### `utf8Stream.periodicFlush`",
    "position": 9526,
    "id": "paragraph_9526"
  },
  {
    "type": "paragraph",
    "content": "* {number} The number of milliseconds between flushes. If set to `0`, no\n  periodic flushes will be performed.",
    "originalSentence": "* {number} The number of milliseconds between flushes. If set to `0`, no\n  periodic flushes will be performed.",
    "position": 9527,
    "id": "paragraph_9527"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.reopen(file)`",
    "originalSentence": "#### `utf8Stream.reopen(file)`",
    "position": 9528,
    "id": "paragraph_9528"
  },
  {
    "type": "paragraph",
    "content": "* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option).",
    "originalSentence": "* `file`: {string|Buffer|URL} A path to a file to be written to (mode\n  controlled by the append option).",
    "position": 9529,
    "id": "paragraph_9529"
  },
  {
    "type": "paragraph",
    "content": "Reopen the file in place, useful for log rotation.",
    "originalSentence": "Reopen the file in place, useful for log rotation.",
    "position": 9530,
    "id": "paragraph_9530"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.sync`",
    "originalSentence": "#### `utf8Stream.sync`",
    "position": 9531,
    "id": "paragraph_9531"
  },
  {
    "type": "paragraph",
    "content": "* {boolean} Whether the stream is writing synchronously or asynchronously.",
    "originalSentence": "* {boolean} Whether the stream is writing synchronously or asynchronously.",
    "position": 9532,
    "id": "paragraph_9532"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.write(data)`",
    "originalSentence": "#### `utf8Stream.write(data)`",
    "position": 9533,
    "id": "paragraph_9533"
  },
  {
    "type": "paragraph",
    "content": "* `data` {string|Buffer} The data to write.\n* Returns {boolean}",
    "originalSentence": "* `data` {string|Buffer} The data to write.\n* Returns {boolean}",
    "position": 9534,
    "id": "paragraph_9534"
  },
  {
    "type": "paragraph",
    "content": "When the `options.contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string. If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}.",
    "originalSentence": "When the `options.contentMode` is set to `'utf8'` when the stream is created,\nthe `data` argument must be a string. If the `contentMode` is set to `'buffer'`,\nthe `data` argument must be a {Buffer}.",
    "position": 9535,
    "id": "paragraph_9535"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream.writing`",
    "originalSentence": "#### `utf8Stream.writing`",
    "position": 9536,
    "id": "paragraph_9536"
  },
  {
    "type": "paragraph",
    "content": "* {boolean} Whether the stream is currently writing data to the file.",
    "originalSentence": "* {boolean} Whether the stream is currently writing data to the file.",
    "position": 9537,
    "id": "paragraph_9537"
  },
  {
    "type": "paragraph",
    "content": "#### `utf8Stream[Symbol.dispose]()`",
    "originalSentence": "#### `utf8Stream[Symbol.dispose]()`",
    "position": 9538,
    "id": "paragraph_9538"
  },
  {
    "type": "paragraph",
    "content": "Calls `utf8Stream.destroy()`.",
    "originalSentence": "Calls `utf8Stream.destroy()`.",
    "position": 9539,
    "id": "paragraph_9539"
  },
  {
    "type": "paragraph",
    "content": "### Class: `fs.WriteStream`",
    "originalSentence": "### Class: `fs.WriteStream`",
    "position": 9540,
    "id": "paragraph_9540"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9541,
    "id": "paragraph_9541"
  },
  {
    "type": "paragraph",
    "content": "* Extends {stream.Writable}",
    "originalSentence": "* Extends {stream.Writable}",
    "position": 9542,
    "id": "paragraph_9542"
  },
  {
    "type": "paragraph",
    "content": "Instances of {fs.WriteStream} are created and returned using the\n[`fs.createWriteStream()`][] function.",
    "originalSentence": "Instances of {fs.WriteStream} are created and returned using the\n[`fs.createWriteStream()`][] function.",
    "position": 9543,
    "id": "paragraph_9543"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'close'`",
    "originalSentence": "#### Event: `'close'`",
    "position": 9544,
    "id": "paragraph_9544"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9545,
    "id": "paragraph_9545"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the {fs.WriteStream}'s underlying file descriptor has been closed.",
    "originalSentence": "Emitted when the {fs.WriteStream}'s underlying file descriptor has been closed.",
    "position": 9546,
    "id": "paragraph_9546"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9547,
    "id": "paragraph_9547"
  },
  {
    "type": "paragraph",
    "content": "* `fd` {integer} Integer file descriptor used by the {fs.WriteStream}.",
    "originalSentence": "* `fd` {integer} Integer file descriptor used by the {fs.WriteStream}.",
    "position": 9548,
    "id": "paragraph_9548"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the {fs.WriteStream}'s file is opened.",
    "originalSentence": "Emitted when the {fs.WriteStream}'s file is opened.",
    "position": 9549,
    "id": "paragraph_9549"
  },
  {
    "type": "paragraph",
    "content": "#### Event: `'ready'`",
    "originalSentence": "#### Event: `'ready'`",
    "position": 9550,
    "id": "paragraph_9550"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v9.11.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v9.11.0\n-->",
    "position": 9551,
    "id": "paragraph_9551"
  },
  {
    "type": "paragraph",
    "content": "Emitted when the {fs.WriteStream} is ready to be used.",
    "originalSentence": "Emitted when the {fs.WriteStream} is ready to be used.",
    "position": 9552,
    "id": "paragraph_9552"
  },
  {
    "type": "paragraph",
    "content": "Fires immediately after `'open'`.",
    "originalSentence": "Fires immediately after `'open'`.",
    "position": 9553,
    "id": "paragraph_9553"
  },
  {
    "type": "paragraph",
    "content": "#### `writeStream.bytesWritten`",
    "originalSentence": "#### `writeStream.bytesWritten`",
    "position": 9554,
    "id": "paragraph_9554"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.4.7\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.4.7\n-->",
    "position": 9555,
    "id": "paragraph_9555"
  },
  {
    "type": "paragraph",
    "content": "The number of bytes written so far. Does not include data that is still queued\nfor writing.",
    "originalSentence": "The number of bytes written so far. Does not include data that is still queued\nfor writing.",
    "position": 9556,
    "id": "paragraph_9556"
  },
  {
    "type": "paragraph",
    "content": "#### `writeStream.close([callback])`",
    "originalSentence": "#### `writeStream.close([callback])`",
    "position": 9557,
    "id": "paragraph_9557"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.9.4\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.9.4\n-->",
    "position": 9558,
    "id": "paragraph_9558"
  },
  {
    "type": "paragraph",
    "content": "* `callback` {Function}\n  * `err` {Error}",
    "originalSentence": "* `callback` {Function}\n  * `err` {Error}",
    "position": 9559,
    "id": "paragraph_9559"
  },
  {
    "type": "paragraph",
    "content": "Closes `writeStream`. Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed.",
    "originalSentence": "Closes `writeStream`. Optionally accepts a\ncallback that will be executed once the `writeStream`\nis closed.",
    "position": 9560,
    "id": "paragraph_9560"
  },
  {
    "type": "paragraph",
    "content": "#### `writeStream.path`",
    "originalSentence": "#### `writeStream.path`",
    "position": 9561,
    "id": "paragraph_9561"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v0.1.93\n-->",
    "originalSentence": "<!-- YAML\nadded: v0.1.93\n-->",
    "position": 9562,
    "id": "paragraph_9562"
  },
  {
    "type": "paragraph",
    "content": "The path to the file the stream is writing to as specified in the first\nargument to [`fs.createWriteStream()`][]. If `path` is passed as a string, then\n`writeStream.path` will be a string. If `path` is passed as a {Buffer}, then\n`writeStream.path` will be a {Buffer}.",
    "originalSentence": "The path to the file the stream is writing to as specified in the first\nargument to [`fs.createWriteStream()`][]. If `path` is passed as a string, then\n`writeStream.path` will be a string. If `path` is passed as a {Buffer}, then\n`writeStream.path` will be a {Buffer}.",
    "position": 9563,
    "id": "paragraph_9563"
  },
  {
    "type": "paragraph",
    "content": "#### `writeStream.pending`",
    "originalSentence": "#### `writeStream.pending`",
    "position": 9564,
    "id": "paragraph_9564"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v11.2.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v11.2.0\n-->",
    "position": 9565,
    "id": "paragraph_9565"
  },
  {
    "type": "paragraph",
    "content": "This property is `true` if the underlying file has not been opened yet,\ni.e. before the `'ready'` event is emitted.",
    "originalSentence": "This property is `true` if the underlying file has not been opened yet,\ni.e. before the `'ready'` event is emitted.",
    "position": 9566,
    "id": "paragraph_9566"
  },
  {
    "type": "paragraph",
    "content": "Returns an object containing commonly used constants for file system\noperations.",
    "originalSentence": "Returns an object containing commonly used constants for file system\noperations.",
    "position": 9567,
    "id": "paragraph_9567"
  },
  {
    "type": "paragraph",
    "content": "The following constants are exported by `fs.constants` and `fsPromises.constants`.",
    "originalSentence": "The following constants are exported by `fs.constants` and `fsPromises.constants`.",
    "position": 9568,
    "id": "paragraph_9568"
  },
  {
    "type": "paragraph",
    "content": "Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available.\nFor portable applications it is recommended to check for their presence\nbefore use.",
    "originalSentence": "Not every constant will be available on every operating system;\nthis is especially important for Windows, where many of the POSIX specific\ndefinitions are not available.\nFor portable applications it is recommended to check for their presence\nbefore use.",
    "position": 9569,
    "id": "paragraph_9569"
  },
  {
    "type": "paragraph",
    "content": "To use more than one constant, use the bitwise OR `|` operator.",
    "originalSentence": "To use more than one constant, use the bitwise OR `|` operator.",
    "position": 9570,
    "id": "paragraph_9570"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, constants } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, constants } from 'node:fs';",
    "position": 9571,
    "id": "paragraph_9571"
  },
  {
    "type": "paragraph",
    "content": "const {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;",
    "originalSentence": "const {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;",
    "position": 9572,
    "id": "paragraph_9572"
  },
  {
    "type": "paragraph",
    "content": "open('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...\n});\n```",
    "originalSentence": "open('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...\n});\n```",
    "position": 9573,
    "id": "paragraph_9573"
  },
  {
    "type": "paragraph",
    "content": "##### File access constants",
    "originalSentence": "##### File access constants",
    "position": 9574,
    "id": "paragraph_9574"
  },
  {
    "type": "paragraph",
    "content": "The following constants are meant for use as the `mode` parameter passed to\n[`fsPromises.access()`][], [`fs.access()`][], and [`fs.accessSync()`][].",
    "originalSentence": "The following constants are meant for use as the `mode` parameter passed to\n[`fsPromises.access()`][], [`fs.access()`][], and [`fs.accessSync()`][].",
    "position": 9575,
    "id": "paragraph_9575"
  },
  {
    "type": "paragraph",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process.\n     This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions. Default if no mode is specified.</td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process.</td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process.</td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process. This has no effect on Windows\n    (will behave like <code>fs.constants.F_OK</code>).</td>\n  </tr>\n</table>",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>F_OK</code></td>\n    <td>Flag indicating that the file is visible to the calling process.\n     This is useful for determining if a file exists, but says nothing\n     about <code>rwx</code> permissions. Default if no mode is specified.</td>\n  </tr>\n  <tr>\n    <td><code>R_OK</code></td>\n    <td>Flag indicating that the file can be read by the calling process.</td>\n  </tr>\n  <tr>\n    <td><code>W_OK</code></td>\n    <td>Flag indicating that the file can be written by the calling\n    process.</td>\n  </tr>\n  <tr>\n    <td><code>X_OK</code></td>\n    <td>Flag indicating that the file can be executed by the calling\n    process. This has no effect on Windows\n    (will behave like <code>fs.constants.F_OK</code>).</td>\n  </tr>\n</table>",
    "position": 9576,
    "id": "paragraph_9576"
  },
  {
    "type": "paragraph",
    "content": "The definitions are also available on Windows.",
    "originalSentence": "The definitions are also available on Windows.",
    "position": 9577,
    "id": "paragraph_9577"
  },
  {
    "type": "paragraph",
    "content": "##### File copy constants",
    "originalSentence": "##### File copy constants",
    "position": 9578,
    "id": "paragraph_9578"
  },
  {
    "type": "paragraph",
    "content": "The following constants are meant for use with [`fs.copyFile()`][].",
    "originalSentence": "The following constants are meant for use with [`fs.copyFile()`][].",
    "position": 9579,
    "id": "paragraph_9579"
  },
  {
    "type": "paragraph",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists.</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used.</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error.</td>\n  </tr>\n</table>",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_EXCL</code></td>\n    <td>If present, the copy operation will fail with an error if the\n    destination path already exists.</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then a fallback copy mechanism is used.</td>\n  </tr>\n  <tr>\n    <td><code>COPYFILE_FICLONE_FORCE</code></td>\n    <td>If present, the copy operation will attempt to create a\n    copy-on-write reflink. If the underlying platform does not support\n    copy-on-write, then the operation will fail with an error.</td>\n  </tr>\n</table>",
    "position": 9580,
    "id": "paragraph_9580"
  },
  {
    "type": "paragraph",
    "content": "The definitions are also available on Windows.",
    "originalSentence": "The definitions are also available on Windows.",
    "position": 9581,
    "id": "paragraph_9581"
  },
  {
    "type": "paragraph",
    "content": "##### File open constants",
    "originalSentence": "##### File open constants",
    "position": 9582,
    "id": "paragraph_9582"
  },
  {
    "type": "paragraph",
    "content": "The following constants are meant for use with `fs.open()`.",
    "originalSentence": "The following constants are meant for use with `fs.open()`.",
    "position": 9583,
    "id": "paragraph_9583"
  },
  {
    "type": "paragraph",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access.</td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access.</td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access.</td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist.</td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists.</td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one).</td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero.</td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file.</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory.</td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file. This flag is available on Linux operating systems only.</td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link.</td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity.</td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity.</td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to.</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O.</td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible.</td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file. This flag\n    is available on Windows operating systems only. On other operating systems,\n    this flag is ignored.</td>\n  </tr>\n</table>",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>O_RDONLY</code></td>\n    <td>Flag indicating to open a file for read-only access.</td>\n  </tr>\n  <tr>\n    <td><code>O_WRONLY</code></td>\n    <td>Flag indicating to open a file for write-only access.</td>\n  </tr>\n  <tr>\n    <td><code>O_RDWR</code></td>\n    <td>Flag indicating to open a file for read-write access.</td>\n  </tr>\n  <tr>\n    <td><code>O_CREAT</code></td>\n    <td>Flag indicating to create the file if it does not already exist.</td>\n  </tr>\n  <tr>\n    <td><code>O_EXCL</code></td>\n    <td>Flag indicating that opening a file should fail if the\n    <code>O_CREAT</code> flag is set and the file already exists.</td>\n  </tr>\n  <tr>\n    <td><code>O_NOCTTY</code></td>\n    <td>Flag indicating that if path identifies a terminal device, opening the\n    path shall not cause that terminal to become the controlling terminal for\n    the process (if the process does not already have one).</td>\n  </tr>\n  <tr>\n    <td><code>O_TRUNC</code></td>\n    <td>Flag indicating that if the file exists and is a regular file, and the\n    file is opened successfully for write access, its length shall be truncated\n    to zero.</td>\n  </tr>\n  <tr>\n    <td><code>O_APPEND</code></td>\n    <td>Flag indicating that data will be appended to the end of the file.</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECTORY</code></td>\n    <td>Flag indicating that the open should fail if the path is not a\n    directory.</td>\n  </tr>\n  <tr>\n  <td><code>O_NOATIME</code></td>\n    <td>Flag indicating reading accesses to the file system will no longer\n    result in an update to the <code>atime</code> information associated with\n    the file. This flag is available on Linux operating systems only.</td>\n  </tr>\n  <tr>\n    <td><code>O_NOFOLLOW</code></td>\n    <td>Flag indicating that the open should fail if the path is a symbolic\n    link.</td>\n  </tr>\n  <tr>\n    <td><code>O_SYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for file integrity.</td>\n  </tr>\n  <tr>\n    <td><code>O_DSYNC</code></td>\n    <td>Flag indicating that the file is opened for synchronized I/O with write\n    operations waiting for data integrity.</td>\n  </tr>\n  <tr>\n    <td><code>O_SYMLINK</code></td>\n    <td>Flag indicating to open the symbolic link itself rather than the\n    resource it is pointing to.</td>\n  </tr>\n  <tr>\n    <td><code>O_DIRECT</code></td>\n    <td>When set, an attempt will be made to minimize caching effects of file\n    I/O.</td>\n  </tr>\n  <tr>\n    <td><code>O_NONBLOCK</code></td>\n    <td>Flag indicating to open the file in nonblocking mode when possible.</td>\n  </tr>\n  <tr>\n    <td><code>UV_FS_O_FILEMAP</code></td>\n    <td>When set, a memory file mapping is used to access the file. This flag\n    is available on Windows operating systems only. On other operating systems,\n    this flag is ignored.</td>\n  </tr>\n</table>",
    "position": 9584,
    "id": "paragraph_9584"
  },
  {
    "type": "paragraph",
    "content": "On Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available.",
    "originalSentence": "On Windows, only `O_APPEND`, `O_CREAT`, `O_EXCL`, `O_RDONLY`, `O_RDWR`,\n`O_TRUNC`, `O_WRONLY`, and `UV_FS_O_FILEMAP` are available.",
    "position": 9585,
    "id": "paragraph_9585"
  },
  {
    "type": "paragraph",
    "content": "##### File type constants",
    "originalSentence": "##### File type constants",
    "position": 9586,
    "id": "paragraph_9586"
  },
  {
    "type": "paragraph",
    "content": "The following constants are meant for use with the {fs.Stats} object's\n`mode` property for determining a file's type.",
    "originalSentence": "The following constants are meant for use with the {fs.Stats} object's\n`mode` property for determining a file's type.",
    "position": 9587,
    "id": "paragraph_9587"
  },
  {
    "type": "paragraph",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket.</td>\n  </tr>\n</table>",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IFMT</code></td>\n    <td>Bit mask used to extract the file type code.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFREG</code></td>\n    <td>File type constant for a regular file.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFDIR</code></td>\n    <td>File type constant for a directory.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFCHR</code></td>\n    <td>File type constant for a character-oriented device file.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFBLK</code></td>\n    <td>File type constant for a block-oriented device file.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFIFO</code></td>\n    <td>File type constant for a FIFO/pipe.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFLNK</code></td>\n    <td>File type constant for a symbolic link.</td>\n  </tr>\n  <tr>\n    <td><code>S_IFSOCK</code></td>\n    <td>File type constant for a socket.</td>\n  </tr>\n</table>",
    "position": 9588,
    "id": "paragraph_9588"
  },
  {
    "type": "paragraph",
    "content": "On Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available.",
    "originalSentence": "On Windows, only `S_IFCHR`, `S_IFDIR`, `S_IFLNK`, `S_IFMT`, and `S_IFREG`,\nare available.",
    "position": 9589,
    "id": "paragraph_9589"
  },
  {
    "type": "paragraph",
    "content": "##### File mode constants",
    "originalSentence": "##### File mode constants",
    "position": 9590,
    "id": "paragraph_9590"
  },
  {
    "type": "paragraph",
    "content": "The following constants are meant for use with the {fs.Stats} object's\n`mode` property for determining the access permissions for a file.",
    "originalSentence": "The following constants are meant for use with the {fs.Stats} object's\n`mode` property for determining the access permissions for a file.",
    "position": 9591,
    "id": "paragraph_9591"
  },
  {
    "type": "paragraph",
    "content": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others.</td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others.</td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others.</td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others.</td>\n  </tr>\n</table>",
    "originalSentence": "<table>\n  <tr>\n    <th>Constant</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><code>S_IRWXU</code></td>\n    <td>File mode indicating readable, writable, and executable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRUSR</code></td>\n    <td>File mode indicating readable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IWUSR</code></td>\n    <td>File mode indicating writable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IXUSR</code></td>\n    <td>File mode indicating executable by owner.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXG</code></td>\n    <td>File mode indicating readable, writable, and executable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRGRP</code></td>\n    <td>File mode indicating readable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IWGRP</code></td>\n    <td>File mode indicating writable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IXGRP</code></td>\n    <td>File mode indicating executable by group.</td>\n  </tr>\n  <tr>\n    <td><code>S_IRWXO</code></td>\n    <td>File mode indicating readable, writable, and executable by others.</td>\n  </tr>\n  <tr>\n    <td><code>S_IROTH</code></td>\n    <td>File mode indicating readable by others.</td>\n  </tr>\n  <tr>\n    <td><code>S_IWOTH</code></td>\n    <td>File mode indicating writable by others.</td>\n  </tr>\n  <tr>\n    <td><code>S_IXOTH</code></td>\n    <td>File mode indicating executable by others.</td>\n  </tr>\n</table>",
    "position": 9592,
    "id": "paragraph_9592"
  },
  {
    "type": "paragraph",
    "content": "On Windows, only `S_IRUSR` and `S_IWUSR` are available.",
    "originalSentence": "On Windows, only `S_IRUSR` and `S_IWUSR` are available.",
    "position": 9593,
    "id": "paragraph_9593"
  },
  {
    "type": "paragraph",
    "content": "### Ordering of callback and promise-based operations",
    "originalSentence": "### Ordering of callback and promise-based operations",
    "position": 9594,
    "id": "paragraph_9594"
  },
  {
    "type": "paragraph",
    "content": "Because they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods.",
    "originalSentence": "Because they are executed asynchronously by the underlying thread pool,\nthere is no guaranteed ordering when using either the callback or\npromise-based methods.",
    "position": 9595,
    "id": "paragraph_9595"
  },
  {
    "type": "paragraph",
    "content": "For example, the following is prone to error because the `fs.stat()`\noperation might complete before the `fs.rename()` operation:",
    "originalSentence": "For example, the following is prone to error because the `fs.stat()`\noperation might complete before the `fs.rename()` operation:",
    "position": 9596,
    "id": "paragraph_9596"
  },
  {
    "type": "paragraph",
    "content": "```js\nconst fs = require('node:fs');",
    "originalSentence": "```js\nconst fs = require('node:fs');",
    "position": 9597,
    "id": "paragraph_9597"
  },
  {
    "type": "paragraph",
    "content": "fs.rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.log('renamed complete');\n});\nfs.stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.log(`stats: ${JSON.stringify(stats)}`);\n});\n```",
    "originalSentence": "fs.rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.log('renamed complete');\n});\nfs.stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.log(`stats: ${JSON.stringify(stats)}`);\n});\n```",
    "position": 9598,
    "id": "paragraph_9598"
  },
  {
    "type": "paragraph",
    "content": "It is important to correctly order the operations by awaiting the results\nof one before invoking the other:",
    "originalSentence": "It is important to correctly order the operations by awaiting the results\nof one before invoking the other:",
    "position": 9599,
    "id": "paragraph_9599"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { rename, stat } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { rename, stat } from 'node:fs/promises';",
    "position": 9600,
    "id": "paragraph_9600"
  },
  {
    "type": "paragraph",
    "content": "const oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';",
    "originalSentence": "const oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';",
    "position": 9601,
    "id": "paragraph_9601"
  },
  {
    "type": "paragraph",
    "content": "try {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.log(`stats: ${JSON.stringify(stats)}`);\n} catch (error) {\n  console.error('there was an error:', error.message);\n}\n```",
    "originalSentence": "try {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.log(`stats: ${JSON.stringify(stats)}`);\n} catch (error) {\n  console.error('there was an error:', error.message);\n}\n```",
    "position": 9602,
    "id": "paragraph_9602"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { rename, stat } = require('node:fs/promises');",
    "originalSentence": "```cjs\nconst { rename, stat } = require('node:fs/promises');",
    "position": 9603,
    "id": "paragraph_9603"
  },
  {
    "type": "paragraph",
    "content": "(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello', '/tmp/world');\n```",
    "originalSentence": "(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello', '/tmp/world');\n```",
    "position": 9604,
    "id": "paragraph_9604"
  },
  {
    "type": "paragraph",
    "content": "Or, when using the callback APIs, move the `fs.stat()` call into the callback\nof the `fs.rename()` operation:",
    "originalSentence": "Or, when using the callback APIs, move the `fs.stat()` call into the callback\nof the `fs.rename()` operation:",
    "position": 9605,
    "id": "paragraph_9605"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { rename, stat } from 'node:fs';",
    "originalSentence": "```mjs\nimport { rename, stat } from 'node:fs';",
    "position": 9606,
    "id": "paragraph_9606"
  },
  {
    "type": "paragraph",
    "content": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});\n```",
    "originalSentence": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});\n```",
    "position": 9607,
    "id": "paragraph_9607"
  },
  {
    "type": "paragraph",
    "content": "```cjs\nconst { rename, stat } = require('node:fs/promises');",
    "originalSentence": "```cjs\nconst { rename, stat } = require('node:fs/promises');",
    "position": 9608,
    "id": "paragraph_9608"
  },
  {
    "type": "paragraph",
    "content": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});\n```",
    "originalSentence": "rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});\n```",
    "position": 9609,
    "id": "paragraph_9609"
  },
  {
    "type": "paragraph",
    "content": "Most `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol.",
    "originalSentence": "Most `fs` operations accept file paths that may be specified in the form of\na string, a {Buffer}, or a {URL} object using the `file:` protocol.",
    "position": 9610,
    "id": "paragraph_9610"
  },
  {
    "type": "paragraph",
    "content": "String paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename. Relative paths will be resolved relative\nto the current working directory as determined by calling `process.cwd()`.",
    "originalSentence": "String paths are interpreted as UTF-8 character sequences identifying\nthe absolute or relative filename. Relative paths will be resolved relative\nto the current working directory as determined by calling `process.cwd()`.",
    "position": 9611,
    "id": "paragraph_9611"
  },
  {
    "type": "paragraph",
    "content": "Example using an absolute path on POSIX:",
    "originalSentence": "Example using an absolute path on POSIX:",
    "position": 9612,
    "id": "paragraph_9612"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 9613,
    "id": "paragraph_9613"
  },
  {
    "type": "paragraph",
    "content": "let fd;\ntry {\n  fd = await open('/open/some/file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}\n```",
    "originalSentence": "let fd;\ntry {\n  fd = await open('/open/some/file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}\n```",
    "position": 9614,
    "id": "paragraph_9614"
  },
  {
    "type": "paragraph",
    "content": "Example using a relative path on POSIX (relative to `process.cwd()`):",
    "originalSentence": "Example using a relative path on POSIX (relative to `process.cwd()`):",
    "position": 9615,
    "id": "paragraph_9615"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 9616,
    "id": "paragraph_9616"
  },
  {
    "type": "paragraph",
    "content": "let fd;\ntry {\n  fd = await open('file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}\n```",
    "originalSentence": "let fd;\ntry {\n  fd = await open('file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}\n```",
    "position": 9617,
    "id": "paragraph_9617"
  },
  {
    "type": "paragraph",
    "content": "<!-- YAML\nadded: v7.6.0\n-->",
    "originalSentence": "<!-- YAML\nadded: v7.6.0\n-->",
    "position": 9618,
    "id": "paragraph_9618"
  },
  {
    "type": "paragraph",
    "content": "For most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol.",
    "originalSentence": "For most `node:fs` module functions, the `path` or `filename` argument may be\npassed as a {URL} object using the `file:` protocol.",
    "position": 9619,
    "id": "paragraph_9619"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';",
    "position": 9620,
    "id": "paragraph_9620"
  },
  {
    "type": "paragraph",
    "content": "readFileSync(new URL('file:///tmp/hello'));\n```",
    "originalSentence": "readFileSync(new URL('file:///tmp/hello'));\n```",
    "position": 9621,
    "id": "paragraph_9621"
  },
  {
    "type": "paragraph",
    "content": "`file:` URLs are always absolute paths.",
    "originalSentence": "`file:` URLs are always absolute paths.",
    "position": 9622,
    "id": "paragraph_9622"
  },
  {
    "type": "paragraph",
    "content": "##### Platform-specific considerations",
    "originalSentence": "##### Platform-specific considerations",
    "position": 9623,
    "id": "paragraph_9623"
  },
  {
    "type": "paragraph",
    "content": "On Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths. `file:` {URL}s\nwith no host name and no drive letter will result in an error:",
    "originalSentence": "On Windows, `file:` {URL}s with a host name convert to UNC paths, while `file:`\n{URL}s with drive letters convert to local absolute paths. `file:` {URL}s\nwith no host name and no drive letter will result in an error:",
    "position": 9624,
    "id": "paragraph_9624"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';\n// On Windows :",
    "position": 9625,
    "id": "paragraph_9625"
  },
  {
    "type": "paragraph",
    "content": "// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));",
    "originalSentence": "// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));",
    "position": 9626,
    "id": "paragraph_9626"
  },
  {
    "type": "paragraph",
    "content": "// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));",
    "originalSentence": "// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));",
    "position": 9627,
    "id": "paragraph_9627"
  },
  {
    "type": "paragraph",
    "content": "// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```",
    "originalSentence": "// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute\n```",
    "position": 9628,
    "id": "paragraph_9628"
  },
  {
    "type": "paragraph",
    "content": "`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter. Using another separator will result in an error.",
    "originalSentence": "`file:` {URL}s with drive letters must use `:` as a separator just after\nthe drive letter. Using another separator will result in an error.",
    "position": 9629,
    "id": "paragraph_9629"
  },
  {
    "type": "paragraph",
    "content": "On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:",
    "originalSentence": "On all other platforms, `file:` {URL}s with a host name are unsupported and\nwill result in an error:",
    "position": 9630,
    "id": "paragraph_9630"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';\n// On other platforms:",
    "position": 9631,
    "id": "paragraph_9631"
  },
  {
    "type": "paragraph",
    "content": "// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute",
    "originalSentence": "// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute",
    "position": 9632,
    "id": "paragraph_9632"
  },
  {
    "type": "paragraph",
    "content": "// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```",
    "originalSentence": "// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));\n```",
    "position": 9633,
    "id": "paragraph_9633"
  },
  {
    "type": "paragraph",
    "content": "A `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:",
    "originalSentence": "A `file:` {URL} having encoded slash characters will result in an error on all\nplatforms:",
    "position": 9634,
    "id": "paragraph_9634"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';",
    "position": 9635,
    "id": "paragraph_9635"
  },
  {
    "type": "paragraph",
    "content": "// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */",
    "originalSentence": "// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */",
    "position": 9636,
    "id": "paragraph_9636"
  },
  {
    "type": "paragraph",
    "content": "// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```",
    "originalSentence": "// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */\n```",
    "position": 9637,
    "id": "paragraph_9637"
  },
  {
    "type": "paragraph",
    "content": "On Windows, `file:` {URL}s having encoded backslash will result in an error:",
    "originalSentence": "On Windows, `file:` {URL}s having encoded backslash will result in an error:",
    "position": 9638,
    "id": "paragraph_9638"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { readFileSync } from 'node:fs';",
    "originalSentence": "```mjs\nimport { readFileSync } from 'node:fs';",
    "position": 9639,
    "id": "paragraph_9639"
  },
  {
    "type": "paragraph",
    "content": "// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```",
    "originalSentence": "// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n```",
    "position": 9640,
    "id": "paragraph_9640"
  },
  {
    "type": "paragraph",
    "content": "Paths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences. On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings. As with string paths, {Buffer} paths may\nbe relative or absolute:",
    "originalSentence": "Paths specified using a {Buffer} are useful primarily on certain POSIX\noperating systems that treat file paths as opaque byte sequences. On such\nsystems, it is possible for a single file path to contain sub-sequences that\nuse multiple character encodings. As with string paths, {Buffer} paths may\nbe relative or absolute:",
    "position": 9641,
    "id": "paragraph_9641"
  },
  {
    "type": "paragraph",
    "content": "Example using an absolute path on POSIX:",
    "originalSentence": "Example using an absolute path on POSIX:",
    "position": 9642,
    "id": "paragraph_9642"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';",
    "position": 9643,
    "id": "paragraph_9643"
  },
  {
    "type": "paragraph",
    "content": "let fd;\ntry {\n  fd = await open(Buffer.from('/open/some/file.txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}\n```",
    "originalSentence": "let fd;\ntry {\n  fd = await open(Buffer.from('/open/some/file.txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}\n```",
    "position": 9644,
    "id": "paragraph_9644"
  },
  {
    "type": "paragraph",
    "content": "#### Per-drive working directories on Windows",
    "originalSentence": "#### Per-drive working directories on Windows",
    "position": 9645,
    "id": "paragraph_9645"
  },
  {
    "type": "paragraph",
    "content": "On Windows, Node.js follows the concept of per-drive working directory. This\nbehavior can be observed when using a drive path without a backslash. For\nexample `fs.readdirSync('C:\\\\')` can potentially return a different result than\n`fs.readdirSync('C:')`. For more information, see\n[this MSDN page][MSDN-Rel-Path].",
    "originalSentence": "On Windows, Node.js follows the concept of per-drive working directory. This\nbehavior can be observed when using a drive path without a backslash. For\nexample `fs.readdirSync('C:\\\\')` can potentially return a different result than\n`fs.readdirSync('C:')`. For more information, see\n[this MSDN page][MSDN-Rel-Path].",
    "position": 9646,
    "id": "paragraph_9646"
  },
  {
    "type": "paragraph",
    "content": "On POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources. Each open file is assigned a simple numeric\nidentifier called a _file descriptor_. At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile. Windows systems use a different but conceptually similar mechanism for\ntracking resources. To simplify things for users, Node.js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor.",
    "originalSentence": "On POSIX systems, for every process, the kernel maintains a table of currently\nopen files and resources. Each open file is assigned a simple numeric\nidentifier called a _file descriptor_. At the system-level, all file system\noperations use these file descriptors to identify and track each specific\nfile. Windows systems use a different but conceptually similar mechanism for\ntracking resources. To simplify things for users, Node.js abstracts away the\ndifferences between operating systems and assigns all open files a numeric file\ndescriptor.",
    "position": 9647,
    "id": "paragraph_9647"
  },
  {
    "type": "paragraph",
    "content": "The callback-based `fs.open()`, and synchronous `fs.openSync()` methods open a\nfile and allocate a new file descriptor. Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file.",
    "originalSentence": "The callback-based `fs.open()`, and synchronous `fs.openSync()` methods open a\nfile and allocate a new file descriptor. Once allocated, the file descriptor may\nbe used to read data from, write data to, or request information about the file.",
    "position": 9648,
    "id": "paragraph_9648"
  },
  {
    "type": "paragraph",
    "content": "Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed. Failure to do so will result in a memory leak that will\neventually cause an application to crash.",
    "originalSentence": "Operating systems limit the number of file descriptors that may be open\nat any given time so it is critical to close the descriptor when operations\nare completed. Failure to do so will result in a memory leak that will\neventually cause an application to crash.",
    "position": 9649,
    "id": "paragraph_9649"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open, close, fstat } from 'node:fs';",
    "originalSentence": "```mjs\nimport { open, close, fstat } from 'node:fs';",
    "position": 9650,
    "id": "paragraph_9650"
  },
  {
    "type": "paragraph",
    "content": "function closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}",
    "originalSentence": "function closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}",
    "position": 9651,
    "id": "paragraph_9651"
  },
  {
    "type": "paragraph",
    "content": "open('/open/some/file.txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }",
    "originalSentence": "open('/open/some/file.txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }",
    "position": 9652,
    "id": "paragraph_9652"
  },
  {
    "type": "paragraph",
    "content": "closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```",
    "originalSentence": "closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});\n```",
    "position": 9653,
    "id": "paragraph_9653"
  },
  {
    "type": "paragraph",
    "content": "The promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor. These objects are better managed by the system to ensure\nthat resources are not leaked. However, it is still required that they are\nclosed when operations are completed:",
    "originalSentence": "The promise-based APIs use a {FileHandle} object in place of the numeric\nfile descriptor. These objects are better managed by the system to ensure\nthat resources are not leaked. However, it is still required that they are\nclosed when operations are completed:",
    "position": 9654,
    "id": "paragraph_9654"
  },
  {
    "type": "paragraph",
    "content": "```mjs\nimport { open } from 'node:fs/promises';",
    "originalSentence": "```mjs\nimport { open } from 'node:fs/promises';",
    "position": 9655,
    "id": "paragraph_9655"
  },
  {
    "type": "paragraph",
    "content": "let file;\ntry {\n  file = await open('/open/some/file.txt', 'r');\n  const stat = await file.stat();\n  // use stat\n} finally {\n  await file.close();\n}\n```",
    "originalSentence": "let file;\ntry {\n  file = await open('/open/some/file.txt', 'r');\n  const stat = await file.stat();\n  // use stat\n} finally {\n  await file.close();\n}\n```",
    "position": 9656,
    "id": "paragraph_9656"
  },
  {
    "type": "paragraph",
    "content": "All callback and promise-based file system APIs (with the exception of\n`fs.FSWatcher()`) use libuv's threadpool. This can have surprising and negative\nperformance implications for some applications. See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information.",
    "originalSentence": "All callback and promise-based file system APIs (with the exception of\n`fs.FSWatcher()`) use libuv's threadpool. This can have surprising and negative\nperformance implications for some applications. See the\n[`UV_THREADPOOL_SIZE`][] documentation for more information.",
    "position": 9657,
    "id": "paragraph_9657"
  },
  {
    "type": "paragraph",
    "content": "### File system flags",
    "originalSentence": "### File system flags",
    "position": 9658,
    "id": "paragraph_9658"
  },
  {
    "type": "paragraph",
    "content": "The following flags are available wherever the `flag` option takes a\nstring.",
    "originalSentence": "The following flags are available wherever the `flag` option takes a\nstring.",
    "position": 9659,
    "id": "paragraph_9659"
  },
  {
    "type": "paragraph",
    "content": "* `'a'`: Open file for appending.\n  The file is created if it does not exist.",
    "originalSentence": "* `'a'`: Open file for appending.\n  The file is created if it does not exist.",
    "position": 9660,
    "id": "paragraph_9660"
  },
  {
    "type": "paragraph",
    "content": "* `'ax'`: Like `'a'` but fails if the path exists.",
    "originalSentence": "* `'ax'`: Like `'a'` but fails if the path exists.",
    "position": 9661,
    "id": "paragraph_9661"
  },
  {
    "type": "paragraph",
    "content": "* `'a+'`: Open file for reading and appending.\n  The file is created if it does not exist.",
    "originalSentence": "* `'a+'`: Open file for reading and appending.\n  The file is created if it does not exist.",
    "position": 9662,
    "id": "paragraph_9662"
  },
  {
    "type": "paragraph",
    "content": "* `'ax+'`: Like `'a+'` but fails if the path exists.",
    "originalSentence": "* `'ax+'`: Like `'a+'` but fails if the path exists.",
    "position": 9663,
    "id": "paragraph_9663"
  },
  {
    "type": "paragraph",
    "content": "* `'as'`: Open file for appending in synchronous mode.\n  The file is created if it does not exist.",
    "originalSentence": "* `'as'`: Open file for appending in synchronous mode.\n  The file is created if it does not exist.",
    "position": 9664,
    "id": "paragraph_9664"
  },
  {
    "type": "paragraph",
    "content": "* `'as+'`: Open file for reading and appending in synchronous mode.\n  The file is created if it does not exist.",
    "originalSentence": "* `'as+'`: Open file for reading and appending in synchronous mode.\n  The file is created if it does not exist.",
    "position": 9665,
    "id": "paragraph_9665"
  },
  {
    "type": "paragraph",
    "content": "* `'r'`: Open file for reading.\n  An exception occurs if the file does not exist.",
    "originalSentence": "* `'r'`: Open file for reading.\n  An exception occurs if the file does not exist.",
    "position": 9666,
    "id": "paragraph_9666"
  },
  {
    "type": "paragraph",
    "content": "* `'rs'`: Open file for reading in synchronous mode.\n  An exception occurs if the file does not exist.",
    "originalSentence": "* `'rs'`: Open file for reading in synchronous mode.\n  An exception occurs if the file does not exist.",
    "position": 9667,
    "id": "paragraph_9667"
  },
  {
    "type": "paragraph",
    "content": "* `'r+'`: Open file for reading and writing.\n  An exception occurs if the file does not exist.",
    "originalSentence": "* `'r+'`: Open file for reading and writing.\n  An exception occurs if the file does not exist.",
    "position": 9668,
    "id": "paragraph_9668"
  },
  {
    "type": "paragraph",
    "content": "* `'rs+'`: Open file for reading and writing in synchronous mode. Instructs\n  the operating system to bypass the local file system cache.",
    "originalSentence": "* `'rs+'`: Open file for reading and writing in synchronous mode. Instructs\n  the operating system to bypass the local file system cache.",
    "position": 9669,
    "id": "paragraph_9669"
  },
  {
    "type": "paragraph",
    "content": "This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache. It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed.",
    "originalSentence": "This is primarily useful for opening files on NFS mounts as it allows\n  skipping the potentially stale local cache. It has a very real impact on\n  I/O performance so using this flag is not recommended unless it is needed.",
    "position": 9670,
    "id": "paragraph_9670"
  },
  {
    "type": "paragraph",
    "content": "This doesn't turn `fs.open()` or `fsPromises.open()` into a synchronous\n  blocking call. If synchronous operation is desired, something like\n  `fs.openSync()` should be used.",
    "originalSentence": "This doesn't turn `fs.open()` or `fsPromises.open()` into a synchronous\n  blocking call. If synchronous operation is desired, something like\n  `fs.openSync()` should be used.",
    "position": 9671,
    "id": "paragraph_9671"
  },
  {
    "type": "paragraph",
    "content": "* `'w'`: Open file for writing.\n  The file is created (if it does not exist) or truncated (if it exists).",
    "originalSentence": "* `'w'`: Open file for writing.\n  The file is created (if it does not exist) or truncated (if it exists).",
    "position": 9672,
    "id": "paragraph_9672"
  },
  {
    "type": "paragraph",
    "content": "* `'wx'`: Like `'w'` but fails if the path exists.",
    "originalSentence": "* `'wx'`: Like `'w'` but fails if the path exists.",
    "position": 9673,
    "id": "paragraph_9673"
  },
  {
    "type": "paragraph",
    "content": "* `'w+'`: Open file for reading and writing.\n  The file is created (if it does not exist) or truncated (if it exists).",
    "originalSentence": "* `'w+'`: Open file for reading and writing.\n  The file is created (if it does not exist) or truncated (if it exists).",
    "position": 9674,
    "id": "paragraph_9674"
  },
  {
    "type": "paragraph",
    "content": "* `'wx+'`: Like `'w+'` but fails if the path exists.",
    "originalSentence": "* `'wx+'`: Like `'w+'` but fails if the path exists.",
    "position": 9675,
    "id": "paragraph_9675"
  },
  {
    "type": "paragraph",
    "content": "`flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs.constants`. On Windows, flags are translated to\ntheir equivalent ones where applicable, e.g. `O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`.",
    "originalSentence": "`flag` can also be a number as documented by open(2); commonly used constants\nare available from `fs.constants`. On Windows, flags are translated to\ntheir equivalent ones where applicable, e.g. `O_WRONLY` to `FILE_GENERIC_WRITE`,\nor `O_EXCL|O_CREAT` to `CREATE_NEW`, as accepted by `CreateFileW`.",
    "position": 9676,
    "id": "paragraph_9676"
  },
  {
    "type": "paragraph",
    "content": "The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists. On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist. The exclusive flag might not work with network file systems.",
    "originalSentence": "The exclusive flag `'x'` (`O_EXCL` flag in open(2)) causes the operation to\nreturn an error if the path already exists. On POSIX, if the path is a symbolic\nlink, using `O_EXCL` returns an error even if the link is to a path that does\nnot exist. The exclusive flag might not work with network file systems.",
    "position": 9677,
    "id": "paragraph_9677"
  },
  {
    "type": "paragraph",
    "content": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "originalSentence": "On Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file.",
    "position": 9678,
    "id": "paragraph_9678"
  },
  {
    "type": "paragraph",
    "content": "Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`.",
    "originalSentence": "Modifying a file rather than replacing it may require the `flag` option to be\nset to `'r+'` rather than the default `'w'`.",
    "position": 9679,
    "id": "paragraph_9679"
  },
  {
    "type": "paragraph",
    "content": "The behavior of some flags are platform-specific. As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror. In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned.",
    "originalSentence": "The behavior of some flags are platform-specific. As such, opening a directory\non macOS and Linux with the `'a+'` flag, as in the example below, will return an\nerror. In contrast, on Windows and FreeBSD, a file descriptor or a `FileHandle`\nwill be returned.",
    "position": 9680,
    "id": "paragraph_9680"
  },
  {
    "type": "paragraph",
    "content": "```js\n// macOS and Linux\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});",
    "originalSentence": "```js\n// macOS and Linux\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});",
    "position": 9681,
    "id": "paragraph_9681"
  },
  {
    "type": "paragraph",
    "content": "// Windows and FreeBSD\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```",
    "originalSentence": "// Windows and FreeBSD\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});\n```",
    "position": 9682,
    "id": "paragraph_9682"
  },
  {
    "type": "paragraph",
    "content": "On Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs.open()`, `fs.writeFile()`, or `fsPromises.open()`) will fail with\n`EPERM`. Existing hidden files can be opened for writing with the `'r+'` flag.",
    "originalSentence": "On Windows, opening an existing hidden file using the `'w'` flag (either\nthrough `fs.open()`, `fs.writeFile()`, or `fsPromises.open()`) will fail with\n`EPERM`. Existing hidden files can be opened for writing with the `'r+'` flag.",
    "position": 9683,
    "id": "paragraph_9683"
  },
  {
    "type": "paragraph",
    "content": "A call to `fs.ftruncate()` or `filehandle.truncate()` can be used to reset\nthe file contents.",
    "originalSentence": "A call to `fs.ftruncate()` or `filehandle.truncate()` can be used to reset\nthe file contents.",
    "position": 9684,
    "id": "paragraph_9684"
  },
  {
    "type": "paragraph",
    "content": "[#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors.md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer.byteLength`]: buffer.md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number.MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli.md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle.createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle.createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle.writeFile()`]: #filehandlewritefiledata-options\n[`fs.access()`]: #fsaccesspath-mode-callback\n[`fs.accessSync()`]: #fsaccesssyncpath-mode\n[`fs.chmod()`]: #fschmodpath-mode-callback\n[`fs.chown()`]: #fschownpath-uid-gid-callback\n[`fs.copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs.copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs.createReadStream()`]: #fscreatereadstreampath-options\n[`fs.createWriteStream()`]: #fscreatewritestreampath-options\n[`fs.exists()`]: #fsexistspath-callback\n[`fs.fstat()`]: #fsfstatfd-options-callback\n[`fs.ftruncate()`]: #fsftruncatefd-len-callback\n[`fs.futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs.lstat()`]: #fslstatpath-options-callback\n[`fs.lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs.mkdir()`]: #fsmkdirpath-options-callback\n[`fs.mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs.open()`]: #fsopenpath-flags-mode-callback\n[`fs.opendir()`]: #fsopendirpath-options-callback\n[`fs.opendirSync()`]: #fsopendirsyncpath-options\n[`fs.read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs.readFile()`]: #fsreadfilepath-options-callback\n[`fs.readFileSync()`]: #fsreadfilesyncpath-options\n[`fs.readdir()`]: #fsreaddirpath-options-callback\n[`fs.readdirSync()`]: #fsreaddirsyncpath-options\n[`fs.readv()`]: #fsreadvfd-buffers-position-callback\n[`fs.realpath()`]: #fsrealpathpath-options-callback\n[`fs.rm()`]: #fsrmpath-options-callback\n[`fs.rmSync()`]: #fsrmsyncpath-options\n[`fs.rmdir()`]: #fsrmdirpath-options-callback\n[`fs.stat()`]: #fsstatpath-options-callback\n[`fs.statfs()`]: #fsstatfspath-options-callback\n[`fs.symlink()`]: #fssymlinktarget-path-type-callback\n[`fs.utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs.watch()`]: #fswatchfilename-options-listener\n[`fs.write(fd, buffer...)`]: #fswritefd-buffer-offset-length-position-callback\n[`fs.write(fd, string...)`]: #fswritefd-string-position-encoding-callback\n[`fs.writeFile()`]: #fswritefilefile-data-options-callback\n[`fs.writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises.access()`]: #fspromisesaccesspath-mode\n[`fsPromises.copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises.mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises.open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises.opendir()`]: #fspromisesopendirpath-options\n[`fsPromises.rm()`]: #fspromisesrmpath-options\n[`fsPromises.stat()`]: #fspromisesstatpath-options\n[`fsPromises.utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util.promisify()`]: util.md#utilpromisifyoriginal\n[bigints]: https://tc39.github.io/proposal-bigint\n[caveats]: #caveats\n[chcp]: https://ss64.com/nt/chcp.html\n[inode]: https://en.wikipedia.org/wiki/Inode\n[support of file system `flags`]: #file-system-flags",
    "originalSentence": "[#25741]: https://github.com/nodejs/node/issues/25741\n[Common System Errors]: errors.md#common-system-errors\n[FS constants]: #fs-constants\n[File access constants]: #file-access-constants\n[MDN-Date]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[MDN-Number]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\n[MSDN-Rel-Path]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#fully-qualified-vs-relative-paths\n[MSDN-Using-Streams]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams\n[Naming Files, Paths, and Namespaces]: https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file\n[`AHAFS`]: https://developer.ibm.com/articles/au-aix_event_infrastructure/\n[`Buffer.byteLength`]: buffer.md#static-method-bufferbytelengthstring-encoding\n[`FSEvents`]: https://developer.apple.com/documentation/coreservices/file_system_events\n[`Number.MAX_SAFE_INTEGER`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n[`ReadDirectoryChangesW`]: https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-readdirectorychangesw\n[`UV_THREADPOOL_SIZE`]: cli.md#uv_threadpool_sizesize\n[`event ports`]: https://illumos.org/man/port_create\n[`filehandle.createReadStream()`]: #filehandlecreatereadstreamoptions\n[`filehandle.createWriteStream()`]: #filehandlecreatewritestreamoptions\n[`filehandle.writeFile()`]: #filehandlewritefiledata-options\n[`fs.access()`]: #fsaccesspath-mode-callback\n[`fs.accessSync()`]: #fsaccesssyncpath-mode\n[`fs.chmod()`]: #fschmodpath-mode-callback\n[`fs.chown()`]: #fschownpath-uid-gid-callback\n[`fs.copyFile()`]: #fscopyfilesrc-dest-mode-callback\n[`fs.copyFileSync()`]: #fscopyfilesyncsrc-dest-mode\n[`fs.createReadStream()`]: #fscreatereadstreampath-options\n[`fs.createWriteStream()`]: #fscreatewritestreampath-options\n[`fs.exists()`]: #fsexistspath-callback\n[`fs.fstat()`]: #fsfstatfd-options-callback\n[`fs.ftruncate()`]: #fsftruncatefd-len-callback\n[`fs.futimes()`]: #fsfutimesfd-atime-mtime-callback\n[`fs.lstat()`]: #fslstatpath-options-callback\n[`fs.lutimes()`]: #fslutimespath-atime-mtime-callback\n[`fs.mkdir()`]: #fsmkdirpath-options-callback\n[`fs.mkdtemp()`]: #fsmkdtempprefix-options-callback\n[`fs.open()`]: #fsopenpath-flags-mode-callback\n[`fs.opendir()`]: #fsopendirpath-options-callback\n[`fs.opendirSync()`]: #fsopendirsyncpath-options\n[`fs.read()`]: #fsreadfd-buffer-offset-length-position-callback\n[`fs.readFile()`]: #fsreadfilepath-options-callback\n[`fs.readFileSync()`]: #fsreadfilesyncpath-options\n[`fs.readdir()`]: #fsreaddirpath-options-callback\n[`fs.readdirSync()`]: #fsreaddirsyncpath-options\n[`fs.readv()`]: #fsreadvfd-buffers-position-callback\n[`fs.realpath()`]: #fsrealpathpath-options-callback\n[`fs.rm()`]: #fsrmpath-options-callback\n[`fs.rmSync()`]: #fsrmsyncpath-options\n[`fs.rmdir()`]: #fsrmdirpath-options-callback\n[`fs.stat()`]: #fsstatpath-options-callback\n[`fs.statfs()`]: #fsstatfspath-options-callback\n[`fs.symlink()`]: #fssymlinktarget-path-type-callback\n[`fs.utimes()`]: #fsutimespath-atime-mtime-callback\n[`fs.watch()`]: #fswatchfilename-options-listener\n[`fs.write(fd, buffer...)`]: #fswritefd-buffer-offset-length-position-callback\n[`fs.write(fd, string...)`]: #fswritefd-string-position-encoding-callback\n[`fs.writeFile()`]: #fswritefilefile-data-options-callback\n[`fs.writev()`]: #fswritevfd-buffers-position-callback\n[`fsPromises.access()`]: #fspromisesaccesspath-mode\n[`fsPromises.copyFile()`]: #fspromisescopyfilesrc-dest-mode\n[`fsPromises.mkdtemp()`]: #fspromisesmkdtempprefix-options\n[`fsPromises.open()`]: #fspromisesopenpath-flags-mode\n[`fsPromises.opendir()`]: #fspromisesopendirpath-options\n[`fsPromises.rm()`]: #fspromisesrmpath-options\n[`fsPromises.stat()`]: #fspromisesstatpath-options\n[`fsPromises.utimes()`]: #fspromisesutimespath-atime-mtime\n[`inotify(7)`]: https://man7.org/linux/man-pages/man7/inotify.7.html\n[`kqueue(2)`]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2\n[`util.promisify()`]: util.md#utilpromisifyoriginal\n[bigints]: https://tc39.github.io/proposal-bigint\n[caveats]: #caveats\n[chcp]: https://ss64.com/nt/chcp.html\n[inode]: https://en.wikipedia.org/wiki/Inode\n[support of file system `flags`]: #file-system-flags",
    "position": 9685,
    "id": "paragraph_9685"
  },
  {
    "type": "code_block",
    "content": "import * as fs from 'node:fs/promises';",
    "language": "mjs",
    "originalSentence": "import * as fs from 'node:fs/promises';",
    "position": 9686,
    "id": "code_block_9686"
  },
  {
    "type": "code_block",
    "content": "const fs = require('node:fs/promises');",
    "language": "cjs",
    "originalSentence": "const fs = require('node:fs/promises');",
    "position": 9687,
    "id": "code_block_9687"
  },
  {
    "type": "code_block",
    "content": "import * as fs from 'node:fs';",
    "language": "mjs",
    "originalSentence": "import * as fs from 'node:fs';",
    "position": 9688,
    "id": "code_block_9688"
  },
  {
    "type": "code_block",
    "content": "const fs = require('node:fs');",
    "language": "cjs",
    "originalSentence": "const fs = require('node:fs');",
    "position": 9689,
    "id": "code_block_9689"
  },
  {
    "type": "code_block",
    "content": "import { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.error('there was an error:', error.message);\n}",
    "language": "mjs",
    "originalSentence": "import { unlink } from 'node:fs/promises';\n\ntry {\n  await unlink('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (error) {\n  console.error('there was an error:', error.message);\n}",
    "position": 9690,
    "id": "code_block_9690"
  },
  {
    "type": "code_block",
    "content": "const { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console.log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello');",
    "language": "cjs",
    "originalSentence": "const { unlink } = require('node:fs/promises');\n\n(async function(path) {\n  try {\n    await unlink(path);\n    console.log(`successfully deleted ${path}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello');",
    "position": 9691,
    "id": "code_block_9691"
  },
  {
    "type": "code_block",
    "content": "import { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});",
    "language": "mjs",
    "originalSentence": "import { unlink } from 'node:fs';\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});",
    "position": 9692,
    "id": "code_block_9692"
  },
  {
    "type": "code_block",
    "content": "const { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});",
    "language": "cjs",
    "originalSentence": "const { unlink } = require('node:fs');\n\nunlink('/tmp/hello', (err) => {\n  if (err) throw err;\n  console.log('successfully deleted /tmp/hello');\n});",
    "position": 9693,
    "id": "code_block_9693"
  },
  {
    "type": "code_block",
    "content": "import { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}",
    "language": "mjs",
    "originalSentence": "import { unlinkSync } from 'node:fs';\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}",
    "position": 9694,
    "id": "code_block_9694"
  },
  {
    "type": "code_block",
    "content": "const { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}",
    "language": "cjs",
    "originalSentence": "const { unlinkSync } = require('node:fs');\n\ntry {\n  unlinkSync('/tmp/hello');\n  console.log('successfully deleted /tmp/hello');\n} catch (err) {\n  // handle the error\n}",
    "position": 9695,
    "id": "code_block_9695"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.txt', 'r');\n} finally {\n  await filehandle?.close();\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.txt', 'r');\n} finally {\n  await filehandle?.close();\n}",
    "position": 9696,
    "id": "code_block_9696"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.\nconst stream = fd.createReadStream();\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.\nconst stream = fd.createReadStream();\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);",
    "position": 9697,
    "id": "code_block_9697"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nconst fd = await open('sample.txt');\nfd.createReadStream({ start: 90, end: 99 });",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nconst fd = await open('sample.txt');\nfd.createReadStream({ start: 90, end: 99 });",
    "position": 9698,
    "id": "code_block_9698"
  },
  {
    "type": "code_block",
    "content": "import {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('./some/file/to/read');\n\nfor await (const chunk of file.readableWebStream())\n  console.log(chunk);\n\nawait file.close();",
    "language": "mjs",
    "originalSentence": "import {\n  open,\n} from 'node:fs/promises';\n\nconst file = await open('./some/file/to/read');\n\nfor await (const chunk of file.readableWebStream())\n  console.log(chunk);\n\nawait file.close();",
    "position": 9699,
    "id": "code_block_9699"
  },
  {
    "type": "code_block",
    "content": "const {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('./some/file/to/read');\n\n  for await (const chunk of file.readableWebStream())\n    console.log(chunk);\n\n  await file.close();\n})();",
    "language": "cjs",
    "originalSentence": "const {\n  open,\n} = require('node:fs/promises');\n\n(async () => {\n  const file = await open('./some/file/to/read');\n\n  for await (const chunk of file.readableWebStream())\n    console.log(chunk);\n\n  await file.close();\n})();",
    "position": 9700,
    "id": "code_block_9700"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nconst file = await open('./some/file/to/read');\n\nfor await (const line of file.readLines()) {\n  console.log(line);\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nconst file = await open('./some/file/to/read');\n\nfor await (const line of file.readLines()) {\n  console.log(line);\n}",
    "position": 9701,
    "id": "code_block_9701"
  },
  {
    "type": "code_block",
    "content": "const { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('./some/file/to/read');\n\n  for await (const line of file.readLines()) {\n    console.log(line);\n  }\n})();",
    "language": "cjs",
    "originalSentence": "const { open } = require('node:fs/promises');\n\n(async () => {\n  const file = await open('./some/file/to/read');\n\n  for await (const line of file.readLines()) {\n    console.log(line);\n  }\n})();",
    "position": 9702,
    "id": "code_block_9702"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.txt', 'r+');\n  await filehandle.truncate(4);\n} finally {\n  await filehandle?.close();\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.txt', 'r+');\n  await filehandle.truncate(4);\n} finally {\n  await filehandle?.close();\n}",
    "position": 9703,
    "id": "code_block_9703"
  },
  {
    "type": "code_block",
    "content": "import { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can access');\n} catch {\n  console.error('cannot access');\n}",
    "language": "mjs",
    "originalSentence": "import { access, constants } from 'node:fs/promises';\n\ntry {\n  await access('/etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can access');\n} catch {\n  console.error('cannot access');\n}",
    "position": 9704,
    "id": "code_block_9704"
  },
  {
    "type": "code_block",
    "content": "import { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source.txt', 'destination.txt');\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ntry {\n  await copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}",
    "language": "mjs",
    "originalSentence": "import { copyFile, constants } from 'node:fs/promises';\n\ntry {\n  await copyFile('source.txt', 'destination.txt');\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ntry {\n  await copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.error('The file could not be copied');\n}",
    "position": 9705,
    "id": "code_block_9705"
  },
  {
    "type": "code_block",
    "content": "import { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*.js'))\n  console.log(entry);",
    "language": "mjs",
    "originalSentence": "import { glob } from 'node:fs/promises';\n\nfor await (const entry of glob('**/*.js'))\n  console.log(entry);",
    "position": 9706,
    "id": "code_block_9706"
  },
  {
    "type": "code_block",
    "content": "const { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*.js'))\n    console.log(entry);\n})();",
    "language": "cjs",
    "originalSentence": "const { glob } = require('node:fs/promises');\n\n(async () => {\n  for await (const entry of glob('**/*.js'))\n    console.log(entry);\n})();",
    "position": 9707,
    "id": "code_block_9707"
  },
  {
    "type": "code_block",
    "content": "import { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('./test/project/', import.meta.url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console.log(`created ${createDir}`);\n} catch (err) {\n  console.error(err.message);\n}",
    "language": "mjs",
    "originalSentence": "import { mkdir } from 'node:fs/promises';\n\ntry {\n  const projectFolder = new URL('./test/project/', import.meta.url);\n  const createDir = await mkdir(projectFolder, { recursive: true });\n\n  console.log(`created ${createDir}`);\n} catch (err) {\n  console.error(err.message);\n}",
    "position": 9708,
    "id": "code_block_9708"
  },
  {
    "type": "code_block",
    "content": "const { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console.log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory().catch(console.error);",
    "language": "cjs",
    "originalSentence": "const { mkdir } = require('node:fs/promises');\nconst { join } = require('node:path');\n\nasync function makeDirectory() {\n  const projectFolder = join(__dirname, 'test', 'project');\n  const dirCreation = await mkdir(projectFolder, { recursive: true });\n\n  console.log(dirCreation);\n  return dirCreation;\n}\n\nmakeDirectory().catch(console.error);",
    "position": 9709,
    "id": "code_block_9709"
  },
  {
    "type": "code_block",
    "content": "import { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.error(err);\n}",
    "language": "mjs",
    "originalSentence": "import { mkdtemp } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\ntry {\n  await mkdtemp(join(tmpdir(), 'foo-'));\n} catch (err) {\n  console.error(err);\n}",
    "position": 9710,
    "id": "code_block_9710"
  },
  {
    "type": "code_block",
    "content": "import { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}",
    "language": "mjs",
    "originalSentence": "import { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}",
    "position": 9711,
    "id": "code_block_9711"
  },
  {
    "type": "code_block",
    "content": "import { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.log(file);\n} catch (err) {\n  console.error(err);\n}",
    "language": "mjs",
    "originalSentence": "import { readdir } from 'node:fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.log(file);\n} catch (err) {\n  console.error(err);\n}",
    "position": 9712,
    "id": "code_block_9712"
  },
  {
    "type": "code_block",
    "content": "import { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('./package.json', import.meta.url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.log(contents);\n} catch (err) {\n  console.error(err.message);\n}",
    "language": "mjs",
    "originalSentence": "import { readFile } from 'node:fs/promises';\ntry {\n  const filePath = new URL('./package.json', import.meta.url);\n  const contents = await readFile(filePath, { encoding: 'utf8' });\n  console.log(contents);\n} catch (err) {\n  console.error(err.message);\n}",
    "position": 9713,
    "id": "code_block_9713"
  },
  {
    "type": "code_block",
    "content": "const { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('./package.json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.log(contents);\n  } catch (err) {\n    console.error(err.message);\n  }\n}\nlogFile();",
    "language": "cjs",
    "originalSentence": "const { readFile } = require('node:fs/promises');\nconst { resolve } = require('node:path');\nasync function logFile() {\n  try {\n    const filePath = resolve('./package.json');\n    const contents = await readFile(filePath, { encoding: 'utf8' });\n    console.log(contents);\n  } catch (err) {\n    console.error(err.message);\n  }\n}\nlogFile();",
    "position": 9714,
    "id": "code_block_9714"
  },
  {
    "type": "code_block",
    "content": "import { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.\n  controller.abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}",
    "language": "mjs",
    "originalSentence": "import { readFile } from 'node:fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.\n  controller.abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}",
    "position": 9715,
    "id": "code_block_9715"
  },
  {
    "type": "code_block",
    "content": "const { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.log(event);\n  } catch (err) {\n    if (err.name === 'AbortError')\n      return;\n    throw err;\n  }\n})();",
    "language": "js",
    "originalSentence": "const { watch } = require('node:fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.log(event);\n  } catch (err) {\n    if (err.name === 'AbortError')\n      return;\n    throw err;\n  }\n})();",
    "position": 9716,
    "id": "code_block_9716"
  },
  {
    "type": "code_block",
    "content": "import { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.from('Hello Node.js'));\n  const promise = writeFile('message.txt', data, { signal });\n\n  // Abort the request before the promise settles.\n  controller.abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}",
    "language": "mjs",
    "originalSentence": "import { writeFile } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.from('Hello Node.js'));\n  const promise = writeFile('message.txt', data, { signal });\n\n  // Abort the request before the promise settles.\n  controller.abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}",
    "position": 9717,
    "id": "code_block_9717"
  },
  {
    "type": "code_block",
    "content": "import { access, constants } from 'node:fs';\n\nconst file = 'package.json';\n\n// Check if the file exists in the current directory.\naccess(file, constants.F_OK, (err) => {\n  console.log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.\naccess(file, constants.R_OK, (err) => {\n  console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.\naccess(file, constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable.\naccess(file, constants.R_OK | constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});",
    "language": "mjs",
    "originalSentence": "import { access, constants } from 'node:fs';\n\nconst file = 'package.json';\n\n// Check if the file exists in the current directory.\naccess(file, constants.F_OK, (err) => {\n  console.log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.\naccess(file, constants.R_OK, (err) => {\n  console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.\naccess(file, constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file is readable and writable.\naccess(file, constants.R_OK | constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not' : 'is'} readable and writable`);\n});",
    "position": 9718,
    "id": "code_block_9718"
  },
  {
    "type": "code_block",
    "content": "import { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (!err) {\n    console.error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});",
    "language": "mjs",
    "originalSentence": "import { access, open, close } from 'node:fs';\n\naccess('myfile', (err) => {\n  if (!err) {\n    console.error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});",
    "position": 9719,
    "id": "code_block_9719"
  },
  {
    "type": "code_block",
    "content": "import { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close } from 'node:fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "position": 9720,
    "id": "code_block_9720"
  },
  {
    "type": "code_block",
    "content": "import { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});",
    "language": "mjs",
    "originalSentence": "import { access, open, close } from 'node:fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});",
    "position": 9721,
    "id": "code_block_9721"
  },
  {
    "type": "code_block",
    "content": "import { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "position": 9722,
    "id": "code_block_9722"
  },
  {
    "type": "code_block",
    "content": "import { appendFile } from 'node:fs';\n\nappendFile('message.txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.log('The \"data to append\" was appended to file!');\n});",
    "language": "mjs",
    "originalSentence": "import { appendFile } from 'node:fs';\n\nappendFile('message.txt', 'data to append', (err) => {\n  if (err) throw err;\n  console.log('The \"data to append\" was appended to file!');\n});",
    "position": 9723,
    "id": "code_block_9723"
  },
  {
    "type": "code_block",
    "content": "import { appendFile } from 'node:fs';\n\nappendFile('message.txt', 'data to append', 'utf8', callback);",
    "language": "mjs",
    "originalSentence": "import { appendFile } from 'node:fs';\n\nappendFile('message.txt', 'data to append', 'utf8', callback);",
    "position": 9724,
    "id": "code_block_9724"
  },
  {
    "type": "code_block",
    "content": "import { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message.txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close, appendFile } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('message.txt', 'a', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    appendFile(fd, 'data to append', 'utf8', (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});",
    "position": 9725,
    "id": "code_block_9725"
  },
  {
    "type": "code_block",
    "content": "import { chmod } from 'node:fs';\n\nchmod('my_file.txt', 0o775, (err) => {\n  if (err) throw err;\n  console.log('The permissions for file \"my_file.txt\" have been changed!');\n});",
    "language": "mjs",
    "originalSentence": "import { chmod } from 'node:fs';\n\nchmod('my_file.txt', 0o775, (err) => {\n  if (err) throw err;\n  console.log('The permissions for file \"my_file.txt\" have been changed!');\n});",
    "position": 9726,
    "id": "code_block_9726"
  },
  {
    "type": "code_block",
    "content": "import { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console.log('source.txt was copied to destination.txt');\n}\n\n// destination.txt will be created or overwritten by default.\ncopyFile('source.txt', 'destination.txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL, callback);",
    "language": "mjs",
    "originalSentence": "import { copyFile, constants } from 'node:fs';\n\nfunction callback(err) {\n  if (err) throw err;\n  console.log('source.txt was copied to destination.txt');\n}\n\n// destination.txt will be created or overwritten by default.\ncopyFile('source.txt', 'destination.txt', callback);\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL, callback);",
    "position": 9727,
    "id": "code_block_9727"
  },
  {
    "type": "code_block",
    "content": "import { createReadStream } from 'node:fs';\n\n// Create a stream from some character device.\nconst stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);",
    "language": "mjs",
    "originalSentence": "import { createReadStream } from 'node:fs';\n\n// Create a stream from some character device.\nconst stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);",
    "position": 9728,
    "id": "code_block_9728"
  },
  {
    "type": "code_block",
    "content": "import { createReadStream } from 'node:fs';\n\ncreateReadStream('sample.txt', { start: 90, end: 99 });",
    "language": "mjs",
    "originalSentence": "import { createReadStream } from 'node:fs';\n\ncreateReadStream('sample.txt', { start: 90, end: 99 });",
    "position": 9729,
    "id": "code_block_9729"
  },
  {
    "type": "code_block",
    "content": "import { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console.log(e ? 'it exists' : 'no passwd!');\n});",
    "language": "mjs",
    "originalSentence": "import { exists } from 'node:fs';\n\nexists('/etc/passwd', (e) => {\n  console.log(e ? 'it exists' : 'no passwd!');\n});",
    "position": 9730,
    "id": "code_block_9730"
  },
  {
    "type": "code_block",
    "content": "import { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { exists, open, close } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});",
    "position": 9731,
    "id": "code_block_9731"
  },
  {
    "type": "code_block",
    "content": "import { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close } from 'node:fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "position": 9732,
    "id": "code_block_9732"
  },
  {
    "type": "code_block",
    "content": "import { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.error('myfile does not exist');\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close, exists } from 'node:fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.error('myfile does not exist');\n  }\n});",
    "position": 9733,
    "id": "code_block_9733"
  },
  {
    "type": "code_block",
    "content": "import { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close } from 'node:fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});",
    "position": 9734,
    "id": "code_block_9734"
  },
  {
    "type": "code_block",
    "content": "import { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp.txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close, ftruncate } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('temp.txt', 'r+', (err, fd) => {\n  if (err) throw err;\n\n  try {\n    ftruncate(fd, 4, (err) => {\n      closeFd(fd);\n      if (err) throw err;\n    });\n  } catch (err) {\n    closeFd(fd);\n    if (err) throw err;\n  }\n});",
    "position": 9735,
    "id": "code_block_9735"
  },
  {
    "type": "code_block",
    "content": "import { glob } from 'node:fs';\n\nglob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});",
    "language": "mjs",
    "originalSentence": "import { glob } from 'node:fs';\n\nglob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});",
    "position": 9736,
    "id": "code_block_9736"
  },
  {
    "type": "code_block",
    "content": "const { glob } = require('node:fs');\n\nglob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});",
    "language": "cjs",
    "originalSentence": "const { glob } = require('node:fs');\n\nglob('**/*.js', (err, matches) => {\n  if (err) throw err;\n  console.log(matches);\n});",
    "position": 9737,
    "id": "code_block_9737"
  },
  {
    "type": "code_block",
    "content": "import { mkdir } from 'node:fs';\n\n// Create ./tmp/a/apple, regardless of whether ./tmp and ./tmp/a exist.\nmkdir('./tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});",
    "language": "mjs",
    "originalSentence": "import { mkdir } from 'node:fs';\n\n// Create ./tmp/a/apple, regardless of whether ./tmp and ./tmp/a exist.\nmkdir('./tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});",
    "position": 9738,
    "id": "code_block_9738"
  },
  {
    "type": "code_block",
    "content": "import { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});",
    "language": "mjs",
    "originalSentence": "import { mkdir } from 'node:fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});",
    "position": 9739,
    "id": "code_block_9739"
  },
  {
    "type": "code_block",
    "content": "import { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...\\AppData\\Local\\Temp\\foo-itXde2\n});",
    "language": "mjs",
    "originalSentence": "import { mkdtemp } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nmkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Prints: /tmp/foo-itXde2 or C:\\Users\\...\\AppData\\Local\\Temp\\foo-itXde2\n});",
    "position": 9740,
    "id": "code_block_9740"
  },
  {
    "type": "code_block",
    "content": "import { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmpabc123`.\n  // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.\n});\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmp/abc123`.\n  // A new temporary directory is created within\n  // the /tmp directory.\n});",
    "language": "mjs",
    "originalSentence": "import { tmpdir } from 'node:os';\nimport { mkdtemp } from 'node:fs';\n\n// The parent directory for the new temporary directory\nconst tmpDir = tmpdir();\n\n// This method is *INCORRECT*:\nmkdtemp(tmpDir, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmpabc123`.\n  // A new temporary directory is created at the file system root\n  // rather than *within* the /tmp directory.\n});\n\n// This method is *CORRECT*:\nimport { sep } from 'node:path';\nmkdtemp(`${tmpDir}${sep}`, (err, directory) => {\n  if (err) throw err;\n  console.log(directory);\n  // Will print something similar to `/tmp/abc123`.\n  // A new temporary directory is created within\n  // the /tmp directory.\n});",
    "position": 9741,
    "id": "code_block_9741"
  },
  {
    "type": "code_block",
    "content": "import { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the.file.txt');\nconst ab = await blob.arrayBuffer();\nblob.stream();",
    "language": "mjs",
    "originalSentence": "import { openAsBlob } from 'node:fs';\n\nconst blob = await openAsBlob('the.file.txt');\nconst ab = await blob.arrayBuffer();\nblob.stream();",
    "position": 9742,
    "id": "code_block_9742"
  },
  {
    "type": "code_block",
    "content": "const { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the.file.txt');\n  const ab = await blob.arrayBuffer();\n  blob.stream();\n})();",
    "language": "cjs",
    "originalSentence": "const { openAsBlob } = require('node:fs');\n\n(async () => {\n  const blob = await openAsBlob('the.file.txt');\n  const ab = await blob.arrayBuffer();\n  blob.stream();\n})();",
    "position": 9743,
    "id": "code_block_9743"
  },
  {
    "type": "code_block",
    "content": "import { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});",
    "language": "mjs",
    "originalSentence": "import { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});",
    "position": 9744,
    "id": "code_block_9744"
  },
  {
    "type": "code_block",
    "content": "import { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);",
    "language": "mjs",
    "originalSentence": "import { readFile } from 'node:fs';\n\nreadFile('/etc/passwd', 'utf8', callback);",
    "position": 9745,
    "id": "code_block_9745"
  },
  {
    "type": "code_block",
    "content": "import { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});",
    "language": "mjs",
    "originalSentence": "import { readFile } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFile('<directory>', (err, data) => {\n  // => [Error: EISDIR: illegal operation on a directory, read <directory>]\n});\n\n//  FreeBSD\nreadFile('<directory>', (err, data) => {\n  // => null, <data>\n});",
    "position": 9746,
    "id": "code_block_9746"
  },
  {
    "type": "code_block",
    "content": "import { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller.signal;\nreadFile(fileInfo[0].name, { signal }, (err, buf) => {\n  // ...\n});\n// When you want to abort the request\ncontroller.abort();",
    "language": "mjs",
    "originalSentence": "import { readFile } from 'node:fs';\n\nconst controller = new AbortController();\nconst signal = controller.signal;\nreadFile(fileInfo[0].name, { signal }, (err, buf) => {\n  // ...\n});\n// When you want to abort the request\ncontroller.abort();",
    "position": 9747,
    "id": "code_block_9747"
  },
  {
    "type": "code_block",
    "content": "import { rename } from 'node:fs';\n\nrename('oldFile.txt', 'newFile.txt', (err) => {\n  if (err) throw err;\n  console.log('Rename complete!');\n});",
    "language": "mjs",
    "originalSentence": "import { rename } from 'node:fs';\n\nrename('oldFile.txt', 'newFile.txt', (err) => {\n  if (err) throw err;\n  console.log('Rename complete!');\n});",
    "position": 9748,
    "id": "code_block_9748"
  },
  {
    "type": "code_block",
    "content": "- txtDir\n-- file.txt\n- app.js",
    "language": "text",
    "originalSentence": "- txtDir\n-- file.txt\n- app.js",
    "position": 9749,
    "id": "code_block_9749"
  },
  {
    "type": "code_block",
    "content": "import { stat } from 'node:fs';\n\nconst pathsToCheck = ['./txtDir', './txtDir/file.txt'];\n\nfor (let i = 0; i < pathsToCheck.length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.log(stats.isDirectory());\n    console.log(stats);\n  });\n}",
    "language": "mjs",
    "originalSentence": "import { stat } from 'node:fs';\n\nconst pathsToCheck = ['./txtDir', './txtDir/file.txt'];\n\nfor (let i = 0; i < pathsToCheck.length; i++) {\n  stat(pathsToCheck[i], (err, stats) => {\n    console.log(stats.isDirectory());\n    console.log(stats);\n  });\n}",
    "position": 9750,
    "id": "code_block_9750"
  },
  {
    "type": "code_block",
    "content": "true\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.963,\n  mtimeMs: 1561174614583.3518,\n  ctimeMs: 1561174626623.5366,\n  birthtimeMs: 1561174126937.2893,\n  atime: 2019-06-22T03:37:33.072Z,\n  mtime: 2019-06-22T03:36:54.583Z,\n  ctime: 2019-06-22T03:37:06.624Z,\n  birthtime: 2019-06-22T03:28:46.937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.8145,\n  birthtimeMs: 1561174007710.7478,\n  atime: 2019-06-22T03:36:56.619Z,\n  mtime: 2019-06-22T03:36:54.584Z,\n  ctime: 2019-06-22T03:36:54.584Z,\n  birthtime: 2019-06-22T03:26:47.711Z\n}",
    "language": "console",
    "originalSentence": "true\nStats {\n  dev: 16777220,\n  mode: 16877,\n  nlink: 3,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214262,\n  size: 96,\n  blocks: 0,\n  atimeMs: 1561174653071.963,\n  mtimeMs: 1561174614583.3518,\n  ctimeMs: 1561174626623.5366,\n  birthtimeMs: 1561174126937.2893,\n  atime: 2019-06-22T03:37:33.072Z,\n  mtime: 2019-06-22T03:36:54.583Z,\n  ctime: 2019-06-22T03:37:06.624Z,\n  birthtime: 2019-06-22T03:28:46.937Z\n}\nfalse\nStats {\n  dev: 16777220,\n  mode: 33188,\n  nlink: 1,\n  uid: 501,\n  gid: 20,\n  rdev: 0,\n  blksize: 4096,\n  ino: 14214074,\n  size: 8,\n  blocks: 8,\n  atimeMs: 1561174616618.8555,\n  mtimeMs: 1561174614584,\n  ctimeMs: 1561174614583.8145,\n  birthtimeMs: 1561174007710.7478,\n  atime: 2019-06-22T03:36:56.619Z,\n  mtime: 2019-06-22T03:36:54.584Z,\n  ctime: 2019-06-22T03:36:54.584Z,\n  birthtime: 2019-06-22T03:26:47.711Z\n}",
    "position": 9751,
    "id": "code_block_9751"
  },
  {
    "type": "code_block",
    "content": "import { symlink } from 'node:fs';\n\nsymlink('./mew', './mewtwo', callback);",
    "language": "mjs",
    "originalSentence": "import { symlink } from 'node:fs';\n\nsymlink('./mew', './mewtwo', callback);",
    "position": 9752,
    "id": "code_block_9752"
  },
  {
    "type": "code_block",
    "content": "$ tree .\n.\n├── mew\n└── mewtwo -> ./mew",
    "language": "bash",
    "originalSentence": "$ tree .\n.\n├── mew\n└── mewtwo -> ./mew",
    "position": 9753,
    "id": "code_block_9753"
  },
  {
    "type": "code_block",
    "content": "import { truncate } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});",
    "language": "mjs",
    "originalSentence": "import { truncate } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});",
    "position": 9754,
    "id": "code_block_9754"
  },
  {
    "type": "code_block",
    "content": "const { truncate } = require('node:fs');\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});",
    "language": "cjs",
    "originalSentence": "const { truncate } = require('node:fs');\n// Assuming that 'path/file.txt' is a regular file.\ntruncate('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was truncated');\n});",
    "position": 9755,
    "id": "code_block_9755"
  },
  {
    "type": "code_block",
    "content": "import { unlink } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\nunlink('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was deleted');\n});",
    "language": "mjs",
    "originalSentence": "import { unlink } from 'node:fs';\n// Assuming that 'path/file.txt' is a regular file.\nunlink('path/file.txt', (err) => {\n  if (err) throw err;\n  console.log('path/file.txt was deleted');\n});",
    "position": 9756,
    "id": "code_block_9756"
  },
  {
    "type": "code_block",
    "content": "import { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.log(`event type is: ${eventType}`);\n  if (filename) {\n    console.log(`filename provided: ${filename}`);\n  } else {\n    console.log('filename not provided');\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { watch } from 'node:fs';\nwatch('somedir', (eventType, filename) => {\n  console.log(`event type is: ${eventType}`);\n  if (filename) {\n    console.log(`filename provided: ${filename}`);\n  } else {\n    console.log('filename not provided');\n  }\n});",
    "position": 9757,
    "id": "code_block_9757"
  },
  {
    "type": "code_block",
    "content": "import { watchFile } from 'node:fs';\n\nwatchFile('message.text', (curr, prev) => {\n  console.log(`the current mtime is: ${curr.mtime}`);\n  console.log(`the previous mtime was: ${prev.mtime}`);\n});",
    "language": "mjs",
    "originalSentence": "import { watchFile } from 'node:fs';\n\nwatchFile('message.text', (curr, prev) => {\n  console.log(`the current mtime is: ${curr.mtime}`);\n  console.log(`the previous mtime was: ${prev.mtime}`);\n});",
    "position": 9758,
    "id": "code_block_9758"
  },
  {
    "type": "code_block",
    "content": "import { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, (err) => {\n  if (err) throw err;\n  console.log('The file has been saved!');\n});",
    "language": "mjs",
    "originalSentence": "import { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, (err) => {\n  if (err) throw err;\n  console.log('The file has been saved!');\n});",
    "position": 9759,
    "id": "code_block_9759"
  },
  {
    "type": "code_block",
    "content": "import { writeFile } from 'node:fs';\n\nwriteFile('message.txt', 'Hello Node.js', 'utf8', callback);",
    "language": "mjs",
    "originalSentence": "import { writeFile } from 'node:fs';\n\nwriteFile('message.txt', 'Hello Node.js', 'utf8', callback);",
    "position": 9760,
    "id": "code_block_9760"
  },
  {
    "type": "code_block",
    "content": "import { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.abort();",
    "language": "mjs",
    "originalSentence": "import { writeFile } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nconst controller = new AbortController();\nconst { signal } = controller;\nconst data = new Uint8Array(Buffer.from('Hello Node.js'));\nwriteFile('message.txt', data, { signal }, (err) => {\n  // When a request is aborted - the callback is called with an AbortError\n});\n// When the request should be aborted\ncontroller.abort();",
    "position": 9761,
    "id": "code_block_9761"
  },
  {
    "type": "code_block",
    "content": "import { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer.from(data, options.encoding), callback);",
    "language": "mjs",
    "originalSentence": "import { write } from 'node:fs';\nimport { Buffer } from 'node:buffer';\n\nwrite(fd, Buffer.from(data, options.encoding), callback);",
    "position": 9762,
    "id": "code_block_9762"
  },
  {
    "type": "code_block",
    "content": "import { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can read/write');\n} catch (err) {\n  console.error('no access!');\n}",
    "language": "mjs",
    "originalSentence": "import { accessSync, constants } from 'node:fs';\n\ntry {\n  accessSync('etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can read/write');\n} catch (err) {\n  console.error('no access!');\n}",
    "position": 9763,
    "id": "code_block_9763"
  },
  {
    "type": "code_block",
    "content": "import { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message.txt', 'data to append');\n  console.log('The \"data to append\" was appended to file!');\n} catch (err) {\n  /* Handle the error */\n}",
    "language": "mjs",
    "originalSentence": "import { appendFileSync } from 'node:fs';\n\ntry {\n  appendFileSync('message.txt', 'data to append');\n  console.log('The \"data to append\" was appended to file!');\n} catch (err) {\n  /* Handle the error */\n}",
    "position": 9764,
    "id": "code_block_9764"
  },
  {
    "type": "code_block",
    "content": "import { appendFileSync } from 'node:fs';\n\nappendFileSync('message.txt', 'data to append', 'utf8');",
    "language": "mjs",
    "originalSentence": "import { appendFileSync } from 'node:fs';\n\nappendFileSync('message.txt', 'data to append', 'utf8');",
    "position": 9765,
    "id": "code_block_9765"
  },
  {
    "type": "code_block",
    "content": "import { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !== undefined)\n    closeSync(fd);\n}",
    "language": "mjs",
    "originalSentence": "import { openSync, closeSync, appendFileSync } from 'node:fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  /* Handle the error */\n} finally {\n  if (fd !== undefined)\n    closeSync(fd);\n}",
    "position": 9766,
    "id": "code_block_9766"
  },
  {
    "type": "code_block",
    "content": "import { copyFileSync, constants } from 'node:fs';\n\n// destination.txt will be created or overwritten by default.\ncopyFileSync('source.txt', 'destination.txt');\nconsole.log('source.txt was copied to destination.txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFileSync('source.txt', 'destination.txt', constants.COPYFILE_EXCL);",
    "language": "mjs",
    "originalSentence": "import { copyFileSync, constants } from 'node:fs';\n\n// destination.txt will be created or overwritten by default.\ncopyFileSync('source.txt', 'destination.txt');\nconsole.log('source.txt was copied to destination.txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFileSync('source.txt', 'destination.txt', constants.COPYFILE_EXCL);",
    "position": 9767,
    "id": "code_block_9767"
  },
  {
    "type": "code_block",
    "content": "import { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console.log('The path exists.');",
    "language": "mjs",
    "originalSentence": "import { existsSync } from 'node:fs';\n\nif (existsSync('/etc/passwd'))\n  console.log('The path exists.');",
    "position": 9768,
    "id": "code_block_9768"
  },
  {
    "type": "code_block",
    "content": "import { globSync } from 'node:fs';\n\nconsole.log(globSync('**/*.js'));",
    "language": "mjs",
    "originalSentence": "import { globSync } from 'node:fs';\n\nconsole.log(globSync('**/*.js'));",
    "position": 9769,
    "id": "code_block_9769"
  },
  {
    "type": "code_block",
    "content": "const { globSync } = require('node:fs');\n\nconsole.log(globSync('**/*.js'));",
    "language": "cjs",
    "originalSentence": "const { globSync } = require('node:fs');\n\nconsole.log(globSync('**/*.js'));",
    "position": 9770,
    "id": "code_block_9770"
  },
  {
    "type": "code_block",
    "content": "import { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>",
    "language": "mjs",
    "originalSentence": "import { readFileSync } from 'node:fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>",
    "position": 9771,
    "id": "code_block_9771"
  },
  {
    "type": "code_block",
    "content": "import { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}",
    "language": "mjs",
    "originalSentence": "import { opendir } from 'node:fs/promises';\n\ntry {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}",
    "position": 9772,
    "id": "code_block_9772"
  },
  {
    "type": "code_block",
    "content": "import { watch } from 'node:fs';\n// Example when handled through fs.watch() listener\nwatch('./tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.log(filename);\n    // Prints: <Buffer ...>\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { watch } from 'node:fs';\n// Example when handled through fs.watch() listener\nwatch('./tmp', { encoding: 'buffer' }, (eventType, filename) => {\n  if (filename) {\n    console.log(filename);\n    // Prints: <Buffer ...>\n  }\n});",
    "position": 9773,
    "id": "code_block_9773"
  },
  {
    "type": "code_block",
    "content": "Stats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.1,\n  mtimeMs: 1318289051000.1,\n  ctimeMs: 1318289051000.1,\n  birthtimeMs: 1318289051000.1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }",
    "language": "console",
    "originalSentence": "Stats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.1,\n  mtimeMs: 1318289051000.1,\n  ctimeMs: 1318289051000.1,\n  birthtimeMs: 1318289051000.1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }",
    "position": 9774,
    "id": "code_block_9774"
  },
  {
    "type": "code_block",
    "content": "BigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }",
    "language": "console",
    "originalSentence": "BigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }",
    "position": 9775,
    "id": "code_block_9775"
  },
  {
    "type": "code_block",
    "content": "StatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}",
    "language": "console",
    "originalSentence": "StatFs {\n  type: 1397114950,\n  bsize: 4096,\n  blocks: 121938943,\n  bfree: 61058895,\n  bavail: 61058895,\n  files: 999,\n  ffree: 1000000\n}",
    "position": 9776,
    "id": "code_block_9776"
  },
  {
    "type": "code_block",
    "content": "StatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}",
    "language": "console",
    "originalSentence": "StatFs {\n  type: 1397114950n,\n  bsize: 4096n,\n  blocks: 121938943n,\n  bfree: 61058895n,\n  bavail: 61058895n,\n  files: 999n,\n  ffree: 1000000n\n}",
    "position": 9777,
    "id": "code_block_9777"
  },
  {
    "type": "code_block",
    "content": "import { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...\n});",
    "language": "mjs",
    "originalSentence": "import { open, constants } from 'node:fs';\n\nconst {\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n} = constants;\n\nopen('/path/to/my/file', O_RDWR | O_CREAT | O_EXCL, (err, fd) => {\n  // ...\n});",
    "position": 9778,
    "id": "code_block_9778"
  },
  {
    "type": "code_block",
    "content": "const fs = require('node:fs');\n\nfs.rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.log('renamed complete');\n});\nfs.stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.log(`stats: ${JSON.stringify(stats)}`);\n});",
    "language": "js",
    "originalSentence": "const fs = require('node:fs');\n\nfs.rename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  console.log('renamed complete');\n});\nfs.stat('/tmp/world', (err, stats) => {\n  if (err) throw err;\n  console.log(`stats: ${JSON.stringify(stats)}`);\n});",
    "position": 9779,
    "id": "code_block_9779"
  },
  {
    "type": "code_block",
    "content": "import { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.log(`stats: ${JSON.stringify(stats)}`);\n} catch (error) {\n  console.error('there was an error:', error.message);\n}",
    "language": "mjs",
    "originalSentence": "import { rename, stat } from 'node:fs/promises';\n\nconst oldPath = '/tmp/hello';\nconst newPath = '/tmp/world';\n\ntry {\n  await rename(oldPath, newPath);\n  const stats = await stat(newPath);\n  console.log(`stats: ${JSON.stringify(stats)}`);\n} catch (error) {\n  console.error('there was an error:', error.message);\n}",
    "position": 9780,
    "id": "code_block_9780"
  },
  {
    "type": "code_block",
    "content": "const { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello', '/tmp/world');",
    "language": "cjs",
    "originalSentence": "const { rename, stat } = require('node:fs/promises');\n\n(async function(oldPath, newPath) {\n  try {\n    await rename(oldPath, newPath);\n    const stats = await stat(newPath);\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  } catch (error) {\n    console.error('there was an error:', error.message);\n  }\n})('/tmp/hello', '/tmp/world');",
    "position": 9781,
    "id": "code_block_9781"
  },
  {
    "type": "code_block",
    "content": "import { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});",
    "language": "mjs",
    "originalSentence": "import { rename, stat } from 'node:fs';\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});",
    "position": 9782,
    "id": "code_block_9782"
  },
  {
    "type": "code_block",
    "content": "const { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});",
    "language": "cjs",
    "originalSentence": "const { rename, stat } = require('node:fs/promises');\n\nrename('/tmp/hello', '/tmp/world', (err) => {\n  if (err) throw err;\n  stat('/tmp/world', (err, stats) => {\n    if (err) throw err;\n    console.log(`stats: ${JSON.stringify(stats)}`);\n  });\n});",
    "position": 9783,
    "id": "code_block_9783"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('/open/some/file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}",
    "position": 9784,
    "id": "code_block_9784"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nlet fd;\ntry {\n  fd = await open('file.txt', 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}",
    "position": 9785,
    "id": "code_block_9785"
  },
  {
    "type": "code_block",
    "content": "import { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));",
    "language": "mjs",
    "originalSentence": "import { readFileSync } from 'node:fs';\n\nreadFileSync(new URL('file:///tmp/hello'));",
    "position": 9786,
    "id": "code_block_9786"
  },
  {
    "type": "code_block",
    "content": "import { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute",
    "language": "mjs",
    "originalSentence": "import { readFileSync } from 'node:fs';\n// On Windows :\n\n// - WHATWG file URLs with hostname convert to UNC path\n// file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n\n// - WHATWG file URLs with drive letters convert to absolute path\n// file:///C:/tmp/hello => C:\\tmp\\hello\nreadFileSync(new URL('file:///C:/tmp/hello'));\n\n// - WHATWG file URLs without hostname must have a drive letters\nreadFileSync(new URL('file:///notdriveletter/p/a/t/h/file'));\nreadFileSync(new URL('file:///c/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute",
    "position": 9787,
    "id": "code_block_9787"
  },
  {
    "type": "code_block",
    "content": "import { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));",
    "language": "mjs",
    "originalSentence": "import { readFileSync } from 'node:fs';\n// On other platforms:\n\n// - WHATWG file URLs with hostname are unsupported\n// file://hostname/p/a/t/h/file => throw!\nreadFileSync(new URL('file://hostname/p/a/t/h/file'));\n// TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute\n\n// - WHATWG file URLs convert to absolute path\n// file:///tmp/hello => /tmp/hello\nreadFileSync(new URL('file:///tmp/hello'));",
    "position": 9788,
    "id": "code_block_9788"
  },
  {
    "type": "code_block",
    "content": "import { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */",
    "language": "mjs",
    "originalSentence": "import { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/p/a/t/h/%2F'));\nreadFileSync(new URL('file:///C:/p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */\n\n// On POSIX\nreadFileSync(new URL('file:///p/a/t/h/%2F'));\nreadFileSync(new URL('file:///p/a/t/h/%2f'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n/ characters */",
    "position": 9789,
    "id": "code_block_9789"
  },
  {
    "type": "code_block",
    "content": "import { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */",
    "language": "mjs",
    "originalSentence": "import { readFileSync } from 'node:fs';\n\n// On Windows\nreadFileSync(new URL('file:///C:/path/%5C'));\nreadFileSync(new URL('file:///C:/path/%5c'));\n/* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded\n\\ or / characters */",
    "position": 9790,
    "id": "code_block_9790"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer.from('/open/some/file.txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\nimport { Buffer } from 'node:buffer';\n\nlet fd;\ntry {\n  fd = await open(Buffer.from('/open/some/file.txt'), 'r');\n  // Do something with the file\n} finally {\n  await fd?.close();\n}",
    "position": 9791,
    "id": "code_block_9791"
  },
  {
    "type": "code_block",
    "content": "import { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file.txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});",
    "language": "mjs",
    "originalSentence": "import { open, close, fstat } from 'node:fs';\n\nfunction closeFd(fd) {\n  close(fd, (err) => {\n    if (err) throw err;\n  });\n}\n\nopen('/open/some/file.txt', 'r', (err, fd) => {\n  if (err) throw err;\n  try {\n    fstat(fd, (err, stat) => {\n      if (err) {\n        closeFd(fd);\n        throw err;\n      }\n\n      // use stat\n\n      closeFd(fd);\n    });\n  } catch (err) {\n    closeFd(fd);\n    throw err;\n  }\n});",
    "position": 9792,
    "id": "code_block_9792"
  },
  {
    "type": "code_block",
    "content": "import { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file.txt', 'r');\n  const stat = await file.stat();\n  // use stat\n} finally {\n  await file.close();\n}",
    "language": "mjs",
    "originalSentence": "import { open } from 'node:fs/promises';\n\nlet file;\ntry {\n  file = await open('/open/some/file.txt', 'r');\n  const stat = await file.stat();\n  // use stat\n} finally {\n  await file.close();\n}",
    "position": 9793,
    "id": "code_block_9793"
  },
  {
    "type": "code_block",
    "content": "// macOS and Linux\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});",
    "language": "js",
    "originalSentence": "// macOS and Linux\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => [Error: EISDIR: illegal operation on a directory, open <directory>]\n});\n\n// Windows and FreeBSD\nfs.open('<directory>', 'a+', (err, fd) => {\n  // => null, <fd>\n});",
    "position": 9794,
    "id": "code_block_9794"
  }
]